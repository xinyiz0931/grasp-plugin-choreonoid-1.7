/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2015-04-22 22:46:26.435498
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKcos(j[2]);
x3=IKsin(j[1]);
x4=IKsin(j[2]);
x5=IKsin(j[3]);
x6=IKcos(j[3]);
x7=IKsin(j[0]);
x8=IKsin(j[4]);
x9=IKcos(j[4]);
x10=IKsin(j[5]);
x11=IKcos(j[5]);
x12=((IkReal(0.0800000000000000))*(x0));
x13=((IkReal(0.00517641653934882))*(x2));
x14=((IkReal(1.00000000000000))*(x9));
x15=((IkReal(0.258820826967441))*(x8));
x16=((IkReal(0.0190000000000000))*(x3));
x17=((IkReal(0.0800000000000000))*(x4));
x18=((IkReal(0.965925348838040))*(x8));
x19=((IkReal(0.965925348838040))*(x9));
x20=((IkReal(1.00000000000000))*(x5));
x21=((IkReal(0.258820826967441))*(x10));
x22=((IkReal(0.258820826967441))*(x9));
x23=((IkReal(0.965925348838040))*(x10));
x24=((IkReal(0.0800000000000000))*(x7));
x25=((IkReal(0.0800000000000000))*(x6));
x26=((IkReal(0.258820826967441))*(x11));
x27=((IkReal(0.965925348838040))*(x11));
x28=((IkReal(1.00000000000000))*(x8));
x29=((IkReal(0.230000000000000))*(x0));
x30=((IkReal(1.00000000000000))*(x2));
x31=((IkReal(0.0200000000000000))*(x0));
x32=((IkReal(1.00000000000000))*(x4));
x33=((IkReal(1.00000000000000))*(x0));
x34=((IkReal(1.00000000000000))*(x6));
x35=((x1)*(x7));
x36=((x1)*(x2));
x37=((IkReal(-0.0190000000000000))*(x6));
x38=((x3)*(x7));
x39=((x1)*(x4));
x40=((x0)*(x5));
x41=((x3)*(x4));
x42=((x2)*(x3));
x43=((x20)*(x7));
x44=((x34)*(x7));
x45=((x0)*(x3)*(x32));
x46=((x32)*(x38));
x47=((x41)+(((IkReal(-1.00000000000000))*(x1)*(x30))));
x48=((((x17)*(x3)))+(((IkReal(-0.0800000000000000))*(x36))));
x49=((((IkReal(0.0190000000000000))*(x36)))+(((IkReal(-1.00000000000000))*(x16)*(x4))));
x50=((((x1)*(x32)))+(((x3)*(x30))));
x51=((IkReal(-1.00000000000000))*(x50));
x52=((((IkReal(0.0190000000000000))*(x39)))+(((x16)*(x2))));
x53=((((x1)*(x17)))+(((IkReal(0.0800000000000000))*(x42))));
x54=((IkReal(0.258820826967441))*(x51));
x55=((((x0)*(x36)))+(((IkReal(-1.00000000000000))*(x45))));
x56=((((IkReal(-1.00000000000000))*(x46)))+(((x2)*(x35))));
x57=((x51)*(x6));
x58=((x52)*(x6));
x59=((x53)*(x6));
x60=((x5)*(x50));
x61=((x45)+(((IkReal(-1.00000000000000))*(x0)*(x1)*(x30))));
x62=((((IkReal(-1.00000000000000))*(x30)*(x35)))+(x46));
x63=((x0)*(((((IkReal(-1.00000000000000))*(x3)*(x30)))+(((IkReal(-1.00000000000000))*(x1)*(x32))))));
x64=((((IkReal(-1.00000000000000))*(x32)*(x35)))+(((IkReal(-1.00000000000000))*(x30)*(x38))));
x65=((((IkReal(0.0190000000000000))*(x35)*(x4)))+(((x16)*(x2)*(x7))));
x66=((((IkReal(-1.00000000000000))*(x24)*(x42)))+(((IkReal(-1.00000000000000))*(x17)*(x35))));
x67=((x55)*(x6));
x68=((x10)*(x5)*(x51));
x69=((x56)*(x6));
x70=((x5)*(x61));
x71=((x69)+(x40));
x72=((((x5)*(x62)))+(((x0)*(x6))));
x73=((((IkReal(-1.00000000000000))*(x12)*(x5)))+(((IkReal(-1.00000000000000))*(x25)*(x56))));
x74=((((IkReal(-1.00000000000000))*(x20)*(x62)))+(((IkReal(-1.00000000000000))*(x33)*(x6))));
x75=((((x37)*(x56)))+(((IkReal(-0.0190000000000000))*(x40))));
x76=((((IkReal(-1.00000000000000))*(x14)*(x47)))+(((IkReal(-1.00000000000000))*(x28)*(x50)*(x6))));
x77=((((IkReal(-1.00000000000000))*(x14)*(x63)))+(((x28)*(((((x34)*(x55)))+(((IkReal(-1.00000000000000))*(x43))))))));
x78=((((x28)*(((((x0)*(x20)))+(((x34)*(x56)))))))+(((IkReal(-1.00000000000000))*(x14)*(x64))));
eerot[0]=((((x9)*(((x67)+(((IkReal(-1.00000000000000))*(x43)))))))+(((x63)*(x8))));
eerot[1]=((((x10)*(x77)))+(((x11)*(((((IkReal(-1.00000000000000))*(x44)))+(x70))))));
eerot[2]=((((x10)*(((x44)+(((IkReal(-1.00000000000000))*(x20)*(x61)))))))+(((x11)*(x77))));
IkReal x79=((IkReal(1.00000000000000))*(x29));
IkReal x80=((IkReal(1.00000000000000))*(x12));
eetrans[0]=((((IkReal(-1.00000000000000))*(x42)*(x79)))+(((x8)*(((((x24)*(x5)))+(((IkReal(-1.00000000000000))*(x25)*(x55)))))))+(((x31)*(x41)))+(((x9)*(((((IkReal(-1.00000000000000))*(x39)*(x80)))+(((IkReal(-1.00000000000000))*(x42)*(x80)))))))+(((IkReal(-1.00000000000000))*(x24)))+(((x8)*(((((IkReal(0.0190000000000000))*(x0)*(x39)))+(((x0)*(x16)*(x2)))))))+(((x9)*(((((x37)*(x55)))+(((IkReal(0.0190000000000000))*(x5)*(x7)))))))+(((IkReal(-0.250000000000000))*(x0)*(x3)))+(((IkReal(-1.00000000000000))*(x39)*(x79)))+(((IkReal(-1.00000000000000))*(x31)*(x36))));
eerot[3]=((((x22)*(x57)))+(((x15)*(x47)))+(((x19)*(x71)))+(((x18)*(x64))));
eerot[4]=((((x21)*(x76)))+(((x27)*(x72)))+(((x23)*(x78)))+(((x26)*(x60))));
eerot[5]=((((x26)*(x76)))+(((x27)*(x78)))+(((x21)*(x5)*(x51)))+(((x23)*(x74))));
eetrans[1]=((IkReal(0.150000000000000))+(((x15)*(x49)))+(((IkReal(0.0193185069767608))*(x38)*(x4)))+(((x19)*(x66)))+(((x15)*(x59)))+(((IkReal(-0.0647052067418602))*(x1)))+(((IkReal(-0.0595287902025114))*(x36)))+(((IkReal(0.0772740279070432))*(x0)))+(((x18)*(x65)))+(((x19)*(x75)))+(((IkReal(0.0595287902025114))*(x41)))+(((x22)*(x48)))+(((IkReal(-0.222162830232749))*(x35)*(x4)))+(((IkReal(-0.222162830232749))*(x2)*(x38)))+(((x22)*(x58)))+(((x13)*(x3)))+(((x18)*(x73)))+(((IkReal(0.00517641653934882))*(x39)))+(((IkReal(-0.241481337209510))*(x38)))+(((IkReal(-0.0193185069767608))*(x2)*(x35))));
eerot[6]=((((x18)*(x47)))+(((IkReal(-1.00000000000000))*(x15)*(x64)))+(((IkReal(-1.00000000000000))*(x22)*(x71)))+(((x19)*(x57))));
eerot[7]=((((x23)*(x76)))+(((x27)*(x60)))+(((IkReal(-1.00000000000000))*(x21)*(x78)))+(((IkReal(-1.00000000000000))*(x26)*(x72))));
eerot[8]=((((IkReal(-1.00000000000000))*(x21)*(x74)))+(((x27)*(x76)))+(((x23)*(x5)*(x51)))+(((IkReal(-1.00000000000000))*(x26)*(x78))));
IkReal x81=((IkReal(1.00000000000000))*(x15));
IkReal x82=((IkReal(1.00000000000000))*(x22));
eetrans[2]=((IkReal(0.355000000000000))+(((IkReal(-1.00000000000000))*(x73)*(x81)))+(((IkReal(-1.00000000000000))*(x75)*(x82)))+(((IkReal(-0.241481337209510))*(x1)))+(((x18)*(x59)))+(((x19)*(x58)))+(((IkReal(0.0193185069767608))*(x39)))+(((x13)*(x35)))+(((IkReal(0.0647052067418602))*(x38)))+(((IkReal(-0.0207056661573953))*(x0)))+(((x19)*(x48)))+(((IkReal(0.222162830232749))*(x41)))+(((IkReal(0.0193185069767608))*(x42)))+(((IkReal(-0.00517641653934882))*(x38)*(x4)))+(((IkReal(0.0595287902025114))*(x35)*(x4)))+(((IkReal(0.0595287902025114))*(x2)*(x38)))+(((x18)*(x49)))+(((IkReal(-0.222162830232749))*(x36)))+(((IkReal(-1.00000000000000))*(x66)*(x82)))+(((IkReal(-1.00000000000000))*(x65)*(x81))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j9,cj9,sj9,htj9,j10,cj10,sj10,htj10,j11,cj11,sj11,htj11,j12,cj12,sj12,htj12,j13,cj13,sj13,htj13,j14,cj14,sj14,htj14,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij9[2], _nj9,_ij10[2], _nj10,_ij11[2], _nj11,_ij12[2], _nj12,_ij13[2], _nj13,_ij14[2], _nj14;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j9=numeric_limits<IkReal>::quiet_NaN(); _ij9[0] = -1; _ij9[1] = -1; _nj9 = -1; j10=numeric_limits<IkReal>::quiet_NaN(); _ij10[0] = -1; _ij10[1] = -1; _nj10 = -1; j11=numeric_limits<IkReal>::quiet_NaN(); _ij11[0] = -1; _ij11[1] = -1; _nj11 = -1; j12=numeric_limits<IkReal>::quiet_NaN(); _ij12[0] = -1; _ij12[1] = -1; _nj12 = -1; j13=numeric_limits<IkReal>::quiet_NaN(); _ij13[0] = -1; _ij13[1] = -1; _nj13 = -1; j14=numeric_limits<IkReal>::quiet_NaN(); _ij14[0] = -1; _ij14[1] = -1; _nj14 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((IkReal(-1.00000000000000))*(r02));
new_r01=r01;
new_r02=r00;
new_px=((((IkReal(0.0190000000000000))*(r00)))+(px));
new_r10=((((IkReal(0.258820826967441))*(r22)))+(((IkReal(-0.965925348838040))*(r12))));
new_r11=((((IkReal(-0.258820826967441))*(r21)))+(((IkReal(0.965925348838040))*(r11))));
new_r12=((((IkReal(-0.258820826967441))*(r20)))+(((IkReal(0.965925348838040))*(r10))));
new_py=((IkReal(-0.0530074087522645))+(((IkReal(0.965925348838040))*(py)))+(((IkReal(-0.258820826967441))*(pz)))+(((IkReal(0.0183525816279228))*(r10)))+(((IkReal(-0.00491759571238138))*(r20))));
new_r20=((((IkReal(-0.258820826967441))*(r12)))+(((IkReal(-0.965925348838040))*(r22))));
new_r21=((((IkReal(0.258820826967441))*(r11)))+(((IkReal(0.965925348838040))*(r21))));
new_r22=((((IkReal(0.258820826967441))*(r10)))+(((IkReal(0.965925348838040))*(r20))));
new_pz=((IkReal(-0.381726622882620))+(((IkReal(0.0183525816279228))*(r20)))+(((IkReal(0.00491759571238138))*(r10)))+(((IkReal(0.965925348838040))*(pz)))+(((IkReal(0.258820826967441))*(py))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((pz)*(pz))+((py)*(py)));
npx=((((py)*(r10)))+(((pz)*(r20)))+(((px)*(r00))));
npy=((((px)*(r01)))+(((pz)*(r21)))+(((py)*(r11))));
npz=((((py)*(r12)))+(((pz)*(r22)))+(((px)*(r02))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((py)*(r00)))+(((IkReal(-1.00000000000000))*(px)*(r10))));
rxp1_0=((((pz)*(r11)))+(((IkReal(-1.00000000000000))*(py)*(r21))));
rxp1_1=((((IkReal(-1.00000000000000))*(pz)*(r01)))+(((px)*(r21))));
rxp1_2=((((py)*(r01)))+(((IkReal(-1.00000000000000))*(px)*(r11))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((py)*(r02)))+(((IkReal(-1.00000000000000))*(px)*(r12))));
IkReal op[72], zeror[48];
int numroots;
IkReal x83=((IkReal(1.00000000000000))*(pp));
IkReal x84=((IkReal(0.620000000000000))*(npx));
IkReal x85=((IkReal(0.0400000000000000))*(npz));
IkReal x86=((IkReal(0.0400000000000000))*(npy));
IkReal x87=((IkReal(0.0800000000000000))*(r22));
IkReal x88=((IkReal(0.0800000000000000))*(npx));
IkReal x89=((IkReal(1.00000000000000))*(rxp0_2));
IkReal x90=((IkReal(2.00000000000000))*(rxp1_2));
IkReal x91=((IkReal(0.0800000000000000))*(r21));
IkReal x92=((IkReal(0.920000000000000))*(npz));
IkReal x93=((IkReal(0.160000000000000))*(r20));
IkReal x94=((IkReal(2.00000000000000))*(rxp2_2));
IkReal x95=((IkReal(0.160000000000000))*(r21));
IkReal x96=((IkReal(0.320000000000000))*(r20));
IkReal x97=((IkReal(0.320000000000000))*(r21));
IkReal x98=((IkReal(0.300000000000000))*(npx));
IkReal x99=((IkReal(0.00320000000000000))+(((IkReal(-1.00000000000000))*(x86))));
IkReal x100=((rxp0_2)+(((IkReal(-1.00000000000000))*(x87))));
IkReal x101=((IkReal(0.600000000000000))*(npy));
IkReal x102=((IkReal(-0.00320000000000000))+(((IkReal(-1.00000000000000))*(x86))));
IkReal x103=((IkReal(-1.24000000000000))*(npy));
IkReal x104=((IkReal(-0.0800000000000000))*(r21));
IkReal x105=((IkReal(-0.160000000000000))*(r20));
IkReal x106=((IkReal(0.00320000000000000))+(x86));
IkReal x107=((IkReal(-0.00320000000000000))+(x86));
IkReal x108=((rxp0_2)+(x87));
IkReal x109=((IkReal(-2.00000000000000))*(rxp1_2));
IkReal x110=((((IkReal(-1.00000000000000))*(x89)))+(x87));
IkReal x111=((IkReal(0.0460000000000000))+(x98));
IkReal x112=((IkReal(0.00640000000000000))+(x92));
IkReal x113=((IkReal(-0.00640000000000000))+(x92));
IkReal x114=((IkReal(-0.0276000000000000))+(x85));
IkReal x115=((((IkReal(-1.00000000000000))*(x89)))+(((IkReal(-1.00000000000000))*(x87))));
IkReal x116=((x83)+(x85));
IkReal x117=((x93)+(x95));
op[0]=((IkReal(-0.0276000000000000))+(((IkReal(-1.00000000000000))*(x116)))+(x84));
op[1]=x106;
op[2]=x103;
op[3]=x88;
op[4]=((IkReal(-0.0276000000000000))+(((IkReal(-1.00000000000000))*(x116)))+(((IkReal(-1.00000000000000))*(x84))));
op[5]=x99;
op[6]=x110;
op[7]=x104;
op[8]=x90;
op[9]=x105;
op[10]=x108;
op[11]=x91;
op[12]=x107;
op[13]=((((IkReal(-1.00000000000000))*(x83)))+(x114)+(x84));
op[14]=x88;
op[15]=x103;
op[16]=x102;
op[17]=((((IkReal(-1.00000000000000))*(x83)))+(((IkReal(-1.00000000000000))*(x84)))+(x114));
op[18]=x104;
op[19]=x115;
op[20]=x105;
op[21]=x90;
op[22]=x91;
op[23]=x100;
op[24]=((x113)+(x88));
op[25]=IkReal(0);
op[26]=((IkReal(-0.160000000000000))*(npy));
op[27]=IkReal(0);
op[28]=((((IkReal(-1.00000000000000))*(x88)))+(x113));
op[29]=IkReal(0);
op[30]=((((IkReal(-1.00000000000000))*(x94)))+(((IkReal(-1.00000000000000))*(x93)))+(x95));
op[31]=IkReal(0);
op[32]=((x97)+(x96));
op[33]=IkReal(0);
op[34]=((((IkReal(-1.00000000000000))*(x94)))+(((IkReal(-1.00000000000000))*(x95)))+(x93));
op[35]=IkReal(0);
op[36]=IkReal(0);
op[37]=((((IkReal(-1.00000000000000))*(x88)))+(x112));
op[38]=IkReal(0);
op[39]=((IkReal(0.160000000000000))*(npy));
op[40]=IkReal(0);
op[41]=((x112)+(x88));
op[42]=IkReal(0);
op[43]=((((IkReal(-1.00000000000000))*(x94)))+(x117));
op[44]=IkReal(0);
op[45]=((((IkReal(-1.00000000000000))*(x97)))+(x96));
op[46]=IkReal(0);
op[47]=((((IkReal(-1.00000000000000))*(x94)))+(((IkReal(-1.00000000000000))*(x117))));
op[48]=((IkReal(0.0460000000000000))+(((IkReal(-1.00000000000000))*(x83)))+(((IkReal(-1.00000000000000))*(x98)))+(x85));
op[49]=x106;
op[50]=x101;
op[51]=x88;
op[52]=((((IkReal(-1.00000000000000))*(x83)))+(x111)+(x85));
op[53]=x99;
op[54]=x100;
op[55]=x104;
op[56]=x109;
op[57]=x105;
op[58]=x115;
op[59]=x91;
op[60]=x107;
op[61]=((IkReal(0.0460000000000000))+(((IkReal(-1.00000000000000))*(x116)))+(((IkReal(-1.00000000000000))*(x98))));
op[62]=x88;
op[63]=x101;
op[64]=x102;
op[65]=((((IkReal(-1.00000000000000))*(x116)))+(x111));
op[66]=x104;
op[67]=x108;
op[68]=x105;
op[69]=x109;
op[70]=x91;
op[71]=x110;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j13array[16], cj13array[16], sj13array[16], j14array[16], cj14array[16], sj14array[16], j12array[16], cj12array[16], sj12array[16];
int numsolutions = 0;
for(int ij13 = 0; ij13 < numroots; ij13 += 3)
{
IkReal htj13 = zeror[ij13+0], htj14 = zeror[ij13+1], htj12 = zeror[ij13+2];
j13array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj13)));
j14array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj14)));
j12array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj12)));
IkReal x118=(htj13)*(htj13);
IkReal x119=(htj14)*(htj14);
IkReal x120=(htj12)*(htj12);
cj13array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x118))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x118)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x118))))));
cj14array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x119))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x119)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x119))))));
cj12array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x120))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x120)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x120))))));
sj13array[numsolutions]=((IkReal(2.00000000000000))*(htj13)*(((IKabs(((IkReal(1.00000000000000))+((htj13)*(htj13)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj13)*(htj13))))):(IkReal)1.0e30)));
sj14array[numsolutions]=((IkReal(2.00000000000000))*(htj14)*(((IKabs(((IkReal(1.00000000000000))+((htj14)*(htj14)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj14)*(htj14))))):(IkReal)1.0e30)));
sj12array[numsolutions]=((IkReal(2.00000000000000))*(htj12)*(((IKabs(((IkReal(1.00000000000000))+((htj12)*(htj12)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj12)*(htj12))))):(IkReal)1.0e30)));
if( j13array[numsolutions] > IKPI )
{
    j13array[numsolutions]-=IK2PI;
}
else if( j13array[numsolutions] < -IKPI )
{
    j13array[numsolutions]+=IK2PI;
}
if( j14array[numsolutions] > IKPI )
{
    j14array[numsolutions]-=IK2PI;
}
else if( j14array[numsolutions] < -IKPI )
{
    j14array[numsolutions]+=IK2PI;
}
if( j12array[numsolutions] > IKPI )
{
    j12array[numsolutions]-=IK2PI;
}
else if( j12array[numsolutions] < -IKPI )
{
    j12array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j13valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj13 = 16;
_nj14 = 1;
_nj12 = 1;
for(int ij13 = 0; ij13 < numsolutions; ++ij13)
    {
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
_ij14[0] = 0; _ij14[1] = -1;
_ij12[0] = 0; _ij12[1] = -1;
for(int iij13 = ij13+1; iij13 < numsolutions; ++iij13)
{
if( !j13valid[iij13] ) { continue; }
if( IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(cj14array[ij13]-cj14array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij13]-sj14array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(cj12array[ij13]-cj12array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij13]-sj12array[iij13]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j13valid[iij13]=false; _ij13[1] = iij13; _ij14[1] = 0; _ij12[1] = 0;  break; 
}
}
    j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];

    j14 = j14array[ij13]; cj14 = cj14array[ij13]; sj14 = sj14array[ij13];

    j12 = j12array[ij13]; cj12 = cj12array[ij13]; sj12 = sj12array[ij13];

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x121=(cj14)*(cj14);
IkReal x122=(sj14)*(sj14);
IkReal x123=((IkReal(1.00000000000000))*(r01));
IkReal x124=((sj13)*(sj14));
IkReal x125=((cj14)*(sj13));
IkReal x126=((r00)*(r11));
IkReal x127=((cj13)*(x121));
IkReal x128=((cj13)*(x122));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(r12)*(x123)*(x125)))+(((r02)*(r10)*(x124)))+(((r02)*(r11)*(x125)))+(((x126)*(x128)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x124)))+(((x126)*(x127)))+(((IkReal(-1.00000000000000))*(r10)*(x123)*(x128)))+(((IkReal(-1.00000000000000))*(r10)*(x123)*(x127)))));
IkReal x129=(cj14)*(cj14);
IkReal x130=(sj14)*(sj14);
IkReal x131=((IkReal(1.00000000000000))*(r01));
IkReal x132=((sj13)*(sj14));
IkReal x133=((cj14)*(sj13));
IkReal x134=((r00)*(r11));
IkReal x135=((cj13)*(x129));
IkReal x136=((cj13)*(x130));
dummyeval[0]=((((r02)*(r10)*(x132)))+(((IkReal(-1.00000000000000))*(r10)*(x131)*(x136)))+(((r02)*(r11)*(x133)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x132)))+(((IkReal(-1.00000000000000))*(r10)*(x131)*(x135)))+(((x134)*(x136)))+(((x134)*(x135)))+(((IkReal(-1.00000000000000))*(r12)*(x131)*(x133))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x137=(cj14)*(cj14);
IkReal x138=(sj14)*(sj14);
IkReal x139=((cj13)*(r12));
IkReal x140=((IkReal(1.00000000000000))*(r10));
IkReal x141=((cj13)*(r02));
IkReal x142=((r01)*(sj13));
IkReal x143=((r00)*(r11)*(sj13));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x138)*(x140)*(x142)))+(((cj14)*(r01)*(x139)))+(((IkReal(-1.00000000000000))*(sj14)*(x140)*(x141)))+(((IkReal(-1.00000000000000))*(x137)*(x140)*(x142)))+(((r00)*(sj14)*(x139)))+(((x138)*(x143)))+(((x137)*(x143)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x141)))));
IkReal x144=(cj14)*(cj14);
IkReal x145=(sj14)*(sj14);
IkReal x146=((cj13)*(r12));
IkReal x147=((IkReal(1.00000000000000))*(r10));
IkReal x148=((cj13)*(r02));
IkReal x149=((r01)*(sj13));
IkReal x150=((r00)*(r11)*(sj13));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x145)*(x147)*(x149)))+(((x144)*(x150)))+(((r00)*(sj14)*(x146)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x148)))+(((IkReal(-1.00000000000000))*(x144)*(x147)*(x149)))+(((IkReal(-1.00000000000000))*(sj14)*(x147)*(x148)))+(((x145)*(x150)))+(((cj14)*(r01)*(x146))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x151=((IkReal(4.00000000000000))*(cj13));
IkReal x152=((npy)*(sj14));
IkReal x153=((cj14)*(npx));
IkReal x154=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.0800000000000000))+(((IkReal(0.320000000000000))*(sj13)))+(((x152)*(x154)))+(((IkReal(-1.00000000000000))*(x153)*(x154)))+(((npz)*(x151))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((x151)*(x153)))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x151)*(x152)))+(((npz)*(x154))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((IkReal(0.320000000000000))*(sj13)))+(((x152)*(x154)))+(((IkReal(-1.00000000000000))*(x153)*(x154)))+(((npz)*(x151)))))+IKsqr(((IkReal(-0.920000000000000))+(((x151)*(x153)))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x151)*(x152)))+(((npz)*(x154)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.0800000000000000))+(((IkReal(0.320000000000000))*(sj13)))+(((x152)*(x154)))+(((IkReal(-1.00000000000000))*(x153)*(x154)))+(((npz)*(x151)))), ((IkReal(-0.920000000000000))+(((x151)*(x153)))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x151)*(x152)))+(((npz)*(x154)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x155=((npy)*(sj14));
IkReal x156=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(-1.00000000000000))*(cj13)*(x156)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((cj13)*(x155))));
evalcond[1]=((IkReal(0.0200000000000000))+(((cj13)*(npz)))+(((sj13)*(x155)))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(sj13)*(x156))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst66;
IkReal x157=(sj14)*(sj14);
IkReal x158=(cj14)*(cj14);
IkReal x159=((IkReal(2.00000000000000))*(cj14)*(sj14));
gconst66=IKsign(((((x157)*((r00)*(r00))))+(((x157)*((r10)*(r10))))+(((r00)*(r01)*(x159)))+(((x158)*((r01)*(r01))))+(((r10)*(r11)*(x159)))+(((x158)*((r11)*(r11))))));
IkReal x160=(sj14)*(sj14);
IkReal x161=(cj14)*(cj14);
IkReal x162=((IkReal(2.00000000000000))*(cj14)*(sj14));
dummyeval[0]=((((x161)*((r11)*(r11))))+(((x161)*((r01)*(r01))))+(((r00)*(r01)*(x162)))+(((r10)*(r11)*(x162)))+(((x160)*((r00)*(r00))))+(((x160)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst68;
gconst68=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst67;
IkReal x163=(cj14)*(cj14);
IkReal x164=(sj14)*(sj14);
IkReal x165=((IkReal(1.00000000000000))*(r01));
IkReal x166=((sj13)*(sj14));
IkReal x167=((cj14)*(sj13));
IkReal x168=((r00)*(r11));
IkReal x169=((cj13)*(x163));
IkReal x170=((cj13)*(x164));
gconst67=IKsign(((((r02)*(r11)*(x167)))+(((IkReal(-1.00000000000000))*(r10)*(x165)*(x170)))+(((r02)*(r10)*(x166)))+(((IkReal(-1.00000000000000))*(r12)*(x165)*(x167)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x166)))+(((x168)*(x169)))+(((IkReal(-1.00000000000000))*(r10)*(x165)*(x169)))+(((x168)*(x170)))));
IkReal x171=(cj14)*(cj14);
IkReal x172=(sj14)*(sj14);
IkReal x173=((IkReal(1.00000000000000))*(r01));
IkReal x174=((sj13)*(sj14));
IkReal x175=((cj14)*(sj13));
IkReal x176=((r00)*(r11));
IkReal x177=((cj13)*(x171));
IkReal x178=((cj13)*(x172));
dummyeval[0]=((((x176)*(x178)))+(((r02)*(r10)*(x174)))+(((x176)*(x177)))+(((IkReal(-1.00000000000000))*(r10)*(x173)*(x178)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x174)))+(((IkReal(-1.00000000000000))*(r10)*(x173)*(x177)))+(((r02)*(r11)*(x175)))+(((IkReal(-1.00000000000000))*(r12)*(x173)*(x175))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x179=((cj13)*(cj14));
IkReal x180=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst67)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x180)))+(((r10)*(x179))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst67)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x180)))+(((r00)*(x179))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst67)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x180)))+(((r10)*(x179)))))), ((gconst67)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x180)))+(((r00)*(x179)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x181=IKsin(j9);
IkReal x182=IKcos(j9);
IkReal x183=((r10)*(sj14));
IkReal x184=((cj14)*(r11));
IkReal x185=((cj14)*(r10));
IkReal x186=((r11)*(sj14));
IkReal x187=((cj14)*(r00));
IkReal x188=((r00)*(sj14));
IkReal x189=((IkReal(1.00000000000000))*(x181));
IkReal x190=((cj13)*(x181));
IkReal x191=((sj13)*(x182));
IkReal x192=((r01)*(x181));
IkReal x193=((IkReal(1.00000000000000))*(x182));
evalcond[0]=((IkReal(1.00000000000000))+(((x181)*(x188)))+(((IkReal(-1.00000000000000))*(x183)*(x193)))+(((IkReal(-1.00000000000000))*(x184)*(x193)))+(((cj14)*(x192))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x184)*(x189)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x193)))+(((IkReal(-1.00000000000000))*(x183)*(x189)))+(((IkReal(-1.00000000000000))*(x188)*(x193))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x186)*(x193)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x189)))+(((IkReal(-1.00000000000000))*(cj13)*(x187)*(x189)))+(((r12)*(x191)))+(((r01)*(sj14)*(x190)))+(((cj13)*(x182)*(x185))));
evalcond[3]=((((r02)*(x190)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x193)))+(((x185)*(x191)))+(((IkReal(-1.00000000000000))*(sj13)*(x187)*(x189)))+(((sj13)*(sj14)*(x192)))+(((IkReal(-1.00000000000000))*(x186)*(x191))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst69;
gconst69=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst70;
gconst70=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x194=((cj13)*(sj14));
IkReal x195=((cj11)*(sj9));
IkReal x196=((IkReal(1.00000000000000))*(r11));
IkReal x197=((IkReal(1.00000000000000))*(sj11));
IkReal x198=((cj13)*(cj14));
IkReal x199=((r22)*(sj13));
IkReal x200=((r12)*(sj13));
IkReal x201=((cj9)*(r01));
IkReal x202=((cj9)*(sj11));
IkReal x203=((r02)*(sj13));
IkReal x204=((IkReal(1.00000000000000))*(cj11));
IkReal x205=((sj11)*(sj9));
IkReal x206=((cj11)*(cj9));
if( IKabs(((gconst70)*(((((x195)*(x200)))+(((IkReal(-1.00000000000000))*(x194)*(x195)*(x196)))+(((r00)*(x198)*(x206)))+(((IkReal(-1.00000000000000))*(r20)*(x197)*(x198)))+(((r10)*(x195)*(x198)))+(((IkReal(-1.00000000000000))*(x197)*(x199)))+(((r21)*(sj11)*(x194)))+(((x203)*(x206)))+(((IkReal(-1.00000000000000))*(x194)*(x201)*(x204))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((cj11)*(r20)*(x198)))+(((x202)*(x203)))+(((r00)*(x198)*(x202)))+(((cj11)*(x199)))+(((r10)*(x198)*(x205)))+(((x200)*(x205)))+(((IkReal(-1.00000000000000))*(r21)*(x194)*(x204)))+(((IkReal(-1.00000000000000))*(x194)*(x196)*(x205)))+(((IkReal(-1.00000000000000))*(x194)*(x197)*(x201))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst70)*(((((x195)*(x200)))+(((IkReal(-1.00000000000000))*(x194)*(x195)*(x196)))+(((r00)*(x198)*(x206)))+(((IkReal(-1.00000000000000))*(r20)*(x197)*(x198)))+(((r10)*(x195)*(x198)))+(((IkReal(-1.00000000000000))*(x197)*(x199)))+(((r21)*(sj11)*(x194)))+(((x203)*(x206)))+(((IkReal(-1.00000000000000))*(x194)*(x201)*(x204)))))), ((gconst70)*(((((cj11)*(r20)*(x198)))+(((x202)*(x203)))+(((r00)*(x198)*(x202)))+(((cj11)*(x199)))+(((r10)*(x198)*(x205)))+(((x200)*(x205)))+(((IkReal(-1.00000000000000))*(r21)*(x194)*(x204)))+(((IkReal(-1.00000000000000))*(x194)*(x196)*(x205)))+(((IkReal(-1.00000000000000))*(x194)*(x197)*(x201)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x207=IKsin(j10);
IkReal x208=IKcos(j10);
IkReal x209=((IkReal(1.00000000000000))*(sj13));
IkReal x210=((r11)*(sj9));
IkReal x211=((cj9)*(r01));
IkReal x212=((r21)*(sj14));
IkReal x213=((cj9)*(r02));
IkReal x214=((sj13)*(sj9));
IkReal x215=((cj14)*(r10));
IkReal x216=((IkReal(1.00000000000000))*(cj13));
IkReal x217=((cj14)*(r20));
IkReal x218=((cj11)*(x207));
IkReal x219=((sj11)*(x208));
IkReal x220=((sj14)*(x216));
IkReal x221=((sj11)*(x207));
IkReal x222=((cj11)*(x208));
IkReal x223=((cj14)*(cj9)*(r00));
IkReal x224=((x218)+(x219));
evalcond[0]=((((cj13)*(x212)))+(((IkReal(-1.00000000000000))*(x216)*(x217)))+(x221)+(((IkReal(-1.00000000000000))*(x222)))+(((IkReal(-1.00000000000000))*(r22)*(x209))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x209)*(x217)))+(x224)+(((sj13)*(x212)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(x223)))+(((IkReal(-1.00000000000000))*(x211)*(x220)))+(((cj13)*(sj9)*(x215)))+(x224)+(((r12)*(x214)))+(((sj13)*(x213)))+(((IkReal(-1.00000000000000))*(x210)*(x220))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x221)))+(((IkReal(-1.00000000000000))*(sj14)*(x209)*(x210)))+(((IkReal(-1.00000000000000))*(sj14)*(x209)*(x211)))+(x222)+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x216)))+(((x214)*(x215)))+(((IkReal(-1.00000000000000))*(x213)*(x216)))+(((sj13)*(x223))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x225=((cj13)*(sj11));
IkReal x226=((r21)*(sj14));
IkReal x227=((cj11)*(cj13));
IkReal x228=((cj11)*(sj13));
IkReal x229=((sj11)*(sj13));
IkReal x230=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst69)*(((((x225)*(x226)))+(((x226)*(x228)))+(((IkReal(-1.00000000000000))*(r22)*(x229)))+(((IkReal(-1.00000000000000))*(x225)*(x230)))+(((IkReal(-1.00000000000000))*(x228)*(x230)))+(((r22)*(x227))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst69)*(((((r22)*(x228)))+(((cj14)*(r20)*(x227)))+(((IkReal(-1.00000000000000))*(x226)*(x227)))+(((r22)*(x225)))+(((x226)*(x229)))+(((IkReal(-1.00000000000000))*(x229)*(x230))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst69)*(((((x225)*(x226)))+(((x226)*(x228)))+(((IkReal(-1.00000000000000))*(r22)*(x229)))+(((IkReal(-1.00000000000000))*(x225)*(x230)))+(((IkReal(-1.00000000000000))*(x228)*(x230)))+(((r22)*(x227)))))), ((gconst69)*(((((r22)*(x228)))+(((cj14)*(r20)*(x227)))+(((IkReal(-1.00000000000000))*(x226)*(x227)))+(((r22)*(x225)))+(((x226)*(x229)))+(((IkReal(-1.00000000000000))*(x229)*(x230)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x231=IKsin(j10);
IkReal x232=IKcos(j10);
IkReal x233=((IkReal(1.00000000000000))*(sj13));
IkReal x234=((r11)*(sj9));
IkReal x235=((cj9)*(r01));
IkReal x236=((r21)*(sj14));
IkReal x237=((cj9)*(r02));
IkReal x238=((sj13)*(sj9));
IkReal x239=((cj14)*(r10));
IkReal x240=((IkReal(1.00000000000000))*(cj13));
IkReal x241=((cj14)*(r20));
IkReal x242=((cj11)*(x231));
IkReal x243=((sj11)*(x232));
IkReal x244=((sj14)*(x240));
IkReal x245=((sj11)*(x231));
IkReal x246=((cj11)*(x232));
IkReal x247=((cj14)*(cj9)*(r00));
IkReal x248=((x243)+(x242));
evalcond[0]=((((cj13)*(x236)))+(((IkReal(-1.00000000000000))*(x240)*(x241)))+(((IkReal(-1.00000000000000))*(x246)))+(((IkReal(-1.00000000000000))*(r22)*(x233)))+(x245));
evalcond[1]=((((sj13)*(x236)))+(x248)+(((IkReal(-1.00000000000000))*(x233)*(x241)))+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x238)))+(((IkReal(-1.00000000000000))*(x235)*(x244)))+(((sj13)*(x237)))+(x248)+(((cj13)*(x247)))+(((cj13)*(sj9)*(x239)))+(((IkReal(-1.00000000000000))*(x234)*(x244))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x233)*(x235)))+(((sj13)*(x247)))+(((IkReal(-1.00000000000000))*(x245)))+(x246)+(((IkReal(-1.00000000000000))*(x237)*(x240)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x240)))+(((x238)*(x239)))+(((IkReal(-1.00000000000000))*(sj14)*(x233)*(x234))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x249=((cj13)*(sj11));
IkReal x250=((r21)*(sj14));
IkReal x251=((cj11)*(cj13));
IkReal x252=((cj11)*(sj13));
IkReal x253=((sj11)*(sj13));
IkReal x254=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst68)*(((((IkReal(-1.00000000000000))*(x252)*(x254)))+(((x249)*(x250)))+(((IkReal(-1.00000000000000))*(x249)*(x254)))+(((r22)*(x251)))+(((x250)*(x252)))+(((IkReal(-1.00000000000000))*(r22)*(x253))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst68)*(((((r22)*(x249)))+(((r22)*(x252)))+(((IkReal(-1.00000000000000))*(x253)*(x254)))+(((x250)*(x253)))+(((cj14)*(r20)*(x251)))+(((IkReal(-1.00000000000000))*(x250)*(x251))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst68)*(((((IkReal(-1.00000000000000))*(x252)*(x254)))+(((x249)*(x250)))+(((IkReal(-1.00000000000000))*(x249)*(x254)))+(((r22)*(x251)))+(((x250)*(x252)))+(((IkReal(-1.00000000000000))*(r22)*(x253)))))), ((gconst68)*(((((r22)*(x249)))+(((r22)*(x252)))+(((IkReal(-1.00000000000000))*(x253)*(x254)))+(((x250)*(x253)))+(((cj14)*(r20)*(x251)))+(((IkReal(-1.00000000000000))*(x250)*(x251)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x255=IKsin(j10);
IkReal x256=IKcos(j10);
IkReal x257=((IkReal(1.00000000000000))*(sj13));
IkReal x258=((cj14)*(r20));
IkReal x259=((r21)*(sj14));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj11)*(x256)))+(((cj13)*(x259)))+(((sj11)*(x255)))+(((IkReal(-1.00000000000000))*(cj13)*(x258)))+(((IkReal(-1.00000000000000))*(r22)*(x257))));
evalcond[1]=((((cj11)*(x255)))+(((sj13)*(x259)))+(((sj11)*(x256)))+(((IkReal(-1.00000000000000))*(x257)*(x258)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst71;
IkReal x260=(sj14)*(sj14);
IkReal x261=(cj14)*(cj14);
IkReal x262=((IkReal(2.00000000000000))*(cj14)*(sj14));
gconst71=IKsign(((((x260)*((r10)*(r10))))+(((x261)*((r11)*(r11))))+(((x260)*((r00)*(r00))))+(((x261)*((r01)*(r01))))+(((r00)*(r01)*(x262)))+(((r10)*(r11)*(x262)))));
IkReal x263=(sj14)*(sj14);
IkReal x264=(cj14)*(cj14);
IkReal x265=((IkReal(2.00000000000000))*(cj14)*(sj14));
dummyeval[0]=((((x263)*((r00)*(r00))))+(((r00)*(r01)*(x265)))+(((x264)*((r01)*(r01))))+(((r10)*(r11)*(x265)))+(((x263)*((r10)*(r10))))+(((x264)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst72;
IkReal x266=(cj14)*(cj14);
IkReal x267=(sj14)*(sj14);
IkReal x268=((IkReal(1.00000000000000))*(r01));
IkReal x269=((sj13)*(sj14));
IkReal x270=((cj14)*(sj13));
IkReal x271=((r00)*(r11));
IkReal x272=((cj13)*(x266));
IkReal x273=((cj13)*(x267));
gconst72=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x268)*(x272)))+(((IkReal(-1.00000000000000))*(r12)*(x268)*(x270)))+(((r02)*(r11)*(x270)))+(((x271)*(x273)))+(((r02)*(r10)*(x269)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x269)))+(((x271)*(x272)))+(((IkReal(-1.00000000000000))*(r10)*(x268)*(x273)))));
IkReal x274=(cj14)*(cj14);
IkReal x275=(sj14)*(sj14);
IkReal x276=((IkReal(1.00000000000000))*(r01));
IkReal x277=((sj13)*(sj14));
IkReal x278=((cj14)*(sj13));
IkReal x279=((r00)*(r11));
IkReal x280=((cj13)*(x274));
IkReal x281=((cj13)*(x275));
dummyeval[0]=((((r02)*(r11)*(x278)))+(((IkReal(-1.00000000000000))*(r10)*(x276)*(x281)))+(((IkReal(-1.00000000000000))*(r10)*(x276)*(x280)))+(((x279)*(x281)))+(((x279)*(x280)))+(((r02)*(r10)*(x277)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x277)))+(((IkReal(-1.00000000000000))*(r12)*(x276)*(x278))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x282=((cj13)*(cj14));
IkReal x283=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst72)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x283)))+(((r10)*(x282))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst72)*(((((r02)*(sj13)))+(((r00)*(x282)))+(((IkReal(-1.00000000000000))*(r01)*(x283))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst72)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x283)))+(((r10)*(x282)))))), ((gconst72)*(((((r02)*(sj13)))+(((r00)*(x282)))+(((IkReal(-1.00000000000000))*(r01)*(x283)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x284=IKsin(j9);
IkReal x285=IKcos(j9);
IkReal x286=((IkReal(1.00000000000000))*(cj14));
IkReal x287=((IkReal(1.00000000000000))*(sj14));
IkReal x288=((cj13)*(cj14));
IkReal x289=((cj14)*(r10));
IkReal x290=((r01)*(sj14));
IkReal x291=((IkReal(1.00000000000000))*(r12));
IkReal x292=((sj13)*(x285));
IkReal x293=((r02)*(x284));
IkReal x294=((r11)*(x284));
IkReal x295=((r10)*(x285));
IkReal x296=((r01)*(x285));
IkReal x297=((sj13)*(x284));
IkReal x298=((r11)*(x285));
IkReal x299=((cj13)*(x284));
IkReal x300=((r10)*(x284));
IkReal x301=((r00)*(x285));
IkReal x302=((cj13)*(x285));
evalcond[0]=((IkReal(1.00000000000000))+(((r00)*(sj14)*(x284)))+(((IkReal(-1.00000000000000))*(x287)*(x295)))+(((cj14)*(r01)*(x284)))+(((IkReal(-1.00000000000000))*(x286)*(x298))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x286)*(x296)))+(((IkReal(-1.00000000000000))*(x287)*(x300)))+(((IkReal(-1.00000000000000))*(x286)*(x294)))+(((IkReal(-1.00000000000000))*(x287)*(x301))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x287)*(x298)))+(((IkReal(-1.00000000000000))*(sj13)*(x293)))+(((x290)*(x299)))+(((x288)*(x295)))+(((IkReal(-1.00000000000000))*(r00)*(x286)*(x299)))+(((r12)*(x292))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x287)*(x292)))+(((IkReal(-1.00000000000000))*(r00)*(x286)*(x297)))+(((x289)*(x292)))+(((IkReal(-1.00000000000000))*(x291)*(x302)))+(((x290)*(x297)))+(((cj13)*(x293))));
evalcond[4]=((((r12)*(x297)))+(((x288)*(x300)))+(((cj10)*(sj11)))+(((x288)*(x301)))+(((r02)*(x292)))+(((IkReal(-1.00000000000000))*(cj13)*(x287)*(x296)))+(((cj11)*(sj10)))+(((IkReal(-1.00000000000000))*(cj13)*(x287)*(x294))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x302)))+(((IkReal(-1.00000000000000))*(r01)*(x287)*(x292)))+(((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x291)*(x299)))+(((IkReal(-1.00000000000000))*(sj13)*(x287)*(x294)))+(((cj10)*(cj11)))+(((cj14)*(r00)*(x292)))+(((x289)*(x297))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst71)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst71)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst71)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst71)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x303=IKsin(j9);
IkReal x304=IKcos(j9);
IkReal x305=((IkReal(1.00000000000000))*(cj14));
IkReal x306=((IkReal(1.00000000000000))*(sj14));
IkReal x307=((cj13)*(cj14));
IkReal x308=((cj14)*(r10));
IkReal x309=((r01)*(sj14));
IkReal x310=((IkReal(1.00000000000000))*(r12));
IkReal x311=((sj13)*(x304));
IkReal x312=((r02)*(x303));
IkReal x313=((r11)*(x303));
IkReal x314=((r10)*(x304));
IkReal x315=((r01)*(x304));
IkReal x316=((sj13)*(x303));
IkReal x317=((r11)*(x304));
IkReal x318=((cj13)*(x303));
IkReal x319=((r10)*(x303));
IkReal x320=((r00)*(x304));
IkReal x321=((cj13)*(x304));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x306)*(x314)))+(((cj14)*(r01)*(x303)))+(((r00)*(sj14)*(x303)))+(((IkReal(-1.00000000000000))*(x305)*(x317))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x305)*(x313)))+(((IkReal(-1.00000000000000))*(x306)*(x319)))+(((IkReal(-1.00000000000000))*(x305)*(x315)))+(((IkReal(-1.00000000000000))*(x306)*(x320))));
evalcond[2]=((((r12)*(x311)))+(((IkReal(-1.00000000000000))*(r00)*(x305)*(x318)))+(((IkReal(-1.00000000000000))*(cj13)*(x306)*(x317)))+(((IkReal(-1.00000000000000))*(sj13)*(x312)))+(((x309)*(x318)))+(((x307)*(x314))));
evalcond[3]=((((x308)*(x311)))+(((x309)*(x316)))+(((IkReal(-1.00000000000000))*(x310)*(x321)))+(((IkReal(-1.00000000000000))*(r11)*(x306)*(x311)))+(((IkReal(-1.00000000000000))*(r00)*(x305)*(x316)))+(((cj13)*(x312))));
evalcond[4]=((((cj10)*(sj11)))+(((r02)*(x311)))+(((x307)*(x319)))+(((IkReal(-1.00000000000000))*(cj13)*(x306)*(x313)))+(((IkReal(-1.00000000000000))*(cj13)*(x306)*(x315)))+(((cj11)*(sj10)))+(((x307)*(x320)))+(((r12)*(x316))));
evalcond[5]=((((cj14)*(r00)*(x311)))+(((x308)*(x316)))+(((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(r01)*(x306)*(x311)))+(((cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(r02)*(x321)))+(((IkReal(-1.00000000000000))*(x310)*(x318)))+(((IkReal(-1.00000000000000))*(sj13)*(x306)*(x313))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst66)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst66)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst66)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst66)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x322=IKsin(j9);
IkReal x323=IKcos(j9);
IkReal x324=((r10)*(sj14));
IkReal x325=((cj14)*(r11));
IkReal x326=((cj14)*(r10));
IkReal x327=((r11)*(sj14));
IkReal x328=((cj14)*(r00));
IkReal x329=((r00)*(sj14));
IkReal x330=((IkReal(1.00000000000000))*(x322));
IkReal x331=((cj13)*(x322));
IkReal x332=((sj13)*(x323));
IkReal x333=((r01)*(x322));
IkReal x334=((IkReal(1.00000000000000))*(x323));
evalcond[0]=((IkReal(1.00000000000000))+(((x322)*(x329)))+(((IkReal(-1.00000000000000))*(x324)*(x334)))+(((IkReal(-1.00000000000000))*(x325)*(x334)))+(((cj14)*(x333))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x334)))+(((IkReal(-1.00000000000000))*(x329)*(x334)))+(((IkReal(-1.00000000000000))*(x325)*(x330)))+(((IkReal(-1.00000000000000))*(x324)*(x330))));
evalcond[2]=((((r12)*(x332)))+(((IkReal(-1.00000000000000))*(cj13)*(x327)*(x334)))+(((cj13)*(x323)*(x326)))+(((r01)*(sj14)*(x331)))+(((IkReal(-1.00000000000000))*(cj13)*(x328)*(x330)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x330))));
evalcond[3]=((((x326)*(x332)))+(((sj13)*(sj14)*(x333)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x334)))+(((IkReal(-1.00000000000000))*(sj13)*(x328)*(x330)))+(((IkReal(-1.00000000000000))*(x327)*(x332)))+(((r02)*(x331))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst69;
gconst69=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst70;
gconst70=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x335=((cj13)*(sj14));
IkReal x336=((cj11)*(sj9));
IkReal x337=((IkReal(1.00000000000000))*(r11));
IkReal x338=((IkReal(1.00000000000000))*(sj11));
IkReal x339=((cj13)*(cj14));
IkReal x340=((r22)*(sj13));
IkReal x341=((r12)*(sj13));
IkReal x342=((cj9)*(r01));
IkReal x343=((cj9)*(sj11));
IkReal x344=((r02)*(sj13));
IkReal x345=((IkReal(1.00000000000000))*(cj11));
IkReal x346=((sj11)*(sj9));
IkReal x347=((cj11)*(cj9));
if( IKabs(((gconst70)*(((((IkReal(-1.00000000000000))*(x335)*(x336)*(x337)))+(((IkReal(-1.00000000000000))*(r20)*(x338)*(x339)))+(((x344)*(x347)))+(((IkReal(-1.00000000000000))*(x335)*(x342)*(x345)))+(((IkReal(-1.00000000000000))*(x338)*(x340)))+(((x336)*(x341)))+(((r10)*(x336)*(x339)))+(((r00)*(x339)*(x347)))+(((r21)*(sj11)*(x335))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((r10)*(x339)*(x346)))+(((x343)*(x344)))+(((cj11)*(r20)*(x339)))+(((IkReal(-1.00000000000000))*(x335)*(x338)*(x342)))+(((x341)*(x346)))+(((IkReal(-1.00000000000000))*(x335)*(x337)*(x346)))+(((IkReal(-1.00000000000000))*(r21)*(x335)*(x345)))+(((cj11)*(x340)))+(((r00)*(x339)*(x343))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst70)*(((((IkReal(-1.00000000000000))*(x335)*(x336)*(x337)))+(((IkReal(-1.00000000000000))*(r20)*(x338)*(x339)))+(((x344)*(x347)))+(((IkReal(-1.00000000000000))*(x335)*(x342)*(x345)))+(((IkReal(-1.00000000000000))*(x338)*(x340)))+(((x336)*(x341)))+(((r10)*(x336)*(x339)))+(((r00)*(x339)*(x347)))+(((r21)*(sj11)*(x335)))))), ((gconst70)*(((((r10)*(x339)*(x346)))+(((x343)*(x344)))+(((cj11)*(r20)*(x339)))+(((IkReal(-1.00000000000000))*(x335)*(x338)*(x342)))+(((x341)*(x346)))+(((IkReal(-1.00000000000000))*(x335)*(x337)*(x346)))+(((IkReal(-1.00000000000000))*(r21)*(x335)*(x345)))+(((cj11)*(x340)))+(((r00)*(x339)*(x343)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x348=IKsin(j10);
IkReal x349=IKcos(j10);
IkReal x350=((IkReal(1.00000000000000))*(sj13));
IkReal x351=((r11)*(sj9));
IkReal x352=((cj9)*(r01));
IkReal x353=((r21)*(sj14));
IkReal x354=((cj9)*(r02));
IkReal x355=((sj13)*(sj9));
IkReal x356=((cj14)*(r10));
IkReal x357=((IkReal(1.00000000000000))*(cj13));
IkReal x358=((cj14)*(r20));
IkReal x359=((cj11)*(x348));
IkReal x360=((sj11)*(x349));
IkReal x361=((sj14)*(x357));
IkReal x362=((sj11)*(x348));
IkReal x363=((cj11)*(x349));
IkReal x364=((cj14)*(cj9)*(r00));
IkReal x365=((x360)+(x359));
evalcond[0]=((((IkReal(-1.00000000000000))*(x357)*(x358)))+(x362)+(((IkReal(-1.00000000000000))*(x363)))+(((IkReal(-1.00000000000000))*(r22)*(x350)))+(((cj13)*(x353))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x350)*(x358)))+(x365)+(((sj13)*(x353)))+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x354)))+(((r12)*(x355)))+(((cj13)*(sj9)*(x356)))+(x365)+(((IkReal(-1.00000000000000))*(x352)*(x361)))+(((IkReal(-1.00000000000000))*(x351)*(x361)))+(((cj13)*(x364))));
evalcond[3]=((((sj13)*(x364)))+(((IkReal(-1.00000000000000))*(sj14)*(x350)*(x351)))+(((IkReal(-1.00000000000000))*(x354)*(x357)))+(((x355)*(x356)))+(x363)+(((IkReal(-1.00000000000000))*(sj14)*(x350)*(x352)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x357)))+(((IkReal(-1.00000000000000))*(x362))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x366=((cj13)*(sj11));
IkReal x367=((r21)*(sj14));
IkReal x368=((cj11)*(cj13));
IkReal x369=((cj11)*(sj13));
IkReal x370=((sj11)*(sj13));
IkReal x371=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst69)*(((((x367)*(x369)))+(((IkReal(-1.00000000000000))*(r22)*(x370)))+(((x366)*(x367)))+(((IkReal(-1.00000000000000))*(x366)*(x371)))+(((IkReal(-1.00000000000000))*(x369)*(x371)))+(((r22)*(x368))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst69)*(((((IkReal(-1.00000000000000))*(x370)*(x371)))+(((r22)*(x366)))+(((IkReal(-1.00000000000000))*(x367)*(x368)))+(((cj14)*(r20)*(x368)))+(((x367)*(x370)))+(((r22)*(x369))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst69)*(((((x367)*(x369)))+(((IkReal(-1.00000000000000))*(r22)*(x370)))+(((x366)*(x367)))+(((IkReal(-1.00000000000000))*(x366)*(x371)))+(((IkReal(-1.00000000000000))*(x369)*(x371)))+(((r22)*(x368)))))), ((gconst69)*(((((IkReal(-1.00000000000000))*(x370)*(x371)))+(((r22)*(x366)))+(((IkReal(-1.00000000000000))*(x367)*(x368)))+(((cj14)*(r20)*(x368)))+(((x367)*(x370)))+(((r22)*(x369)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x372=IKsin(j10);
IkReal x373=IKcos(j10);
IkReal x374=((IkReal(1.00000000000000))*(sj13));
IkReal x375=((r11)*(sj9));
IkReal x376=((cj9)*(r01));
IkReal x377=((r21)*(sj14));
IkReal x378=((cj9)*(r02));
IkReal x379=((sj13)*(sj9));
IkReal x380=((cj14)*(r10));
IkReal x381=((IkReal(1.00000000000000))*(cj13));
IkReal x382=((cj14)*(r20));
IkReal x383=((cj11)*(x372));
IkReal x384=((sj11)*(x373));
IkReal x385=((sj14)*(x381));
IkReal x386=((sj11)*(x372));
IkReal x387=((cj11)*(x373));
IkReal x388=((cj14)*(cj9)*(r00));
IkReal x389=((x384)+(x383));
evalcond[0]=((x386)+(((IkReal(-1.00000000000000))*(x381)*(x382)))+(((cj13)*(x377)))+(((IkReal(-1.00000000000000))*(x387)))+(((IkReal(-1.00000000000000))*(r22)*(x374))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x374)*(x382)))+(x389)+(((sj13)*(x377)))+(((cj13)*(r22))));
evalcond[2]=((x389)+(((IkReal(-1.00000000000000))*(x375)*(x385)))+(((IkReal(-1.00000000000000))*(x376)*(x385)))+(((sj13)*(x378)))+(((cj13)*(x388)))+(((cj13)*(sj9)*(x380)))+(((r12)*(x379))));
evalcond[3]=((x387)+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x381)))+(((IkReal(-1.00000000000000))*(x378)*(x381)))+(((x379)*(x380)))+(((IkReal(-1.00000000000000))*(x386)))+(((sj13)*(x388)))+(((IkReal(-1.00000000000000))*(sj14)*(x374)*(x376)))+(((IkReal(-1.00000000000000))*(sj14)*(x374)*(x375))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x390=((IkReal(4.00000000000000))*(cj13));
IkReal x391=((npy)*(sj14));
IkReal x392=((cj14)*(npx));
IkReal x393=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x390)))+(((x392)*(x393)))+(((IkReal(-1.00000000000000))*(x391)*(x393)))+(((IkReal(-0.320000000000000))*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((x390)*(x392)))+(((IkReal(-0.320000000000000))*(cj13)))+(((npz)*(x393)))+(((IkReal(-1.00000000000000))*(x390)*(x391))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x390)))+(((x392)*(x393)))+(((IkReal(-1.00000000000000))*(x391)*(x393)))+(((IkReal(-0.320000000000000))*(sj13)))))+IKsqr(((IkReal(-0.920000000000000))+(((x390)*(x392)))+(((IkReal(-0.320000000000000))*(cj13)))+(((npz)*(x393)))+(((IkReal(-1.00000000000000))*(x390)*(x391)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x390)))+(((x392)*(x393)))+(((IkReal(-1.00000000000000))*(x391)*(x393)))+(((IkReal(-0.320000000000000))*(sj13)))), ((IkReal(-0.920000000000000))+(((x390)*(x392)))+(((IkReal(-0.320000000000000))*(cj13)))+(((npz)*(x393)))+(((IkReal(-1.00000000000000))*(x390)*(x391)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x394=((npy)*(sj14));
IkReal x395=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x395)))+(((cj13)*(x394))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(sj13)*(x395)))+(((sj13)*(x394)))+(((IkReal(0.250000000000000))*(IKsin(j11)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst75;
IkReal x396=(sj14)*(sj14);
IkReal x397=(cj14)*(cj14);
IkReal x398=((IkReal(1.00000000000000))*(x396));
IkReal x399=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x400=((IkReal(1.00000000000000))*(x397));
gconst75=IKsign(((((IkReal(-1.00000000000000))*(x400)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x398)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x399)))+(((IkReal(-1.00000000000000))*(x398)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x399)))+(((IkReal(-1.00000000000000))*(x400)*((r01)*(r01))))));
IkReal x401=(sj14)*(sj14);
IkReal x402=(cj14)*(cj14);
IkReal x403=((IkReal(1.00000000000000))*(x401));
IkReal x404=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x405=((IkReal(1.00000000000000))*(x402));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x405)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x403)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x404)))+(((IkReal(-1.00000000000000))*(x403)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x405)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x404))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst77;
gconst77=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst76;
IkReal x406=(sj14)*(sj14);
IkReal x407=(cj14)*(cj14);
IkReal x408=((cj14)*(sj13));
IkReal x409=((IkReal(1.00000000000000))*(r11));
IkReal x410=((cj13)*(r00));
IkReal x411=((sj13)*(sj14));
IkReal x412=((cj13)*(r01)*(r10));
gconst76=IKsign(((((x406)*(x412)))+(((r01)*(r12)*(x408)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x411)))+(((IkReal(-1.00000000000000))*(x406)*(x409)*(x410)))+(((IkReal(-1.00000000000000))*(r02)*(x408)*(x409)))+(((IkReal(-1.00000000000000))*(x407)*(x409)*(x410)))+(((r00)*(r12)*(x411)))+(((x407)*(x412)))));
IkReal x413=(sj14)*(sj14);
IkReal x414=(cj14)*(cj14);
IkReal x415=((cj14)*(sj13));
IkReal x416=((IkReal(1.00000000000000))*(r11));
IkReal x417=((cj13)*(r00));
IkReal x418=((sj13)*(sj14));
IkReal x419=((cj13)*(r01)*(r10));
dummyeval[0]=((((x413)*(x419)))+(((x414)*(x419)))+(((IkReal(-1.00000000000000))*(x413)*(x416)*(x417)))+(((r01)*(r12)*(x415)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x418)))+(((IkReal(-1.00000000000000))*(x414)*(x416)*(x417)))+(((r00)*(r12)*(x418)))+(((IkReal(-1.00000000000000))*(r02)*(x415)*(x416))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x420=((cj13)*(cj14));
IkReal x421=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst76)*(((((IkReal(-1.00000000000000))*(r11)*(x421)))+(((r12)*(sj13)))+(((r10)*(x420))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst76)*(((((IkReal(-1.00000000000000))*(r01)*(x421)))+(((r02)*(sj13)))+(((r00)*(x420))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst76)*(((((IkReal(-1.00000000000000))*(r11)*(x421)))+(((r12)*(sj13)))+(((r10)*(x420)))))), ((gconst76)*(((((IkReal(-1.00000000000000))*(r01)*(x421)))+(((r02)*(sj13)))+(((r00)*(x420)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x422=IKsin(j9);
IkReal x423=IKcos(j9);
IkReal x424=((r10)*(sj14));
IkReal x425=((cj14)*(r11));
IkReal x426=((cj14)*(r10));
IkReal x427=((r11)*(sj14));
IkReal x428=((cj14)*(r00));
IkReal x429=((r00)*(sj14));
IkReal x430=((IkReal(1.00000000000000))*(x422));
IkReal x431=((cj13)*(x422));
IkReal x432=((sj13)*(x423));
IkReal x433=((r01)*(x422));
IkReal x434=((IkReal(1.00000000000000))*(x423));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x424)*(x434)))+(((cj14)*(x433)))+(((x422)*(x429)))+(((IkReal(-1.00000000000000))*(x425)*(x434))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x434)))+(((IkReal(-1.00000000000000))*(x429)*(x434)))+(((IkReal(-1.00000000000000))*(x425)*(x430)))+(((IkReal(-1.00000000000000))*(x424)*(x430))));
evalcond[2]=((((cj13)*(x423)*(x426)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x430)))+(((IkReal(-1.00000000000000))*(cj13)*(x428)*(x430)))+(((IkReal(-1.00000000000000))*(cj13)*(x427)*(x434)))+(((r01)*(sj14)*(x431)))+(((r12)*(x432))));
evalcond[3]=((((x426)*(x432)))+(((IkReal(-1.00000000000000))*(x427)*(x432)))+(((IkReal(-1.00000000000000))*(sj13)*(x428)*(x430)))+(((r02)*(x431)))+(((sj13)*(sj14)*(x433)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x434))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst78;
gconst78=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst79;
gconst79=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x435=((cj13)*(sj14));
IkReal x436=((IkReal(1.00000000000000))*(cj11));
IkReal x437=((r11)*(sj9));
IkReal x438=((cj11)*(sj13));
IkReal x439=((r12)*(sj9));
IkReal x440=((r10)*(sj9));
IkReal x441=((sj11)*(sj13));
IkReal x442=((cj9)*(r02));
IkReal x443=((cj9)*(r01));
IkReal x444=((IkReal(1.00000000000000))*(sj11));
IkReal x445=((cj9)*(r00));
IkReal x446=((cj13)*(cj14)*(sj11));
IkReal x447=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst79)*(((((x438)*(x439)))+(((x445)*(x447)))+(((IkReal(-1.00000000000000))*(r22)*(x441)))+(((r21)*(sj11)*(x435)))+(((x438)*(x442)))+(((IkReal(-1.00000000000000))*(x435)*(x436)*(x437)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x444)))+(((x440)*(x447)))+(((IkReal(-1.00000000000000))*(x435)*(x436)*(x443))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst79)*(((((IkReal(-1.00000000000000))*(x435)*(x443)*(x444)))+(((x445)*(x446)))+(((r20)*(x447)))+(((IkReal(-1.00000000000000))*(x435)*(x437)*(x444)))+(((x441)*(x442)))+(((IkReal(-1.00000000000000))*(r21)*(x435)*(x436)))+(((x439)*(x441)))+(((x440)*(x446)))+(((r22)*(x438))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst79)*(((((x438)*(x439)))+(((x445)*(x447)))+(((IkReal(-1.00000000000000))*(r22)*(x441)))+(((r21)*(sj11)*(x435)))+(((x438)*(x442)))+(((IkReal(-1.00000000000000))*(x435)*(x436)*(x437)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x444)))+(((x440)*(x447)))+(((IkReal(-1.00000000000000))*(x435)*(x436)*(x443)))))), ((gconst79)*(((((IkReal(-1.00000000000000))*(x435)*(x443)*(x444)))+(((x445)*(x446)))+(((r20)*(x447)))+(((IkReal(-1.00000000000000))*(x435)*(x437)*(x444)))+(((x441)*(x442)))+(((IkReal(-1.00000000000000))*(r21)*(x435)*(x436)))+(((x439)*(x441)))+(((x440)*(x446)))+(((r22)*(x438)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x448=IKsin(j10);
IkReal x449=IKcos(j10);
IkReal x450=((IkReal(1.00000000000000))*(sj13));
IkReal x451=((r11)*(sj9));
IkReal x452=((cj9)*(r01));
IkReal x453=((IkReal(1.00000000000000))*(cj11));
IkReal x454=((r21)*(sj14));
IkReal x455=((cj9)*(r02));
IkReal x456=((sj13)*(sj9));
IkReal x457=((cj14)*(r10));
IkReal x458=((IkReal(1.00000000000000))*(cj13));
IkReal x459=((cj14)*(r20));
IkReal x460=((sj11)*(x448));
IkReal x461=((sj14)*(x458));
IkReal x462=((sj11)*(x449));
IkReal x463=((cj14)*(cj9)*(r00));
IkReal x464=((x449)*(x453));
evalcond[0]=((((IkReal(-1.00000000000000))*(x458)*(x459)))+(((cj13)*(x454)))+(x460)+(((IkReal(-1.00000000000000))*(x464)))+(((IkReal(-1.00000000000000))*(r22)*(x450))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x450)*(x459)))+(((IkReal(-1.00000000000000))*(x462)))+(((sj13)*(x454)))+(((IkReal(-1.00000000000000))*(x448)*(x453)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x452)*(x461)))+(((IkReal(-1.00000000000000))*(x451)*(x461)))+(((cj13)*(sj9)*(x457)))+(((sj13)*(x455)))+(x462)+(((cj13)*(x463)))+(((cj11)*(x448)))+(((r12)*(x456))));
evalcond[3]=((((x456)*(x457)))+(((IkReal(-1.00000000000000))*(sj14)*(x450)*(x452)))+(((IkReal(-1.00000000000000))*(x455)*(x458)))+(x460)+(((sj13)*(x463)))+(((IkReal(-1.00000000000000))*(x464)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x458)))+(((IkReal(-1.00000000000000))*(sj14)*(x450)*(x451))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x465=((cj13)*(sj11));
IkReal x466=((r21)*(sj14));
IkReal x467=((cj11)*(cj13));
IkReal x468=((IkReal(1.00000000000000))*(sj13));
IkReal x469=((sj11)*(sj13));
IkReal x470=((cj14)*(r20));
if( IKabs(((gconst78)*(((((r22)*(x467)))+(((x465)*(x470)))+(((cj11)*(sj13)*(x466)))+(((r22)*(x469)))+(((IkReal(-1.00000000000000))*(cj11)*(x468)*(x470)))+(((IkReal(-1.00000000000000))*(x465)*(x466))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst78)*(((((IkReal(-1.00000000000000))*(x467)*(x470)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x468)))+(((x466)*(x469)))+(((r22)*(x465)))+(((IkReal(-1.00000000000000))*(sj11)*(x468)*(x470)))+(((x466)*(x467))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst78)*(((((r22)*(x467)))+(((x465)*(x470)))+(((cj11)*(sj13)*(x466)))+(((r22)*(x469)))+(((IkReal(-1.00000000000000))*(cj11)*(x468)*(x470)))+(((IkReal(-1.00000000000000))*(x465)*(x466)))))), ((gconst78)*(((((IkReal(-1.00000000000000))*(x467)*(x470)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x468)))+(((x466)*(x469)))+(((r22)*(x465)))+(((IkReal(-1.00000000000000))*(sj11)*(x468)*(x470)))+(((x466)*(x467)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x471=IKsin(j10);
IkReal x472=IKcos(j10);
IkReal x473=((IkReal(1.00000000000000))*(sj13));
IkReal x474=((r11)*(sj9));
IkReal x475=((cj9)*(r01));
IkReal x476=((IkReal(1.00000000000000))*(cj11));
IkReal x477=((r21)*(sj14));
IkReal x478=((cj9)*(r02));
IkReal x479=((sj13)*(sj9));
IkReal x480=((cj14)*(r10));
IkReal x481=((IkReal(1.00000000000000))*(cj13));
IkReal x482=((cj14)*(r20));
IkReal x483=((sj11)*(x471));
IkReal x484=((sj14)*(x481));
IkReal x485=((sj11)*(x472));
IkReal x486=((cj14)*(cj9)*(r00));
IkReal x487=((x472)*(x476));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x473)))+(((IkReal(-1.00000000000000))*(x481)*(x482)))+(((IkReal(-1.00000000000000))*(x487)))+(((cj13)*(x477)))+(x483));
evalcond[1]=((((IkReal(-1.00000000000000))*(x471)*(x476)))+(((sj13)*(x477)))+(((IkReal(-1.00000000000000))*(x473)*(x482)))+(((IkReal(-1.00000000000000))*(x485)))+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x478)))+(((cj13)*(sj9)*(x480)))+(((cj11)*(x471)))+(((IkReal(-1.00000000000000))*(x475)*(x484)))+(((IkReal(-1.00000000000000))*(x474)*(x484)))+(((r12)*(x479)))+(x485)+(((cj13)*(x486))));
evalcond[3]=((((x479)*(x480)))+(((IkReal(-1.00000000000000))*(sj14)*(x473)*(x475)))+(((IkReal(-1.00000000000000))*(x478)*(x481)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x481)))+(((sj13)*(x486)))+(((IkReal(-1.00000000000000))*(x487)))+(x483)+(((IkReal(-1.00000000000000))*(sj14)*(x473)*(x474))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x488=((cj13)*(sj11));
IkReal x489=((r21)*(sj14));
IkReal x490=((cj11)*(cj13));
IkReal x491=((IkReal(1.00000000000000))*(sj13));
IkReal x492=((sj11)*(sj13));
IkReal x493=((cj14)*(r20));
if( IKabs(((gconst77)*(((((x488)*(x493)))+(((r22)*(x492)))+(((cj11)*(sj13)*(x489)))+(((IkReal(-1.00000000000000))*(cj11)*(x491)*(x493)))+(((r22)*(x490)))+(((IkReal(-1.00000000000000))*(x488)*(x489))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst77)*(((((IkReal(-1.00000000000000))*(x490)*(x493)))+(((r22)*(x488)))+(((x489)*(x490)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x491)))+(((x489)*(x492)))+(((IkReal(-1.00000000000000))*(sj11)*(x491)*(x493))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst77)*(((((x488)*(x493)))+(((r22)*(x492)))+(((cj11)*(sj13)*(x489)))+(((IkReal(-1.00000000000000))*(cj11)*(x491)*(x493)))+(((r22)*(x490)))+(((IkReal(-1.00000000000000))*(x488)*(x489)))))), ((gconst77)*(((((IkReal(-1.00000000000000))*(x490)*(x493)))+(((r22)*(x488)))+(((x489)*(x490)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x491)))+(((x489)*(x492)))+(((IkReal(-1.00000000000000))*(sj11)*(x491)*(x493)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x494=IKsin(j10);
IkReal x495=IKcos(j10);
IkReal x496=((IkReal(1.00000000000000))*(sj13));
IkReal x497=((cj14)*(r20));
IkReal x498=((r21)*(sj14));
IkReal x499=((IkReal(1.00000000000000))*(x495));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x496)))+(((IkReal(-1.00000000000000))*(cj11)*(x499)))+(((sj11)*(x494)))+(((cj13)*(x498)))+(((IkReal(-1.00000000000000))*(cj13)*(x497))));
evalcond[1]=((((sj13)*(x498)))+(((IkReal(-1.00000000000000))*(sj11)*(x499)))+(((IkReal(-1.00000000000000))*(x496)*(x497)))+(((IkReal(-1.00000000000000))*(cj11)*(x494)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst80;
IkReal x500=(sj14)*(sj14);
IkReal x501=(cj14)*(cj14);
IkReal x502=((IkReal(1.00000000000000))*(x500));
IkReal x503=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x504=((IkReal(1.00000000000000))*(x501));
gconst80=IKsign(((((IkReal(-1.00000000000000))*(x504)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x502)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x503)))+(((IkReal(-1.00000000000000))*(x504)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x503)))+(((IkReal(-1.00000000000000))*(x502)*((r10)*(r10))))));
IkReal x505=(sj14)*(sj14);
IkReal x506=(cj14)*(cj14);
IkReal x507=((IkReal(1.00000000000000))*(x505));
IkReal x508=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x509=((IkReal(1.00000000000000))*(x506));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x507)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x507)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x508)))+(((IkReal(-1.00000000000000))*(x509)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x509)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x508))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst81;
IkReal x510=(sj14)*(sj14);
IkReal x511=(cj14)*(cj14);
IkReal x512=((cj14)*(sj13));
IkReal x513=((IkReal(1.00000000000000))*(r11));
IkReal x514=((cj13)*(r00));
IkReal x515=((sj13)*(sj14));
IkReal x516=((cj13)*(r01)*(r10));
gconst81=IKsign(((((IkReal(-1.00000000000000))*(r02)*(r10)*(x515)))+(((IkReal(-1.00000000000000))*(x510)*(x513)*(x514)))+(((IkReal(-1.00000000000000))*(r02)*(x512)*(x513)))+(((x511)*(x516)))+(((r01)*(r12)*(x512)))+(((r00)*(r12)*(x515)))+(((IkReal(-1.00000000000000))*(x511)*(x513)*(x514)))+(((x510)*(x516)))));
IkReal x517=(sj14)*(sj14);
IkReal x518=(cj14)*(cj14);
IkReal x519=((cj14)*(sj13));
IkReal x520=((IkReal(1.00000000000000))*(r11));
IkReal x521=((cj13)*(r00));
IkReal x522=((sj13)*(sj14));
IkReal x523=((cj13)*(r01)*(r10));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(x519)*(x520)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x522)))+(((x517)*(x523)))+(((x518)*(x523)))+(((r01)*(r12)*(x519)))+(((r00)*(r12)*(x522)))+(((IkReal(-1.00000000000000))*(x517)*(x520)*(x521)))+(((IkReal(-1.00000000000000))*(x518)*(x520)*(x521))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x524=((cj13)*(cj14));
IkReal x525=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst81)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x525)))+(((r10)*(x524))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst81)*(((((r00)*(x524)))+(((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x525))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst81)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x525)))+(((r10)*(x524)))))), ((gconst81)*(((((r00)*(x524)))+(((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x525)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x526=IKsin(j9);
IkReal x527=IKcos(j9);
IkReal x528=((IkReal(1.00000000000000))*(cj14));
IkReal x529=((IkReal(1.00000000000000))*(sj14));
IkReal x530=((cj13)*(cj14));
IkReal x531=((cj14)*(r10));
IkReal x532=((r01)*(sj14));
IkReal x533=((IkReal(1.00000000000000))*(r12));
IkReal x534=((sj13)*(x527));
IkReal x535=((r02)*(x526));
IkReal x536=((r11)*(x526));
IkReal x537=((r10)*(x527));
IkReal x538=((r01)*(x527));
IkReal x539=((sj13)*(x526));
IkReal x540=((r11)*(x527));
IkReal x541=((cj13)*(x526));
IkReal x542=((r10)*(x526));
IkReal x543=((r00)*(x527));
IkReal x544=((cj13)*(x527));
evalcond[0]=((IkReal(-1.00000000000000))+(((cj14)*(r01)*(x526)))+(((IkReal(-1.00000000000000))*(x529)*(x537)))+(((IkReal(-1.00000000000000))*(x528)*(x540)))+(((r00)*(sj14)*(x526))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x528)*(x536)))+(((IkReal(-1.00000000000000))*(x529)*(x542)))+(((IkReal(-1.00000000000000))*(x529)*(x543)))+(((IkReal(-1.00000000000000))*(x528)*(x538))));
evalcond[2]=((((x532)*(x541)))+(((IkReal(-1.00000000000000))*(r00)*(x528)*(x541)))+(((IkReal(-1.00000000000000))*(cj13)*(x529)*(x540)))+(((x530)*(x537)))+(((IkReal(-1.00000000000000))*(sj13)*(x535)))+(((r12)*(x534))));
evalcond[3]=((((x532)*(x539)))+(((cj13)*(x535)))+(((x531)*(x534)))+(((IkReal(-1.00000000000000))*(r11)*(x529)*(x534)))+(((IkReal(-1.00000000000000))*(x533)*(x544)))+(((IkReal(-1.00000000000000))*(r00)*(x528)*(x539))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj13)*(x529)*(x536)))+(((x530)*(x542)))+(((r12)*(x539)))+(((cj10)*(sj11)))+(((cj11)*(sj10)))+(((r02)*(x534)))+(((x530)*(x543)))+(((IkReal(-1.00000000000000))*(cj13)*(x529)*(x538))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x529)*(x534)))+(((IkReal(-1.00000000000000))*(r02)*(x544)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(sj13)*(x529)*(x536)))+(((cj14)*(r00)*(x534)))+(((IkReal(-1.00000000000000))*(x533)*(x541)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)))+(((x531)*(x539))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst80)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst80)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst80)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst80)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x545=IKsin(j9);
IkReal x546=IKcos(j9);
IkReal x547=((IkReal(1.00000000000000))*(cj14));
IkReal x548=((IkReal(1.00000000000000))*(sj14));
IkReal x549=((cj13)*(cj14));
IkReal x550=((cj14)*(r10));
IkReal x551=((r01)*(sj14));
IkReal x552=((IkReal(1.00000000000000))*(r12));
IkReal x553=((sj13)*(x546));
IkReal x554=((r02)*(x545));
IkReal x555=((r11)*(x545));
IkReal x556=((r10)*(x546));
IkReal x557=((r01)*(x546));
IkReal x558=((sj13)*(x545));
IkReal x559=((r11)*(x546));
IkReal x560=((cj13)*(x545));
IkReal x561=((r10)*(x545));
IkReal x562=((r00)*(x546));
IkReal x563=((cj13)*(x546));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x548)*(x556)))+(((cj14)*(r01)*(x545)))+(((IkReal(-1.00000000000000))*(x547)*(x559)))+(((r00)*(sj14)*(x545))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x548)*(x561)))+(((IkReal(-1.00000000000000))*(x547)*(x555)))+(((IkReal(-1.00000000000000))*(x547)*(x557)))+(((IkReal(-1.00000000000000))*(x548)*(x562))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj13)*(x554)))+(((IkReal(-1.00000000000000))*(r00)*(x547)*(x560)))+(((x549)*(x556)))+(((IkReal(-1.00000000000000))*(cj13)*(x548)*(x559)))+(((x551)*(x560)))+(((r12)*(x553))));
evalcond[3]=((((x550)*(x553)))+(((x551)*(x558)))+(((IkReal(-1.00000000000000))*(r11)*(x548)*(x553)))+(((cj13)*(x554)))+(((IkReal(-1.00000000000000))*(r00)*(x547)*(x558)))+(((IkReal(-1.00000000000000))*(x552)*(x563))));
evalcond[4]=((((cj10)*(sj11)))+(((r12)*(x558)))+(((IkReal(-1.00000000000000))*(cj13)*(x548)*(x555)))+(((r02)*(x553)))+(((IkReal(-1.00000000000000))*(cj13)*(x548)*(x557)))+(((x549)*(x562)))+(((cj11)*(sj10)))+(((x549)*(x561))));
evalcond[5]=((((x550)*(x558)))+(((IkReal(-1.00000000000000))*(sj13)*(x548)*(x555)))+(((cj14)*(r00)*(x553)))+(((IkReal(-1.00000000000000))*(r01)*(x548)*(x553)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(r02)*(x563)))+(((IkReal(-1.00000000000000))*(x552)*(x560)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst75)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst75)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst75)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst75)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x564=IKsin(j9);
IkReal x565=IKcos(j9);
IkReal x566=((r10)*(sj14));
IkReal x567=((cj14)*(r11));
IkReal x568=((cj14)*(r10));
IkReal x569=((r11)*(sj14));
IkReal x570=((cj14)*(r00));
IkReal x571=((r00)*(sj14));
IkReal x572=((IkReal(1.00000000000000))*(x564));
IkReal x573=((cj13)*(x564));
IkReal x574=((sj13)*(x565));
IkReal x575=((r01)*(x564));
IkReal x576=((IkReal(1.00000000000000))*(x565));
evalcond[0]=((IkReal(-1.00000000000000))+(((cj14)*(x575)))+(((IkReal(-1.00000000000000))*(x567)*(x576)))+(((x564)*(x571)))+(((IkReal(-1.00000000000000))*(x566)*(x576))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x566)*(x572)))+(((IkReal(-1.00000000000000))*(x567)*(x572)))+(((IkReal(-1.00000000000000))*(x571)*(x576)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x576))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(sj13)*(x572)))+(((cj13)*(x565)*(x568)))+(((r12)*(x574)))+(((r01)*(sj14)*(x573)))+(((IkReal(-1.00000000000000))*(cj13)*(x570)*(x572)))+(((IkReal(-1.00000000000000))*(cj13)*(x569)*(x576))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj13)*(x570)*(x572)))+(((sj13)*(sj14)*(x575)))+(((r02)*(x573)))+(((IkReal(-1.00000000000000))*(x569)*(x574)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x576)))+(((x568)*(x574))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst78;
gconst78=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst79;
gconst79=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x577=((cj13)*(sj14));
IkReal x578=((IkReal(1.00000000000000))*(cj11));
IkReal x579=((r11)*(sj9));
IkReal x580=((cj11)*(sj13));
IkReal x581=((r12)*(sj9));
IkReal x582=((r10)*(sj9));
IkReal x583=((sj11)*(sj13));
IkReal x584=((cj9)*(r02));
IkReal x585=((cj9)*(r01));
IkReal x586=((IkReal(1.00000000000000))*(sj11));
IkReal x587=((cj9)*(r00));
IkReal x588=((cj13)*(cj14)*(sj11));
IkReal x589=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst79)*(((((IkReal(-1.00000000000000))*(r22)*(x583)))+(((r21)*(sj11)*(x577)))+(((x580)*(x584)))+(((IkReal(-1.00000000000000))*(x577)*(x578)*(x585)))+(((x587)*(x589)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x586)))+(((IkReal(-1.00000000000000))*(x577)*(x578)*(x579)))+(((x582)*(x589)))+(((x580)*(x581))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst79)*(((((r22)*(x580)))+(((x581)*(x583)))+(((r20)*(x589)))+(((IkReal(-1.00000000000000))*(x577)*(x585)*(x586)))+(((IkReal(-1.00000000000000))*(r21)*(x577)*(x578)))+(((x587)*(x588)))+(((IkReal(-1.00000000000000))*(x577)*(x579)*(x586)))+(((x583)*(x584)))+(((x582)*(x588))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst79)*(((((IkReal(-1.00000000000000))*(r22)*(x583)))+(((r21)*(sj11)*(x577)))+(((x580)*(x584)))+(((IkReal(-1.00000000000000))*(x577)*(x578)*(x585)))+(((x587)*(x589)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x586)))+(((IkReal(-1.00000000000000))*(x577)*(x578)*(x579)))+(((x582)*(x589)))+(((x580)*(x581)))))), ((gconst79)*(((((r22)*(x580)))+(((x581)*(x583)))+(((r20)*(x589)))+(((IkReal(-1.00000000000000))*(x577)*(x585)*(x586)))+(((IkReal(-1.00000000000000))*(r21)*(x577)*(x578)))+(((x587)*(x588)))+(((IkReal(-1.00000000000000))*(x577)*(x579)*(x586)))+(((x583)*(x584)))+(((x582)*(x588)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x590=IKsin(j10);
IkReal x591=IKcos(j10);
IkReal x592=((IkReal(1.00000000000000))*(sj13));
IkReal x593=((r11)*(sj9));
IkReal x594=((cj9)*(r01));
IkReal x595=((IkReal(1.00000000000000))*(cj11));
IkReal x596=((r21)*(sj14));
IkReal x597=((cj9)*(r02));
IkReal x598=((sj13)*(sj9));
IkReal x599=((cj14)*(r10));
IkReal x600=((IkReal(1.00000000000000))*(cj13));
IkReal x601=((cj14)*(r20));
IkReal x602=((sj11)*(x590));
IkReal x603=((sj14)*(x600));
IkReal x604=((sj11)*(x591));
IkReal x605=((cj14)*(cj9)*(r00));
IkReal x606=((x591)*(x595));
evalcond[0]=((((IkReal(-1.00000000000000))*(x606)))+(((IkReal(-1.00000000000000))*(r22)*(x592)))+(((IkReal(-1.00000000000000))*(x600)*(x601)))+(((cj13)*(x596)))+(x602));
evalcond[1]=((((sj13)*(x596)))+(((IkReal(-1.00000000000000))*(x604)))+(((IkReal(-1.00000000000000))*(x592)*(x601)))+(((IkReal(-1.00000000000000))*(x590)*(x595)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x593)*(x603)))+(((sj13)*(x597)))+(((cj13)*(sj9)*(x599)))+(((IkReal(-1.00000000000000))*(x594)*(x603)))+(((cj11)*(x590)))+(((cj13)*(x605)))+(((r12)*(x598)))+(x604));
evalcond[3]=((((IkReal(-1.00000000000000))*(x606)))+(((IkReal(-1.00000000000000))*(x597)*(x600)))+(((IkReal(-1.00000000000000))*(sj14)*(x592)*(x593)))+(((x598)*(x599)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x600)))+(((IkReal(-1.00000000000000))*(sj14)*(x592)*(x594)))+(((sj13)*(x605)))+(x602));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x607=((cj13)*(sj11));
IkReal x608=((r21)*(sj14));
IkReal x609=((cj11)*(cj13));
IkReal x610=((IkReal(1.00000000000000))*(sj13));
IkReal x611=((sj11)*(sj13));
IkReal x612=((cj14)*(r20));
if( IKabs(((gconst78)*(((((r22)*(x611)))+(((x607)*(x612)))+(((IkReal(-1.00000000000000))*(x607)*(x608)))+(((cj11)*(sj13)*(x608)))+(((IkReal(-1.00000000000000))*(cj11)*(x610)*(x612)))+(((r22)*(x609))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst78)*(((((IkReal(-1.00000000000000))*(cj11)*(r22)*(x610)))+(((x608)*(x611)))+(((IkReal(-1.00000000000000))*(sj11)*(x610)*(x612)))+(((IkReal(-1.00000000000000))*(x609)*(x612)))+(((x608)*(x609)))+(((r22)*(x607))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst78)*(((((r22)*(x611)))+(((x607)*(x612)))+(((IkReal(-1.00000000000000))*(x607)*(x608)))+(((cj11)*(sj13)*(x608)))+(((IkReal(-1.00000000000000))*(cj11)*(x610)*(x612)))+(((r22)*(x609)))))), ((gconst78)*(((((IkReal(-1.00000000000000))*(cj11)*(r22)*(x610)))+(((x608)*(x611)))+(((IkReal(-1.00000000000000))*(sj11)*(x610)*(x612)))+(((IkReal(-1.00000000000000))*(x609)*(x612)))+(((x608)*(x609)))+(((r22)*(x607)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x613=IKsin(j10);
IkReal x614=IKcos(j10);
IkReal x615=((IkReal(1.00000000000000))*(sj13));
IkReal x616=((r11)*(sj9));
IkReal x617=((cj9)*(r01));
IkReal x618=((IkReal(1.00000000000000))*(cj11));
IkReal x619=((r21)*(sj14));
IkReal x620=((cj9)*(r02));
IkReal x621=((sj13)*(sj9));
IkReal x622=((cj14)*(r10));
IkReal x623=((IkReal(1.00000000000000))*(cj13));
IkReal x624=((cj14)*(r20));
IkReal x625=((sj11)*(x613));
IkReal x626=((sj14)*(x623));
IkReal x627=((sj11)*(x614));
IkReal x628=((cj14)*(cj9)*(r00));
IkReal x629=((x614)*(x618));
evalcond[0]=((((cj13)*(x619)))+(((IkReal(-1.00000000000000))*(x629)))+(((IkReal(-1.00000000000000))*(r22)*(x615)))+(((IkReal(-1.00000000000000))*(x623)*(x624)))+(x625));
evalcond[1]=((((IkReal(-1.00000000000000))*(x615)*(x624)))+(((IkReal(-1.00000000000000))*(x613)*(x618)))+(((IkReal(-1.00000000000000))*(x627)))+(((sj13)*(x619)))+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x620)))+(((cj11)*(x613)))+(((cj13)*(sj9)*(x622)))+(((IkReal(-1.00000000000000))*(x616)*(x626)))+(((IkReal(-1.00000000000000))*(x617)*(x626)))+(x627)+(((r12)*(x621)))+(((cj13)*(x628))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x623)))+(((IkReal(-1.00000000000000))*(x620)*(x623)))+(((IkReal(-1.00000000000000))*(sj14)*(x615)*(x616)))+(((IkReal(-1.00000000000000))*(x629)))+(((x621)*(x622)))+(((IkReal(-1.00000000000000))*(sj14)*(x615)*(x617)))+(x625)+(((sj13)*(x628))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x630=((IkReal(4.00000000000000))*(sj14));
IkReal x631=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(cj12)))+(((IkReal(0.0800000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(npy)*(x631)))+(((IkReal(-1.00000000000000))*(npx)*(x630))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x630)))+(((cj13)*(npx)*(x631))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(cj12)))+(((IkReal(0.0800000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(npy)*(x631)))+(((IkReal(-1.00000000000000))*(npx)*(x630)))))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x630)))+(((cj13)*(npx)*(x631)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(cj12)))+(((IkReal(0.0800000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(npy)*(x631)))+(((IkReal(-1.00000000000000))*(npx)*(x630)))))), ((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x630)))+(((cj13)*(npx)*(x631)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x632=IKsin(j11);
IkReal x633=((npy)*(sj14));
IkReal x634=((IkReal(1.00000000000000))*(cj14)*(npx));
IkReal x635=((IkReal(0.250000000000000))*(x632));
evalcond[0]=((((cj14)*(npy)))+(((sj12)*(x635)))+(((IkReal(-0.0800000000000000))*(cj12)))+(((IkReal(-0.0200000000000000))*(sj12)))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((cj13)*(x633)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x634))));
evalcond[2]=((((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(sj13)*(x634)))+(((sj13)*(x633)))+(((IkReal(0.0200000000000000))*(cj12)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(cj12)*(x635)))+(((IkReal(-0.0800000000000000))*(sj12))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11))))));
dummyeval[0]=((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x636=(cj14)*(cj14);
IkReal x637=(sj14)*(sj14);
IkReal x638=((IkReal(1.00000000000000))*(r01));
IkReal x639=((sj13)*(sj14));
IkReal x640=((cj14)*(sj13));
IkReal x641=((r00)*(r11));
IkReal x642=((cj13)*(x636));
IkReal x643=((cj13)*(x637));
gconst2=IKsign(((((IkReal(-1.00000000000000))*(r12)*(x638)*(x640)))+(((r02)*(r10)*(x639)))+(((r02)*(r11)*(x640)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x639)))+(((IkReal(-1.00000000000000))*(r10)*(x638)*(x643)))+(((IkReal(-1.00000000000000))*(r10)*(x638)*(x642)))+(((x641)*(x643)))+(((x641)*(x642)))));
IkReal x644=(cj14)*(cj14);
IkReal x645=(sj14)*(sj14);
IkReal x646=((IkReal(1.00000000000000))*(r01));
IkReal x647=((sj13)*(sj14));
IkReal x648=((cj14)*(sj13));
IkReal x649=((r00)*(r11));
IkReal x650=((cj13)*(x644));
IkReal x651=((cj13)*(x645));
dummyeval[0]=((((r02)*(r11)*(x648)))+(((x649)*(x651)))+(((IkReal(-1.00000000000000))*(r10)*(x646)*(x650)))+(((r02)*(r10)*(x647)))+(((IkReal(-1.00000000000000))*(r10)*(x646)*(x651)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x647)))+(((x649)*(x650)))+(((IkReal(-1.00000000000000))*(r12)*(x646)*(x648))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x652=((IkReal(1.00000000000000))*(sj13));
IkReal x653=((npy)*(sj14));
IkReal x654=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x654)))+(((cj13)*(x653)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x652))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x652)))+(((r21)*(sj13)*(sj14)))+(((cj13)*(r22))));
evalcond[4]=((IkReal(-0.0800000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(npx)*(x652)))+(((sj13)*(x653)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
IkReal x655=(sj14)*(sj14);
IkReal x656=(cj14)*(cj14);
IkReal x657=((r01)*(r10));
IkReal x658=((cj13)*(cj14));
IkReal x659=((IkReal(1.00000000000000))*(r12));
IkReal x660=((cj13)*(sj14));
IkReal x661=((sj13)*(x655));
IkReal x662=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x663=((sj13)*(x656));
gconst18=IKsign(((((r02)*(r10)*(x660)))+(((r02)*(r11)*(x658)))+(((x657)*(x661)))+(((IkReal(-1.00000000000000))*(x662)*(x663)))+(((IkReal(-1.00000000000000))*(x661)*(x662)))+(((x657)*(x663)))+(((IkReal(-1.00000000000000))*(r00)*(x659)*(x660)))+(((IkReal(-1.00000000000000))*(r01)*(x658)*(x659)))));
IkReal x664=(sj14)*(sj14);
IkReal x665=(cj14)*(cj14);
IkReal x666=((r01)*(r10));
IkReal x667=((cj13)*(cj14));
IkReal x668=((IkReal(1.00000000000000))*(r12));
IkReal x669=((cj13)*(sj14));
IkReal x670=((sj13)*(x664));
IkReal x671=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x672=((sj13)*(x665));
dummyeval[0]=((((r02)*(r11)*(x667)))+(((IkReal(-1.00000000000000))*(x670)*(x671)))+(((r02)*(r10)*(x669)))+(((IkReal(-1.00000000000000))*(x671)*(x672)))+(((x666)*(x672)))+(((IkReal(-1.00000000000000))*(r01)*(x667)*(x668)))+(((x666)*(x670)))+(((IkReal(-1.00000000000000))*(r00)*(x668)*(x669))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
IkReal x673=(sj13)*(sj13);
IkReal x674=(cj13)*(cj13);
IkReal x675=((cj14)*(r00));
IkReal x676=((r11)*(sj14));
IkReal x677=((r12)*(x674));
IkReal x678=((IkReal(1.00000000000000))*(r01)*(sj14));
IkReal x679=((r02)*(x673));
IkReal x680=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x681=((r02)*(x674));
IkReal x682=((r12)*(x673));
gconst19=IKsign(((((IkReal(-1.00000000000000))*(x680)*(x681)))+(((IkReal(-1.00000000000000))*(x677)*(x678)))+(((x675)*(x677)))+(((x676)*(x679)))+(((x675)*(x682)))+(((IkReal(-1.00000000000000))*(x679)*(x680)))+(((x676)*(x681)))+(((IkReal(-1.00000000000000))*(x678)*(x682)))));
IkReal x683=(sj13)*(sj13);
IkReal x684=(cj13)*(cj13);
IkReal x685=((cj14)*(r00));
IkReal x686=((r11)*(sj14));
IkReal x687=((r12)*(x684));
IkReal x688=((IkReal(1.00000000000000))*(r01)*(sj14));
IkReal x689=((r02)*(x683));
IkReal x690=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x691=((r02)*(x684));
IkReal x692=((r12)*(x683));
dummyeval[0]=((((x685)*(x692)))+(((IkReal(-1.00000000000000))*(x689)*(x690)))+(((IkReal(-1.00000000000000))*(x688)*(x692)))+(((IkReal(-1.00000000000000))*(x690)*(x691)))+(((x685)*(x687)))+(((x686)*(x689)))+(((x686)*(x691)))+(((IkReal(-1.00000000000000))*(x687)*(x688))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x693=((cj13)*(cj14));
IkReal x694=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst19)*(((((r12)*(sj13)))+(((r10)*(x693)))+(((IkReal(-1.00000000000000))*(r11)*(x694))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((r00)*(x693)))+(((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x694))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst19)*(((((r12)*(sj13)))+(((r10)*(x693)))+(((IkReal(-1.00000000000000))*(r11)*(x694)))))), ((gconst19)*(((((r00)*(x693)))+(((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x694)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x695=IKsin(j9);
IkReal x696=IKcos(j9);
IkReal x697=((IkReal(1.00000000000000))*(sj14));
IkReal x698=((cj13)*(cj14));
IkReal x699=((IkReal(1.00000000000000))*(r00));
IkReal x700=((r01)*(sj14));
IkReal x701=((IkReal(1.00000000000000))*(cj13));
IkReal x702=((sj13)*(x696));
IkReal x703=((r02)*(x695));
IkReal x704=((r10)*(x696));
IkReal x705=((r11)*(x696));
IkReal x706=((sj13)*(x695));
IkReal x707=((cj14)*(x706));
evalcond[0]=((((cj14)*(r01)*(x695)))+(((IkReal(-1.00000000000000))*(cj14)*(x705)))+(((IkReal(-1.00000000000000))*(x697)*(x704)))+(((r00)*(sj14)*(x695))));
evalcond[1]=((((r12)*(x702)))+(((IkReal(-1.00000000000000))*(x695)*(x698)*(x699)))+(((IkReal(-1.00000000000000))*(cj13)*(x697)*(x705)))+(((cj13)*(x695)*(x700)))+(((x698)*(x704)))+(((IkReal(-1.00000000000000))*(sj13)*(x703))));
evalcond[2]=((IkReal(1.00000000000000))+(((cj13)*(x703)))+(((x700)*(x706)))+(((IkReal(-1.00000000000000))*(r12)*(x696)*(x701)))+(((IkReal(-1.00000000000000))*(r11)*(x697)*(x702)))+(((cj14)*(r10)*(x702)))+(((IkReal(-1.00000000000000))*(x699)*(x707))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(x695)*(x701)))+(((r10)*(x707)))+(((IkReal(-1.00000000000000))*(r01)*(x697)*(x702)))+(((IkReal(-1.00000000000000))*(r11)*(x697)*(x706)))+(((cj14)*(r00)*(x702)))+(((IkReal(-1.00000000000000))*(r02)*(x696)*(x701))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
gconst22=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x708=((IkReal(1.00000000000000))*(cj11));
IkReal x709=((r20)*(sj14));
IkReal x710=((sj11)*(sj14));
IkReal x711=((r10)*(sj9));
IkReal x712=((cj9)*(r00));
IkReal x713=((cj14)*(r21));
IkReal x714=((cj14)*(cj9)*(r01));
IkReal x715=((cj14)*(r11)*(sj9));
if( IKabs(((gconst22)*(((((cj11)*(x709)))+(((sj11)*(x715)))+(((x710)*(x711)))+(((sj11)*(x714)))+(((x710)*(x712)))+(((cj11)*(x713))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((IkReal(-1.00000000000000))*(sj14)*(x708)*(x711)))+(((IkReal(-1.00000000000000))*(sj14)*(x708)*(x712)))+(((IkReal(-1.00000000000000))*(x708)*(x714)))+(((IkReal(-1.00000000000000))*(x708)*(x715)))+(((sj11)*(x713)))+(((sj11)*(x709))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst22)*(((((cj11)*(x709)))+(((sj11)*(x715)))+(((x710)*(x711)))+(((sj11)*(x714)))+(((x710)*(x712)))+(((cj11)*(x713)))))), ((gconst22)*(((((IkReal(-1.00000000000000))*(sj14)*(x708)*(x711)))+(((IkReal(-1.00000000000000))*(sj14)*(x708)*(x712)))+(((IkReal(-1.00000000000000))*(x708)*(x714)))+(((IkReal(-1.00000000000000))*(x708)*(x715)))+(((sj11)*(x713)))+(((sj11)*(x709)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x716=IKsin(j10);
IkReal x717=IKcos(j10);
IkReal x718=((cj13)*(sj14));
IkReal x719=((cj13)*(cj14));
IkReal x720=((r10)*(sj9));
IkReal x721=((IkReal(1.00000000000000))*(cj9));
IkReal x722=((sj11)*(x716));
IkReal x723=((IkReal(1.00000000000000))*(x717));
IkReal x724=((cj11)*(x716));
IkReal x725=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x726=((cj11)*(x723));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x723)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x724))));
evalcond[1]=((((r21)*(x718)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x722)+(((IkReal(-1.00000000000000))*(x726)))+(((IkReal(-1.00000000000000))*(r20)*(x719))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x721)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x721)))+(x722)+(((IkReal(-1.00000000000000))*(sj14)*(x720)))+(((IkReal(-1.00000000000000))*(x726)))+(((IkReal(-1.00000000000000))*(cj14)*(x725))));
evalcond[3]=((x724)+(((cj9)*(r00)*(x719)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x718)*(x725)))+(((sj11)*(x717)))+(((IkReal(-1.00000000000000))*(r01)*(x718)*(x721)))+(((x719)*(x720))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x727=((cj11)*(r20));
IkReal x728=((IkReal(1.00000000000000))*(cj13));
IkReal x729=((r21)*(sj14));
IkReal x730=((r22)*(sj13));
IkReal x731=((r20)*(sj11));
IkReal x732=((cj14)*(r21));
if( IKabs(((gconst21)*(((((sj14)*(x727)))+(((cj11)*(x732)))+(((sj11)*(x730)))+(((IkReal(-1.00000000000000))*(sj11)*(x728)*(x729)))+(((cj13)*(cj14)*(x731))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((sj11)*(x732)))+(((IkReal(-1.00000000000000))*(cj14)*(x727)*(x728)))+(((cj11)*(cj13)*(x729)))+(((sj14)*(x731)))+(((IkReal(-1.00000000000000))*(cj11)*(x730))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst21)*(((((sj14)*(x727)))+(((cj11)*(x732)))+(((sj11)*(x730)))+(((IkReal(-1.00000000000000))*(sj11)*(x728)*(x729)))+(((cj13)*(cj14)*(x731)))))), ((gconst21)*(((((sj11)*(x732)))+(((IkReal(-1.00000000000000))*(cj14)*(x727)*(x728)))+(((cj11)*(cj13)*(x729)))+(((sj14)*(x731)))+(((IkReal(-1.00000000000000))*(cj11)*(x730)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x733=IKsin(j10);
IkReal x734=IKcos(j10);
IkReal x735=((cj13)*(sj14));
IkReal x736=((cj13)*(cj14));
IkReal x737=((r10)*(sj9));
IkReal x738=((IkReal(1.00000000000000))*(cj9));
IkReal x739=((sj11)*(x733));
IkReal x740=((IkReal(1.00000000000000))*(x734));
IkReal x741=((cj11)*(x733));
IkReal x742=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x743=((cj11)*(x740));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x741)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x740))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x735)))+(x739)+(((IkReal(-1.00000000000000))*(x743)))+(((IkReal(-1.00000000000000))*(r20)*(x736))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x737)))+(x739)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x738)))+(((IkReal(-1.00000000000000))*(x743)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x738)))+(((IkReal(-1.00000000000000))*(cj14)*(x742))));
evalcond[3]=((((cj9)*(r00)*(x736)))+(((x736)*(x737)))+(x741)+(((sj11)*(x734)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x735)*(x742)))+(((IkReal(-1.00000000000000))*(r01)*(x735)*(x738))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x744=((IkReal(1.00000000000000))*(cj14));
IkReal x745=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r10)*(x745)))+(((IkReal(-1.00000000000000))*(r11)*(x744))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r00)*(x745)))+(((IkReal(-1.00000000000000))*(r01)*(x744))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst18)*(((((IkReal(-1.00000000000000))*(r10)*(x745)))+(((IkReal(-1.00000000000000))*(r11)*(x744)))))), ((gconst18)*(((((IkReal(-1.00000000000000))*(r00)*(x745)))+(((IkReal(-1.00000000000000))*(r01)*(x744)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x746=IKsin(j9);
IkReal x747=IKcos(j9);
IkReal x748=((IkReal(1.00000000000000))*(sj14));
IkReal x749=((cj13)*(cj14));
IkReal x750=((IkReal(1.00000000000000))*(r00));
IkReal x751=((r01)*(sj14));
IkReal x752=((IkReal(1.00000000000000))*(cj13));
IkReal x753=((sj13)*(x747));
IkReal x754=((r02)*(x746));
IkReal x755=((r10)*(x747));
IkReal x756=((r11)*(x747));
IkReal x757=((sj13)*(x746));
IkReal x758=((cj14)*(x757));
evalcond[0]=((((r00)*(sj14)*(x746)))+(((IkReal(-1.00000000000000))*(cj14)*(x756)))+(((cj14)*(r01)*(x746)))+(((IkReal(-1.00000000000000))*(x748)*(x755))));
evalcond[1]=((((x749)*(x755)))+(((IkReal(-1.00000000000000))*(cj13)*(x748)*(x756)))+(((IkReal(-1.00000000000000))*(sj13)*(x754)))+(((cj13)*(x746)*(x751)))+(((r12)*(x753)))+(((IkReal(-1.00000000000000))*(x746)*(x749)*(x750))));
evalcond[2]=((IkReal(1.00000000000000))+(((x751)*(x757)))+(((IkReal(-1.00000000000000))*(r12)*(x747)*(x752)))+(((cj13)*(x754)))+(((cj14)*(r10)*(x753)))+(((IkReal(-1.00000000000000))*(x750)*(x758)))+(((IkReal(-1.00000000000000))*(r11)*(x748)*(x753))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x748)*(x753)))+(((cj14)*(r00)*(x753)))+(((IkReal(-1.00000000000000))*(r12)*(x746)*(x752)))+(((IkReal(-1.00000000000000))*(r11)*(x748)*(x757)))+(((IkReal(-1.00000000000000))*(r02)*(x747)*(x752)))+(((r10)*(x758))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
gconst22=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x759=((IkReal(1.00000000000000))*(cj11));
IkReal x760=((r20)*(sj14));
IkReal x761=((sj11)*(sj14));
IkReal x762=((r10)*(sj9));
IkReal x763=((cj9)*(r00));
IkReal x764=((cj14)*(r21));
IkReal x765=((cj14)*(cj9)*(r01));
IkReal x766=((cj14)*(r11)*(sj9));
if( IKabs(((gconst22)*(((((x761)*(x763)))+(((x761)*(x762)))+(((cj11)*(x764)))+(((cj11)*(x760)))+(((sj11)*(x766)))+(((sj11)*(x765))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((IkReal(-1.00000000000000))*(sj14)*(x759)*(x762)))+(((sj11)*(x764)))+(((sj11)*(x760)))+(((IkReal(-1.00000000000000))*(x759)*(x765)))+(((IkReal(-1.00000000000000))*(sj14)*(x759)*(x763)))+(((IkReal(-1.00000000000000))*(x759)*(x766))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst22)*(((((x761)*(x763)))+(((x761)*(x762)))+(((cj11)*(x764)))+(((cj11)*(x760)))+(((sj11)*(x766)))+(((sj11)*(x765)))))), ((gconst22)*(((((IkReal(-1.00000000000000))*(sj14)*(x759)*(x762)))+(((sj11)*(x764)))+(((sj11)*(x760)))+(((IkReal(-1.00000000000000))*(x759)*(x765)))+(((IkReal(-1.00000000000000))*(sj14)*(x759)*(x763)))+(((IkReal(-1.00000000000000))*(x759)*(x766)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x767=IKsin(j10);
IkReal x768=IKcos(j10);
IkReal x769=((cj13)*(sj14));
IkReal x770=((cj13)*(cj14));
IkReal x771=((r10)*(sj9));
IkReal x772=((IkReal(1.00000000000000))*(cj9));
IkReal x773=((sj11)*(x767));
IkReal x774=((IkReal(1.00000000000000))*(x768));
IkReal x775=((cj11)*(x767));
IkReal x776=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x777=((cj11)*(x774));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x775)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x774))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x770)))+(x773)+(((r21)*(x769)))+(((IkReal(-1.00000000000000))*(x777))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x772)))+(((IkReal(-1.00000000000000))*(cj14)*(x776)))+(((IkReal(-1.00000000000000))*(sj14)*(x771)))+(x773)+(((IkReal(-1.00000000000000))*(x777)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x772))));
evalcond[3]=((((x770)*(x771)))+(((cj9)*(r00)*(x770)))+(((IkReal(-1.00000000000000))*(x769)*(x776)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x769)*(x772)))+(((sj11)*(x768)))+(x775));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x778=((cj11)*(r20));
IkReal x779=((IkReal(1.00000000000000))*(cj13));
IkReal x780=((r21)*(sj14));
IkReal x781=((r22)*(sj13));
IkReal x782=((r20)*(sj11));
IkReal x783=((cj14)*(r21));
if( IKabs(((gconst21)*(((((sj14)*(x778)))+(((cj13)*(cj14)*(x782)))+(((cj11)*(x783)))+(((IkReal(-1.00000000000000))*(sj11)*(x779)*(x780)))+(((sj11)*(x781))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(cj11)*(x781)))+(((sj14)*(x782)))+(((IkReal(-1.00000000000000))*(cj14)*(x778)*(x779)))+(((sj11)*(x783)))+(((cj11)*(cj13)*(x780))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst21)*(((((sj14)*(x778)))+(((cj13)*(cj14)*(x782)))+(((cj11)*(x783)))+(((IkReal(-1.00000000000000))*(sj11)*(x779)*(x780)))+(((sj11)*(x781)))))), ((gconst21)*(((((IkReal(-1.00000000000000))*(cj11)*(x781)))+(((sj14)*(x782)))+(((IkReal(-1.00000000000000))*(cj14)*(x778)*(x779)))+(((sj11)*(x783)))+(((cj11)*(cj13)*(x780)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x784=IKsin(j10);
IkReal x785=IKcos(j10);
IkReal x786=((cj13)*(sj14));
IkReal x787=((cj13)*(cj14));
IkReal x788=((r10)*(sj9));
IkReal x789=((IkReal(1.00000000000000))*(cj9));
IkReal x790=((sj11)*(x784));
IkReal x791=((IkReal(1.00000000000000))*(x785));
IkReal x792=((cj11)*(x784));
IkReal x793=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x794=((cj11)*(x791));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x791)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x792))));
evalcond[1]=((((r21)*(x786)))+(((IkReal(-1.00000000000000))*(r20)*(x787)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x794)))+(x790));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x793)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x789)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x789)))+(((IkReal(-1.00000000000000))*(x794)))+(x790)+(((IkReal(-1.00000000000000))*(sj14)*(x788))));
evalcond[3]=((((sj11)*(x785)))+(((x787)*(x788)))+(((IkReal(-1.00000000000000))*(r01)*(x786)*(x789)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(x792)+(((cj9)*(r00)*(x787)))+(((IkReal(-1.00000000000000))*(x786)*(x793))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x795=((cj11)*(r20));
IkReal x796=((IkReal(1.00000000000000))*(cj13));
IkReal x797=((r21)*(sj14));
IkReal x798=((r22)*(sj13));
IkReal x799=((r20)*(sj11));
IkReal x800=((cj14)*(r21));
if( IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(sj11)*(x796)*(x797)))+(((cj11)*(x800)))+(((sj11)*(x798)))+(((cj13)*(cj14)*(x799)))+(((sj14)*(x795))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(cj14)*(x795)*(x796)))+(((cj11)*(cj13)*(x797)))+(((sj14)*(x799)))+(((IkReal(-1.00000000000000))*(cj11)*(x798)))+(((sj11)*(x800))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst20)*(((((IkReal(-1.00000000000000))*(sj11)*(x796)*(x797)))+(((cj11)*(x800)))+(((sj11)*(x798)))+(((cj13)*(cj14)*(x799)))+(((sj14)*(x795)))))), ((gconst20)*(((((IkReal(-1.00000000000000))*(cj14)*(x795)*(x796)))+(((cj11)*(cj13)*(x797)))+(((sj14)*(x799)))+(((IkReal(-1.00000000000000))*(cj11)*(x798)))+(((sj11)*(x800)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x801=IKsin(j10);
IkReal x802=IKcos(j10);
IkReal x803=((IkReal(1.00000000000000))*(x802));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x803)))+(((IkReal(-1.00000000000000))*(cj11)*(x801))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((sj11)*(x801)))+(((IkReal(-1.00000000000000))*(cj11)*(x803)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst24;
IkReal x804=(sj14)*(sj14);
IkReal x805=(cj14)*(cj14);
IkReal x806=((r01)*(r10));
IkReal x807=((cj13)*(cj14));
IkReal x808=((IkReal(1.00000000000000))*(r12));
IkReal x809=((cj13)*(sj14));
IkReal x810=((sj13)*(x804));
IkReal x811=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x812=((sj13)*(x805));
gconst24=IKsign(((((x806)*(x812)))+(((IkReal(-1.00000000000000))*(r00)*(x808)*(x809)))+(((r02)*(r11)*(x807)))+(((IkReal(-1.00000000000000))*(r01)*(x807)*(x808)))+(((r02)*(r10)*(x809)))+(((IkReal(-1.00000000000000))*(x811)*(x812)))+(((IkReal(-1.00000000000000))*(x810)*(x811)))+(((x806)*(x810)))));
IkReal x813=(sj14)*(sj14);
IkReal x814=(cj14)*(cj14);
IkReal x815=((r01)*(r10));
IkReal x816=((cj13)*(cj14));
IkReal x817=((IkReal(1.00000000000000))*(r12));
IkReal x818=((cj13)*(sj14));
IkReal x819=((sj13)*(x813));
IkReal x820=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x821=((sj13)*(x814));
dummyeval[0]=((((x815)*(x819)))+(((IkReal(-1.00000000000000))*(r01)*(x816)*(x817)))+(((r02)*(r11)*(x816)))+(((r02)*(r10)*(x818)))+(((IkReal(-1.00000000000000))*(x820)*(x821)))+(((IkReal(-1.00000000000000))*(x819)*(x820)))+(((x815)*(x821)))+(((IkReal(-1.00000000000000))*(r00)*(x817)*(x818))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst23;
IkReal x822=(sj14)*(sj14);
IkReal x823=(cj14)*(cj14);
IkReal x824=((IkReal(1.00000000000000))*(x822));
IkReal x825=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x826=((IkReal(1.00000000000000))*(x823));
gconst23=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x825)))+(((IkReal(-1.00000000000000))*(x826)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x824)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x826)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x824)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x825)))));
IkReal x827=(sj14)*(sj14);
IkReal x828=(cj14)*(cj14);
IkReal x829=((IkReal(1.00000000000000))*(x827));
IkReal x830=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x831=((IkReal(1.00000000000000))*(x828));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x831)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x830)))+(((IkReal(-1.00000000000000))*(x829)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x830)))+(((IkReal(-1.00000000000000))*(x829)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x831)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x832=((cj14)*(r11));
IkReal x833=((cj10)*(cj11));
IkReal x834=((cj14)*(r01));
IkReal x835=((sj14)*(x833));
IkReal x836=((IkReal(1.00000000000000))*(sj10)*(sj11));
if( IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x836)))+(((r10)*(x835)))+(((x832)*(x833)))+(((IkReal(-1.00000000000000))*(x832)*(x836))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((r00)*(x835)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x836)))+(((IkReal(-1.00000000000000))*(x834)*(x836)))+(((x833)*(x834))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst23)*(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x836)))+(((r10)*(x835)))+(((x832)*(x833)))+(((IkReal(-1.00000000000000))*(x832)*(x836)))))), ((gconst23)*(((((r00)*(x835)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x836)))+(((IkReal(-1.00000000000000))*(x834)*(x836)))+(((x833)*(x834)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x837=IKsin(j9);
IkReal x838=IKcos(j9);
IkReal x839=((IkReal(1.00000000000000))*(cj14));
IkReal x840=((IkReal(1.00000000000000))*(sj14));
IkReal x841=((cj13)*(cj14));
IkReal x842=((cj14)*(r10));
IkReal x843=((r01)*(sj14));
IkReal x844=((IkReal(1.00000000000000))*(r12));
IkReal x845=((sj13)*(x838));
IkReal x846=((r02)*(x837));
IkReal x847=((r11)*(x837));
IkReal x848=((r10)*(x838));
IkReal x849=((r01)*(x838));
IkReal x850=((sj13)*(x837));
IkReal x851=((r11)*(x838));
IkReal x852=((cj13)*(x837));
IkReal x853=((r10)*(x837));
IkReal x854=((r00)*(x838));
IkReal x855=((cj13)*(x838));
evalcond[0]=((((IkReal(-1.00000000000000))*(x839)*(x851)))+(((cj14)*(r01)*(x837)))+(((r00)*(sj14)*(x837)))+(((IkReal(-1.00000000000000))*(x840)*(x848))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x839)*(x849)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x840)*(x854)))+(((IkReal(-1.00000000000000))*(x840)*(x853)))+(((IkReal(-1.00000000000000))*(x839)*(x847)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x839)*(x852)))+(((x841)*(x848)))+(((IkReal(-1.00000000000000))*(cj13)*(x840)*(x851)))+(((r12)*(x845)))+(((x843)*(x852)))+(((IkReal(-1.00000000000000))*(sj13)*(x846))));
evalcond[3]=((IkReal(1.00000000000000))+(((x842)*(x845)))+(((IkReal(-1.00000000000000))*(r11)*(x840)*(x845)))+(((IkReal(-1.00000000000000))*(r00)*(x839)*(x850)))+(((cj13)*(x846)))+(((IkReal(-1.00000000000000))*(x844)*(x855)))+(((x843)*(x850))));
evalcond[4]=((((x841)*(x853)))+(((r12)*(x850)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x840)*(x849)))+(((r02)*(x845)))+(((cj11)*(sj10)))+(((IkReal(-1.00000000000000))*(cj13)*(x840)*(x847)))+(((x841)*(x854))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x844)*(x852)))+(((IkReal(-1.00000000000000))*(r01)*(x840)*(x845)))+(((IkReal(-1.00000000000000))*(sj13)*(x840)*(x847)))+(((cj14)*(r00)*(x845)))+(((IkReal(-1.00000000000000))*(r02)*(x855)))+(((x842)*(x850))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x856=((IkReal(1.00000000000000))*(sj14));
IkReal x857=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r11)*(x857)))+(((IkReal(-1.00000000000000))*(r10)*(x856))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r00)*(x856)))+(((IkReal(-1.00000000000000))*(r01)*(x857))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst24)*(((((IkReal(-1.00000000000000))*(r11)*(x857)))+(((IkReal(-1.00000000000000))*(r10)*(x856)))))), ((gconst24)*(((((IkReal(-1.00000000000000))*(r00)*(x856)))+(((IkReal(-1.00000000000000))*(r01)*(x857)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x858=IKsin(j9);
IkReal x859=IKcos(j9);
IkReal x860=((IkReal(1.00000000000000))*(cj14));
IkReal x861=((IkReal(1.00000000000000))*(sj14));
IkReal x862=((cj13)*(cj14));
IkReal x863=((cj14)*(r10));
IkReal x864=((r01)*(sj14));
IkReal x865=((IkReal(1.00000000000000))*(r12));
IkReal x866=((sj13)*(x859));
IkReal x867=((r02)*(x858));
IkReal x868=((r11)*(x858));
IkReal x869=((r10)*(x859));
IkReal x870=((r01)*(x859));
IkReal x871=((sj13)*(x858));
IkReal x872=((r11)*(x859));
IkReal x873=((cj13)*(x858));
IkReal x874=((r10)*(x858));
IkReal x875=((r00)*(x859));
IkReal x876=((cj13)*(x859));
evalcond[0]=((((r00)*(sj14)*(x858)))+(((cj14)*(r01)*(x858)))+(((IkReal(-1.00000000000000))*(x861)*(x869)))+(((IkReal(-1.00000000000000))*(x860)*(x872))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x861)*(x874)))+(((IkReal(-1.00000000000000))*(x860)*(x870)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x860)*(x868)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(x861)*(x875))));
evalcond[2]=((((x864)*(x873)))+(((IkReal(-1.00000000000000))*(r00)*(x860)*(x873)))+(((x862)*(x869)))+(((r12)*(x866)))+(((IkReal(-1.00000000000000))*(cj13)*(x861)*(x872)))+(((IkReal(-1.00000000000000))*(sj13)*(x867))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x860)*(x871)))+(((x864)*(x871)))+(((IkReal(-1.00000000000000))*(r11)*(x861)*(x866)))+(((IkReal(-1.00000000000000))*(x865)*(x876)))+(((cj13)*(x867)))+(((x863)*(x866))));
evalcond[4]=((((x862)*(x874)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x861)*(x868)))+(((x862)*(x875)))+(((r12)*(x871)))+(((r02)*(x866)))+(((IkReal(-1.00000000000000))*(cj13)*(x861)*(x870)))+(((cj11)*(sj10))));
evalcond[5]=((((x863)*(x871)))+(((IkReal(-1.00000000000000))*(sj13)*(x861)*(x868)))+(((IkReal(-1.00000000000000))*(r02)*(x876)))+(((cj14)*(r00)*(x866)))+(((IkReal(-1.00000000000000))*(x865)*(x873)))+(((IkReal(-1.00000000000000))*(r01)*(x861)*(x866))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x877=((IkReal(1.00000000000000))*(sj13));
IkReal x878=((npy)*(sj14));
IkReal x879=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0200000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.230000000000000))+(((cj13)*(x878)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(npz)*(x877)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x879))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x877)))+(((r21)*(sj13)*(sj14)))+(((cj13)*(r22))));
evalcond[4]=((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(npx)*(x877)))+(((cj13)*(npz)))+(((sj13)*(x878)))+(((IkReal(0.0800000000000000))*(sj13))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst27;
gconst27=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst25;
IkReal x880=(cj14)*(cj14);
IkReal x881=(sj14)*(sj14);
IkReal x882=((cj13)*(r12));
IkReal x883=((IkReal(1.00000000000000))*(r10));
IkReal x884=((cj13)*(r02));
IkReal x885=((r01)*(sj13));
IkReal x886=((r00)*(r11)*(sj13));
gconst25=IKsign(((((cj14)*(r01)*(x882)))+(((IkReal(-1.00000000000000))*(sj14)*(x883)*(x884)))+(((x880)*(x886)))+(((IkReal(-1.00000000000000))*(x881)*(x883)*(x885)))+(((IkReal(-1.00000000000000))*(x880)*(x883)*(x885)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x884)))+(((r00)*(sj14)*(x882)))+(((x881)*(x886)))));
IkReal x887=(cj14)*(cj14);
IkReal x888=(sj14)*(sj14);
IkReal x889=((cj13)*(r12));
IkReal x890=((IkReal(1.00000000000000))*(r10));
IkReal x891=((cj13)*(r02));
IkReal x892=((r01)*(sj13));
IkReal x893=((r00)*(r11)*(sj13));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x891)))+(((cj14)*(r01)*(x889)))+(((IkReal(-1.00000000000000))*(sj14)*(x890)*(x891)))+(((x888)*(x893)))+(((r00)*(sj14)*(x889)))+(((IkReal(-1.00000000000000))*(x887)*(x890)*(x892)))+(((x887)*(x893)))+(((IkReal(-1.00000000000000))*(x888)*(x890)*(x892))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst26;
IkReal x894=(cj13)*(cj13);
IkReal x895=(sj13)*(sj13);
IkReal x896=((r01)*(sj14));
IkReal x897=((r12)*(x895));
IkReal x898=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x899=((cj14)*(r02)*(r10));
IkReal x900=((r12)*(x894));
IkReal x901=((IkReal(1.00000000000000))*(r02)*(r11)*(sj14));
gconst26=IKsign(((((IkReal(-1.00000000000000))*(x897)*(x898)))+(((x895)*(x899)))+(((x896)*(x900)))+(((x894)*(x899)))+(((IkReal(-1.00000000000000))*(x895)*(x901)))+(((IkReal(-1.00000000000000))*(x894)*(x901)))+(((x896)*(x897)))+(((IkReal(-1.00000000000000))*(x898)*(x900)))));
IkReal x902=(cj13)*(cj13);
IkReal x903=(sj13)*(sj13);
IkReal x904=((r01)*(sj14));
IkReal x905=((r12)*(x903));
IkReal x906=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x907=((cj14)*(r02)*(r10));
IkReal x908=((r12)*(x902));
IkReal x909=x901;
dummyeval[0]=((((IkReal(-1.00000000000000))*(x905)*(x906)))+(((x904)*(x908)))+(((IkReal(-1.00000000000000))*(x903)*(x909)))+(((x902)*(x907)))+(((IkReal(-1.00000000000000))*(x902)*(x909)))+(((x903)*(x907)))+(((x904)*(x905)))+(((IkReal(-1.00000000000000))*(x906)*(x908))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x910=((cj13)*(cj14));
IkReal x911=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst26)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x911)))+(((r10)*(x910))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst26)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x911)))+(((r00)*(x910))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst26)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x911)))+(((r10)*(x910)))))), ((gconst26)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x911)))+(((r00)*(x910)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x912=IKsin(j9);
IkReal x913=IKcos(j9);
IkReal x914=((IkReal(1.00000000000000))*(sj14));
IkReal x915=((cj13)*(cj14));
IkReal x916=((IkReal(1.00000000000000))*(r00));
IkReal x917=((r01)*(sj14));
IkReal x918=((IkReal(1.00000000000000))*(cj13));
IkReal x919=((sj13)*(x913));
IkReal x920=((r02)*(x912));
IkReal x921=((r10)*(x913));
IkReal x922=((r11)*(x913));
IkReal x923=((sj13)*(x912));
IkReal x924=((cj14)*(x923));
evalcond[0]=((((r00)*(sj14)*(x912)))+(((cj14)*(r01)*(x912)))+(((IkReal(-1.00000000000000))*(cj14)*(x922)))+(((IkReal(-1.00000000000000))*(x914)*(x921))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x920)))+(((r12)*(x919)))+(((IkReal(-1.00000000000000))*(x912)*(x915)*(x916)))+(((x915)*(x921)))+(((IkReal(-1.00000000000000))*(cj13)*(x914)*(x922)))+(((cj13)*(x912)*(x917))));
evalcond[2]=((IkReal(-1.00000000000000))+(((x917)*(x923)))+(((IkReal(-1.00000000000000))*(r11)*(x914)*(x919)))+(((cj14)*(r10)*(x919)))+(((cj13)*(x920)))+(((IkReal(-1.00000000000000))*(x916)*(x924)))+(((IkReal(-1.00000000000000))*(r12)*(x913)*(x918))));
evalcond[3]=((((r10)*(x924)))+(((IkReal(-1.00000000000000))*(r01)*(x914)*(x919)))+(((IkReal(-1.00000000000000))*(r02)*(x913)*(x918)))+(((cj14)*(r00)*(x919)))+(((IkReal(-1.00000000000000))*(r12)*(x912)*(x918)))+(((IkReal(-1.00000000000000))*(r11)*(x914)*(x923))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x925=((IkReal(1.00000000000000))*(cj14));
IkReal x926=((sj11)*(sj9));
IkReal x927=((cj9)*(r01));
IkReal x928=((cj11)*(cj14));
IkReal x929=((cj9)*(r00));
IkReal x930=((r10)*(sj14));
IkReal x931=((cj11)*(sj14));
IkReal x932=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(r20)*(x931)))+(((IkReal(-1.00000000000000))*(sj11)*(x925)*(x927)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x925)))+(((IkReal(-1.00000000000000))*(x926)*(x930)))+(((IkReal(-1.00000000000000))*(x929)*(x932)))+(((IkReal(-1.00000000000000))*(r11)*(x925)*(x926))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((r11)*(sj9)*(x928)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x925)))+(((x927)*(x928)))+(((IkReal(-1.00000000000000))*(r20)*(x932)))+(((x929)*(x931)))+(((cj11)*(sj9)*(x930))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst29)*(((((IkReal(-1.00000000000000))*(r20)*(x931)))+(((IkReal(-1.00000000000000))*(sj11)*(x925)*(x927)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x925)))+(((IkReal(-1.00000000000000))*(x926)*(x930)))+(((IkReal(-1.00000000000000))*(x929)*(x932)))+(((IkReal(-1.00000000000000))*(r11)*(x925)*(x926)))))), ((gconst29)*(((((r11)*(sj9)*(x928)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x925)))+(((x927)*(x928)))+(((IkReal(-1.00000000000000))*(r20)*(x932)))+(((x929)*(x931)))+(((cj11)*(sj9)*(x930)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x933=IKsin(j10);
IkReal x934=IKcos(j10);
IkReal x935=((cj14)*(sj9));
IkReal x936=((IkReal(1.00000000000000))*(r11));
IkReal x937=((cj13)*(sj14));
IkReal x938=((IkReal(1.00000000000000))*(cj9));
IkReal x939=((cj13)*(cj14));
IkReal x940=((cj11)*(x933));
IkReal x941=((sj11)*(x934));
IkReal x942=((cj11)*(x934));
IkReal x943=((sj11)*(x933));
IkReal x944=((x940)+(x941));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x944));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x939)))+(((IkReal(-1.00000000000000))*(x942)))+(x943)+(((r21)*(x937))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x938)))+(((IkReal(-1.00000000000000))*(x935)*(x936)))+(((IkReal(-1.00000000000000))*(x943)))+(x942)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x938))));
evalcond[3]=((((cj13)*(r10)*(x935)))+(x944)+(((IkReal(-1.00000000000000))*(r01)*(x937)*(x938)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x939)))+(((IkReal(-1.00000000000000))*(sj9)*(x936)*(x937))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x945=((cj13)*(sj11));
IkReal x946=((r21)*(sj14));
IkReal x947=((cj14)*(r20));
IkReal x948=((cj11)*(cj13));
IkReal x949=((r22)*(sj13));
IkReal x950=((r20)*(sj14));
IkReal x951=((cj14)*(r21));
if( IKabs(((gconst28)*(((((x945)*(x946)))+(((IkReal(-1.00000000000000))*(sj11)*(x949)))+(((cj11)*(x950)))+(((IkReal(-1.00000000000000))*(x945)*(x947)))+(((cj11)*(x951))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((x947)*(x948)))+(((cj11)*(x949)))+(((sj11)*(x951)))+(((IkReal(-1.00000000000000))*(x946)*(x948)))+(((sj11)*(x950))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst28)*(((((x945)*(x946)))+(((IkReal(-1.00000000000000))*(sj11)*(x949)))+(((cj11)*(x950)))+(((IkReal(-1.00000000000000))*(x945)*(x947)))+(((cj11)*(x951)))))), ((gconst28)*(((((x947)*(x948)))+(((cj11)*(x949)))+(((sj11)*(x951)))+(((IkReal(-1.00000000000000))*(x946)*(x948)))+(((sj11)*(x950)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x952=IKsin(j10);
IkReal x953=IKcos(j10);
IkReal x954=((cj14)*(sj9));
IkReal x955=((IkReal(1.00000000000000))*(r11));
IkReal x956=((cj13)*(sj14));
IkReal x957=((IkReal(1.00000000000000))*(cj9));
IkReal x958=((cj13)*(cj14));
IkReal x959=((cj11)*(x952));
IkReal x960=((sj11)*(x953));
IkReal x961=((cj11)*(x953));
IkReal x962=((sj11)*(x952));
IkReal x963=((x959)+(x960));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x963));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x961)))+(((IkReal(-1.00000000000000))*(r20)*(x958)))+(((r21)*(x956)))+(x962));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x954)*(x955)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x957)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x957)))+(x961)+(((IkReal(-1.00000000000000))*(x962))));
evalcond[3]=((((cj9)*(r00)*(x958)))+(((IkReal(-1.00000000000000))*(r01)*(x956)*(x957)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r10)*(x954)))+(((IkReal(-1.00000000000000))*(sj9)*(x955)*(x956)))+(x963));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x964=((IkReal(1.00000000000000))*(sj14));
IkReal x965=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(r10)*(x964)))+(((IkReal(-1.00000000000000))*(r11)*(x965))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(r01)*(x965)))+(((IkReal(-1.00000000000000))*(r00)*(x964))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst25)*(((((IkReal(-1.00000000000000))*(r10)*(x964)))+(((IkReal(-1.00000000000000))*(r11)*(x965)))))), ((gconst25)*(((((IkReal(-1.00000000000000))*(r01)*(x965)))+(((IkReal(-1.00000000000000))*(r00)*(x964)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x966=IKsin(j9);
IkReal x967=IKcos(j9);
IkReal x968=((IkReal(1.00000000000000))*(sj14));
IkReal x969=((cj13)*(cj14));
IkReal x970=((IkReal(1.00000000000000))*(r00));
IkReal x971=((r01)*(sj14));
IkReal x972=((IkReal(1.00000000000000))*(cj13));
IkReal x973=((sj13)*(x967));
IkReal x974=((r02)*(x966));
IkReal x975=((r10)*(x967));
IkReal x976=((r11)*(x967));
IkReal x977=((sj13)*(x966));
IkReal x978=((cj14)*(x977));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj14)*(x976)))+(((r00)*(sj14)*(x966)))+(((IkReal(-1.00000000000000))*(x968)*(x975)))+(((cj14)*(r01)*(x966))));
evalcond[1]=((((cj13)*(x966)*(x971)))+(((r12)*(x973)))+(((IkReal(-1.00000000000000))*(sj13)*(x974)))+(((x969)*(x975)))+(((IkReal(-1.00000000000000))*(x966)*(x969)*(x970)))+(((IkReal(-1.00000000000000))*(cj13)*(x968)*(x976))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r12)*(x967)*(x972)))+(((cj14)*(r10)*(x973)))+(((cj13)*(x974)))+(((IkReal(-1.00000000000000))*(x970)*(x978)))+(((x971)*(x977)))+(((IkReal(-1.00000000000000))*(r11)*(x968)*(x973))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(x967)*(x972)))+(((r10)*(x978)))+(((IkReal(-1.00000000000000))*(r01)*(x968)*(x973)))+(((IkReal(-1.00000000000000))*(r11)*(x968)*(x977)))+(((cj14)*(r00)*(x973)))+(((IkReal(-1.00000000000000))*(r12)*(x966)*(x972))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x979=((IkReal(1.00000000000000))*(cj14));
IkReal x980=((sj11)*(sj9));
IkReal x981=((cj9)*(r01));
IkReal x982=((cj11)*(cj14));
IkReal x983=((cj9)*(r00));
IkReal x984=((r10)*(sj14));
IkReal x985=((cj11)*(sj14));
IkReal x986=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(x983)*(x986)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x979)))+(((IkReal(-1.00000000000000))*(r20)*(x985)))+(((IkReal(-1.00000000000000))*(r11)*(x979)*(x980)))+(((IkReal(-1.00000000000000))*(sj11)*(x979)*(x981)))+(((IkReal(-1.00000000000000))*(x980)*(x984))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(r21)*(sj11)*(x979)))+(((x981)*(x982)))+(((IkReal(-1.00000000000000))*(r20)*(x986)))+(((cj11)*(sj9)*(x984)))+(((x983)*(x985)))+(((r11)*(sj9)*(x982))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst29)*(((((IkReal(-1.00000000000000))*(x983)*(x986)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x979)))+(((IkReal(-1.00000000000000))*(r20)*(x985)))+(((IkReal(-1.00000000000000))*(r11)*(x979)*(x980)))+(((IkReal(-1.00000000000000))*(sj11)*(x979)*(x981)))+(((IkReal(-1.00000000000000))*(x980)*(x984)))))), ((gconst29)*(((((IkReal(-1.00000000000000))*(r21)*(sj11)*(x979)))+(((x981)*(x982)))+(((IkReal(-1.00000000000000))*(r20)*(x986)))+(((cj11)*(sj9)*(x984)))+(((x983)*(x985)))+(((r11)*(sj9)*(x982)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x987=IKsin(j10);
IkReal x988=IKcos(j10);
IkReal x989=((cj14)*(sj9));
IkReal x990=((IkReal(1.00000000000000))*(r11));
IkReal x991=((cj13)*(sj14));
IkReal x992=((IkReal(1.00000000000000))*(cj9));
IkReal x993=((cj13)*(cj14));
IkReal x994=((cj11)*(x987));
IkReal x995=((sj11)*(x988));
IkReal x996=((cj11)*(x988));
IkReal x997=((sj11)*(x987));
IkReal x998=((x995)+(x994));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x998));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x996)))+(((IkReal(-1.00000000000000))*(r20)*(x993)))+(((r21)*(x991)))+(x997));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x992)))+(((IkReal(-1.00000000000000))*(x997)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x989)*(x990)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x992)))+(x996));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj9)*(x990)*(x991)))+(((cj13)*(r10)*(x989)))+(((IkReal(-1.00000000000000))*(r01)*(x991)*(x992)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x993)))+(x998));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x999=((cj13)*(sj11));
IkReal x1000=((r21)*(sj14));
IkReal x1001=((cj14)*(r20));
IkReal x1002=((cj11)*(cj13));
IkReal x1003=((r22)*(sj13));
IkReal x1004=((r20)*(sj14));
IkReal x1005=((cj14)*(r21));
if( IKabs(((gconst28)*(((((cj11)*(x1005)))+(((x1000)*(x999)))+(((IkReal(-1.00000000000000))*(sj11)*(x1003)))+(((IkReal(-1.00000000000000))*(x1001)*(x999)))+(((cj11)*(x1004))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((sj11)*(x1004)))+(((x1001)*(x1002)))+(((sj11)*(x1005)))+(((cj11)*(x1003)))+(((IkReal(-1.00000000000000))*(x1000)*(x1002))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst28)*(((((cj11)*(x1005)))+(((x1000)*(x999)))+(((IkReal(-1.00000000000000))*(sj11)*(x1003)))+(((IkReal(-1.00000000000000))*(x1001)*(x999)))+(((cj11)*(x1004)))))), ((gconst28)*(((((sj11)*(x1004)))+(((x1001)*(x1002)))+(((sj11)*(x1005)))+(((cj11)*(x1003)))+(((IkReal(-1.00000000000000))*(x1000)*(x1002)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1006=IKsin(j10);
IkReal x1007=IKcos(j10);
IkReal x1008=((cj14)*(sj9));
IkReal x1009=((IkReal(1.00000000000000))*(r11));
IkReal x1010=((cj13)*(sj14));
IkReal x1011=((IkReal(1.00000000000000))*(cj9));
IkReal x1012=((cj13)*(cj14));
IkReal x1013=((cj11)*(x1006));
IkReal x1014=((sj11)*(x1007));
IkReal x1015=((cj11)*(x1007));
IkReal x1016=((sj11)*(x1006));
IkReal x1017=((x1014)+(x1013));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x1017));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x1012)))+(((IkReal(-1.00000000000000))*(x1015)))+(((r21)*(x1010)))+(x1016));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1011)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x1008)*(x1009)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1011)))+(x1015)+(((IkReal(-1.00000000000000))*(x1016))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x1010)*(x1011)))+(((IkReal(-1.00000000000000))*(sj9)*(x1009)*(x1010)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(x1017)+(((cj9)*(r00)*(x1012)))+(((cj13)*(r10)*(x1008))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1018=((cj13)*(sj11));
IkReal x1019=((r21)*(sj14));
IkReal x1020=((cj14)*(r20));
IkReal x1021=((cj11)*(cj13));
IkReal x1022=((r22)*(sj13));
IkReal x1023=((r20)*(sj14));
IkReal x1024=((cj14)*(r21));
if( IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(x1018)*(x1020)))+(((cj11)*(x1023)))+(((cj11)*(x1024)))+(((x1018)*(x1019)))+(((IkReal(-1.00000000000000))*(sj11)*(x1022))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(x1019)*(x1021)))+(((x1020)*(x1021)))+(((sj11)*(x1024)))+(((cj11)*(x1022)))+(((sj11)*(x1023))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst27)*(((((IkReal(-1.00000000000000))*(x1018)*(x1020)))+(((cj11)*(x1023)))+(((cj11)*(x1024)))+(((x1018)*(x1019)))+(((IkReal(-1.00000000000000))*(sj11)*(x1022)))))), ((gconst27)*(((((IkReal(-1.00000000000000))*(x1019)*(x1021)))+(((x1020)*(x1021)))+(((sj11)*(x1024)))+(((cj11)*(x1022)))+(((sj11)*(x1023)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x1025=IKsin(j10);
IkReal x1026=IKcos(j10);
evalcond[0]=((((r20)*(sj14)))+(((cj11)*(x1025)))+(((cj14)*(r21)))+(((sj11)*(x1026))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((sj11)*(x1025)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x1026))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst31;
IkReal x1027=(cj14)*(cj14);
IkReal x1028=(sj14)*(sj14);
IkReal x1029=((cj13)*(r12));
IkReal x1030=((IkReal(1.00000000000000))*(r10));
IkReal x1031=((cj13)*(r02));
IkReal x1032=((r01)*(sj13));
IkReal x1033=((r00)*(r11)*(sj13));
gconst31=IKsign(((((r00)*(sj14)*(x1029)))+(((IkReal(-1.00000000000000))*(x1028)*(x1030)*(x1032)))+(((x1027)*(x1033)))+(((IkReal(-1.00000000000000))*(x1027)*(x1030)*(x1032)))+(((IkReal(-1.00000000000000))*(sj14)*(x1030)*(x1031)))+(((cj14)*(r01)*(x1029)))+(((x1028)*(x1033)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1031)))));
IkReal x1034=(cj14)*(cj14);
IkReal x1035=(sj14)*(sj14);
IkReal x1036=((cj13)*(r12));
IkReal x1037=((IkReal(1.00000000000000))*(r10));
IkReal x1038=((cj13)*(r02));
IkReal x1039=((r01)*(sj13));
IkReal x1040=((r00)*(r11)*(sj13));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1038)))+(((r00)*(sj14)*(x1036)))+(((cj14)*(r01)*(x1036)))+(((IkReal(-1.00000000000000))*(x1034)*(x1037)*(x1039)))+(((x1034)*(x1040)))+(((IkReal(-1.00000000000000))*(sj14)*(x1037)*(x1038)))+(((x1035)*(x1040)))+(((IkReal(-1.00000000000000))*(x1035)*(x1037)*(x1039))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst30;
IkReal x1041=(sj14)*(sj14);
IkReal x1042=(cj14)*(cj14);
IkReal x1043=((IkReal(1.00000000000000))*(x1041));
IkReal x1044=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1045=((IkReal(1.00000000000000))*(x1042));
gconst30=IKsign(((((IkReal(-1.00000000000000))*(r00)*(r01)*(x1044)))+(((IkReal(-1.00000000000000))*(x1043)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1044)))+(((IkReal(-1.00000000000000))*(x1043)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1045)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1045)*((r11)*(r11))))));
IkReal x1046=(sj14)*(sj14);
IkReal x1047=(cj14)*(cj14);
IkReal x1048=((IkReal(1.00000000000000))*(x1046));
IkReal x1049=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1050=((IkReal(1.00000000000000))*(x1047));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1050)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1048)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1049)))+(((IkReal(-1.00000000000000))*(x1050)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1049)))+(((IkReal(-1.00000000000000))*(x1048)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1051=((sj10)*(sj11));
IkReal x1052=((r00)*(sj14));
IkReal x1053=((cj14)*(r11));
IkReal x1054=((r10)*(sj14));
IkReal x1055=((cj14)*(r01));
IkReal x1056=((IkReal(1.00000000000000))*(cj10)*(cj11));
if( IKabs(((gconst30)*(((((IkReal(-1.00000000000000))*(x1054)*(x1056)))+(((IkReal(-1.00000000000000))*(x1053)*(x1056)))+(((x1051)*(x1053)))+(((x1051)*(x1054))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst30)*(((((x1051)*(x1052)))+(((IkReal(-1.00000000000000))*(x1055)*(x1056)))+(((x1051)*(x1055)))+(((IkReal(-1.00000000000000))*(x1052)*(x1056))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst30)*(((((IkReal(-1.00000000000000))*(x1054)*(x1056)))+(((IkReal(-1.00000000000000))*(x1053)*(x1056)))+(((x1051)*(x1053)))+(((x1051)*(x1054)))))), ((gconst30)*(((((x1051)*(x1052)))+(((IkReal(-1.00000000000000))*(x1055)*(x1056)))+(((x1051)*(x1055)))+(((IkReal(-1.00000000000000))*(x1052)*(x1056)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1057=IKsin(j9);
IkReal x1058=IKcos(j9);
IkReal x1059=((IkReal(1.00000000000000))*(cj14));
IkReal x1060=((IkReal(1.00000000000000))*(sj14));
IkReal x1061=((cj13)*(cj14));
IkReal x1062=((cj14)*(r10));
IkReal x1063=((r01)*(sj14));
IkReal x1064=((IkReal(1.00000000000000))*(r12));
IkReal x1065=((sj13)*(x1058));
IkReal x1066=((r02)*(x1057));
IkReal x1067=((r11)*(x1057));
IkReal x1068=((r10)*(x1058));
IkReal x1069=((r01)*(x1058));
IkReal x1070=((sj13)*(x1057));
IkReal x1071=((r11)*(x1058));
IkReal x1072=((cj13)*(x1057));
IkReal x1073=((r10)*(x1057));
IkReal x1074=((r00)*(x1058));
IkReal x1075=((cj13)*(x1058));
evalcond[0]=((((r00)*(sj14)*(x1057)))+(((cj14)*(r01)*(x1057)))+(((IkReal(-1.00000000000000))*(x1059)*(x1071)))+(((IkReal(-1.00000000000000))*(x1060)*(x1068))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1059)*(x1069)))+(((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x1059)*(x1067)))+(((IkReal(-1.00000000000000))*(x1060)*(x1074)))+(((cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(x1060)*(x1073))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x1060)*(x1071)))+(((x1061)*(x1068)))+(((x1063)*(x1072)))+(((IkReal(-1.00000000000000))*(sj13)*(x1066)))+(((IkReal(-1.00000000000000))*(r00)*(x1059)*(x1072)))+(((r12)*(x1065))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x1060)*(x1065)))+(((IkReal(-1.00000000000000))*(r00)*(x1059)*(x1070)))+(((IkReal(-1.00000000000000))*(x1064)*(x1075)))+(((cj13)*(x1066)))+(((x1063)*(x1070)))+(((x1062)*(x1065))));
evalcond[4]=((((r02)*(x1065)))+(((x1061)*(x1073)))+(((cj10)*(sj11)))+(((r12)*(x1070)))+(((IkReal(-1.00000000000000))*(cj13)*(x1060)*(x1069)))+(((IkReal(-1.00000000000000))*(cj13)*(x1060)*(x1067)))+(((x1061)*(x1074)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x1075)))+(((IkReal(-1.00000000000000))*(r01)*(x1060)*(x1065)))+(((cj14)*(r00)*(x1065)))+(((IkReal(-1.00000000000000))*(sj13)*(x1060)*(x1067)))+(((x1062)*(x1070)))+(((IkReal(-1.00000000000000))*(x1064)*(x1072))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1076=((IkReal(1.00000000000000))*(sj14));
IkReal x1077=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r11)*(x1077)))+(((IkReal(-1.00000000000000))*(r10)*(x1076))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r01)*(x1077)))+(((IkReal(-1.00000000000000))*(r00)*(x1076))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst31)*(((((IkReal(-1.00000000000000))*(r11)*(x1077)))+(((IkReal(-1.00000000000000))*(r10)*(x1076)))))), ((gconst31)*(((((IkReal(-1.00000000000000))*(r01)*(x1077)))+(((IkReal(-1.00000000000000))*(r00)*(x1076)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1078=IKsin(j9);
IkReal x1079=IKcos(j9);
IkReal x1080=((IkReal(1.00000000000000))*(cj14));
IkReal x1081=((IkReal(1.00000000000000))*(sj14));
IkReal x1082=((cj13)*(cj14));
IkReal x1083=((cj14)*(r10));
IkReal x1084=((r01)*(sj14));
IkReal x1085=((IkReal(1.00000000000000))*(r12));
IkReal x1086=((sj13)*(x1079));
IkReal x1087=((r02)*(x1078));
IkReal x1088=((r11)*(x1078));
IkReal x1089=((r10)*(x1079));
IkReal x1090=((r01)*(x1079));
IkReal x1091=((sj13)*(x1078));
IkReal x1092=((r11)*(x1079));
IkReal x1093=((cj13)*(x1078));
IkReal x1094=((r10)*(x1078));
IkReal x1095=((r00)*(x1079));
IkReal x1096=((cj13)*(x1079));
evalcond[0]=((((cj14)*(r01)*(x1078)))+(((IkReal(-1.00000000000000))*(x1081)*(x1089)))+(((r00)*(sj14)*(x1078)))+(((IkReal(-1.00000000000000))*(x1080)*(x1092))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x1080)*(x1088)))+(((IkReal(-1.00000000000000))*(x1081)*(x1094)))+(((cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(x1081)*(x1095)))+(((IkReal(-1.00000000000000))*(x1080)*(x1090))));
evalcond[2]=((((x1082)*(x1089)))+(((r12)*(x1086)))+(((IkReal(-1.00000000000000))*(cj13)*(x1081)*(x1092)))+(((x1084)*(x1093)))+(((IkReal(-1.00000000000000))*(sj13)*(x1087)))+(((IkReal(-1.00000000000000))*(r00)*(x1080)*(x1093))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1085)*(x1096)))+(((x1083)*(x1086)))+(((cj13)*(x1087)))+(((IkReal(-1.00000000000000))*(r11)*(x1081)*(x1086)))+(((x1084)*(x1091)))+(((IkReal(-1.00000000000000))*(r00)*(x1080)*(x1091))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj13)*(x1081)*(x1090)))+(((cj10)*(sj11)))+(((r12)*(x1091)))+(((r02)*(x1086)))+(((IkReal(-1.00000000000000))*(cj13)*(x1081)*(x1088)))+(((x1082)*(x1094)))+(((cj11)*(sj10)))+(((x1082)*(x1095))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x1096)))+(((IkReal(-1.00000000000000))*(x1085)*(x1093)))+(((IkReal(-1.00000000000000))*(sj13)*(x1081)*(x1088)))+(((cj14)*(r00)*(x1086)))+(((IkReal(-1.00000000000000))*(r01)*(x1081)*(x1086)))+(((x1083)*(x1091))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1097=((npy)*(sj14));
IkReal x1098=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x1098)))+(((cj13)*(x1097))));
evalcond[4]=((IkReal(0.0200000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((sj13)*(x1097)))+(((IkReal(-1.00000000000000))*(sj13)*(x1098))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst32;
IkReal x1099=(sj14)*(sj14);
IkReal x1100=(cj14)*(cj14);
IkReal x1101=((IkReal(2.00000000000000))*(cj14)*(sj14));
gconst32=IKsign(((((x1100)*((r01)*(r01))))+(((r00)*(r01)*(x1101)))+(((r10)*(r11)*(x1101)))+(((x1099)*((r00)*(r00))))+(((x1099)*((r10)*(r10))))+(((x1100)*((r11)*(r11))))));
IkReal x1102=(sj14)*(sj14);
IkReal x1103=(cj14)*(cj14);
IkReal x1104=((IkReal(2.00000000000000))*(cj14)*(sj14));
dummyeval[0]=((((x1103)*((r11)*(r11))))+(((x1103)*((r01)*(r01))))+(((r10)*(r11)*(x1104)))+(((r00)*(r01)*(x1104)))+(((x1102)*((r10)*(r10))))+(((x1102)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst34;
gconst34=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst33;
IkReal x1105=(cj14)*(cj14);
IkReal x1106=(sj14)*(sj14);
IkReal x1107=((IkReal(1.00000000000000))*(r01));
IkReal x1108=((sj13)*(sj14));
IkReal x1109=((cj14)*(sj13));
IkReal x1110=((r00)*(r11));
IkReal x1111=((cj13)*(x1105));
IkReal x1112=((cj13)*(x1106));
gconst33=IKsign(((((x1110)*(x1111)))+(((x1110)*(x1112)))+(((IkReal(-1.00000000000000))*(r12)*(x1107)*(x1109)))+(((r02)*(r11)*(x1109)))+(((IkReal(-1.00000000000000))*(r10)*(x1107)*(x1111)))+(((IkReal(-1.00000000000000))*(r10)*(x1107)*(x1112)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1108)))+(((r02)*(r10)*(x1108)))));
IkReal x1113=(cj14)*(cj14);
IkReal x1114=(sj14)*(sj14);
IkReal x1115=((IkReal(1.00000000000000))*(r01));
IkReal x1116=((sj13)*(sj14));
IkReal x1117=((cj14)*(sj13));
IkReal x1118=((r00)*(r11));
IkReal x1119=((cj13)*(x1113));
IkReal x1120=((cj13)*(x1114));
dummyeval[0]=((((x1118)*(x1120)))+(((IkReal(-1.00000000000000))*(r12)*(x1115)*(x1117)))+(((r02)*(r10)*(x1116)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1116)))+(((x1118)*(x1119)))+(((IkReal(-1.00000000000000))*(r10)*(x1115)*(x1119)))+(((IkReal(-1.00000000000000))*(r10)*(x1115)*(x1120)))+(((r02)*(r11)*(x1117))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1121=((cj13)*(cj14));
IkReal x1122=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst33)*(((((r12)*(sj13)))+(((r10)*(x1121)))+(((IkReal(-1.00000000000000))*(r11)*(x1122))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst33)*(((((IkReal(-1.00000000000000))*(r01)*(x1122)))+(((r02)*(sj13)))+(((r00)*(x1121))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst33)*(((((r12)*(sj13)))+(((r10)*(x1121)))+(((IkReal(-1.00000000000000))*(r11)*(x1122)))))), ((gconst33)*(((((IkReal(-1.00000000000000))*(r01)*(x1122)))+(((r02)*(sj13)))+(((r00)*(x1121)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x1123=IKsin(j9);
IkReal x1124=IKcos(j9);
IkReal x1125=((r10)*(sj14));
IkReal x1126=((cj14)*(r11));
IkReal x1127=((cj14)*(r10));
IkReal x1128=((r11)*(sj14));
IkReal x1129=((cj14)*(r00));
IkReal x1130=((r00)*(sj14));
IkReal x1131=((IkReal(1.00000000000000))*(x1123));
IkReal x1132=((cj13)*(x1123));
IkReal x1133=((sj13)*(x1124));
IkReal x1134=((r01)*(x1123));
IkReal x1135=((IkReal(1.00000000000000))*(x1124));
evalcond[0]=((IkReal(1.00000000000000))+(((cj14)*(x1134)))+(((IkReal(-1.00000000000000))*(x1125)*(x1135)))+(((IkReal(-1.00000000000000))*(x1126)*(x1135)))+(((x1123)*(x1130))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1135)))+(((IkReal(-1.00000000000000))*(x1126)*(x1131)))+(((IkReal(-1.00000000000000))*(x1125)*(x1131)))+(((IkReal(-1.00000000000000))*(x1130)*(x1135))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x1128)*(x1135)))+(((cj13)*(x1124)*(x1127)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1131)))+(((IkReal(-1.00000000000000))*(cj13)*(x1129)*(x1131)))+(((r12)*(x1133)))+(((r01)*(sj14)*(x1132))));
evalcond[3]=((((r02)*(x1132)))+(((sj13)*(sj14)*(x1134)))+(((x1127)*(x1133)))+(((IkReal(-1.00000000000000))*(x1128)*(x1133)))+(((IkReal(-1.00000000000000))*(sj13)*(x1129)*(x1131)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1135))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst36;
gconst36=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1136=((cj13)*(sj14));
IkReal x1137=((IkReal(1.00000000000000))*(cj11));
IkReal x1138=((r11)*(sj9));
IkReal x1139=((IkReal(1.00000000000000))*(sj11));
IkReal x1140=((cj13)*(cj14));
IkReal x1141=((cj11)*(sj13));
IkReal x1142=((r12)*(sj9));
IkReal x1143=((cj9)*(r01));
IkReal x1144=((sj11)*(sj13));
IkReal x1145=((cj9)*(r02));
IkReal x1146=((r10)*(sj9));
IkReal x1147=((cj9)*(r00));
if( IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(r20)*(x1139)*(x1140)))+(((cj11)*(x1140)*(x1146)))+(((x1141)*(x1145)))+(((x1141)*(x1142)))+(((IkReal(-1.00000000000000))*(x1136)*(x1137)*(x1138)))+(((r21)*(sj11)*(x1136)))+(((cj11)*(x1140)*(x1147)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1139)))+(((IkReal(-1.00000000000000))*(x1136)*(x1137)*(x1143))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((x1144)*(x1145)))+(((IkReal(-1.00000000000000))*(x1136)*(x1138)*(x1139)))+(((cj11)*(r20)*(x1140)))+(((sj11)*(x1140)*(x1146)))+(((IkReal(-1.00000000000000))*(x1136)*(x1139)*(x1143)))+(((x1142)*(x1144)))+(((IkReal(-1.00000000000000))*(r21)*(x1136)*(x1137)))+(((r22)*(x1141)))+(((sj11)*(x1140)*(x1147))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst36)*(((((IkReal(-1.00000000000000))*(r20)*(x1139)*(x1140)))+(((cj11)*(x1140)*(x1146)))+(((x1141)*(x1145)))+(((x1141)*(x1142)))+(((IkReal(-1.00000000000000))*(x1136)*(x1137)*(x1138)))+(((r21)*(sj11)*(x1136)))+(((cj11)*(x1140)*(x1147)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1139)))+(((IkReal(-1.00000000000000))*(x1136)*(x1137)*(x1143)))))), ((gconst36)*(((((x1144)*(x1145)))+(((IkReal(-1.00000000000000))*(x1136)*(x1138)*(x1139)))+(((cj11)*(r20)*(x1140)))+(((sj11)*(x1140)*(x1146)))+(((IkReal(-1.00000000000000))*(x1136)*(x1139)*(x1143)))+(((x1142)*(x1144)))+(((IkReal(-1.00000000000000))*(r21)*(x1136)*(x1137)))+(((r22)*(x1141)))+(((sj11)*(x1140)*(x1147)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1148=IKsin(j10);
IkReal x1149=IKcos(j10);
IkReal x1150=((IkReal(1.00000000000000))*(sj13));
IkReal x1151=((r11)*(sj9));
IkReal x1152=((cj9)*(r01));
IkReal x1153=((r21)*(sj14));
IkReal x1154=((cj9)*(r02));
IkReal x1155=((sj13)*(sj9));
IkReal x1156=((cj14)*(r10));
IkReal x1157=((IkReal(1.00000000000000))*(cj13));
IkReal x1158=((cj14)*(r20));
IkReal x1159=((cj11)*(x1148));
IkReal x1160=((sj11)*(x1149));
IkReal x1161=((sj14)*(x1157));
IkReal x1162=((sj11)*(x1148));
IkReal x1163=((cj11)*(x1149));
IkReal x1164=((cj14)*(cj9)*(r00));
IkReal x1165=((x1160)+(x1159));
evalcond[0]=((((cj13)*(x1153)))+(x1162)+(((IkReal(-1.00000000000000))*(x1163)))+(((IkReal(-1.00000000000000))*(x1157)*(x1158)))+(((IkReal(-1.00000000000000))*(r22)*(x1150))));
evalcond[1]=((x1165)+(((sj13)*(x1153)))+(((IkReal(-1.00000000000000))*(x1150)*(x1158)))+(((cj13)*(r22))));
evalcond[2]=((x1165)+(((IkReal(-1.00000000000000))*(x1152)*(x1161)))+(((sj13)*(x1154)))+(((cj13)*(sj9)*(x1156)))+(((r12)*(x1155)))+(((IkReal(-1.00000000000000))*(x1151)*(x1161)))+(((cj13)*(x1164))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1157)))+(((IkReal(-1.00000000000000))*(x1162)))+(((IkReal(-1.00000000000000))*(sj14)*(x1150)*(x1152)))+(((x1155)*(x1156)))+(x1163)+(((IkReal(-1.00000000000000))*(sj14)*(x1150)*(x1151)))+(((sj13)*(x1164)))+(((IkReal(-1.00000000000000))*(x1154)*(x1157))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1166=((cj13)*(sj11));
IkReal x1167=((r21)*(sj14));
IkReal x1168=((cj11)*(cj13));
IkReal x1169=((cj11)*(sj13));
IkReal x1170=((sj11)*(sj13));
IkReal x1171=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(x1166)*(x1171)))+(((IkReal(-1.00000000000000))*(r22)*(x1170)))+(((x1166)*(x1167)))+(((x1167)*(x1169)))+(((IkReal(-1.00000000000000))*(x1169)*(x1171)))+(((r22)*(x1168))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((r22)*(x1166)))+(((IkReal(-1.00000000000000))*(x1167)*(x1168)))+(((IkReal(-1.00000000000000))*(x1170)*(x1171)))+(((r22)*(x1169)))+(((cj14)*(r20)*(x1168)))+(((x1167)*(x1170))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst35)*(((((IkReal(-1.00000000000000))*(x1166)*(x1171)))+(((IkReal(-1.00000000000000))*(r22)*(x1170)))+(((x1166)*(x1167)))+(((x1167)*(x1169)))+(((IkReal(-1.00000000000000))*(x1169)*(x1171)))+(((r22)*(x1168)))))), ((gconst35)*(((((r22)*(x1166)))+(((IkReal(-1.00000000000000))*(x1167)*(x1168)))+(((IkReal(-1.00000000000000))*(x1170)*(x1171)))+(((r22)*(x1169)))+(((cj14)*(r20)*(x1168)))+(((x1167)*(x1170)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1172=IKsin(j10);
IkReal x1173=IKcos(j10);
IkReal x1174=((IkReal(1.00000000000000))*(sj13));
IkReal x1175=((r11)*(sj9));
IkReal x1176=((cj9)*(r01));
IkReal x1177=((r21)*(sj14));
IkReal x1178=((cj9)*(r02));
IkReal x1179=((sj13)*(sj9));
IkReal x1180=((cj14)*(r10));
IkReal x1181=((IkReal(1.00000000000000))*(cj13));
IkReal x1182=((cj14)*(r20));
IkReal x1183=((cj11)*(x1172));
IkReal x1184=((sj11)*(x1173));
IkReal x1185=((sj14)*(x1181));
IkReal x1186=((sj11)*(x1172));
IkReal x1187=((cj11)*(x1173));
IkReal x1188=((cj14)*(cj9)*(r00));
IkReal x1189=((x1184)+(x1183));
evalcond[0]=((((cj13)*(x1177)))+(x1186)+(((IkReal(-1.00000000000000))*(x1187)))+(((IkReal(-1.00000000000000))*(x1181)*(x1182)))+(((IkReal(-1.00000000000000))*(r22)*(x1174))));
evalcond[1]=((((sj13)*(x1177)))+(x1189)+(((IkReal(-1.00000000000000))*(x1174)*(x1182)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x1180)))+(((cj13)*(x1188)))+(((sj13)*(x1178)))+(x1189)+(((IkReal(-1.00000000000000))*(x1175)*(x1185)))+(((IkReal(-1.00000000000000))*(x1176)*(x1185)))+(((r12)*(x1179))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x1174)*(x1175)))+(((sj13)*(x1188)))+(((x1179)*(x1180)))+(x1187)+(((IkReal(-1.00000000000000))*(x1178)*(x1181)))+(((IkReal(-1.00000000000000))*(sj14)*(x1174)*(x1176)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1181)))+(((IkReal(-1.00000000000000))*(x1186))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1190=((cj13)*(sj11));
IkReal x1191=((r21)*(sj14));
IkReal x1192=((cj14)*(r20));
IkReal x1193=((cj11)*(cj13));
IkReal x1194=((sj11)*(sj13));
IkReal x1195=((cj11)*(sj13));
if( IKabs(((gconst34)*(((((x1191)*(x1195)))+(((r22)*(x1193)))+(((IkReal(-1.00000000000000))*(x1192)*(x1195)))+(((x1190)*(x1191)))+(((IkReal(-1.00000000000000))*(x1190)*(x1192)))+(((IkReal(-1.00000000000000))*(r22)*(x1194))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*(((((IkReal(-1.00000000000000))*(x1192)*(x1194)))+(((r22)*(x1190)))+(((IkReal(-1.00000000000000))*(x1191)*(x1193)))+(((x1192)*(x1193)))+(((x1191)*(x1194)))+(((r22)*(x1195))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst34)*(((((x1191)*(x1195)))+(((r22)*(x1193)))+(((IkReal(-1.00000000000000))*(x1192)*(x1195)))+(((x1190)*(x1191)))+(((IkReal(-1.00000000000000))*(x1190)*(x1192)))+(((IkReal(-1.00000000000000))*(r22)*(x1194)))))), ((gconst34)*(((((IkReal(-1.00000000000000))*(x1192)*(x1194)))+(((r22)*(x1190)))+(((IkReal(-1.00000000000000))*(x1191)*(x1193)))+(((x1192)*(x1193)))+(((x1191)*(x1194)))+(((r22)*(x1195)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x1196=IKsin(j10);
IkReal x1197=IKcos(j10);
IkReal x1198=((IkReal(1.00000000000000))*(sj13));
IkReal x1199=((cj14)*(r20));
IkReal x1200=((r21)*(sj14));
evalcond[0]=((((sj11)*(x1196)))+(((IkReal(-1.00000000000000))*(cj11)*(x1197)))+(((IkReal(-1.00000000000000))*(r22)*(x1198)))+(((cj13)*(x1200)))+(((IkReal(-1.00000000000000))*(cj13)*(x1199))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1198)*(x1199)))+(((sj13)*(x1200)))+(((cj11)*(x1196)))+(((sj11)*(x1197)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst37;
IkReal x1201=(sj14)*(sj14);
IkReal x1202=(cj14)*(cj14);
IkReal x1203=((IkReal(2.00000000000000))*(cj14)*(sj14));
gconst37=IKsign(((((x1201)*((r10)*(r10))))+(((r10)*(r11)*(x1203)))+(((r00)*(r01)*(x1203)))+(((x1202)*((r01)*(r01))))+(((x1201)*((r00)*(r00))))+(((x1202)*((r11)*(r11))))));
IkReal x1204=(sj14)*(sj14);
IkReal x1205=(cj14)*(cj14);
IkReal x1206=((IkReal(2.00000000000000))*(cj14)*(sj14));
dummyeval[0]=((((x1204)*((r10)*(r10))))+(((x1204)*((r00)*(r00))))+(((x1205)*((r01)*(r01))))+(((x1205)*((r11)*(r11))))+(((r00)*(r01)*(x1206)))+(((r10)*(r11)*(x1206))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst38;
IkReal x1207=(cj14)*(cj14);
IkReal x1208=(sj14)*(sj14);
IkReal x1209=((IkReal(1.00000000000000))*(r01));
IkReal x1210=((sj13)*(sj14));
IkReal x1211=((cj14)*(sj13));
IkReal x1212=((r00)*(r11));
IkReal x1213=((cj13)*(x1207));
IkReal x1214=((cj13)*(x1208));
gconst38=IKsign(((((x1212)*(x1214)))+(((IkReal(-1.00000000000000))*(r10)*(x1209)*(x1213)))+(((r02)*(r10)*(x1210)))+(((IkReal(-1.00000000000000))*(r12)*(x1209)*(x1211)))+(((r02)*(r11)*(x1211)))+(((IkReal(-1.00000000000000))*(r10)*(x1209)*(x1214)))+(((x1212)*(x1213)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1210)))));
IkReal x1215=(cj14)*(cj14);
IkReal x1216=(sj14)*(sj14);
IkReal x1217=((IkReal(1.00000000000000))*(r01));
IkReal x1218=((sj13)*(sj14));
IkReal x1219=((cj14)*(sj13));
IkReal x1220=((r00)*(r11));
IkReal x1221=((cj13)*(x1215));
IkReal x1222=((cj13)*(x1216));
dummyeval[0]=((((x1220)*(x1222)))+(((IkReal(-1.00000000000000))*(r12)*(x1217)*(x1219)))+(((IkReal(-1.00000000000000))*(r10)*(x1217)*(x1221)))+(((r02)*(r11)*(x1219)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1218)))+(((IkReal(-1.00000000000000))*(r10)*(x1217)*(x1222)))+(((x1220)*(x1221)))+(((r02)*(r10)*(x1218))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1223=((cj13)*(cj14));
IkReal x1224=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst38)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x1224)))+(((r10)*(x1223))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1224)))+(((r00)*(x1223))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst38)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x1224)))+(((r10)*(x1223)))))), ((gconst38)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1224)))+(((r00)*(x1223)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1225=IKsin(j9);
IkReal x1226=IKcos(j9);
IkReal x1227=((IkReal(1.00000000000000))*(cj14));
IkReal x1228=((IkReal(1.00000000000000))*(sj14));
IkReal x1229=((cj13)*(cj14));
IkReal x1230=((cj14)*(r10));
IkReal x1231=((r01)*(sj14));
IkReal x1232=((IkReal(1.00000000000000))*(r12));
IkReal x1233=((sj13)*(x1226));
IkReal x1234=((r02)*(x1225));
IkReal x1235=((r11)*(x1225));
IkReal x1236=((r10)*(x1226));
IkReal x1237=((r01)*(x1226));
IkReal x1238=((sj13)*(x1225));
IkReal x1239=((r11)*(x1226));
IkReal x1240=((cj13)*(x1225));
IkReal x1241=((r10)*(x1225));
IkReal x1242=((r00)*(x1226));
IkReal x1243=((cj13)*(x1226));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1227)*(x1239)))+(((r00)*(sj14)*(x1225)))+(((cj14)*(r01)*(x1225)))+(((IkReal(-1.00000000000000))*(x1228)*(x1236))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1227)*(x1235)))+(((IkReal(-1.00000000000000))*(x1228)*(x1241)))+(((IkReal(-1.00000000000000))*(x1227)*(x1237)))+(((IkReal(-1.00000000000000))*(x1228)*(x1242))));
evalcond[2]=((((x1229)*(x1236)))+(((IkReal(-1.00000000000000))*(cj13)*(x1228)*(x1239)))+(((x1231)*(x1240)))+(((IkReal(-1.00000000000000))*(r00)*(x1227)*(x1240)))+(((IkReal(-1.00000000000000))*(sj13)*(x1234)))+(((r12)*(x1233))));
evalcond[3]=((((cj13)*(x1234)))+(((IkReal(-1.00000000000000))*(r00)*(x1227)*(x1238)))+(((IkReal(-1.00000000000000))*(r11)*(x1228)*(x1233)))+(((IkReal(-1.00000000000000))*(x1232)*(x1243)))+(((x1230)*(x1233)))+(((x1231)*(x1238))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj13)*(x1228)*(x1235)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x1228)*(x1237)))+(((r02)*(x1233)))+(((r12)*(x1238)))+(((x1229)*(x1242)))+(((cj11)*(sj10)))+(((x1229)*(x1241))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1232)*(x1240)))+(((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(r02)*(x1243)))+(((cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(sj13)*(x1228)*(x1235)))+(((IkReal(-1.00000000000000))*(r01)*(x1228)*(x1233)))+(((cj14)*(r00)*(x1233)))+(((x1230)*(x1238))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst37)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst37)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst37)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst37)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1244=IKsin(j9);
IkReal x1245=IKcos(j9);
IkReal x1246=((IkReal(1.00000000000000))*(cj14));
IkReal x1247=((IkReal(1.00000000000000))*(sj14));
IkReal x1248=((cj13)*(cj14));
IkReal x1249=((cj14)*(r10));
IkReal x1250=((r01)*(sj14));
IkReal x1251=((IkReal(1.00000000000000))*(r12));
IkReal x1252=((sj13)*(x1245));
IkReal x1253=((r02)*(x1244));
IkReal x1254=((r11)*(x1244));
IkReal x1255=((r10)*(x1245));
IkReal x1256=((r01)*(x1245));
IkReal x1257=((sj13)*(x1244));
IkReal x1258=((r11)*(x1245));
IkReal x1259=((cj13)*(x1244));
IkReal x1260=((r10)*(x1244));
IkReal x1261=((r00)*(x1245));
IkReal x1262=((cj13)*(x1245));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1246)*(x1258)))+(((cj14)*(r01)*(x1244)))+(((r00)*(sj14)*(x1244)))+(((IkReal(-1.00000000000000))*(x1247)*(x1255))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1247)*(x1261)))+(((IkReal(-1.00000000000000))*(x1247)*(x1260)))+(((IkReal(-1.00000000000000))*(x1246)*(x1254)))+(((IkReal(-1.00000000000000))*(x1246)*(x1256))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1246)*(x1259)))+(((IkReal(-1.00000000000000))*(cj13)*(x1247)*(x1258)))+(((r12)*(x1252)))+(((x1248)*(x1255)))+(((IkReal(-1.00000000000000))*(sj13)*(x1253)))+(((x1250)*(x1259))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1246)*(x1257)))+(((IkReal(-1.00000000000000))*(x1251)*(x1262)))+(((cj13)*(x1253)))+(((x1249)*(x1252)))+(((x1250)*(x1257)))+(((IkReal(-1.00000000000000))*(r11)*(x1247)*(x1252))));
evalcond[4]=((((r02)*(x1252)))+(((IkReal(-1.00000000000000))*(cj13)*(x1247)*(x1256)))+(((cj10)*(sj11)))+(((r12)*(x1257)))+(((IkReal(-1.00000000000000))*(cj13)*(x1247)*(x1254)))+(((x1248)*(x1261)))+(((x1248)*(x1260)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(r02)*(x1262)))+(((cj14)*(r00)*(x1252)))+(((IkReal(-1.00000000000000))*(r01)*(x1247)*(x1252)))+(((IkReal(-1.00000000000000))*(sj13)*(x1247)*(x1254)))+(((cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(x1251)*(x1259)))+(((x1249)*(x1257))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst32)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst32)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst32)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst32)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x1263=IKsin(j9);
IkReal x1264=IKcos(j9);
IkReal x1265=((r10)*(sj14));
IkReal x1266=((cj14)*(r11));
IkReal x1267=((cj14)*(r10));
IkReal x1268=((r11)*(sj14));
IkReal x1269=((cj14)*(r00));
IkReal x1270=((r00)*(sj14));
IkReal x1271=((IkReal(1.00000000000000))*(x1263));
IkReal x1272=((cj13)*(x1263));
IkReal x1273=((sj13)*(x1264));
IkReal x1274=((r01)*(x1263));
IkReal x1275=((IkReal(1.00000000000000))*(x1264));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1266)*(x1275)))+(((cj14)*(x1274)))+(((x1263)*(x1270)))+(((IkReal(-1.00000000000000))*(x1265)*(x1275))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1265)*(x1271)))+(((IkReal(-1.00000000000000))*(x1270)*(x1275)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1275)))+(((IkReal(-1.00000000000000))*(x1266)*(x1271))));
evalcond[2]=((((r12)*(x1273)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1271)))+(((IkReal(-1.00000000000000))*(cj13)*(x1268)*(x1275)))+(((cj13)*(x1264)*(x1267)))+(((r01)*(sj14)*(x1272)))+(((IkReal(-1.00000000000000))*(cj13)*(x1269)*(x1271))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj13)*(x1269)*(x1271)))+(((IkReal(-1.00000000000000))*(x1268)*(x1273)))+(((x1267)*(x1273)))+(((r02)*(x1272)))+(((sj13)*(sj14)*(x1274)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1275))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst36;
gconst36=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1276=((cj13)*(sj14));
IkReal x1277=((IkReal(1.00000000000000))*(cj11));
IkReal x1278=((r11)*(sj9));
IkReal x1279=((IkReal(1.00000000000000))*(sj11));
IkReal x1280=((cj13)*(cj14));
IkReal x1281=((cj11)*(sj13));
IkReal x1282=((r12)*(sj9));
IkReal x1283=((cj9)*(r01));
IkReal x1284=((sj11)*(sj13));
IkReal x1285=((cj9)*(r02));
IkReal x1286=((r10)*(sj9));
IkReal x1287=((cj9)*(r00));
if( IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(x1276)*(x1277)*(x1283)))+(((cj11)*(x1280)*(x1286)))+(((x1281)*(x1285)))+(((r21)*(sj11)*(x1276)))+(((cj11)*(x1280)*(x1287)))+(((x1281)*(x1282)))+(((IkReal(-1.00000000000000))*(r20)*(x1279)*(x1280)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1279)))+(((IkReal(-1.00000000000000))*(x1276)*(x1277)*(x1278))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((x1284)*(x1285)))+(((sj11)*(x1280)*(x1287)))+(((cj11)*(r20)*(x1280)))+(((IkReal(-1.00000000000000))*(x1276)*(x1279)*(x1283)))+(((r22)*(x1281)))+(((IkReal(-1.00000000000000))*(r21)*(x1276)*(x1277)))+(((x1282)*(x1284)))+(((IkReal(-1.00000000000000))*(x1276)*(x1278)*(x1279)))+(((sj11)*(x1280)*(x1286))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst36)*(((((IkReal(-1.00000000000000))*(x1276)*(x1277)*(x1283)))+(((cj11)*(x1280)*(x1286)))+(((x1281)*(x1285)))+(((r21)*(sj11)*(x1276)))+(((cj11)*(x1280)*(x1287)))+(((x1281)*(x1282)))+(((IkReal(-1.00000000000000))*(r20)*(x1279)*(x1280)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1279)))+(((IkReal(-1.00000000000000))*(x1276)*(x1277)*(x1278)))))), ((gconst36)*(((((x1284)*(x1285)))+(((sj11)*(x1280)*(x1287)))+(((cj11)*(r20)*(x1280)))+(((IkReal(-1.00000000000000))*(x1276)*(x1279)*(x1283)))+(((r22)*(x1281)))+(((IkReal(-1.00000000000000))*(r21)*(x1276)*(x1277)))+(((x1282)*(x1284)))+(((IkReal(-1.00000000000000))*(x1276)*(x1278)*(x1279)))+(((sj11)*(x1280)*(x1286)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1288=IKsin(j10);
IkReal x1289=IKcos(j10);
IkReal x1290=((IkReal(1.00000000000000))*(sj13));
IkReal x1291=((r11)*(sj9));
IkReal x1292=((cj9)*(r01));
IkReal x1293=((r21)*(sj14));
IkReal x1294=((cj9)*(r02));
IkReal x1295=((sj13)*(sj9));
IkReal x1296=((cj14)*(r10));
IkReal x1297=((IkReal(1.00000000000000))*(cj13));
IkReal x1298=((cj14)*(r20));
IkReal x1299=((cj11)*(x1288));
IkReal x1300=((sj11)*(x1289));
IkReal x1301=((sj14)*(x1297));
IkReal x1302=((sj11)*(x1288));
IkReal x1303=((cj11)*(x1289));
IkReal x1304=((cj14)*(cj9)*(r00));
IkReal x1305=((x1299)+(x1300));
evalcond[0]=((((cj13)*(x1293)))+(((IkReal(-1.00000000000000))*(r22)*(x1290)))+(((IkReal(-1.00000000000000))*(x1303)))+(((IkReal(-1.00000000000000))*(x1297)*(x1298)))+(x1302));
evalcond[1]=((((sj13)*(x1293)))+(((IkReal(-1.00000000000000))*(x1290)*(x1298)))+(x1305)+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x1294)))+(((cj13)*(sj9)*(x1296)))+(((r12)*(x1295)))+(((IkReal(-1.00000000000000))*(x1291)*(x1301)))+(((cj13)*(x1304)))+(((IkReal(-1.00000000000000))*(x1292)*(x1301)))+(x1305));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x1290)*(x1292)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1297)))+(((IkReal(-1.00000000000000))*(sj14)*(x1290)*(x1291)))+(((x1295)*(x1296)))+(((sj13)*(x1304)))+(((IkReal(-1.00000000000000))*(x1302)))+(((IkReal(-1.00000000000000))*(x1294)*(x1297)))+(x1303));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1306=((cj13)*(sj11));
IkReal x1307=((r21)*(sj14));
IkReal x1308=((cj11)*(cj13));
IkReal x1309=((cj11)*(sj13));
IkReal x1310=((sj11)*(sj13));
IkReal x1311=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(r22)*(x1310)))+(((r22)*(x1308)))+(((x1306)*(x1307)))+(((IkReal(-1.00000000000000))*(x1309)*(x1311)))+(((IkReal(-1.00000000000000))*(x1306)*(x1311)))+(((x1307)*(x1309))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((r22)*(x1306)))+(((cj14)*(r20)*(x1308)))+(((IkReal(-1.00000000000000))*(x1310)*(x1311)))+(((IkReal(-1.00000000000000))*(x1307)*(x1308)))+(((x1307)*(x1310)))+(((r22)*(x1309))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst35)*(((((IkReal(-1.00000000000000))*(r22)*(x1310)))+(((r22)*(x1308)))+(((x1306)*(x1307)))+(((IkReal(-1.00000000000000))*(x1309)*(x1311)))+(((IkReal(-1.00000000000000))*(x1306)*(x1311)))+(((x1307)*(x1309)))))), ((gconst35)*(((((r22)*(x1306)))+(((cj14)*(r20)*(x1308)))+(((IkReal(-1.00000000000000))*(x1310)*(x1311)))+(((IkReal(-1.00000000000000))*(x1307)*(x1308)))+(((x1307)*(x1310)))+(((r22)*(x1309)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1312=IKsin(j10);
IkReal x1313=IKcos(j10);
IkReal x1314=((IkReal(1.00000000000000))*(sj13));
IkReal x1315=((r11)*(sj9));
IkReal x1316=((cj9)*(r01));
IkReal x1317=((r21)*(sj14));
IkReal x1318=((cj9)*(r02));
IkReal x1319=((sj13)*(sj9));
IkReal x1320=((cj14)*(r10));
IkReal x1321=((IkReal(1.00000000000000))*(cj13));
IkReal x1322=((cj14)*(r20));
IkReal x1323=((cj11)*(x1312));
IkReal x1324=((sj11)*(x1313));
IkReal x1325=((sj14)*(x1321));
IkReal x1326=((sj11)*(x1312));
IkReal x1327=((cj11)*(x1313));
IkReal x1328=((cj14)*(cj9)*(r00));
IkReal x1329=((x1323)+(x1324));
evalcond[0]=((((cj13)*(x1317)))+(((IkReal(-1.00000000000000))*(x1327)))+(((IkReal(-1.00000000000000))*(r22)*(x1314)))+(((IkReal(-1.00000000000000))*(x1321)*(x1322)))+(x1326));
evalcond[1]=((((sj13)*(x1317)))+(((IkReal(-1.00000000000000))*(x1314)*(x1322)))+(x1329)+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x1319)))+(((cj13)*(sj9)*(x1320)))+(((IkReal(-1.00000000000000))*(x1316)*(x1325)))+(((cj13)*(x1328)))+(((sj13)*(x1318)))+(((IkReal(-1.00000000000000))*(x1315)*(x1325)))+(x1329));
evalcond[3]=((((sj13)*(x1328)))+(((IkReal(-1.00000000000000))*(sj14)*(x1314)*(x1315)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1321)))+(((IkReal(-1.00000000000000))*(sj14)*(x1314)*(x1316)))+(((x1319)*(x1320)))+(((IkReal(-1.00000000000000))*(x1318)*(x1321)))+(x1327)+(((IkReal(-1.00000000000000))*(x1326))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1330=((npy)*(sj14));
IkReal x1331=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x1331)))+(((cj13)*(x1330))));
evalcond[4]=((IkReal(-0.0200000000000000))+(((sj13)*(x1330)))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(sj13)*(x1331)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
IkReal x1332=(sj14)*(sj14);
IkReal x1333=(cj14)*(cj14);
IkReal x1334=((IkReal(1.00000000000000))*(x1332));
IkReal x1335=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1336=((IkReal(1.00000000000000))*(x1333));
gconst39=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x1335)))+(((IkReal(-1.00000000000000))*(x1336)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1334)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1334)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1335)))+(((IkReal(-1.00000000000000))*(x1336)*((r01)*(r01))))));
IkReal x1337=(sj14)*(sj14);
IkReal x1338=(cj14)*(cj14);
IkReal x1339=((IkReal(1.00000000000000))*(x1337));
IkReal x1340=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1341=((IkReal(1.00000000000000))*(x1338));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1341)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1339)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1339)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1341)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1340)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1340))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst41;
gconst41=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst40;
IkReal x1342=(sj14)*(sj14);
IkReal x1343=(cj14)*(cj14);
IkReal x1344=((cj14)*(sj13));
IkReal x1345=((IkReal(1.00000000000000))*(r11));
IkReal x1346=((cj13)*(r00));
IkReal x1347=((sj13)*(sj14));
IkReal x1348=((cj13)*(r01)*(r10));
gconst40=IKsign(((((r01)*(r12)*(x1344)))+(((IkReal(-1.00000000000000))*(r02)*(x1344)*(x1345)))+(((IkReal(-1.00000000000000))*(x1343)*(x1345)*(x1346)))+(((x1342)*(x1348)))+(((x1343)*(x1348)))+(((IkReal(-1.00000000000000))*(x1342)*(x1345)*(x1346)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x1347)))+(((r00)*(r12)*(x1347)))));
IkReal x1349=(sj14)*(sj14);
IkReal x1350=(cj14)*(cj14);
IkReal x1351=((cj14)*(sj13));
IkReal x1352=((IkReal(1.00000000000000))*(r11));
IkReal x1353=((cj13)*(r00));
IkReal x1354=((sj13)*(sj14));
IkReal x1355=((cj13)*(r01)*(r10));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(r10)*(x1354)))+(((x1350)*(x1355)))+(((r01)*(r12)*(x1351)))+(((IkReal(-1.00000000000000))*(r02)*(x1351)*(x1352)))+(((x1349)*(x1355)))+(((IkReal(-1.00000000000000))*(x1350)*(x1352)*(x1353)))+(((r00)*(r12)*(x1354)))+(((IkReal(-1.00000000000000))*(x1349)*(x1352)*(x1353))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1356=((cj13)*(cj14));
IkReal x1357=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst40)*(((((r10)*(x1356)))+(((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x1357))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1357)))+(((r00)*(x1356))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst40)*(((((r10)*(x1356)))+(((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x1357)))))), ((gconst40)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1357)))+(((r00)*(x1356)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x1358=IKsin(j9);
IkReal x1359=IKcos(j9);
IkReal x1360=((r10)*(sj14));
IkReal x1361=((cj14)*(r11));
IkReal x1362=((cj14)*(r10));
IkReal x1363=((r11)*(sj14));
IkReal x1364=((cj14)*(r00));
IkReal x1365=((r00)*(sj14));
IkReal x1366=((IkReal(1.00000000000000))*(x1358));
IkReal x1367=((cj13)*(x1358));
IkReal x1368=((sj13)*(x1359));
IkReal x1369=((r01)*(x1358));
IkReal x1370=((IkReal(1.00000000000000))*(x1359));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1360)*(x1370)))+(((IkReal(-1.00000000000000))*(x1361)*(x1370)))+(((x1358)*(x1365)))+(((cj14)*(x1369))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1365)*(x1370)))+(((IkReal(-1.00000000000000))*(x1361)*(x1366)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1370)))+(((IkReal(-1.00000000000000))*(x1360)*(x1366))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x1363)*(x1370)))+(((r01)*(sj14)*(x1367)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1366)))+(((IkReal(-1.00000000000000))*(cj13)*(x1364)*(x1366)))+(((r12)*(x1368)))+(((cj13)*(x1359)*(x1362))));
evalcond[3]=((((r02)*(x1367)))+(((IkReal(-1.00000000000000))*(x1363)*(x1368)))+(((IkReal(-1.00000000000000))*(sj13)*(x1364)*(x1366)))+(((sj13)*(sj14)*(x1369)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1370)))+(((x1362)*(x1368))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1371=((cj13)*(sj14));
IkReal x1372=((cj11)*(sj9));
IkReal x1373=((IkReal(1.00000000000000))*(r11));
IkReal x1374=((IkReal(1.00000000000000))*(sj11));
IkReal x1375=((cj13)*(cj14));
IkReal x1376=((r22)*(sj13));
IkReal x1377=((r12)*(sj13));
IkReal x1378=((cj9)*(r01));
IkReal x1379=((cj9)*(sj11));
IkReal x1380=((r02)*(sj13));
IkReal x1381=((IkReal(1.00000000000000))*(cj11));
IkReal x1382=((sj11)*(sj9));
IkReal x1383=((cj11)*(cj9));
if( IKabs(((gconst43)*(((((IkReal(-1.00000000000000))*(x1374)*(x1376)))+(((IkReal(-1.00000000000000))*(r20)*(x1374)*(x1375)))+(((IkReal(-1.00000000000000))*(x1371)*(x1378)*(x1381)))+(((r21)*(sj11)*(x1371)))+(((IkReal(-1.00000000000000))*(x1371)*(x1372)*(x1373)))+(((r10)*(x1372)*(x1375)))+(((x1380)*(x1383)))+(((x1372)*(x1377)))+(((r00)*(x1375)*(x1383))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((r10)*(x1375)*(x1382)))+(((IkReal(-1.00000000000000))*(x1371)*(x1374)*(x1378)))+(((x1379)*(x1380)))+(((IkReal(-1.00000000000000))*(x1371)*(x1373)*(x1382)))+(((x1377)*(x1382)))+(((cj11)*(x1376)))+(((r00)*(x1375)*(x1379)))+(((IkReal(-1.00000000000000))*(r21)*(x1371)*(x1381)))+(((cj11)*(r20)*(x1375))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst43)*(((((IkReal(-1.00000000000000))*(x1374)*(x1376)))+(((IkReal(-1.00000000000000))*(r20)*(x1374)*(x1375)))+(((IkReal(-1.00000000000000))*(x1371)*(x1378)*(x1381)))+(((r21)*(sj11)*(x1371)))+(((IkReal(-1.00000000000000))*(x1371)*(x1372)*(x1373)))+(((r10)*(x1372)*(x1375)))+(((x1380)*(x1383)))+(((x1372)*(x1377)))+(((r00)*(x1375)*(x1383)))))), ((gconst43)*(((((r10)*(x1375)*(x1382)))+(((IkReal(-1.00000000000000))*(x1371)*(x1374)*(x1378)))+(((x1379)*(x1380)))+(((IkReal(-1.00000000000000))*(x1371)*(x1373)*(x1382)))+(((x1377)*(x1382)))+(((cj11)*(x1376)))+(((r00)*(x1375)*(x1379)))+(((IkReal(-1.00000000000000))*(r21)*(x1371)*(x1381)))+(((cj11)*(r20)*(x1375)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1384=IKsin(j10);
IkReal x1385=IKcos(j10);
IkReal x1386=((IkReal(1.00000000000000))*(sj13));
IkReal x1387=((r11)*(sj9));
IkReal x1388=((cj9)*(r01));
IkReal x1389=((IkReal(1.00000000000000))*(cj11));
IkReal x1390=((r21)*(sj14));
IkReal x1391=((cj9)*(r02));
IkReal x1392=((sj13)*(sj9));
IkReal x1393=((cj14)*(r10));
IkReal x1394=((IkReal(1.00000000000000))*(cj13));
IkReal x1395=((cj14)*(r20));
IkReal x1396=((sj11)*(x1384));
IkReal x1397=((sj14)*(x1394));
IkReal x1398=((sj11)*(x1385));
IkReal x1399=((cj14)*(cj9)*(r00));
IkReal x1400=((x1385)*(x1389));
evalcond[0]=((((cj13)*(x1390)))+(((IkReal(-1.00000000000000))*(x1394)*(x1395)))+(((IkReal(-1.00000000000000))*(x1400)))+(x1396)+(((IkReal(-1.00000000000000))*(r22)*(x1386))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1384)*(x1389)))+(((IkReal(-1.00000000000000))*(x1398)))+(((IkReal(-1.00000000000000))*(x1386)*(x1395)))+(((sj13)*(x1390)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1388)*(x1397)))+(((IkReal(-1.00000000000000))*(x1387)*(x1397)))+(((sj13)*(x1391)))+(((cj13)*(x1399)))+(((cj11)*(x1384)))+(((r12)*(x1392)))+(x1398)+(((cj13)*(sj9)*(x1393))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1391)*(x1394)))+(((IkReal(-1.00000000000000))*(sj14)*(x1386)*(x1387)))+(((IkReal(-1.00000000000000))*(x1400)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1394)))+(x1396)+(((IkReal(-1.00000000000000))*(sj14)*(x1386)*(x1388)))+(((x1392)*(x1393)))+(((sj13)*(x1399))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1401=((IkReal(1.00000000000000))*(cj11));
IkReal x1402=((r22)*(sj13));
IkReal x1403=((cj13)*(sj11));
IkReal x1404=((cj14)*(r20));
IkReal x1405=((r21)*(sj14));
IkReal x1406=((cj11)*(cj13));
IkReal x1407=((sj11)*(sj13));
if( IKabs(((gconst42)*(((((r22)*(x1406)))+(((cj11)*(sj13)*(x1405)))+(((sj11)*(x1402)))+(((IkReal(-1.00000000000000))*(x1403)*(x1405)))+(((x1403)*(x1404)))+(((IkReal(-1.00000000000000))*(sj13)*(x1401)*(x1404))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((x1405)*(x1406)))+(((IkReal(-1.00000000000000))*(x1401)*(x1402)))+(((IkReal(-1.00000000000000))*(cj13)*(x1401)*(x1404)))+(((r22)*(x1403)))+(((IkReal(-1.00000000000000))*(x1404)*(x1407)))+(((x1405)*(x1407))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst42)*(((((r22)*(x1406)))+(((cj11)*(sj13)*(x1405)))+(((sj11)*(x1402)))+(((IkReal(-1.00000000000000))*(x1403)*(x1405)))+(((x1403)*(x1404)))+(((IkReal(-1.00000000000000))*(sj13)*(x1401)*(x1404)))))), ((gconst42)*(((((x1405)*(x1406)))+(((IkReal(-1.00000000000000))*(x1401)*(x1402)))+(((IkReal(-1.00000000000000))*(cj13)*(x1401)*(x1404)))+(((r22)*(x1403)))+(((IkReal(-1.00000000000000))*(x1404)*(x1407)))+(((x1405)*(x1407)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1408=IKsin(j10);
IkReal x1409=IKcos(j10);
IkReal x1410=((IkReal(1.00000000000000))*(sj13));
IkReal x1411=((r11)*(sj9));
IkReal x1412=((cj9)*(r01));
IkReal x1413=((IkReal(1.00000000000000))*(cj11));
IkReal x1414=((r21)*(sj14));
IkReal x1415=((cj9)*(r02));
IkReal x1416=((sj13)*(sj9));
IkReal x1417=((cj14)*(r10));
IkReal x1418=((IkReal(1.00000000000000))*(cj13));
IkReal x1419=((cj14)*(r20));
IkReal x1420=((sj11)*(x1408));
IkReal x1421=((sj14)*(x1418));
IkReal x1422=((sj11)*(x1409));
IkReal x1423=((cj14)*(cj9)*(r00));
IkReal x1424=((x1409)*(x1413));
evalcond[0]=((x1420)+(((IkReal(-1.00000000000000))*(r22)*(x1410)))+(((IkReal(-1.00000000000000))*(x1418)*(x1419)))+(((IkReal(-1.00000000000000))*(x1424)))+(((cj13)*(x1414))));
evalcond[1]=((((sj13)*(x1414)))+(((IkReal(-1.00000000000000))*(x1422)))+(((IkReal(-1.00000000000000))*(x1410)*(x1419)))+(((IkReal(-1.00000000000000))*(x1408)*(x1413)))+(((cj13)*(r22))));
evalcond[2]=((x1422)+(((cj13)*(x1423)))+(((IkReal(-1.00000000000000))*(x1411)*(x1421)))+(((r12)*(x1416)))+(((cj13)*(sj9)*(x1417)))+(((cj11)*(x1408)))+(((sj13)*(x1415)))+(((IkReal(-1.00000000000000))*(x1412)*(x1421))));
evalcond[3]=((x1420)+(((IkReal(-1.00000000000000))*(sj14)*(x1410)*(x1411)))+(((x1416)*(x1417)))+(((IkReal(-1.00000000000000))*(x1415)*(x1418)))+(((IkReal(-1.00000000000000))*(x1424)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1418)))+(((sj13)*(x1423)))+(((IkReal(-1.00000000000000))*(sj14)*(x1410)*(x1412))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1425=((cj13)*(sj11));
IkReal x1426=((r21)*(sj14));
IkReal x1427=((cj11)*(cj13));
IkReal x1428=((IkReal(1.00000000000000))*(sj13));
IkReal x1429=((sj11)*(sj13));
IkReal x1430=((cj14)*(r20));
if( IKabs(((gconst41)*(((((r22)*(x1429)))+(((cj11)*(sj13)*(x1426)))+(((IkReal(-1.00000000000000))*(cj11)*(x1428)*(x1430)))+(((IkReal(-1.00000000000000))*(x1425)*(x1426)))+(((r22)*(x1427)))+(((x1425)*(x1430))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*(((((IkReal(-1.00000000000000))*(sj11)*(x1428)*(x1430)))+(((x1426)*(x1427)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x1428)))+(((r22)*(x1425)))+(((IkReal(-1.00000000000000))*(x1427)*(x1430)))+(((x1426)*(x1429))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst41)*(((((r22)*(x1429)))+(((cj11)*(sj13)*(x1426)))+(((IkReal(-1.00000000000000))*(cj11)*(x1428)*(x1430)))+(((IkReal(-1.00000000000000))*(x1425)*(x1426)))+(((r22)*(x1427)))+(((x1425)*(x1430)))))), ((gconst41)*(((((IkReal(-1.00000000000000))*(sj11)*(x1428)*(x1430)))+(((x1426)*(x1427)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x1428)))+(((r22)*(x1425)))+(((IkReal(-1.00000000000000))*(x1427)*(x1430)))+(((x1426)*(x1429)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x1431=IKsin(j10);
IkReal x1432=IKcos(j10);
IkReal x1433=((IkReal(1.00000000000000))*(sj13));
IkReal x1434=((cj14)*(r20));
IkReal x1435=((r21)*(sj14));
IkReal x1436=((IkReal(1.00000000000000))*(x1432));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj11)*(x1436)))+(((cj13)*(x1435)))+(((IkReal(-1.00000000000000))*(r22)*(x1433)))+(((IkReal(-1.00000000000000))*(cj13)*(x1434)))+(((sj11)*(x1431))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj11)*(x1436)))+(((IkReal(-1.00000000000000))*(cj11)*(x1431)))+(((IkReal(-1.00000000000000))*(x1433)*(x1434)))+(((sj13)*(x1435)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst44;
IkReal x1437=(sj14)*(sj14);
IkReal x1438=(cj14)*(cj14);
IkReal x1439=((IkReal(1.00000000000000))*(x1437));
IkReal x1440=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1441=((IkReal(1.00000000000000))*(x1438));
gconst44=IKsign(((((IkReal(-1.00000000000000))*(x1441)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1441)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1439)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1439)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1440)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1440)))));
IkReal x1442=(sj14)*(sj14);
IkReal x1443=(cj14)*(cj14);
IkReal x1444=((IkReal(1.00000000000000))*(x1442));
IkReal x1445=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1446=((IkReal(1.00000000000000))*(x1443));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1446)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1445)))+(((IkReal(-1.00000000000000))*(x1444)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1445)))+(((IkReal(-1.00000000000000))*(x1444)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1446)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst45;
IkReal x1447=(sj14)*(sj14);
IkReal x1448=(cj14)*(cj14);
IkReal x1449=((cj14)*(sj13));
IkReal x1450=((IkReal(1.00000000000000))*(r11));
IkReal x1451=((cj13)*(r00));
IkReal x1452=((sj13)*(sj14));
IkReal x1453=((cj13)*(r01)*(r10));
gconst45=IKsign(((((IkReal(-1.00000000000000))*(x1447)*(x1450)*(x1451)))+(((IkReal(-1.00000000000000))*(x1448)*(x1450)*(x1451)))+(((r01)*(r12)*(x1449)))+(((IkReal(-1.00000000000000))*(r02)*(x1449)*(x1450)))+(((x1448)*(x1453)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x1452)))+(((r00)*(r12)*(x1452)))+(((x1447)*(x1453)))));
IkReal x1454=(sj14)*(sj14);
IkReal x1455=(cj14)*(cj14);
IkReal x1456=((cj14)*(sj13));
IkReal x1457=((IkReal(1.00000000000000))*(r11));
IkReal x1458=((cj13)*(r00));
IkReal x1459=((sj13)*(sj14));
IkReal x1460=((cj13)*(r01)*(r10));
dummyeval[0]=((((x1454)*(x1460)))+(((r01)*(r12)*(x1456)))+(((IkReal(-1.00000000000000))*(r02)*(x1456)*(x1457)))+(((r00)*(r12)*(x1459)))+(((IkReal(-1.00000000000000))*(x1454)*(x1457)*(x1458)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x1459)))+(((x1455)*(x1460)))+(((IkReal(-1.00000000000000))*(x1455)*(x1457)*(x1458))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1461=((cj13)*(cj14));
IkReal x1462=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst45)*(((((r12)*(sj13)))+(((r10)*(x1461)))+(((IkReal(-1.00000000000000))*(r11)*(x1462))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst45)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1462)))+(((r00)*(x1461))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst45)*(((((r12)*(sj13)))+(((r10)*(x1461)))+(((IkReal(-1.00000000000000))*(r11)*(x1462)))))), ((gconst45)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1462)))+(((r00)*(x1461)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1463=IKsin(j9);
IkReal x1464=IKcos(j9);
IkReal x1465=((IkReal(1.00000000000000))*(cj14));
IkReal x1466=((IkReal(1.00000000000000))*(sj14));
IkReal x1467=((cj13)*(cj14));
IkReal x1468=((cj14)*(r10));
IkReal x1469=((r01)*(sj14));
IkReal x1470=((IkReal(1.00000000000000))*(r12));
IkReal x1471=((sj13)*(x1464));
IkReal x1472=((r02)*(x1463));
IkReal x1473=((r11)*(x1463));
IkReal x1474=((r10)*(x1464));
IkReal x1475=((r01)*(x1464));
IkReal x1476=((sj13)*(x1463));
IkReal x1477=((r11)*(x1464));
IkReal x1478=((cj13)*(x1463));
IkReal x1479=((r10)*(x1463));
IkReal x1480=((r00)*(x1464));
IkReal x1481=((cj13)*(x1464));
evalcond[0]=((IkReal(-1.00000000000000))+(((r00)*(sj14)*(x1463)))+(((cj14)*(r01)*(x1463)))+(((IkReal(-1.00000000000000))*(x1466)*(x1474)))+(((IkReal(-1.00000000000000))*(x1465)*(x1477))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1465)*(x1473)))+(((IkReal(-1.00000000000000))*(x1465)*(x1475)))+(((IkReal(-1.00000000000000))*(x1466)*(x1480)))+(((IkReal(-1.00000000000000))*(x1466)*(x1479))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x1466)*(x1477)))+(((r12)*(x1471)))+(((x1469)*(x1478)))+(((IkReal(-1.00000000000000))*(sj13)*(x1472)))+(((x1467)*(x1474)))+(((IkReal(-1.00000000000000))*(r00)*(x1465)*(x1478))));
evalcond[3]=((((x1468)*(x1471)))+(((IkReal(-1.00000000000000))*(r00)*(x1465)*(x1476)))+(((IkReal(-1.00000000000000))*(r11)*(x1466)*(x1471)))+(((IkReal(-1.00000000000000))*(x1470)*(x1481)))+(((cj13)*(x1472)))+(((x1469)*(x1476))));
evalcond[4]=((((r02)*(x1471)))+(((x1467)*(x1480)))+(((r12)*(x1476)))+(((cj10)*(sj11)))+(((x1467)*(x1479)))+(((IkReal(-1.00000000000000))*(cj13)*(x1466)*(x1475)))+(((IkReal(-1.00000000000000))*(cj13)*(x1466)*(x1473)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x1481)))+(((sj10)*(sj11)))+(((x1468)*(x1476)))+(((IkReal(-1.00000000000000))*(x1470)*(x1478)))+(((IkReal(-1.00000000000000))*(r01)*(x1466)*(x1471)))+(((cj14)*(r00)*(x1471)))+(((IkReal(-1.00000000000000))*(sj13)*(x1466)*(x1473)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst44)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst44)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst44)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst44)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1482=IKsin(j9);
IkReal x1483=IKcos(j9);
IkReal x1484=((IkReal(1.00000000000000))*(cj14));
IkReal x1485=((IkReal(1.00000000000000))*(sj14));
IkReal x1486=((cj13)*(cj14));
IkReal x1487=((cj14)*(r10));
IkReal x1488=((r01)*(sj14));
IkReal x1489=((IkReal(1.00000000000000))*(r12));
IkReal x1490=((sj13)*(x1483));
IkReal x1491=((r02)*(x1482));
IkReal x1492=((r11)*(x1482));
IkReal x1493=((r10)*(x1483));
IkReal x1494=((r01)*(x1483));
IkReal x1495=((sj13)*(x1482));
IkReal x1496=((r11)*(x1483));
IkReal x1497=((cj13)*(x1482));
IkReal x1498=((r10)*(x1482));
IkReal x1499=((r00)*(x1483));
IkReal x1500=((cj13)*(x1483));
evalcond[0]=((IkReal(-1.00000000000000))+(((cj14)*(r01)*(x1482)))+(((IkReal(-1.00000000000000))*(x1485)*(x1493)))+(((IkReal(-1.00000000000000))*(x1484)*(x1496)))+(((r00)*(sj14)*(x1482))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1484)*(x1492)))+(((IkReal(-1.00000000000000))*(x1485)*(x1499)))+(((IkReal(-1.00000000000000))*(x1485)*(x1498)))+(((IkReal(-1.00000000000000))*(x1484)*(x1494))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x1485)*(x1496)))+(((x1488)*(x1497)))+(((x1486)*(x1493)))+(((r12)*(x1490)))+(((IkReal(-1.00000000000000))*(sj13)*(x1491)))+(((IkReal(-1.00000000000000))*(r00)*(x1484)*(x1497))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x1485)*(x1490)))+(((IkReal(-1.00000000000000))*(r00)*(x1484)*(x1495)))+(((cj13)*(x1491)))+(((x1488)*(x1495)))+(((x1487)*(x1490)))+(((IkReal(-1.00000000000000))*(x1489)*(x1500))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj13)*(x1485)*(x1494)))+(((x1486)*(x1499)))+(((r12)*(x1495)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x1485)*(x1492)))+(((r02)*(x1490)))+(((cj11)*(sj10)))+(((x1486)*(x1498))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1489)*(x1497)))+(((IkReal(-1.00000000000000))*(r02)*(x1500)))+(((x1487)*(x1495)))+(((IkReal(-1.00000000000000))*(r01)*(x1485)*(x1490)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(sj13)*(x1485)*(x1492)))+(((cj14)*(r00)*(x1490)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst39)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst39)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x1501=IKsin(j9);
IkReal x1502=IKcos(j9);
IkReal x1503=((r10)*(sj14));
IkReal x1504=((cj14)*(r11));
IkReal x1505=((cj14)*(r10));
IkReal x1506=((r11)*(sj14));
IkReal x1507=((cj14)*(r00));
IkReal x1508=((r00)*(sj14));
IkReal x1509=((IkReal(1.00000000000000))*(x1501));
IkReal x1510=((cj13)*(x1501));
IkReal x1511=((sj13)*(x1502));
IkReal x1512=((r01)*(x1501));
IkReal x1513=((IkReal(1.00000000000000))*(x1502));
evalcond[0]=((IkReal(-1.00000000000000))+(((cj14)*(x1512)))+(((x1501)*(x1508)))+(((IkReal(-1.00000000000000))*(x1503)*(x1513)))+(((IkReal(-1.00000000000000))*(x1504)*(x1513))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1504)*(x1509)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1513)))+(((IkReal(-1.00000000000000))*(x1503)*(x1509)))+(((IkReal(-1.00000000000000))*(x1508)*(x1513))));
evalcond[2]=((((r12)*(x1511)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1509)))+(((IkReal(-1.00000000000000))*(cj13)*(x1507)*(x1509)))+(((cj13)*(x1502)*(x1505)))+(((IkReal(-1.00000000000000))*(cj13)*(x1506)*(x1513)))+(((r01)*(sj14)*(x1510))));
evalcond[3]=((((x1505)*(x1511)))+(((IkReal(-1.00000000000000))*(x1506)*(x1511)))+(((IkReal(-1.00000000000000))*(sj13)*(x1507)*(x1509)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1513)))+(((sj13)*(sj14)*(x1512)))+(((r02)*(x1510))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1514=((cj13)*(sj14));
IkReal x1515=((cj11)*(sj9));
IkReal x1516=((IkReal(1.00000000000000))*(r11));
IkReal x1517=((IkReal(1.00000000000000))*(sj11));
IkReal x1518=((cj13)*(cj14));
IkReal x1519=((r22)*(sj13));
IkReal x1520=((r12)*(sj13));
IkReal x1521=((cj9)*(r01));
IkReal x1522=((cj9)*(sj11));
IkReal x1523=((r02)*(sj13));
IkReal x1524=((IkReal(1.00000000000000))*(cj11));
IkReal x1525=((sj11)*(sj9));
IkReal x1526=((cj11)*(cj9));
if( IKabs(((gconst43)*(((((IkReal(-1.00000000000000))*(r20)*(x1517)*(x1518)))+(((r21)*(sj11)*(x1514)))+(((x1523)*(x1526)))+(((IkReal(-1.00000000000000))*(x1514)*(x1515)*(x1516)))+(((x1515)*(x1520)))+(((IkReal(-1.00000000000000))*(x1517)*(x1519)))+(((IkReal(-1.00000000000000))*(x1514)*(x1521)*(x1524)))+(((r10)*(x1515)*(x1518)))+(((r00)*(x1518)*(x1526))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((r00)*(x1518)*(x1522)))+(((IkReal(-1.00000000000000))*(x1514)*(x1517)*(x1521)))+(((IkReal(-1.00000000000000))*(r21)*(x1514)*(x1524)))+(((x1522)*(x1523)))+(((cj11)*(r20)*(x1518)))+(((r10)*(x1518)*(x1525)))+(((cj11)*(x1519)))+(((x1520)*(x1525)))+(((IkReal(-1.00000000000000))*(x1514)*(x1516)*(x1525))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst43)*(((((IkReal(-1.00000000000000))*(r20)*(x1517)*(x1518)))+(((r21)*(sj11)*(x1514)))+(((x1523)*(x1526)))+(((IkReal(-1.00000000000000))*(x1514)*(x1515)*(x1516)))+(((x1515)*(x1520)))+(((IkReal(-1.00000000000000))*(x1517)*(x1519)))+(((IkReal(-1.00000000000000))*(x1514)*(x1521)*(x1524)))+(((r10)*(x1515)*(x1518)))+(((r00)*(x1518)*(x1526)))))), ((gconst43)*(((((r00)*(x1518)*(x1522)))+(((IkReal(-1.00000000000000))*(x1514)*(x1517)*(x1521)))+(((IkReal(-1.00000000000000))*(r21)*(x1514)*(x1524)))+(((x1522)*(x1523)))+(((cj11)*(r20)*(x1518)))+(((r10)*(x1518)*(x1525)))+(((cj11)*(x1519)))+(((x1520)*(x1525)))+(((IkReal(-1.00000000000000))*(x1514)*(x1516)*(x1525)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1527=IKsin(j10);
IkReal x1528=IKcos(j10);
IkReal x1529=((IkReal(1.00000000000000))*(sj13));
IkReal x1530=((r11)*(sj9));
IkReal x1531=((cj9)*(r01));
IkReal x1532=((IkReal(1.00000000000000))*(cj11));
IkReal x1533=((r21)*(sj14));
IkReal x1534=((cj9)*(r02));
IkReal x1535=((sj13)*(sj9));
IkReal x1536=((cj14)*(r10));
IkReal x1537=((IkReal(1.00000000000000))*(cj13));
IkReal x1538=((cj14)*(r20));
IkReal x1539=((sj11)*(x1527));
IkReal x1540=((sj14)*(x1537));
IkReal x1541=((sj11)*(x1528));
IkReal x1542=((cj14)*(cj9)*(r00));
IkReal x1543=((x1528)*(x1532));
evalcond[0]=((((cj13)*(x1533)))+(((IkReal(-1.00000000000000))*(x1543)))+(((IkReal(-1.00000000000000))*(r22)*(x1529)))+(((IkReal(-1.00000000000000))*(x1537)*(x1538)))+(x1539));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1529)*(x1538)))+(((sj13)*(x1533)))+(((IkReal(-1.00000000000000))*(x1541)))+(((IkReal(-1.00000000000000))*(x1527)*(x1532)))+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x1534)))+(((cj11)*(x1527)))+(x1541)+(((cj13)*(x1542)))+(((IkReal(-1.00000000000000))*(x1531)*(x1540)))+(((cj13)*(sj9)*(x1536)))+(((IkReal(-1.00000000000000))*(x1530)*(x1540)))+(((r12)*(x1535))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x1529)*(x1530)))+(((IkReal(-1.00000000000000))*(sj14)*(x1529)*(x1531)))+(((IkReal(-1.00000000000000))*(x1543)))+(((sj13)*(x1542)))+(((x1535)*(x1536)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1537)))+(((IkReal(-1.00000000000000))*(x1534)*(x1537)))+(x1539));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1544=((IkReal(1.00000000000000))*(cj11));
IkReal x1545=((r22)*(sj13));
IkReal x1546=((cj13)*(sj11));
IkReal x1547=((cj14)*(r20));
IkReal x1548=((r21)*(sj14));
IkReal x1549=((cj11)*(cj13));
IkReal x1550=((sj11)*(sj13));
if( IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(sj13)*(x1544)*(x1547)))+(((IkReal(-1.00000000000000))*(x1546)*(x1548)))+(((r22)*(x1549)))+(((x1546)*(x1547)))+(((cj11)*(sj13)*(x1548)))+(((sj11)*(x1545))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(x1547)*(x1550)))+(((x1548)*(x1549)))+(((IkReal(-1.00000000000000))*(cj13)*(x1544)*(x1547)))+(((r22)*(x1546)))+(((x1548)*(x1550)))+(((IkReal(-1.00000000000000))*(x1544)*(x1545))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst42)*(((((IkReal(-1.00000000000000))*(sj13)*(x1544)*(x1547)))+(((IkReal(-1.00000000000000))*(x1546)*(x1548)))+(((r22)*(x1549)))+(((x1546)*(x1547)))+(((cj11)*(sj13)*(x1548)))+(((sj11)*(x1545)))))), ((gconst42)*(((((IkReal(-1.00000000000000))*(x1547)*(x1550)))+(((x1548)*(x1549)))+(((IkReal(-1.00000000000000))*(cj13)*(x1544)*(x1547)))+(((r22)*(x1546)))+(((x1548)*(x1550)))+(((IkReal(-1.00000000000000))*(x1544)*(x1545)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1551=IKsin(j10);
IkReal x1552=IKcos(j10);
IkReal x1553=((IkReal(1.00000000000000))*(sj13));
IkReal x1554=((r11)*(sj9));
IkReal x1555=((cj9)*(r01));
IkReal x1556=((IkReal(1.00000000000000))*(cj11));
IkReal x1557=((r21)*(sj14));
IkReal x1558=((cj9)*(r02));
IkReal x1559=((sj13)*(sj9));
IkReal x1560=((cj14)*(r10));
IkReal x1561=((IkReal(1.00000000000000))*(cj13));
IkReal x1562=((cj14)*(r20));
IkReal x1563=((sj11)*(x1551));
IkReal x1564=((sj14)*(x1561));
IkReal x1565=((sj11)*(x1552));
IkReal x1566=((cj14)*(cj9)*(r00));
IkReal x1567=((x1552)*(x1556));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1561)*(x1562)))+(((cj13)*(x1557)))+(((IkReal(-1.00000000000000))*(x1567)))+(x1563)+(((IkReal(-1.00000000000000))*(r22)*(x1553))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1553)*(x1562)))+(((sj13)*(x1557)))+(((IkReal(-1.00000000000000))*(x1565)))+(((IkReal(-1.00000000000000))*(x1551)*(x1556)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x1560)))+(((IkReal(-1.00000000000000))*(x1555)*(x1564)))+(((cj11)*(x1551)))+(((IkReal(-1.00000000000000))*(x1554)*(x1564)))+(((r12)*(x1559)))+(((sj13)*(x1558)))+(x1565)+(((cj13)*(x1566))));
evalcond[3]=((((sj13)*(x1566)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1561)))+(((IkReal(-1.00000000000000))*(sj14)*(x1553)*(x1554)))+(((IkReal(-1.00000000000000))*(x1567)))+(((IkReal(-1.00000000000000))*(sj14)*(x1553)*(x1555)))+(x1563)+(((IkReal(-1.00000000000000))*(x1558)*(x1561)))+(((x1559)*(x1560))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1568=((cj12)*(sj13));
IkReal x1569=((cj12)*(cj13));
IkReal x1570=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst2)*(((((cj14)*(r10)*(x1569)))+(((IkReal(-1.00000000000000))*(r11)*(x1569)*(x1570)))+(((r12)*(x1568))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((r02)*(x1568)))+(((cj14)*(r00)*(x1569)))+(((IkReal(-1.00000000000000))*(r01)*(x1569)*(x1570))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst2)*(((((cj14)*(r10)*(x1569)))+(((IkReal(-1.00000000000000))*(r11)*(x1569)*(x1570)))+(((r12)*(x1568)))))), ((gconst2)*(((((r02)*(x1568)))+(((cj14)*(r00)*(x1569)))+(((IkReal(-1.00000000000000))*(r01)*(x1569)*(x1570)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[3];
IkReal x1571=IKsin(j9);
IkReal x1572=IKcos(j9);
IkReal x1573=((IkReal(1.00000000000000))*(sj14));
IkReal x1574=((sj13)*(x1572));
IkReal x1575=((cj13)*(x1571));
IkReal x1576=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x1577=((r01)*(x1571));
IkReal x1578=((r10)*(x1572));
IkReal x1579=((sj13)*(x1571));
IkReal x1580=((cj13)*(x1572));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1572)))+(((IkReal(-1.00000000000000))*(x1573)*(x1578)))+(cj12)+(((r00)*(sj14)*(x1571)))+(((cj14)*(x1577))));
evalcond[1]=((((r12)*(x1574)))+(((cj13)*(cj14)*(x1578)))+(((IkReal(-1.00000000000000))*(r02)*(x1579)))+(((r01)*(sj14)*(x1575)))+(((IkReal(-1.00000000000000))*(r11)*(x1573)*(x1580)))+(((IkReal(-1.00000000000000))*(x1575)*(x1576))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r12)*(x1580)))+(((cj14)*(r10)*(x1574)))+(((IkReal(-1.00000000000000))*(x1576)*(x1579)))+(sj12)+(((IkReal(-1.00000000000000))*(r11)*(x1573)*(x1574)))+(((sj13)*(sj14)*(x1577)))+(((r02)*(x1575))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11))))));
dummyeval[0]=((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1581=((r00)*(sj9));
IkReal x1582=((IkReal(1.00000000000000))*(sj13));
IkReal x1583=((cj13)*(sj14));
IkReal x1584=((cj9)*(sj14));
IkReal x1585=((cj13)*(r02));
IkReal x1586=((sj13)*(sj14));
IkReal x1587=((r01)*(sj9));
IkReal x1588=((cj9)*(sj13));
IkReal x1589=((IkReal(1.00000000000000))*(cj9));
IkReal x1590=((cj14)*(r10));
IkReal x1591=((cj14)*(npx));
IkReal x1592=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((npy)*(x1583)))+(((IkReal(-1.00000000000000))*(npz)*(x1582)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x1591)*(x1592))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1589)))+(((sj14)*(x1581)))+(((IkReal(-1.00000000000000))*(r10)*(x1584)))+(((cj14)*(x1587))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x1582)))+(((r21)*(x1586)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(-0.0800000000000000))+(((IkReal(-1.00000000000000))*(x1582)*(x1591)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((npy)*(x1586))));
evalcond[6]=((((cj13)*(cj9)*(x1590)))+(((r12)*(x1588)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1582)))+(((x1583)*(x1587)))+(((IkReal(-1.00000000000000))*(r11)*(x1583)*(x1589)))+(((IkReal(-1.00000000000000))*(cj14)*(x1581)*(x1592))));
evalcond[7]=((IkReal(1.00000000000000))+(((sj9)*(x1585)))+(((x1586)*(x1587)))+(((IkReal(-1.00000000000000))*(cj14)*(x1581)*(x1582)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1589)))+(((IkReal(-1.00000000000000))*(r11)*(x1582)*(x1584)))+(((x1588)*(x1590))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x1585)*(x1589)))+(((IkReal(-1.00000000000000))*(r01)*(x1582)*(x1584)))+(((sj13)*(sj9)*(x1590)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1592)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x1582)))+(((cj14)*(r00)*(x1588))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1593=((IkReal(1.00000000000000))*(cj11));
IkReal x1594=((r20)*(sj14));
IkReal x1595=((cj14)*(r21));
IkReal x1596=((cj14)*(cj9)*(r01));
IkReal x1597=((r10)*(sj14)*(sj9));
IkReal x1598=((cj9)*(r00)*(sj14));
IkReal x1599=((cj14)*(r11)*(sj9));
if( IKabs(((gconst9)*(((((sj11)*(x1598)))+(((sj11)*(x1596)))+(((sj11)*(x1599)))+(((cj11)*(x1595)))+(((sj11)*(x1597)))+(((cj11)*(x1594))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((sj11)*(x1594)))+(((IkReal(-1.00000000000000))*(x1593)*(x1597)))+(((sj11)*(x1595)))+(((IkReal(-1.00000000000000))*(x1593)*(x1599)))+(((IkReal(-1.00000000000000))*(x1593)*(x1598)))+(((IkReal(-1.00000000000000))*(x1593)*(x1596))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst9)*(((((sj11)*(x1598)))+(((sj11)*(x1596)))+(((sj11)*(x1599)))+(((cj11)*(x1595)))+(((sj11)*(x1597)))+(((cj11)*(x1594)))))), ((gconst9)*(((((sj11)*(x1594)))+(((IkReal(-1.00000000000000))*(x1593)*(x1597)))+(((sj11)*(x1595)))+(((IkReal(-1.00000000000000))*(x1593)*(x1599)))+(((IkReal(-1.00000000000000))*(x1593)*(x1598)))+(((IkReal(-1.00000000000000))*(x1593)*(x1596)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1600=IKsin(j10);
IkReal x1601=IKcos(j10);
IkReal x1602=((cj13)*(sj14));
IkReal x1603=((cj13)*(cj14));
IkReal x1604=((r10)*(sj9));
IkReal x1605=((IkReal(1.00000000000000))*(cj9));
IkReal x1606=((sj11)*(x1600));
IkReal x1607=((IkReal(1.00000000000000))*(x1601));
IkReal x1608=((cj11)*(x1600));
IkReal x1609=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x1610=((cj11)*(x1607));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1608)))+(((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x1607))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1610)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x1603)))+(x1606)+(((r21)*(x1602))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1610)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1605)))+(((IkReal(-1.00000000000000))*(sj14)*(x1604)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1605)))+(((IkReal(-1.00000000000000))*(cj14)*(x1609)))+(x1606));
evalcond[3]=((((sj11)*(x1601)))+(((IkReal(-1.00000000000000))*(r01)*(x1602)*(x1605)))+(((cj9)*(r00)*(x1603)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x1602)*(x1609)))+(x1608)+(((x1603)*(x1604))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1611=((cj11)*(r20));
IkReal x1612=((IkReal(1.00000000000000))*(cj13));
IkReal x1613=((r21)*(sj14));
IkReal x1614=((r22)*(sj13));
IkReal x1615=((r20)*(sj11));
IkReal x1616=((cj14)*(r21));
if( IKabs(((gconst8)*(((((cj13)*(cj14)*(x1615)))+(((sj11)*(x1614)))+(((IkReal(-1.00000000000000))*(sj11)*(x1612)*(x1613)))+(((sj14)*(x1611)))+(((cj11)*(x1616))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((cj11)*(cj13)*(x1613)))+(((IkReal(-1.00000000000000))*(cj11)*(x1614)))+(((sj14)*(x1615)))+(((IkReal(-1.00000000000000))*(cj14)*(x1611)*(x1612)))+(((sj11)*(x1616))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst8)*(((((cj13)*(cj14)*(x1615)))+(((sj11)*(x1614)))+(((IkReal(-1.00000000000000))*(sj11)*(x1612)*(x1613)))+(((sj14)*(x1611)))+(((cj11)*(x1616)))))), ((gconst8)*(((((cj11)*(cj13)*(x1613)))+(((IkReal(-1.00000000000000))*(cj11)*(x1614)))+(((sj14)*(x1615)))+(((IkReal(-1.00000000000000))*(cj14)*(x1611)*(x1612)))+(((sj11)*(x1616)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1617=IKsin(j10);
IkReal x1618=IKcos(j10);
IkReal x1619=((cj13)*(sj14));
IkReal x1620=((cj13)*(cj14));
IkReal x1621=((r10)*(sj9));
IkReal x1622=((IkReal(1.00000000000000))*(cj9));
IkReal x1623=((sj11)*(x1617));
IkReal x1624=((IkReal(1.00000000000000))*(x1618));
IkReal x1625=((cj11)*(x1617));
IkReal x1626=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x1627=((cj11)*(x1624));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x1624)))+(((IkReal(-1.00000000000000))*(x1625))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x1623)+(((IkReal(-1.00000000000000))*(x1627)))+(((r21)*(x1619)))+(((IkReal(-1.00000000000000))*(r20)*(x1620))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1622)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1622)))+(x1623)+(((IkReal(-1.00000000000000))*(x1627)))+(((IkReal(-1.00000000000000))*(cj14)*(x1626)))+(((IkReal(-1.00000000000000))*(sj14)*(x1621))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1619)*(x1626)))+(x1625)+(((r12)*(sj13)*(sj9)))+(((cj9)*(r00)*(x1620)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1619)*(x1622)))+(((x1620)*(x1621)))+(((sj11)*(x1618))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1628=((r00)*(sj9));
IkReal x1629=((IkReal(1.00000000000000))*(sj13));
IkReal x1630=((cj13)*(sj14));
IkReal x1631=((cj9)*(sj14));
IkReal x1632=((cj13)*(r02));
IkReal x1633=((sj13)*(sj14));
IkReal x1634=((r01)*(sj9));
IkReal x1635=((cj9)*(sj13));
IkReal x1636=((IkReal(1.00000000000000))*(cj9));
IkReal x1637=((cj14)*(r10));
IkReal x1638=((cj14)*(npx));
IkReal x1639=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0200000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.230000000000000))+(((npy)*(x1630)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(x1638)*(x1639)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x1629))));
evalcond[3]=((((cj14)*(x1634)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1636)))+(((sj14)*(x1628)))+(((IkReal(-1.00000000000000))*(r10)*(x1631))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x1629)))+(((r21)*(x1633)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0800000000000000))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x1629)*(x1638)))+(((npy)*(x1633))));
evalcond[6]=((((cj13)*(cj9)*(x1637)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1629)))+(((IkReal(-1.00000000000000))*(cj14)*(x1628)*(x1639)))+(((r12)*(x1635)))+(((IkReal(-1.00000000000000))*(r11)*(x1630)*(x1636)))+(((x1630)*(x1634))));
evalcond[7]=((IkReal(-1.00000000000000))+(((x1635)*(x1637)))+(((x1633)*(x1634)))+(((IkReal(-1.00000000000000))*(r11)*(x1629)*(x1631)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1636)))+(((IkReal(-1.00000000000000))*(cj14)*(x1628)*(x1629)))+(((sj9)*(x1632))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x1632)*(x1636)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x1629)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1639)))+(((sj13)*(sj9)*(x1637)))+(((cj14)*(r00)*(x1635)))+(((IkReal(-1.00000000000000))*(r01)*(x1629)*(x1631))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1640=((IkReal(1.00000000000000))*(cj14));
IkReal x1641=((sj11)*(sj9));
IkReal x1642=((cj9)*(r01));
IkReal x1643=((cj11)*(cj14));
IkReal x1644=((cj9)*(r00));
IkReal x1645=((r10)*(sj14));
IkReal x1646=((cj11)*(sj14));
IkReal x1647=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(sj11)*(x1640)*(x1642)))+(((IkReal(-1.00000000000000))*(r11)*(x1640)*(x1641)))+(((IkReal(-1.00000000000000))*(x1641)*(x1645)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1640)))+(((IkReal(-1.00000000000000))*(x1644)*(x1647)))+(((IkReal(-1.00000000000000))*(r20)*(x1646))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(r21)*(sj11)*(x1640)))+(((x1642)*(x1643)))+(((cj11)*(sj9)*(x1645)))+(((IkReal(-1.00000000000000))*(r20)*(x1647)))+(((r11)*(sj9)*(x1643)))+(((x1644)*(x1646))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(sj11)*(x1640)*(x1642)))+(((IkReal(-1.00000000000000))*(r11)*(x1640)*(x1641)))+(((IkReal(-1.00000000000000))*(x1641)*(x1645)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1640)))+(((IkReal(-1.00000000000000))*(x1644)*(x1647)))+(((IkReal(-1.00000000000000))*(r20)*(x1646)))))), ((gconst11)*(((((IkReal(-1.00000000000000))*(r21)*(sj11)*(x1640)))+(((x1642)*(x1643)))+(((cj11)*(sj9)*(x1645)))+(((IkReal(-1.00000000000000))*(r20)*(x1647)))+(((r11)*(sj9)*(x1643)))+(((x1644)*(x1646)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1648=IKsin(j10);
IkReal x1649=IKcos(j10);
IkReal x1650=((cj14)*(sj9));
IkReal x1651=((IkReal(1.00000000000000))*(r11));
IkReal x1652=((cj13)*(sj14));
IkReal x1653=((IkReal(1.00000000000000))*(cj9));
IkReal x1654=((cj13)*(cj14));
IkReal x1655=((cj11)*(x1648));
IkReal x1656=((sj11)*(x1649));
IkReal x1657=((cj11)*(x1649));
IkReal x1658=((sj11)*(x1648));
IkReal x1659=((x1656)+(x1655));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x1659));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x1654)))+(((IkReal(-1.00000000000000))*(x1657)))+(x1658)+(((r21)*(x1652))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x1650)*(x1651)))+(((IkReal(-1.00000000000000))*(x1658)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1653)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1653)))+(x1657));
evalcond[3]=((((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1652)*(x1653)))+(((cj13)*(r10)*(x1650)))+(((IkReal(-1.00000000000000))*(sj9)*(x1651)*(x1652)))+(((cj9)*(r00)*(x1654)))+(x1659));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1660=((cj13)*(sj11));
IkReal x1661=((r21)*(sj14));
IkReal x1662=((cj14)*(r20));
IkReal x1663=((cj11)*(cj13));
IkReal x1664=((r22)*(sj13));
IkReal x1665=((r20)*(sj14));
IkReal x1666=((cj14)*(r21));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(x1660)*(x1662)))+(((cj11)*(x1665)))+(((x1660)*(x1661)))+(((cj11)*(x1666)))+(((IkReal(-1.00000000000000))*(sj11)*(x1664))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((x1662)*(x1663)))+(((sj11)*(x1665)))+(((IkReal(-1.00000000000000))*(x1661)*(x1663)))+(((sj11)*(x1666)))+(((cj11)*(x1664))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(x1660)*(x1662)))+(((cj11)*(x1665)))+(((x1660)*(x1661)))+(((cj11)*(x1666)))+(((IkReal(-1.00000000000000))*(sj11)*(x1664)))))), ((gconst10)*(((((x1662)*(x1663)))+(((sj11)*(x1665)))+(((IkReal(-1.00000000000000))*(x1661)*(x1663)))+(((sj11)*(x1666)))+(((cj11)*(x1664)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1667=IKsin(j10);
IkReal x1668=IKcos(j10);
IkReal x1669=((cj14)*(sj9));
IkReal x1670=((IkReal(1.00000000000000))*(r11));
IkReal x1671=((cj13)*(sj14));
IkReal x1672=((IkReal(1.00000000000000))*(cj9));
IkReal x1673=((cj13)*(cj14));
IkReal x1674=((cj11)*(x1667));
IkReal x1675=((sj11)*(x1668));
IkReal x1676=((cj11)*(x1668));
IkReal x1677=((sj11)*(x1667));
IkReal x1678=((x1674)+(x1675));
evalcond[0]=((((r20)*(sj14)))+(x1678)+(((cj14)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x1677)+(((IkReal(-1.00000000000000))*(r20)*(x1673)))+(((IkReal(-1.00000000000000))*(x1676)))+(((r21)*(x1671))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1669)*(x1670)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1672)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(x1676)+(((IkReal(-1.00000000000000))*(x1677)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1672))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj9)*(x1670)*(x1671)))+(x1678)+(((cj13)*(r10)*(x1669)))+(((IkReal(-1.00000000000000))*(r01)*(x1671)*(x1672)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x1673))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1679=((cj13)*(sj14));
IkReal x1680=((sj14)*(sj9));
IkReal x1681=((r02)*(sj9));
IkReal x1682=((r01)*(sj9));
IkReal x1683=((cj9)*(sj13));
IkReal x1684=((IkReal(1.00000000000000))*(cj9));
IkReal x1685=((IkReal(1.00000000000000))*(sj13));
IkReal x1686=((cj14)*(npx));
IkReal x1687=((cj14)*(r10));
IkReal x1688=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x1689=((sj14)*(x1684));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((npy)*(x1679)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x1686)))+(((IkReal(-1.00000000000000))*(npz)*(x1685))));
evalcond[4]=((IkReal(1.00000000000000))+(((r00)*(x1680)))+(((cj14)*(x1682)))+(((IkReal(-1.00000000000000))*(r10)*(x1689)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1684))));
evalcond[5]=((IkReal(0.0200000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((npy)*(sj13)*(sj14)))+(((IkReal(-1.00000000000000))*(x1685)*(x1686)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r10)*(x1680)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1684)))+(((IkReal(-1.00000000000000))*(r11)*(x1688)))+(((IkReal(-1.00000000000000))*(r00)*(x1689))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1681)*(x1685)))+(((x1679)*(x1682)))+(((cj13)*(cj9)*(x1687)))+(((IkReal(-1.00000000000000))*(cj13)*(r00)*(x1688)))+(((IkReal(-1.00000000000000))*(r11)*(x1679)*(x1684)))+(((r12)*(x1683))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)*(x1685)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x1683)))+(((cj13)*(x1681)))+(((x1683)*(x1687)))+(((r01)*(sj13)*(x1680)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1684))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1690=((cj13)*(sj14));
IkReal x1691=((IkReal(1.00000000000000))*(cj11));
IkReal x1692=((r11)*(sj9));
IkReal x1693=((r10)*(sj9));
IkReal x1694=((cj11)*(sj13));
IkReal x1695=((r12)*(sj9));
IkReal x1696=((sj11)*(sj13));
IkReal x1697=((cj9)*(r02));
IkReal x1698=((IkReal(1.00000000000000))*(sj11));
IkReal x1699=((cj9)*(r01));
IkReal x1700=((cj9)*(r00));
IkReal x1701=((cj13)*(cj14)*(sj11));
IkReal x1702=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst13)*(((((r21)*(sj11)*(x1690)))+(((IkReal(-1.00000000000000))*(x1690)*(x1691)*(x1699)))+(((IkReal(-1.00000000000000))*(x1690)*(x1691)*(x1692)))+(((x1694)*(x1697)))+(((x1694)*(x1695)))+(((x1700)*(x1702)))+(((x1693)*(x1702)))+(((IkReal(-1.00000000000000))*(r22)*(x1696)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x1698))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((x1696)*(x1697)))+(((IkReal(-1.00000000000000))*(r21)*(x1690)*(x1691)))+(((r20)*(x1702)))+(((r22)*(x1694)))+(((IkReal(-1.00000000000000))*(x1690)*(x1698)*(x1699)))+(((x1693)*(x1701)))+(((x1700)*(x1701)))+(((IkReal(-1.00000000000000))*(x1690)*(x1692)*(x1698)))+(((x1695)*(x1696))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst13)*(((((r21)*(sj11)*(x1690)))+(((IkReal(-1.00000000000000))*(x1690)*(x1691)*(x1699)))+(((IkReal(-1.00000000000000))*(x1690)*(x1691)*(x1692)))+(((x1694)*(x1697)))+(((x1694)*(x1695)))+(((x1700)*(x1702)))+(((x1693)*(x1702)))+(((IkReal(-1.00000000000000))*(r22)*(x1696)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x1698)))))), ((gconst13)*(((((x1696)*(x1697)))+(((IkReal(-1.00000000000000))*(r21)*(x1690)*(x1691)))+(((r20)*(x1702)))+(((r22)*(x1694)))+(((IkReal(-1.00000000000000))*(x1690)*(x1698)*(x1699)))+(((x1693)*(x1701)))+(((x1700)*(x1701)))+(((IkReal(-1.00000000000000))*(x1690)*(x1692)*(x1698)))+(((x1695)*(x1696)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1703=IKsin(j10);
IkReal x1704=IKcos(j10);
IkReal x1705=((IkReal(1.00000000000000))*(sj13));
IkReal x1706=((r11)*(sj9));
IkReal x1707=((cj9)*(r01));
IkReal x1708=((r21)*(sj14));
IkReal x1709=((cj9)*(r02));
IkReal x1710=((sj13)*(sj9));
IkReal x1711=((cj14)*(r10));
IkReal x1712=((IkReal(1.00000000000000))*(cj13));
IkReal x1713=((cj14)*(r20));
IkReal x1714=((cj11)*(x1703));
IkReal x1715=((sj11)*(x1704));
IkReal x1716=((sj14)*(x1712));
IkReal x1717=((sj11)*(x1703));
IkReal x1718=((cj11)*(x1704));
IkReal x1719=((cj14)*(cj9)*(r00));
IkReal x1720=((x1715)+(x1714));
evalcond[0]=((x1717)+(((IkReal(-1.00000000000000))*(r22)*(x1705)))+(((IkReal(-1.00000000000000))*(x1712)*(x1713)))+(((IkReal(-1.00000000000000))*(x1718)))+(((cj13)*(x1708))));
evalcond[1]=((x1720)+(((IkReal(-1.00000000000000))*(x1705)*(x1713)))+(((sj13)*(x1708)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1707)*(x1716)))+(((cj13)*(x1719)))+(((r12)*(x1710)))+(x1720)+(((sj13)*(x1709)))+(((IkReal(-1.00000000000000))*(x1706)*(x1716)))+(((cj13)*(sj9)*(x1711))));
evalcond[3]=((((sj13)*(x1719)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1712)))+(((IkReal(-1.00000000000000))*(sj14)*(x1705)*(x1706)))+(x1718)+(((IkReal(-1.00000000000000))*(sj14)*(x1705)*(x1707)))+(((IkReal(-1.00000000000000))*(x1717)))+(((x1710)*(x1711)))+(((IkReal(-1.00000000000000))*(x1709)*(x1712))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1721=((cj13)*(sj11));
IkReal x1722=((r21)*(sj14));
IkReal x1723=((cj11)*(r22));
IkReal x1724=((sj11)*(sj13));
IkReal x1725=((cj11)*(cj13));
IkReal x1726=((cj11)*(sj13));
IkReal x1727=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(x1726)*(x1727)))+(((IkReal(-1.00000000000000))*(r22)*(x1724)))+(((x1721)*(x1722)))+(((IkReal(-1.00000000000000))*(x1721)*(x1727)))+(((x1722)*(x1726)))+(((cj13)*(x1723))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((r22)*(x1721)))+(((cj14)*(r20)*(x1725)))+(((sj13)*(x1723)))+(((IkReal(-1.00000000000000))*(x1724)*(x1727)))+(((x1722)*(x1724)))+(((IkReal(-1.00000000000000))*(x1722)*(x1725))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst12)*(((((IkReal(-1.00000000000000))*(x1726)*(x1727)))+(((IkReal(-1.00000000000000))*(r22)*(x1724)))+(((x1721)*(x1722)))+(((IkReal(-1.00000000000000))*(x1721)*(x1727)))+(((x1722)*(x1726)))+(((cj13)*(x1723)))))), ((gconst12)*(((((r22)*(x1721)))+(((cj14)*(r20)*(x1725)))+(((sj13)*(x1723)))+(((IkReal(-1.00000000000000))*(x1724)*(x1727)))+(((x1722)*(x1724)))+(((IkReal(-1.00000000000000))*(x1722)*(x1725)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1728=IKsin(j10);
IkReal x1729=IKcos(j10);
IkReal x1730=((IkReal(1.00000000000000))*(sj13));
IkReal x1731=((r11)*(sj9));
IkReal x1732=((cj9)*(r01));
IkReal x1733=((r21)*(sj14));
IkReal x1734=((cj9)*(r02));
IkReal x1735=((sj13)*(sj9));
IkReal x1736=((cj14)*(r10));
IkReal x1737=((IkReal(1.00000000000000))*(cj13));
IkReal x1738=((cj14)*(r20));
IkReal x1739=((cj11)*(x1728));
IkReal x1740=((sj11)*(x1729));
IkReal x1741=((sj14)*(x1737));
IkReal x1742=((sj11)*(x1728));
IkReal x1743=((cj11)*(x1729));
IkReal x1744=((cj14)*(cj9)*(r00));
IkReal x1745=((x1740)+(x1739));
evalcond[0]=((((cj13)*(x1733)))+(x1742)+(((IkReal(-1.00000000000000))*(x1737)*(x1738)))+(((IkReal(-1.00000000000000))*(r22)*(x1730)))+(((IkReal(-1.00000000000000))*(x1743))));
evalcond[1]=((((sj13)*(x1733)))+(((IkReal(-1.00000000000000))*(x1730)*(x1738)))+(x1745)+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x1736)))+(((r12)*(x1735)))+(((sj13)*(x1734)))+(x1745)+(((IkReal(-1.00000000000000))*(x1731)*(x1741)))+(((cj13)*(x1744)))+(((IkReal(-1.00000000000000))*(x1732)*(x1741))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1734)*(x1737)))+(((IkReal(-1.00000000000000))*(sj14)*(x1730)*(x1731)))+(((x1735)*(x1736)))+(x1743)+(((sj13)*(x1744)))+(((IkReal(-1.00000000000000))*(sj14)*(x1730)*(x1732)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1737)))+(((IkReal(-1.00000000000000))*(x1742))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1746=((cj13)*(sj14));
IkReal x1747=((sj14)*(sj9));
IkReal x1748=((r02)*(sj9));
IkReal x1749=((r01)*(sj9));
IkReal x1750=((cj9)*(sj13));
IkReal x1751=((IkReal(1.00000000000000))*(cj9));
IkReal x1752=((IkReal(1.00000000000000))*(sj13));
IkReal x1753=((cj14)*(npx));
IkReal x1754=((cj14)*(r10));
IkReal x1755=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x1756=((sj14)*(x1751));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((npy)*(x1746)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x1752)))+(((IkReal(-1.00000000000000))*(cj13)*(x1753))));
evalcond[4]=((IkReal(-1.00000000000000))+(((cj14)*(x1749)))+(((r00)*(x1747)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1751)))+(((IkReal(-1.00000000000000))*(r10)*(x1756))));
evalcond[5]=((IkReal(-0.0200000000000000))+(((npy)*(sj13)*(sj14)))+(((IkReal(-1.00000000000000))*(x1752)*(x1753)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r10)*(x1747)))+(((IkReal(-1.00000000000000))*(r00)*(x1756)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1751)))+(((IkReal(-1.00000000000000))*(r11)*(x1755))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1748)*(x1752)))+(((r12)*(x1750)))+(((IkReal(-1.00000000000000))*(cj13)*(r00)*(x1755)))+(((cj13)*(cj9)*(x1754)))+(((x1746)*(x1749)))+(((IkReal(-1.00000000000000))*(r11)*(x1746)*(x1751))));
evalcond[8]=((((cj13)*(x1748)))+(((r01)*(sj13)*(x1747)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x1750)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1751)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)*(x1752)))+(((x1750)*(x1754))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1757=((cj13)*(sj14));
IkReal x1758=((IkReal(1.00000000000000))*(cj11));
IkReal x1759=((r11)*(sj9));
IkReal x1760=((IkReal(1.00000000000000))*(sj11));
IkReal x1761=((cj13)*(cj14));
IkReal x1762=((cj11)*(sj13));
IkReal x1763=((r12)*(sj9));
IkReal x1764=((cj9)*(r01));
IkReal x1765=((sj11)*(sj13));
IkReal x1766=((cj9)*(r02));
IkReal x1767=((r10)*(sj9));
IkReal x1768=((cj9)*(r00));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(r20)*(x1760)*(x1761)))+(((IkReal(-1.00000000000000))*(x1757)*(x1758)*(x1759)))+(((cj11)*(x1761)*(x1768)))+(((IkReal(-1.00000000000000))*(x1757)*(x1758)*(x1764)))+(((x1762)*(x1766)))+(((cj11)*(x1761)*(x1767)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1760)))+(((r21)*(sj11)*(x1757)))+(((x1762)*(x1763))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((r22)*(x1762)))+(((sj11)*(x1761)*(x1767)))+(((IkReal(-1.00000000000000))*(x1757)*(x1760)*(x1764)))+(((x1765)*(x1766)))+(((IkReal(-1.00000000000000))*(x1757)*(x1759)*(x1760)))+(((IkReal(-1.00000000000000))*(r21)*(x1757)*(x1758)))+(((sj11)*(x1761)*(x1768)))+(((cj11)*(r20)*(x1761)))+(((x1763)*(x1765))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(r20)*(x1760)*(x1761)))+(((IkReal(-1.00000000000000))*(x1757)*(x1758)*(x1759)))+(((cj11)*(x1761)*(x1768)))+(((IkReal(-1.00000000000000))*(x1757)*(x1758)*(x1764)))+(((x1762)*(x1766)))+(((cj11)*(x1761)*(x1767)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1760)))+(((r21)*(sj11)*(x1757)))+(((x1762)*(x1763)))))), ((gconst15)*(((((r22)*(x1762)))+(((sj11)*(x1761)*(x1767)))+(((IkReal(-1.00000000000000))*(x1757)*(x1760)*(x1764)))+(((x1765)*(x1766)))+(((IkReal(-1.00000000000000))*(x1757)*(x1759)*(x1760)))+(((IkReal(-1.00000000000000))*(r21)*(x1757)*(x1758)))+(((sj11)*(x1761)*(x1768)))+(((cj11)*(r20)*(x1761)))+(((x1763)*(x1765)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1769=IKsin(j10);
IkReal x1770=IKcos(j10);
IkReal x1771=((IkReal(1.00000000000000))*(sj13));
IkReal x1772=((r11)*(sj9));
IkReal x1773=((cj9)*(r01));
IkReal x1774=((IkReal(1.00000000000000))*(cj11));
IkReal x1775=((r21)*(sj14));
IkReal x1776=((cj9)*(r02));
IkReal x1777=((sj13)*(sj9));
IkReal x1778=((cj14)*(r10));
IkReal x1779=((IkReal(1.00000000000000))*(cj13));
IkReal x1780=((cj14)*(r20));
IkReal x1781=((sj11)*(x1769));
IkReal x1782=((sj14)*(x1779));
IkReal x1783=((sj11)*(x1770));
IkReal x1784=((cj14)*(cj9)*(r00));
IkReal x1785=((x1770)*(x1774));
evalcond[0]=((((cj13)*(x1775)))+(x1781)+(((IkReal(-1.00000000000000))*(x1785)))+(((IkReal(-1.00000000000000))*(x1779)*(x1780)))+(((IkReal(-1.00000000000000))*(r22)*(x1771))));
evalcond[1]=((((sj13)*(x1775)))+(((IkReal(-1.00000000000000))*(x1769)*(x1774)))+(((IkReal(-1.00000000000000))*(x1771)*(x1780)))+(((IkReal(-1.00000000000000))*(x1783)))+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x1777)))+(x1783)+(((cj13)*(x1784)))+(((IkReal(-1.00000000000000))*(x1772)*(x1782)))+(((cj11)*(x1769)))+(((sj13)*(x1776)))+(((cj13)*(sj9)*(x1778)))+(((IkReal(-1.00000000000000))*(x1773)*(x1782))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x1771)*(x1773)))+(x1781)+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1779)))+(((IkReal(-1.00000000000000))*(x1785)))+(((x1777)*(x1778)))+(((sj13)*(x1784)))+(((IkReal(-1.00000000000000))*(sj14)*(x1771)*(x1772)))+(((IkReal(-1.00000000000000))*(x1776)*(x1779))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1786=((IkReal(1.00000000000000))*(cj13));
IkReal x1787=((cj14)*(r20));
IkReal x1788=((r21)*(sj14));
IkReal x1789=((cj11)*(cj13));
IkReal x1790=((IkReal(1.00000000000000))*(sj13));
IkReal x1791=((sj11)*(sj13));
IkReal x1792=((cj13)*(sj11));
if( IKabs(((gconst14)*(((((x1787)*(x1792)))+(((r22)*(x1789)))+(((IkReal(-1.00000000000000))*(sj11)*(x1786)*(x1788)))+(((r22)*(x1791)))+(((IkReal(-1.00000000000000))*(cj11)*(x1787)*(x1790)))+(((cj11)*(sj13)*(x1788))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((r22)*(x1792)))+(((IkReal(-1.00000000000000))*(cj11)*(x1786)*(x1787)))+(((IkReal(-1.00000000000000))*(sj11)*(x1787)*(x1790)))+(((x1788)*(x1791)))+(((x1788)*(x1789)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x1790))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst14)*(((((x1787)*(x1792)))+(((r22)*(x1789)))+(((IkReal(-1.00000000000000))*(sj11)*(x1786)*(x1788)))+(((r22)*(x1791)))+(((IkReal(-1.00000000000000))*(cj11)*(x1787)*(x1790)))+(((cj11)*(sj13)*(x1788)))))), ((gconst14)*(((((r22)*(x1792)))+(((IkReal(-1.00000000000000))*(cj11)*(x1786)*(x1787)))+(((IkReal(-1.00000000000000))*(sj11)*(x1787)*(x1790)))+(((x1788)*(x1791)))+(((x1788)*(x1789)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x1790)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1793=IKsin(j10);
IkReal x1794=IKcos(j10);
IkReal x1795=((IkReal(1.00000000000000))*(sj13));
IkReal x1796=((r11)*(sj9));
IkReal x1797=((cj9)*(r01));
IkReal x1798=((IkReal(1.00000000000000))*(cj11));
IkReal x1799=((r21)*(sj14));
IkReal x1800=((cj9)*(r02));
IkReal x1801=((sj13)*(sj9));
IkReal x1802=((cj14)*(r10));
IkReal x1803=((IkReal(1.00000000000000))*(cj13));
IkReal x1804=((cj14)*(r20));
IkReal x1805=((sj11)*(x1793));
IkReal x1806=((sj14)*(x1803));
IkReal x1807=((sj11)*(x1794));
IkReal x1808=((cj14)*(cj9)*(r00));
IkReal x1809=((x1794)*(x1798));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1809)))+(x1805)+(((cj13)*(x1799)))+(((IkReal(-1.00000000000000))*(r22)*(x1795)))+(((IkReal(-1.00000000000000))*(x1803)*(x1804))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1807)))+(((IkReal(-1.00000000000000))*(x1793)*(x1798)))+(((sj13)*(x1799)))+(((IkReal(-1.00000000000000))*(x1795)*(x1804)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1796)*(x1806)))+(x1807)+(((cj13)*(sj9)*(x1802)))+(((IkReal(-1.00000000000000))*(x1797)*(x1806)))+(((sj13)*(x1800)))+(((cj13)*(x1808)))+(((r12)*(x1801)))+(((cj11)*(x1793))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x1795)*(x1796)))+(((IkReal(-1.00000000000000))*(x1809)))+(x1805)+(((x1801)*(x1802)))+(((IkReal(-1.00000000000000))*(sj14)*(x1795)*(x1797)))+(((sj13)*(x1808)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1803)))+(((IkReal(-1.00000000000000))*(x1800)*(x1803))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1810=((r21)*(sj14));
IkReal x1811=((cj12)*(cj13));
IkReal x1812=((sj11)*(sj13));
IkReal x1813=((cj14)*(r20));
IkReal x1814=((IkReal(1.00000000000000))*(sj11));
IkReal x1815=((cj12)*(r22));
IkReal x1816=((IkReal(1.00000000000000))*(cj11));
IkReal x1817=((cj13)*(r22));
IkReal x1818=((sj13)*(x1816));
if( IKabs(((gconst7)*(((((cj11)*(sj13)*(x1813)))+(((sj11)*(x1811)*(x1813)))+(((IkReal(-1.00000000000000))*(x1816)*(x1817)))+(((IkReal(-1.00000000000000))*(x1810)*(x1811)*(x1814)))+(((IkReal(-1.00000000000000))*(x1810)*(x1818)))+(((x1812)*(x1815))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((x1812)*(x1813)))+(((IkReal(-1.00000000000000))*(x1811)*(x1813)*(x1816)))+(((cj11)*(x1810)*(x1811)))+(((IkReal(-1.00000000000000))*(x1815)*(x1818)))+(((IkReal(-1.00000000000000))*(x1814)*(x1817)))+(((IkReal(-1.00000000000000))*(x1810)*(x1812))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst7)*(((((cj11)*(sj13)*(x1813)))+(((sj11)*(x1811)*(x1813)))+(((IkReal(-1.00000000000000))*(x1816)*(x1817)))+(((IkReal(-1.00000000000000))*(x1810)*(x1811)*(x1814)))+(((IkReal(-1.00000000000000))*(x1810)*(x1818)))+(((x1812)*(x1815)))))), ((gconst7)*(((((x1812)*(x1813)))+(((IkReal(-1.00000000000000))*(x1811)*(x1813)*(x1816)))+(((cj11)*(x1810)*(x1811)))+(((IkReal(-1.00000000000000))*(x1815)*(x1818)))+(((IkReal(-1.00000000000000))*(x1814)*(x1817)))+(((IkReal(-1.00000000000000))*(x1810)*(x1812)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1819=IKsin(j10);
IkReal x1820=IKcos(j10);
IkReal x1821=((IkReal(1.00000000000000))*(cj13));
IkReal x1822=((cj9)*(r02));
IkReal x1823=((IkReal(1.00000000000000))*(sj13));
IkReal x1824=((r11)*(sj9));
IkReal x1825=((IkReal(1.00000000000000))*(cj14));
IkReal x1826=((cj9)*(r01));
IkReal x1827=((r21)*(sj14));
IkReal x1828=((IkReal(1.00000000000000))*(sj12));
IkReal x1829=((r10)*(sj9));
IkReal x1830=((cj14)*(sj13));
IkReal x1831=((cj14)*(r20));
IkReal x1832=((IkReal(1.00000000000000))*(sj14));
IkReal x1833=((r12)*(sj9));
IkReal x1834=((cj13)*(cj14));
IkReal x1835=((cj9)*(r00));
IkReal x1836=((sj11)*(x1819));
IkReal x1837=((cj11)*(x1819));
IkReal x1838=((sj11)*(x1820));
IkReal x1839=((cj11)*(x1820));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x1828)*(x1838)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x1828)*(x1837))));
evalcond[1]=((x1836)+(((IkReal(-1.00000000000000))*(x1839)))+(((IkReal(-1.00000000000000))*(r22)*(x1823)))+(((IkReal(-1.00000000000000))*(x1821)*(x1831)))+(((cj13)*(x1827))));
evalcond[2]=((((sj13)*(x1827)))+(((cj12)*(x1837)))+(((cj12)*(x1838)))+(((IkReal(-1.00000000000000))*(x1823)*(x1831)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1829)*(x1832)))+(((IkReal(-1.00000000000000))*(x1828)*(x1839)))+(((sj12)*(x1836)))+(((IkReal(-1.00000000000000))*(x1832)*(x1835)))+(((IkReal(-1.00000000000000))*(x1825)*(x1826)))+(((IkReal(-1.00000000000000))*(x1824)*(x1825))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj14)*(x1821)*(x1824)))+(((x1834)*(x1835)))+(x1837)+(x1838)+(((IkReal(-1.00000000000000))*(sj14)*(x1821)*(x1826)))+(((sj13)*(x1833)))+(((x1829)*(x1834)))+(((sj13)*(x1822))));
evalcond[5]=((((x1830)*(x1835)))+(((cj12)*(x1839)))+(((IkReal(-1.00000000000000))*(cj12)*(x1836)))+(((IkReal(-1.00000000000000))*(x1821)*(x1833)))+(((IkReal(-1.00000000000000))*(x1821)*(x1822)))+(((IkReal(-1.00000000000000))*(sj14)*(x1823)*(x1826)))+(((IkReal(-1.00000000000000))*(sj14)*(x1823)*(x1824)))+(((x1829)*(x1830))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1840=((cj11)*(sj12));
IkReal x1841=((r22)*(sj13));
IkReal x1842=((r20)*(sj14));
IkReal x1843=((cj14)*(sj11));
IkReal x1844=((cj13)*(r20));
IkReal x1845=((sj11)*(sj12));
IkReal x1846=((cj13)*(r21)*(sj14));
if( IKabs(((gconst6)*(((((cj11)*(x1842)))+(((IkReal(-1.00000000000000))*(x1845)*(x1846)))+(((cj11)*(cj14)*(r21)))+(((sj12)*(x1843)*(x1844)))+(((x1841)*(x1845))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(cj14)*(x1840)*(x1844)))+(((sj11)*(x1842)))+(((x1840)*(x1846)))+(((IkReal(-1.00000000000000))*(x1840)*(x1841)))+(((r21)*(x1843))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst6)*(((((cj11)*(x1842)))+(((IkReal(-1.00000000000000))*(x1845)*(x1846)))+(((cj11)*(cj14)*(r21)))+(((sj12)*(x1843)*(x1844)))+(((x1841)*(x1845)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(cj14)*(x1840)*(x1844)))+(((sj11)*(x1842)))+(((x1840)*(x1846)))+(((IkReal(-1.00000000000000))*(x1840)*(x1841)))+(((r21)*(x1843)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1847=IKsin(j10);
IkReal x1848=IKcos(j10);
IkReal x1849=((IkReal(1.00000000000000))*(cj13));
IkReal x1850=((cj9)*(r02));
IkReal x1851=((IkReal(1.00000000000000))*(sj13));
IkReal x1852=((r11)*(sj9));
IkReal x1853=((IkReal(1.00000000000000))*(cj14));
IkReal x1854=((cj9)*(r01));
IkReal x1855=((r21)*(sj14));
IkReal x1856=((IkReal(1.00000000000000))*(sj12));
IkReal x1857=((r10)*(sj9));
IkReal x1858=((cj14)*(sj13));
IkReal x1859=((cj14)*(r20));
IkReal x1860=((IkReal(1.00000000000000))*(sj14));
IkReal x1861=((r12)*(sj9));
IkReal x1862=((cj13)*(cj14));
IkReal x1863=((cj9)*(r00));
IkReal x1864=((sj11)*(x1847));
IkReal x1865=((cj11)*(x1847));
IkReal x1866=((sj11)*(x1848));
IkReal x1867=((cj11)*(x1848));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1856)*(x1866)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x1856)*(x1865)))+(((cj14)*(r21))));
evalcond[1]=((((cj13)*(x1855)))+(((IkReal(-1.00000000000000))*(r22)*(x1851)))+(((IkReal(-1.00000000000000))*(x1867)))+(((IkReal(-1.00000000000000))*(x1849)*(x1859)))+(x1864));
evalcond[2]=((((cj12)*(x1865)))+(((IkReal(-1.00000000000000))*(x1851)*(x1859)))+(((cj12)*(x1866)))+(((sj13)*(x1855)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1853)*(x1854)))+(((IkReal(-1.00000000000000))*(x1852)*(x1853)))+(((IkReal(-1.00000000000000))*(x1856)*(x1867)))+(((sj12)*(x1864)))+(((IkReal(-1.00000000000000))*(x1860)*(x1863)))+(((IkReal(-1.00000000000000))*(x1857)*(x1860))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj14)*(x1849)*(x1852)))+(((sj13)*(x1850)))+(((sj13)*(x1861)))+(((x1857)*(x1862)))+(((IkReal(-1.00000000000000))*(sj14)*(x1849)*(x1854)))+(x1865)+(x1866)+(((x1862)*(x1863))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj12)*(x1864)))+(((IkReal(-1.00000000000000))*(x1849)*(x1861)))+(((IkReal(-1.00000000000000))*(sj14)*(x1851)*(x1854)))+(((IkReal(-1.00000000000000))*(sj14)*(x1851)*(x1852)))+(((x1857)*(x1858)))+(((cj12)*(x1867)))+(((x1858)*(x1863)))+(((IkReal(-1.00000000000000))*(x1849)*(x1850))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1868=((r21)*(sj14));
IkReal x1869=((cj12)*(cj13));
IkReal x1870=((sj11)*(sj13));
IkReal x1871=((cj14)*(r20));
IkReal x1872=((IkReal(1.00000000000000))*(sj11));
IkReal x1873=((cj12)*(r22));
IkReal x1874=((cj13)*(r22));
IkReal x1875=((IkReal(1.00000000000000))*(cj11));
IkReal x1876=((sj13)*(x1875));
if( IKabs(((gconst5)*(((((cj11)*(sj13)*(x1871)))+(((sj11)*(x1869)*(x1871)))+(((x1870)*(x1873)))+(((IkReal(-1.00000000000000))*(x1868)*(x1869)*(x1872)))+(((IkReal(-1.00000000000000))*(x1868)*(x1876)))+(((IkReal(-1.00000000000000))*(x1874)*(x1875))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(x1868)*(x1870)))+(((IkReal(-1.00000000000000))*(x1872)*(x1874)))+(((IkReal(-1.00000000000000))*(x1869)*(x1871)*(x1875)))+(((cj11)*(x1868)*(x1869)))+(((IkReal(-1.00000000000000))*(x1873)*(x1876)))+(((x1870)*(x1871))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst5)*(((((cj11)*(sj13)*(x1871)))+(((sj11)*(x1869)*(x1871)))+(((x1870)*(x1873)))+(((IkReal(-1.00000000000000))*(x1868)*(x1869)*(x1872)))+(((IkReal(-1.00000000000000))*(x1868)*(x1876)))+(((IkReal(-1.00000000000000))*(x1874)*(x1875)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(x1868)*(x1870)))+(((IkReal(-1.00000000000000))*(x1872)*(x1874)))+(((IkReal(-1.00000000000000))*(x1869)*(x1871)*(x1875)))+(((cj11)*(x1868)*(x1869)))+(((IkReal(-1.00000000000000))*(x1873)*(x1876)))+(((x1870)*(x1871)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[3];
IkReal x1877=IKsin(j10);
IkReal x1878=IKcos(j10);
IkReal x1879=((IkReal(1.00000000000000))*(sj13));
IkReal x1880=((cj14)*(r20));
IkReal x1881=((r21)*(sj14));
IkReal x1882=((IkReal(1.00000000000000))*(x1878));
IkReal x1883=((cj11)*(x1877));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj11)*(sj12)*(x1882)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj12)*(x1883)))+(((cj14)*(r21))));
evalcond[1]=((((sj11)*(x1877)))+(((IkReal(-1.00000000000000))*(r22)*(x1879)))+(((IkReal(-1.00000000000000))*(cj13)*(x1880)))+(((cj13)*(x1881)))+(((IkReal(-1.00000000000000))*(cj11)*(x1882))));
evalcond[2]=((((cj12)*(x1883)))+(((cj12)*(sj11)*(x1878)))+(((sj13)*(x1881)))+(((IkReal(-1.00000000000000))*(x1879)*(x1880)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x1884=(cj14)*(cj14);
IkReal x1885=(sj14)*(sj14);
IkReal x1886=((IkReal(1.00000000000000))*(r01));
IkReal x1887=((sj13)*(sj14));
IkReal x1888=((cj14)*(sj13));
IkReal x1889=((r00)*(r11));
IkReal x1890=((cj13)*(x1884));
IkReal x1891=((cj13)*(x1885));
gconst16=IKsign(((((x1889)*(x1890)))+(((IkReal(-1.00000000000000))*(r12)*(x1886)*(x1888)))+(((r02)*(r10)*(x1887)))+(((IkReal(-1.00000000000000))*(r10)*(x1886)*(x1891)))+(((x1889)*(x1891)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1887)))+(((IkReal(-1.00000000000000))*(r10)*(x1886)*(x1890)))+(((r02)*(r11)*(x1888)))));
IkReal x1892=(cj14)*(cj14);
IkReal x1893=(sj14)*(sj14);
IkReal x1894=((IkReal(1.00000000000000))*(r01));
IkReal x1895=((sj13)*(sj14));
IkReal x1896=((cj14)*(sj13));
IkReal x1897=((r00)*(r11));
IkReal x1898=((cj13)*(x1892));
IkReal x1899=((cj13)*(x1893));
dummyeval[0]=((((r02)*(r11)*(x1896)))+(((r02)*(r10)*(x1895)))+(((x1897)*(x1899)))+(((IkReal(-1.00000000000000))*(r12)*(x1894)*(x1896)))+(((x1897)*(x1898)))+(((IkReal(-1.00000000000000))*(r10)*(x1894)*(x1899)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1895)))+(((IkReal(-1.00000000000000))*(r10)*(x1894)*(x1898))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
IkReal x1900=(cj14)*(cj14);
IkReal x1901=(sj14)*(sj14);
IkReal x1902=((cj13)*(r12));
IkReal x1903=((IkReal(1.00000000000000))*(r10));
IkReal x1904=((cj13)*(r02));
IkReal x1905=((r01)*(sj13));
IkReal x1906=((r00)*(r11)*(sj13));
gconst17=IKsign(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1904)))+(((IkReal(-1.00000000000000))*(x1901)*(x1903)*(x1905)))+(((x1900)*(x1906)))+(((IkReal(-1.00000000000000))*(x1900)*(x1903)*(x1905)))+(((x1901)*(x1906)))+(((cj14)*(r01)*(x1902)))+(((r00)*(sj14)*(x1902)))+(((IkReal(-1.00000000000000))*(sj14)*(x1903)*(x1904)))));
IkReal x1907=(cj14)*(cj14);
IkReal x1908=(sj14)*(sj14);
IkReal x1909=((cj13)*(r12));
IkReal x1910=((IkReal(1.00000000000000))*(r10));
IkReal x1911=((cj13)*(r02));
IkReal x1912=((r01)*(sj13));
IkReal x1913=((r00)*(r11)*(sj13));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1907)*(x1910)*(x1912)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1911)))+(((x1908)*(x1913)))+(((IkReal(-1.00000000000000))*(x1908)*(x1910)*(x1912)))+(((cj14)*(r01)*(x1909)))+(((IkReal(-1.00000000000000))*(sj14)*(x1910)*(x1911)))+(((r00)*(sj14)*(x1909)))+(((x1907)*(x1913))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1914=((sj12)*(sj14));
IkReal x1915=((cj14)*(sj12));
IkReal x1916=((cj12)*(cj14)*(sj13));
IkReal x1917=((IkReal(1.00000000000000))*(cj12)*(cj13));
IkReal x1918=((IkReal(1.00000000000000))*(cj12)*(sj13)*(sj14));
if( IKabs(((gconst17)*(((((r10)*(x1914)))+(((r11)*(x1915)))+(((IkReal(-1.00000000000000))*(r12)*(x1917)))+(((r10)*(x1916)))+(((IkReal(-1.00000000000000))*(r11)*(x1918))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((r00)*(x1914)))+(((IkReal(-1.00000000000000))*(r02)*(x1917)))+(((r01)*(x1915)))+(((IkReal(-1.00000000000000))*(r01)*(x1918)))+(((r00)*(x1916))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst17)*(((((r10)*(x1914)))+(((r11)*(x1915)))+(((IkReal(-1.00000000000000))*(r12)*(x1917)))+(((r10)*(x1916)))+(((IkReal(-1.00000000000000))*(r11)*(x1918)))))), ((gconst17)*(((((r00)*(x1914)))+(((IkReal(-1.00000000000000))*(r02)*(x1917)))+(((r01)*(x1915)))+(((IkReal(-1.00000000000000))*(r01)*(x1918)))+(((r00)*(x1916)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1919=IKsin(j9);
IkReal x1920=IKcos(j9);
IkReal x1921=((cj10)*(cj11));
IkReal x1922=((IkReal(1.00000000000000))*(cj14));
IkReal x1923=((IkReal(1.00000000000000))*(sj14));
IkReal x1924=((cj13)*(cj14));
IkReal x1925=((cj14)*(r10));
IkReal x1926=((r01)*(sj14));
IkReal x1927=((sj10)*(sj11));
IkReal x1928=((IkReal(1.00000000000000))*(r12));
IkReal x1929=((sj13)*(x1920));
IkReal x1930=((r02)*(x1919));
IkReal x1931=((r11)*(x1919));
IkReal x1932=((r10)*(x1920));
IkReal x1933=((r01)*(x1920));
IkReal x1934=((sj13)*(x1919));
IkReal x1935=((r11)*(x1920));
IkReal x1936=((cj13)*(x1919));
IkReal x1937=((r10)*(x1919));
IkReal x1938=((r00)*(x1920));
IkReal x1939=((cj13)*(x1920));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1922)*(x1935)))+(cj12)+(((cj14)*(r01)*(x1919)))+(((r00)*(sj14)*(x1919)))+(((IkReal(-1.00000000000000))*(x1923)*(x1932))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1923)*(x1937)))+(((sj12)*(x1927)))+(((IkReal(-1.00000000000000))*(x1922)*(x1933)))+(((IkReal(-1.00000000000000))*(x1922)*(x1931)))+(((IkReal(-1.00000000000000))*(x1923)*(x1938)))+(((IkReal(-1.00000000000000))*(sj12)*(x1921))));
evalcond[2]=((((r12)*(x1929)))+(((IkReal(-1.00000000000000))*(sj13)*(x1930)))+(((IkReal(-1.00000000000000))*(cj13)*(x1923)*(x1935)))+(((x1924)*(x1932)))+(((IkReal(-1.00000000000000))*(r00)*(x1922)*(x1936)))+(((x1926)*(x1936))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x1923)*(x1929)))+(((cj13)*(x1930)))+(((x1925)*(x1929)))+(((IkReal(-1.00000000000000))*(x1928)*(x1939)))+(sj12)+(((x1926)*(x1934)))+(((IkReal(-1.00000000000000))*(r00)*(x1922)*(x1934))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj13)*(x1923)*(x1933)))+(((r02)*(x1929)))+(((x1924)*(x1937)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x1923)*(x1931)))+(((x1924)*(x1938)))+(((cj11)*(sj10)))+(((r12)*(x1934))));
evalcond[5]=((((cj14)*(r00)*(x1929)))+(((IkReal(-1.00000000000000))*(sj13)*(x1923)*(x1931)))+(((IkReal(-1.00000000000000))*(r01)*(x1923)*(x1929)))+(((IkReal(-1.00000000000000))*(x1928)*(x1936)))+(((cj12)*(x1921)))+(((IkReal(-1.00000000000000))*(r02)*(x1939)))+(((IkReal(-1.00000000000000))*(cj12)*(x1927)))+(((x1925)*(x1934))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1940=((cj12)*(sj13));
IkReal x1941=((cj12)*(cj13));
IkReal x1942=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst16)*(((((r12)*(x1940)))+(((cj14)*(r10)*(x1941)))+(((IkReal(-1.00000000000000))*(r11)*(x1941)*(x1942))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((cj14)*(r00)*(x1941)))+(((IkReal(-1.00000000000000))*(r01)*(x1941)*(x1942)))+(((r02)*(x1940))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst16)*(((((r12)*(x1940)))+(((cj14)*(r10)*(x1941)))+(((IkReal(-1.00000000000000))*(r11)*(x1941)*(x1942)))))), ((gconst16)*(((((cj14)*(r00)*(x1941)))+(((IkReal(-1.00000000000000))*(r01)*(x1941)*(x1942)))+(((r02)*(x1940)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1943=IKsin(j9);
IkReal x1944=IKcos(j9);
IkReal x1945=((cj10)*(cj11));
IkReal x1946=((IkReal(1.00000000000000))*(cj14));
IkReal x1947=((IkReal(1.00000000000000))*(sj14));
IkReal x1948=((cj13)*(cj14));
IkReal x1949=((cj14)*(r10));
IkReal x1950=((r01)*(sj14));
IkReal x1951=((sj10)*(sj11));
IkReal x1952=((IkReal(1.00000000000000))*(r12));
IkReal x1953=((sj13)*(x1944));
IkReal x1954=((r02)*(x1943));
IkReal x1955=((r11)*(x1943));
IkReal x1956=((r10)*(x1944));
IkReal x1957=((r01)*(x1944));
IkReal x1958=((sj13)*(x1943));
IkReal x1959=((r11)*(x1944));
IkReal x1960=((cj13)*(x1943));
IkReal x1961=((r10)*(x1943));
IkReal x1962=((r00)*(x1944));
IkReal x1963=((cj13)*(x1944));
evalcond[0]=((cj12)+(((IkReal(-1.00000000000000))*(x1947)*(x1956)))+(((cj14)*(r01)*(x1943)))+(((r00)*(sj14)*(x1943)))+(((IkReal(-1.00000000000000))*(x1946)*(x1959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1947)*(x1961)))+(((sj12)*(x1951)))+(((IkReal(-1.00000000000000))*(x1946)*(x1955)))+(((IkReal(-1.00000000000000))*(sj12)*(x1945)))+(((IkReal(-1.00000000000000))*(x1946)*(x1957)))+(((IkReal(-1.00000000000000))*(x1947)*(x1962))));
evalcond[2]=((((x1950)*(x1960)))+(((x1948)*(x1956)))+(((r12)*(x1953)))+(((IkReal(-1.00000000000000))*(cj13)*(x1947)*(x1959)))+(((IkReal(-1.00000000000000))*(r00)*(x1946)*(x1960)))+(((IkReal(-1.00000000000000))*(sj13)*(x1954))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1952)*(x1963)))+(((IkReal(-1.00000000000000))*(r00)*(x1946)*(x1958)))+(((IkReal(-1.00000000000000))*(r11)*(x1947)*(x1953)))+(((x1950)*(x1958)))+(((x1949)*(x1953)))+(((cj13)*(x1954)))+(sj12));
evalcond[4]=((((x1948)*(x1962)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x1947)*(x1955)))+(((r02)*(x1953)))+(((IkReal(-1.00000000000000))*(cj13)*(x1947)*(x1957)))+(((r12)*(x1958)))+(((x1948)*(x1961)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x1963)))+(((IkReal(-1.00000000000000))*(x1952)*(x1960)))+(((cj14)*(r00)*(x1953)))+(((cj12)*(x1945)))+(((IkReal(-1.00000000000000))*(r01)*(x1947)*(x1953)))+(((x1949)*(x1958)))+(((IkReal(-1.00000000000000))*(cj12)*(x1951)))+(((IkReal(-1.00000000000000))*(sj13)*(x1947)*(x1955))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1964=((cj11)*(sj12));
IkReal x1965=((r22)*(sj13));
IkReal x1966=((r20)*(sj14));
IkReal x1967=((cj14)*(sj11));
IkReal x1968=((cj13)*(r20));
IkReal x1969=((sj11)*(sj12));
IkReal x1970=((cj13)*(r21)*(sj14));
if( IKabs(((gconst4)*(((((sj12)*(x1967)*(x1968)))+(((cj11)*(cj14)*(r21)))+(((cj11)*(x1966)))+(((x1965)*(x1969)))+(((IkReal(-1.00000000000000))*(x1969)*(x1970))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(cj14)*(x1964)*(x1968)))+(((r21)*(x1967)))+(((x1964)*(x1970)))+(((IkReal(-1.00000000000000))*(x1964)*(x1965)))+(((sj11)*(x1966))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst4)*(((((sj12)*(x1967)*(x1968)))+(((cj11)*(cj14)*(r21)))+(((cj11)*(x1966)))+(((x1965)*(x1969)))+(((IkReal(-1.00000000000000))*(x1969)*(x1970)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(cj14)*(x1964)*(x1968)))+(((r21)*(x1967)))+(((x1964)*(x1970)))+(((IkReal(-1.00000000000000))*(x1964)*(x1965)))+(((sj11)*(x1966)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[3];
IkReal x1971=IKsin(j10);
IkReal x1972=IKcos(j10);
IkReal x1973=((IkReal(1.00000000000000))*(sj13));
IkReal x1974=((cj14)*(r20));
IkReal x1975=((r21)*(sj14));
IkReal x1976=((IkReal(1.00000000000000))*(x1972));
IkReal x1977=((cj11)*(x1971));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj12)*(x1977)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(sj12)*(x1976))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj13)*(x1974)))+(((IkReal(-1.00000000000000))*(r22)*(x1973)))+(((IkReal(-1.00000000000000))*(cj11)*(x1976)))+(((cj13)*(x1975)))+(((sj11)*(x1971))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1973)*(x1974)))+(((sj13)*(x1975)))+(((cj12)*(sj11)*(x1972)))+(((cj12)*(x1977)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x1978=(cj14)*(cj14);
IkReal x1979=(sj14)*(sj14);
IkReal x1980=((IkReal(1.00000000000000))*(r01));
IkReal x1981=((sj13)*(sj14));
IkReal x1982=((cj14)*(sj13));
IkReal x1983=((r00)*(r11));
IkReal x1984=((cj13)*(x1978));
IkReal x1985=((cj13)*(x1979));
gconst16=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x1980)*(x1984)))+(((r02)*(r10)*(x1981)))+(((IkReal(-1.00000000000000))*(r10)*(x1980)*(x1985)))+(((x1983)*(x1985)))+(((x1983)*(x1984)))+(((r02)*(r11)*(x1982)))+(((IkReal(-1.00000000000000))*(r12)*(x1980)*(x1982)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1981)))));
IkReal x1986=(cj14)*(cj14);
IkReal x1987=(sj14)*(sj14);
IkReal x1988=((IkReal(1.00000000000000))*(r01));
IkReal x1989=((sj13)*(sj14));
IkReal x1990=((cj14)*(sj13));
IkReal x1991=((r00)*(r11));
IkReal x1992=((cj13)*(x1986));
IkReal x1993=((cj13)*(x1987));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(x1988)*(x1993)))+(((IkReal(-1.00000000000000))*(r10)*(x1988)*(x1992)))+(((x1991)*(x1993)))+(((r02)*(r10)*(x1989)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1989)))+(((r02)*(r11)*(x1990)))+(((IkReal(-1.00000000000000))*(r12)*(x1988)*(x1990)))+(((x1991)*(x1992))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
IkReal x1994=(cj14)*(cj14);
IkReal x1995=(sj14)*(sj14);
IkReal x1996=((cj13)*(r12));
IkReal x1997=((IkReal(1.00000000000000))*(r10));
IkReal x1998=((cj13)*(r02));
IkReal x1999=((r01)*(sj13));
IkReal x2000=((r00)*(r11)*(sj13));
gconst17=IKsign(((((r00)*(sj14)*(x1996)))+(((IkReal(-1.00000000000000))*(sj14)*(x1997)*(x1998)))+(((IkReal(-1.00000000000000))*(x1994)*(x1997)*(x1999)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1998)))+(((x1995)*(x2000)))+(((IkReal(-1.00000000000000))*(x1995)*(x1997)*(x1999)))+(((x1994)*(x2000)))+(((cj14)*(r01)*(x1996)))));
IkReal x2001=(cj14)*(cj14);
IkReal x2002=(sj14)*(sj14);
IkReal x2003=((cj13)*(r12));
IkReal x2004=((IkReal(1.00000000000000))*(r10));
IkReal x2005=((cj13)*(r02));
IkReal x2006=((r01)*(sj13));
IkReal x2007=((r00)*(r11)*(sj13));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2005)))+(((r00)*(sj14)*(x2003)))+(((IkReal(-1.00000000000000))*(sj14)*(x2004)*(x2005)))+(((x2002)*(x2007)))+(((x2001)*(x2007)))+(((IkReal(-1.00000000000000))*(x2001)*(x2004)*(x2006)))+(((cj14)*(r01)*(x2003)))+(((IkReal(-1.00000000000000))*(x2002)*(x2004)*(x2006))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x2008=((sj12)*(sj14));
IkReal x2009=((cj14)*(sj12));
IkReal x2010=((cj12)*(cj14)*(sj13));
IkReal x2011=((IkReal(1.00000000000000))*(cj12)*(cj13));
IkReal x2012=((IkReal(1.00000000000000))*(cj12)*(sj13)*(sj14));
if( IKabs(((gconst17)*(((((r11)*(x2009)))+(((r10)*(x2008)))+(((IkReal(-1.00000000000000))*(r11)*(x2012)))+(((r10)*(x2010)))+(((IkReal(-1.00000000000000))*(r12)*(x2011))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(r02)*(x2011)))+(((r01)*(x2009)))+(((r00)*(x2010)))+(((IkReal(-1.00000000000000))*(r01)*(x2012)))+(((r00)*(x2008))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst17)*(((((r11)*(x2009)))+(((r10)*(x2008)))+(((IkReal(-1.00000000000000))*(r11)*(x2012)))+(((r10)*(x2010)))+(((IkReal(-1.00000000000000))*(r12)*(x2011)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(r02)*(x2011)))+(((r01)*(x2009)))+(((r00)*(x2010)))+(((IkReal(-1.00000000000000))*(r01)*(x2012)))+(((r00)*(x2008)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x2013=IKsin(j9);
IkReal x2014=IKcos(j9);
IkReal x2015=((cj10)*(cj11));
IkReal x2016=((IkReal(1.00000000000000))*(cj14));
IkReal x2017=((IkReal(1.00000000000000))*(sj14));
IkReal x2018=((cj13)*(cj14));
IkReal x2019=((cj14)*(r10));
IkReal x2020=((r01)*(sj14));
IkReal x2021=((sj10)*(sj11));
IkReal x2022=((IkReal(1.00000000000000))*(r12));
IkReal x2023=((sj13)*(x2014));
IkReal x2024=((r02)*(x2013));
IkReal x2025=((r11)*(x2013));
IkReal x2026=((r10)*(x2014));
IkReal x2027=((r01)*(x2014));
IkReal x2028=((sj13)*(x2013));
IkReal x2029=((r11)*(x2014));
IkReal x2030=((cj13)*(x2013));
IkReal x2031=((r10)*(x2013));
IkReal x2032=((r00)*(x2014));
IkReal x2033=((cj13)*(x2014));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2016)*(x2029)))+(((cj14)*(r01)*(x2013)))+(cj12)+(((IkReal(-1.00000000000000))*(x2017)*(x2026)))+(((r00)*(sj14)*(x2013))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2017)*(x2032)))+(((IkReal(-1.00000000000000))*(x2016)*(x2027)))+(((IkReal(-1.00000000000000))*(x2017)*(x2031)))+(((sj12)*(x2021)))+(((IkReal(-1.00000000000000))*(x2016)*(x2025)))+(((IkReal(-1.00000000000000))*(sj12)*(x2015))));
evalcond[2]=((((x2020)*(x2030)))+(((IkReal(-1.00000000000000))*(cj13)*(x2017)*(x2029)))+(((IkReal(-1.00000000000000))*(r00)*(x2016)*(x2030)))+(((x2018)*(x2026)))+(((r12)*(x2023)))+(((IkReal(-1.00000000000000))*(sj13)*(x2024))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x2017)*(x2023)))+(((IkReal(-1.00000000000000))*(x2022)*(x2033)))+(((x2020)*(x2028)))+(((x2019)*(x2023)))+(((IkReal(-1.00000000000000))*(r00)*(x2016)*(x2028)))+(sj12)+(((cj13)*(x2024))));
evalcond[4]=((((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x2017)*(x2027)))+(((r02)*(x2023)))+(((r12)*(x2028)))+(((IkReal(-1.00000000000000))*(cj13)*(x2017)*(x2025)))+(((x2018)*(x2032)))+(((x2018)*(x2031)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x2033)))+(((IkReal(-1.00000000000000))*(r01)*(x2017)*(x2023)))+(((cj12)*(x2015)))+(((IkReal(-1.00000000000000))*(cj12)*(x2021)))+(((x2019)*(x2028)))+(((IkReal(-1.00000000000000))*(x2022)*(x2030)))+(((cj14)*(r00)*(x2023)))+(((IkReal(-1.00000000000000))*(sj13)*(x2017)*(x2025))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x2034=((cj12)*(sj13));
IkReal x2035=((cj12)*(cj13));
IkReal x2036=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst16)*(((((cj14)*(r10)*(x2035)))+(((r12)*(x2034)))+(((IkReal(-1.00000000000000))*(r11)*(x2035)*(x2036))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(r01)*(x2035)*(x2036)))+(((cj14)*(r00)*(x2035)))+(((r02)*(x2034))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst16)*(((((cj14)*(r10)*(x2035)))+(((r12)*(x2034)))+(((IkReal(-1.00000000000000))*(r11)*(x2035)*(x2036)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(r01)*(x2035)*(x2036)))+(((cj14)*(r00)*(x2035)))+(((r02)*(x2034)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x2037=IKsin(j9);
IkReal x2038=IKcos(j9);
IkReal x2039=((cj10)*(cj11));
IkReal x2040=((IkReal(1.00000000000000))*(cj14));
IkReal x2041=((IkReal(1.00000000000000))*(sj14));
IkReal x2042=((cj13)*(cj14));
IkReal x2043=((cj14)*(r10));
IkReal x2044=((r01)*(sj14));
IkReal x2045=((sj10)*(sj11));
IkReal x2046=((IkReal(1.00000000000000))*(r12));
IkReal x2047=((sj13)*(x2038));
IkReal x2048=((r02)*(x2037));
IkReal x2049=((r11)*(x2037));
IkReal x2050=((r10)*(x2038));
IkReal x2051=((r01)*(x2038));
IkReal x2052=((sj13)*(x2037));
IkReal x2053=((r11)*(x2038));
IkReal x2054=((cj13)*(x2037));
IkReal x2055=((r10)*(x2037));
IkReal x2056=((r00)*(x2038));
IkReal x2057=((cj13)*(x2038));
evalcond[0]=((((cj14)*(r01)*(x2037)))+(((r00)*(sj14)*(x2037)))+(cj12)+(((IkReal(-1.00000000000000))*(x2041)*(x2050)))+(((IkReal(-1.00000000000000))*(x2040)*(x2053))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2041)*(x2056)))+(((IkReal(-1.00000000000000))*(sj12)*(x2039)))+(((IkReal(-1.00000000000000))*(x2040)*(x2051)))+(((sj12)*(x2045)))+(((IkReal(-1.00000000000000))*(x2041)*(x2055)))+(((IkReal(-1.00000000000000))*(x2040)*(x2049))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x2041)*(x2053)))+(((x2044)*(x2054)))+(((r12)*(x2047)))+(((IkReal(-1.00000000000000))*(sj13)*(x2048)))+(((x2042)*(x2050)))+(((IkReal(-1.00000000000000))*(r00)*(x2040)*(x2054))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x2041)*(x2047)))+(((IkReal(-1.00000000000000))*(x2046)*(x2057)))+(((cj13)*(x2048)))+(((x2044)*(x2052)))+(sj12)+(((x2043)*(x2047)))+(((IkReal(-1.00000000000000))*(r00)*(x2040)*(x2052))));
evalcond[4]=((((r02)*(x2047)))+(((x2042)*(x2056)))+(((x2042)*(x2055)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x2041)*(x2049)))+(((IkReal(-1.00000000000000))*(cj13)*(x2041)*(x2051)))+(((r12)*(x2052)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj13)*(x2041)*(x2049)))+(((cj12)*(x2039)))+(((IkReal(-1.00000000000000))*(cj12)*(x2045)))+(((cj14)*(r00)*(x2047)))+(((x2043)*(x2052)))+(((IkReal(-1.00000000000000))*(x2046)*(x2054)))+(((IkReal(-1.00000000000000))*(r01)*(x2041)*(x2047)))+(((IkReal(-1.00000000000000))*(r02)*(x2057))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x2058=((sj12)*(sj14));
IkReal x2059=((cj14)*(sj12));
IkReal x2060=((cj12)*(cj14)*(sj13));
IkReal x2061=((IkReal(1.00000000000000))*(cj12)*(cj13));
IkReal x2062=((IkReal(1.00000000000000))*(cj12)*(sj13)*(sj14));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r11)*(x2062)))+(((r11)*(x2059)))+(((r10)*(x2060)))+(((r10)*(x2058)))+(((IkReal(-1.00000000000000))*(r12)*(x2061))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((r00)*(x2058)))+(((IkReal(-1.00000000000000))*(r01)*(x2062)))+(((r00)*(x2060)))+(((r01)*(x2059)))+(((IkReal(-1.00000000000000))*(r02)*(x2061))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(r11)*(x2062)))+(((r11)*(x2059)))+(((r10)*(x2060)))+(((r10)*(x2058)))+(((IkReal(-1.00000000000000))*(r12)*(x2061)))))), ((gconst1)*(((((r00)*(x2058)))+(((IkReal(-1.00000000000000))*(r01)*(x2062)))+(((r00)*(x2060)))+(((r01)*(x2059)))+(((IkReal(-1.00000000000000))*(r02)*(x2061)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[3];
IkReal x2063=IKsin(j9);
IkReal x2064=IKcos(j9);
IkReal x2065=((IkReal(1.00000000000000))*(sj14));
IkReal x2066=((sj13)*(x2064));
IkReal x2067=((cj13)*(x2063));
IkReal x2068=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x2069=((r01)*(x2063));
IkReal x2070=((r10)*(x2064));
IkReal x2071=((sj13)*(x2063));
IkReal x2072=((cj13)*(x2064));
evalcond[0]=((((cj14)*(x2069)))+(((r00)*(sj14)*(x2063)))+(cj12)+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2064)))+(((IkReal(-1.00000000000000))*(x2065)*(x2070))));
evalcond[1]=((((r01)*(sj14)*(x2067)))+(((IkReal(-1.00000000000000))*(x2067)*(x2068)))+(((IkReal(-1.00000000000000))*(r02)*(x2071)))+(((IkReal(-1.00000000000000))*(r11)*(x2065)*(x2072)))+(((r12)*(x2066)))+(((cj13)*(cj14)*(x2070))));
evalcond[2]=((((sj13)*(sj14)*(x2069)))+(((IkReal(-1.00000000000000))*(r11)*(x2065)*(x2066)))+(((IkReal(-1.00000000000000))*(x2068)*(x2071)))+(((cj14)*(r10)*(x2066)))+(((r02)*(x2067)))+(((IkReal(-1.00000000000000))*(r12)*(x2072)))+(sj12));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2073=((IkReal(1.00000000000000))*(sj13));
IkReal x2074=((cj14)*(sj9));
IkReal x2075=((cj9)*(sj14));
IkReal x2076=((cj13)*(sj9));
IkReal x2077=((sj13)*(sj14));
IkReal x2078=((cj9)*(sj13));
IkReal x2079=((IkReal(1.00000000000000))*(cj13));
IkReal x2080=((cj14)*(r10));
IkReal x2081=((sj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x2075)))+(((r01)*(x2074)))+(((r00)*(x2081)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2073)))+(((r21)*(x2077)))+(((cj13)*(r22))));
evalcond[3]=((IkReal(-0.0800000000000000))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((npy)*(x2077)))+(((IkReal(-1.00000000000000))*(cj14)*(npx)*(x2073))));
evalcond[4]=((((r01)*(sj14)*(x2076)))+(((r12)*(x2078)))+(((IkReal(-1.00000000000000))*(r11)*(x2075)*(x2079)))+(((IkReal(-1.00000000000000))*(r00)*(x2074)*(x2079)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2073)))+(((cj13)*(cj9)*(x2080))));
evalcond[5]=((IkReal(1.00000000000000))+(((x2078)*(x2080)))+(((IkReal(-1.00000000000000))*(r00)*(x2073)*(x2074)))+(((r02)*(x2076)))+(((IkReal(-1.00000000000000))*(r11)*(x2073)*(x2075)))+(((r01)*(sj9)*(x2077)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2079))));
evalcond[6]=((((r10)*(sj13)*(x2074)))+(((IkReal(-1.00000000000000))*(r11)*(x2073)*(x2081)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x2079)))+(((IkReal(-1.00000000000000))*(r01)*(x2073)*(x2075)))+(((IkReal(-1.00000000000000))*(r12)*(x2076)))+(((cj14)*(r00)*(x2078))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2082=((IkReal(4.00000000000000))*(sj14));
IkReal x2083=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x2082)))+(((IkReal(-1.00000000000000))*(npy)*(x2083))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((cj13)*(npx)*(x2083)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2082))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x2082)))+(((IkReal(-1.00000000000000))*(npy)*(x2083)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((cj13)*(npx)*(x2083)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2082)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x2082)))+(((IkReal(-1.00000000000000))*(npy)*(x2083)))), ((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((cj13)*(npx)*(x2083)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2082)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0200000000000000))+(((cj14)*(npy)))+(((IkReal(0.250000000000000))*(IKsin(j11))))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(npx)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((cj13)*(npy)*(sj14))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst57;
gconst57=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2084=((IkReal(1.00000000000000))*(cj11));
IkReal x2085=((r20)*(sj14));
IkReal x2086=((cj14)*(r21));
IkReal x2087=((cj14)*(cj9)*(r01));
IkReal x2088=((r10)*(sj14)*(sj9));
IkReal x2089=((cj9)*(r00)*(sj14));
IkReal x2090=((cj14)*(r11)*(sj9));
if( IKabs(((gconst57)*(((((cj11)*(x2086)))+(((sj11)*(x2087)))+(((sj11)*(x2088)))+(((cj11)*(x2085)))+(((sj11)*(x2090)))+(((sj11)*(x2089))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst57)*(((((sj11)*(x2086)))+(((IkReal(-1.00000000000000))*(x2084)*(x2088)))+(((IkReal(-1.00000000000000))*(x2084)*(x2090)))+(((IkReal(-1.00000000000000))*(x2084)*(x2089)))+(((sj11)*(x2085)))+(((IkReal(-1.00000000000000))*(x2084)*(x2087))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst57)*(((((cj11)*(x2086)))+(((sj11)*(x2087)))+(((sj11)*(x2088)))+(((cj11)*(x2085)))+(((sj11)*(x2090)))+(((sj11)*(x2089)))))), ((gconst57)*(((((sj11)*(x2086)))+(((IkReal(-1.00000000000000))*(x2084)*(x2088)))+(((IkReal(-1.00000000000000))*(x2084)*(x2090)))+(((IkReal(-1.00000000000000))*(x2084)*(x2089)))+(((sj11)*(x2085)))+(((IkReal(-1.00000000000000))*(x2084)*(x2087)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2091=IKsin(j10);
IkReal x2092=IKcos(j10);
IkReal x2093=((cj13)*(sj14));
IkReal x2094=((cj13)*(cj14));
IkReal x2095=((r10)*(sj9));
IkReal x2096=((IkReal(1.00000000000000))*(cj9));
IkReal x2097=((sj11)*(x2091));
IkReal x2098=((IkReal(1.00000000000000))*(x2092));
IkReal x2099=((cj11)*(x2091));
IkReal x2100=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2101=((cj11)*(x2098));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x2098)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2099))));
evalcond[1]=((x2097)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2101)))+(((IkReal(-1.00000000000000))*(r20)*(x2094)))+(((r21)*(x2093))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2096)))+(((IkReal(-1.00000000000000))*(cj14)*(x2100)))+(x2097)+(((IkReal(-1.00000000000000))*(sj14)*(x2095)))+(((IkReal(-1.00000000000000))*(x2101)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2096))));
evalcond[3]=((((x2094)*(x2095)))+(x2099)+(((sj11)*(x2092)))+(((cj9)*(r00)*(x2094)))+(((IkReal(-1.00000000000000))*(x2093)*(x2100)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(r01)*(x2093)*(x2096)))+(((cj9)*(r02)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2102=((r20)*(sj14));
IkReal x2103=((IkReal(1.00000000000000))*(cj13));
IkReal x2104=((cj14)*(r20));
IkReal x2105=((r21)*(sj14));
IkReal x2106=((r22)*(sj13));
IkReal x2107=((cj14)*(r21));
if( IKabs(((gconst56)*(((((cj11)*(x2102)))+(((cj13)*(sj11)*(x2104)))+(((sj11)*(x2106)))+(((IkReal(-1.00000000000000))*(sj11)*(x2103)*(x2105)))+(((cj11)*(x2107))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((IkReal(-1.00000000000000))*(cj11)*(x2106)))+(((sj11)*(x2102)))+(((cj11)*(cj13)*(x2105)))+(((sj11)*(x2107)))+(((IkReal(-1.00000000000000))*(cj11)*(x2103)*(x2104))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst56)*(((((cj11)*(x2102)))+(((cj13)*(sj11)*(x2104)))+(((sj11)*(x2106)))+(((IkReal(-1.00000000000000))*(sj11)*(x2103)*(x2105)))+(((cj11)*(x2107)))))), ((gconst56)*(((((IkReal(-1.00000000000000))*(cj11)*(x2106)))+(((sj11)*(x2102)))+(((cj11)*(cj13)*(x2105)))+(((sj11)*(x2107)))+(((IkReal(-1.00000000000000))*(cj11)*(x2103)*(x2104)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2108=IKsin(j10);
IkReal x2109=IKcos(j10);
IkReal x2110=((cj13)*(sj14));
IkReal x2111=((cj13)*(cj14));
IkReal x2112=((r10)*(sj9));
IkReal x2113=((IkReal(1.00000000000000))*(cj9));
IkReal x2114=((sj11)*(x2108));
IkReal x2115=((IkReal(1.00000000000000))*(x2109));
IkReal x2116=((cj11)*(x2108));
IkReal x2117=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2118=((cj11)*(x2115));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2116)))+(((IkReal(-1.00000000000000))*(sj11)*(x2115))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x2110)))+(((IkReal(-1.00000000000000))*(x2118)))+(((IkReal(-1.00000000000000))*(r20)*(x2111)))+(x2114));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2113)))+(((IkReal(-1.00000000000000))*(sj14)*(x2112)))+(((IkReal(-1.00000000000000))*(x2118)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2113)))+(((IkReal(-1.00000000000000))*(cj14)*(x2117)))+(x2114));
evalcond[3]=((((x2111)*(x2112)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x2110)*(x2117)))+(((sj11)*(x2109)))+(((IkReal(-1.00000000000000))*(r01)*(x2110)*(x2113)))+(((cj9)*(r00)*(x2111)))+(x2116));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2119=((IkReal(1.00000000000000))*(sj13));
IkReal x2120=((cj14)*(sj9));
IkReal x2121=((cj9)*(sj14));
IkReal x2122=((cj13)*(sj9));
IkReal x2123=((sj13)*(sj14));
IkReal x2124=((cj9)*(sj13));
IkReal x2125=((IkReal(1.00000000000000))*(cj13));
IkReal x2126=((cj14)*(r10));
IkReal x2127=((sj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x2121)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((r00)*(x2127)))+(((r01)*(x2120))));
evalcond[2]=((((r21)*(x2123)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2119)))+(((cj13)*(r22))));
evalcond[3]=((IkReal(0.0800000000000000))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(cj14)*(npx)*(x2119)))+(((npy)*(x2123))));
evalcond[4]=((((r01)*(sj14)*(x2122)))+(((cj13)*(cj9)*(x2126)))+(((IkReal(-1.00000000000000))*(r00)*(x2120)*(x2125)))+(((IkReal(-1.00000000000000))*(r11)*(x2121)*(x2125)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2119)))+(((r12)*(x2124))));
evalcond[5]=((IkReal(-1.00000000000000))+(((r02)*(x2122)))+(((IkReal(-1.00000000000000))*(r11)*(x2119)*(x2121)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2125)))+(((x2124)*(x2126)))+(((IkReal(-1.00000000000000))*(r00)*(x2119)*(x2120)))+(((r01)*(sj9)*(x2123))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x2122)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x2125)))+(((IkReal(-1.00000000000000))*(r11)*(x2119)*(x2127)))+(((cj14)*(r00)*(x2124)))+(((IkReal(-1.00000000000000))*(r01)*(x2119)*(x2121)))+(((r10)*(sj13)*(x2120))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2128=((IkReal(4.00000000000000))*(sj14));
IkReal x2129=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((IkReal(0.0800000000000000))+(((npx)*(x2128)))+(((npy)*(x2129))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((cj13)*(npx)*(x2129)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2128)))+(((IkReal(4.00000000000000))*(npz)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((npx)*(x2128)))+(((npy)*(x2129)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((cj13)*(npx)*(x2129)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2128)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.0800000000000000))+(((npx)*(x2128)))+(((npy)*(x2129)))), ((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((cj13)*(npx)*(x2129)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2128)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0200000000000000))+(((cj14)*(npy)))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(npx)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((cj13)*(npy)*(sj14))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst58;
gconst58=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2130=((IkReal(1.00000000000000))*(cj14));
IkReal x2131=((sj11)*(sj9));
IkReal x2132=((cj9)*(r01));
IkReal x2133=((cj11)*(cj14));
IkReal x2134=((cj9)*(r00));
IkReal x2135=((r10)*(sj14));
IkReal x2136=((cj11)*(sj14));
IkReal x2137=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(r20)*(x2136)))+(((IkReal(-1.00000000000000))*(sj11)*(x2130)*(x2132)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x2130)))+(((IkReal(-1.00000000000000))*(x2134)*(x2137)))+(((IkReal(-1.00000000000000))*(x2131)*(x2135)))+(((IkReal(-1.00000000000000))*(r11)*(x2130)*(x2131))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(((((cj11)*(sj9)*(x2135)))+(((x2134)*(x2136)))+(((x2132)*(x2133)))+(((IkReal(-1.00000000000000))*(r20)*(x2137)))+(((r11)*(sj9)*(x2133)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x2130))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst59)*(((((IkReal(-1.00000000000000))*(r20)*(x2136)))+(((IkReal(-1.00000000000000))*(sj11)*(x2130)*(x2132)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x2130)))+(((IkReal(-1.00000000000000))*(x2134)*(x2137)))+(((IkReal(-1.00000000000000))*(x2131)*(x2135)))+(((IkReal(-1.00000000000000))*(r11)*(x2130)*(x2131)))))), ((gconst59)*(((((cj11)*(sj9)*(x2135)))+(((x2134)*(x2136)))+(((x2132)*(x2133)))+(((IkReal(-1.00000000000000))*(r20)*(x2137)))+(((r11)*(sj9)*(x2133)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x2130)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2138=IKsin(j10);
IkReal x2139=IKcos(j10);
IkReal x2140=((cj14)*(sj9));
IkReal x2141=((IkReal(1.00000000000000))*(r11));
IkReal x2142=((cj13)*(sj14));
IkReal x2143=((IkReal(1.00000000000000))*(cj9));
IkReal x2144=((cj13)*(cj14));
IkReal x2145=((cj11)*(x2138));
IkReal x2146=((sj11)*(x2139));
IkReal x2147=((cj11)*(x2139));
IkReal x2148=((sj11)*(x2138));
IkReal x2149=((x2146)+(x2145));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x2149));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x2144)))+(((IkReal(-1.00000000000000))*(x2147)))+(x2148)+(((r21)*(x2142))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x2148)))+(((IkReal(-1.00000000000000))*(x2140)*(x2141)))+(x2147)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2143)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2143))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2142)*(x2143)))+(((cj9)*(r00)*(x2144)))+(((IkReal(-1.00000000000000))*(sj9)*(x2141)*(x2142)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(x2149)+(((cj13)*(r10)*(x2140))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2150=((cj13)*(sj11));
IkReal x2151=((r21)*(sj14));
IkReal x2152=((cj14)*(r20));
IkReal x2153=((cj11)*(cj13));
IkReal x2154=((r22)*(sj13));
IkReal x2155=((r20)*(sj14));
IkReal x2156=((cj14)*(r21));
if( IKabs(((gconst58)*(((((IkReal(-1.00000000000000))*(x2150)*(x2152)))+(((cj11)*(x2156)))+(((x2150)*(x2151)))+(((IkReal(-1.00000000000000))*(sj11)*(x2154)))+(((cj11)*(x2155))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst58)*(((((IkReal(-1.00000000000000))*(x2151)*(x2153)))+(((cj11)*(x2154)))+(((x2152)*(x2153)))+(((sj11)*(x2156)))+(((sj11)*(x2155))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst58)*(((((IkReal(-1.00000000000000))*(x2150)*(x2152)))+(((cj11)*(x2156)))+(((x2150)*(x2151)))+(((IkReal(-1.00000000000000))*(sj11)*(x2154)))+(((cj11)*(x2155)))))), ((gconst58)*(((((IkReal(-1.00000000000000))*(x2151)*(x2153)))+(((cj11)*(x2154)))+(((x2152)*(x2153)))+(((sj11)*(x2156)))+(((sj11)*(x2155)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2157=IKsin(j10);
IkReal x2158=IKcos(j10);
IkReal x2159=((cj14)*(sj9));
IkReal x2160=((IkReal(1.00000000000000))*(r11));
IkReal x2161=((cj13)*(sj14));
IkReal x2162=((IkReal(1.00000000000000))*(cj9));
IkReal x2163=((cj13)*(cj14));
IkReal x2164=((cj11)*(x2157));
IkReal x2165=((sj11)*(x2158));
IkReal x2166=((cj11)*(x2158));
IkReal x2167=((sj11)*(x2157));
IkReal x2168=((x2165)+(x2164));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x2168));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2166)))+(x2167)+(((IkReal(-1.00000000000000))*(r20)*(x2163)))+(((r21)*(x2161))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(x2166)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2162)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2162)))+(((IkReal(-1.00000000000000))*(x2167)))+(((IkReal(-1.00000000000000))*(x2159)*(x2160))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj9)*(x2160)*(x2161)))+(((IkReal(-1.00000000000000))*(r01)*(x2161)*(x2162)))+(((cj13)*(r10)*(x2159)))+(x2168)+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x2163))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2169=((cj13)*(sj9));
IkReal x2170=((r01)*(sj14));
IkReal x2171=((cj9)*(sj13));
IkReal x2172=((sj13)*(sj9));
IkReal x2173=((cj14)*(r01));
IkReal x2174=((cj14)*(r10));
IkReal x2175=((cj13)*(cj9));
IkReal x2176=((IkReal(1.00000000000000))*(cj9));
IkReal x2177=((sj14)*(sj9));
IkReal x2178=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2179=((sj14)*(x2176));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2176)))+(((sj9)*(x2173)))+(((IkReal(-1.00000000000000))*(r10)*(x2179)))+(((r00)*(x2177))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2173)*(x2176)))+(((IkReal(-1.00000000000000))*(r11)*(x2178)))+(((IkReal(-1.00000000000000))*(r10)*(x2177)))+(((IkReal(-1.00000000000000))*(r00)*(x2179))));
evalcond[5]=((((x2169)*(x2170)))+(((IkReal(-1.00000000000000))*(r02)*(x2172)))+(((x2174)*(x2175)))+(((r12)*(x2171)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2175)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2169))));
evalcond[6]=((((x2171)*(x2174)))+(((x2170)*(x2172)))+(((IkReal(-1.00000000000000))*(r12)*(x2175)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2171)))+(((r02)*(x2169)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2172))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2180=((IkReal(4.00000000000000))*(cj13));
IkReal x2181=((npy)*(sj14));
IkReal x2182=((cj14)*(npx));
IkReal x2183=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.0800000000000000))+(((IkReal(0.320000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2182)*(x2183)))+(((x2181)*(x2183)))+(((npz)*(x2180))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((x2180)*(x2182)))+(((IkReal(-0.320000000000000))*(cj13)))+(((npz)*(x2183)))+(((IkReal(-1.00000000000000))*(x2180)*(x2181))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((IkReal(0.320000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2182)*(x2183)))+(((x2181)*(x2183)))+(((npz)*(x2180)))))+IKsqr(((IkReal(-0.920000000000000))+(((x2180)*(x2182)))+(((IkReal(-0.320000000000000))*(cj13)))+(((npz)*(x2183)))+(((IkReal(-1.00000000000000))*(x2180)*(x2181)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.0800000000000000))+(((IkReal(0.320000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2182)*(x2183)))+(((x2181)*(x2183)))+(((npz)*(x2180)))), ((IkReal(-0.920000000000000))+(((x2180)*(x2182)))+(((IkReal(-0.320000000000000))*(cj13)))+(((npz)*(x2183)))+(((IkReal(-1.00000000000000))*(x2180)*(x2181)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x2184=((npy)*(sj14));
IkReal x2185=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(-1.00000000000000))*(cj13)*(x2185)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((cj13)*(x2184))));
evalcond[1]=((IkReal(0.0200000000000000))+(((cj13)*(npz)))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((IkReal(0.0800000000000000))*(sj13)))+(((sj13)*(x2184)))+(((IkReal(-1.00000000000000))*(sj13)*(x2185))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst60;
gconst60=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2186=((cj13)*(sj14));
IkReal x2187=((IkReal(1.00000000000000))*(cj11));
IkReal x2188=((r11)*(sj9));
IkReal x2189=((IkReal(1.00000000000000))*(sj11));
IkReal x2190=((cj13)*(cj14));
IkReal x2191=((cj11)*(sj13));
IkReal x2192=((r12)*(sj9));
IkReal x2193=((cj9)*(r01));
IkReal x2194=((sj11)*(sj13));
IkReal x2195=((cj9)*(r02));
IkReal x2196=((r10)*(sj9));
IkReal x2197=((cj9)*(r00));
if( IKabs(((gconst61)*(((((x2191)*(x2195)))+(((x2191)*(x2192)))+(((IkReal(-1.00000000000000))*(r20)*(x2189)*(x2190)))+(((r21)*(sj11)*(x2186)))+(((cj11)*(x2190)*(x2196)))+(((IkReal(-1.00000000000000))*(x2186)*(x2187)*(x2193)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2189)))+(((cj11)*(x2190)*(x2197)))+(((IkReal(-1.00000000000000))*(x2186)*(x2187)*(x2188))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst61)*(((((x2192)*(x2194)))+(((IkReal(-1.00000000000000))*(x2186)*(x2189)*(x2193)))+(((IkReal(-1.00000000000000))*(r21)*(x2186)*(x2187)))+(((sj11)*(x2190)*(x2196)))+(((r22)*(x2191)))+(((sj11)*(x2190)*(x2197)))+(((x2194)*(x2195)))+(((IkReal(-1.00000000000000))*(x2186)*(x2188)*(x2189)))+(((cj11)*(r20)*(x2190))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst61)*(((((x2191)*(x2195)))+(((x2191)*(x2192)))+(((IkReal(-1.00000000000000))*(r20)*(x2189)*(x2190)))+(((r21)*(sj11)*(x2186)))+(((cj11)*(x2190)*(x2196)))+(((IkReal(-1.00000000000000))*(x2186)*(x2187)*(x2193)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2189)))+(((cj11)*(x2190)*(x2197)))+(((IkReal(-1.00000000000000))*(x2186)*(x2187)*(x2188)))))), ((gconst61)*(((((x2192)*(x2194)))+(((IkReal(-1.00000000000000))*(x2186)*(x2189)*(x2193)))+(((IkReal(-1.00000000000000))*(r21)*(x2186)*(x2187)))+(((sj11)*(x2190)*(x2196)))+(((r22)*(x2191)))+(((sj11)*(x2190)*(x2197)))+(((x2194)*(x2195)))+(((IkReal(-1.00000000000000))*(x2186)*(x2188)*(x2189)))+(((cj11)*(r20)*(x2190)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2198=IKsin(j10);
IkReal x2199=IKcos(j10);
IkReal x2200=((IkReal(1.00000000000000))*(sj13));
IkReal x2201=((r11)*(sj9));
IkReal x2202=((cj9)*(r01));
IkReal x2203=((r21)*(sj14));
IkReal x2204=((cj9)*(r02));
IkReal x2205=((sj13)*(sj9));
IkReal x2206=((cj14)*(r10));
IkReal x2207=((IkReal(1.00000000000000))*(cj13));
IkReal x2208=((cj14)*(r20));
IkReal x2209=((cj11)*(x2198));
IkReal x2210=((sj11)*(x2199));
IkReal x2211=((sj14)*(x2207));
IkReal x2212=((sj11)*(x2198));
IkReal x2213=((cj11)*(x2199));
IkReal x2214=((cj14)*(cj9)*(r00));
IkReal x2215=((x2210)+(x2209));
evalcond[0]=((x2212)+(((IkReal(-1.00000000000000))*(x2207)*(x2208)))+(((IkReal(-1.00000000000000))*(x2213)))+(((cj13)*(x2203)))+(((IkReal(-1.00000000000000))*(r22)*(x2200))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2200)*(x2208)))+(x2215)+(((sj13)*(x2203)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x2206)))+(x2215)+(((IkReal(-1.00000000000000))*(x2201)*(x2211)))+(((cj13)*(x2214)))+(((sj13)*(x2204)))+(((r12)*(x2205)))+(((IkReal(-1.00000000000000))*(x2202)*(x2211))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x2200)*(x2201)))+(x2213)+(((IkReal(-1.00000000000000))*(sj14)*(x2200)*(x2202)))+(((sj13)*(x2214)))+(((IkReal(-1.00000000000000))*(x2204)*(x2207)))+(((IkReal(-1.00000000000000))*(x2212)))+(((x2205)*(x2206)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2207))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2216=((cj13)*(sj11));
IkReal x2217=((r21)*(sj14));
IkReal x2218=((cj11)*(cj13));
IkReal x2219=((cj11)*(sj13));
IkReal x2220=((sj11)*(sj13));
IkReal x2221=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst60)*(((((x2216)*(x2217)))+(((x2217)*(x2219)))+(((IkReal(-1.00000000000000))*(x2219)*(x2221)))+(((r22)*(x2218)))+(((IkReal(-1.00000000000000))*(x2216)*(x2221)))+(((IkReal(-1.00000000000000))*(r22)*(x2220))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((r22)*(x2216)))+(((cj14)*(r20)*(x2218)))+(((x2217)*(x2220)))+(((IkReal(-1.00000000000000))*(x2220)*(x2221)))+(((r22)*(x2219)))+(((IkReal(-1.00000000000000))*(x2217)*(x2218))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst60)*(((((x2216)*(x2217)))+(((x2217)*(x2219)))+(((IkReal(-1.00000000000000))*(x2219)*(x2221)))+(((r22)*(x2218)))+(((IkReal(-1.00000000000000))*(x2216)*(x2221)))+(((IkReal(-1.00000000000000))*(r22)*(x2220)))))), ((gconst60)*(((((r22)*(x2216)))+(((cj14)*(r20)*(x2218)))+(((x2217)*(x2220)))+(((IkReal(-1.00000000000000))*(x2220)*(x2221)))+(((r22)*(x2219)))+(((IkReal(-1.00000000000000))*(x2217)*(x2218)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2222=IKsin(j10);
IkReal x2223=IKcos(j10);
IkReal x2224=((IkReal(1.00000000000000))*(sj13));
IkReal x2225=((r11)*(sj9));
IkReal x2226=((cj9)*(r01));
IkReal x2227=((r21)*(sj14));
IkReal x2228=((cj9)*(r02));
IkReal x2229=((sj13)*(sj9));
IkReal x2230=((cj14)*(r10));
IkReal x2231=((IkReal(1.00000000000000))*(cj13));
IkReal x2232=((cj14)*(r20));
IkReal x2233=((cj11)*(x2222));
IkReal x2234=((sj11)*(x2223));
IkReal x2235=((sj14)*(x2231));
IkReal x2236=((sj11)*(x2222));
IkReal x2237=((cj11)*(x2223));
IkReal x2238=((cj14)*(cj9)*(r00));
IkReal x2239=((x2233)+(x2234));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2231)*(x2232)))+(((IkReal(-1.00000000000000))*(r22)*(x2224)))+(((IkReal(-1.00000000000000))*(x2237)))+(((cj13)*(x2227)))+(x2236));
evalcond[1]=((((sj13)*(x2227)))+(x2239)+(((IkReal(-1.00000000000000))*(x2224)*(x2232)))+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x2228)))+(((cj13)*(x2238)))+(((r12)*(x2229)))+(((IkReal(-1.00000000000000))*(x2225)*(x2235)))+(((cj13)*(sj9)*(x2230)))+(((IkReal(-1.00000000000000))*(x2226)*(x2235)))+(x2239));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x2224)*(x2226)))+(((x2229)*(x2230)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2231)))+(((sj13)*(x2238)))+(((IkReal(-1.00000000000000))*(sj14)*(x2224)*(x2225)))+(((IkReal(-1.00000000000000))*(x2236)))+(x2237)+(((IkReal(-1.00000000000000))*(x2228)*(x2231))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2240=((cj13)*(sj9));
IkReal x2241=((r01)*(sj14));
IkReal x2242=((cj9)*(sj13));
IkReal x2243=((sj13)*(sj9));
IkReal x2244=((cj14)*(r01));
IkReal x2245=((cj14)*(r10));
IkReal x2246=((cj13)*(cj9));
IkReal x2247=((IkReal(1.00000000000000))*(cj9));
IkReal x2248=((sj14)*(sj9));
IkReal x2249=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2250=((sj14)*(x2247));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2247)))+(((sj9)*(x2244)))+(((IkReal(-1.00000000000000))*(r10)*(x2250)))+(((r00)*(x2248))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x2248)))+(((IkReal(-1.00000000000000))*(x2244)*(x2247)))+(((IkReal(-1.00000000000000))*(r11)*(x2249)))+(((IkReal(-1.00000000000000))*(r00)*(x2250))));
evalcond[5]=((((x2245)*(x2246)))+(((x2240)*(x2241)))+(((IkReal(-1.00000000000000))*(r02)*(x2243)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2240)))+(((r12)*(x2242)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2246))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x2246)))+(((x2241)*(x2243)))+(((r02)*(x2240)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2243)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2242)))+(((x2242)*(x2245))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2251=((IkReal(4.00000000000000))*(cj13));
IkReal x2252=((npy)*(sj14));
IkReal x2253=((cj14)*(npx));
IkReal x2254=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x2251)))+(((IkReal(-1.00000000000000))*(x2252)*(x2254)))+(((x2253)*(x2254)))+(((IkReal(-0.320000000000000))*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((x2251)*(x2253)))+(((IkReal(-1.00000000000000))*(x2251)*(x2252)))+(((npz)*(x2254))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x2251)))+(((IkReal(-1.00000000000000))*(x2252)*(x2254)))+(((x2253)*(x2254)))+(((IkReal(-0.320000000000000))*(sj13)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((x2251)*(x2253)))+(((IkReal(-1.00000000000000))*(x2251)*(x2252)))+(((npz)*(x2254)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x2251)))+(((IkReal(-1.00000000000000))*(x2252)*(x2254)))+(((x2253)*(x2254)))+(((IkReal(-0.320000000000000))*(sj13)))), ((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((x2251)*(x2253)))+(((IkReal(-1.00000000000000))*(x2251)*(x2252)))+(((npz)*(x2254)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x2255=((npy)*(sj14));
IkReal x2256=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((cj13)*(x2255)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x2256))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((sj13)*(x2255)))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(sj13)*(x2256)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(IKsin(j11)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst63;
gconst63=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2257=((cj13)*(sj14));
IkReal x2258=((IkReal(1.00000000000000))*(cj11));
IkReal x2259=((r11)*(sj9));
IkReal x2260=((IkReal(1.00000000000000))*(sj11));
IkReal x2261=((cj13)*(cj14));
IkReal x2262=((cj11)*(sj13));
IkReal x2263=((r12)*(sj9));
IkReal x2264=((cj9)*(r01));
IkReal x2265=((sj11)*(sj13));
IkReal x2266=((r10)*(sj9));
IkReal x2267=((cj9)*(r00));
IkReal x2268=((cj9)*(r02));
if( IKabs(((gconst63)*(((((cj11)*(x2261)*(x2266)))+(((IkReal(-1.00000000000000))*(x2257)*(x2258)*(x2264)))+(((x2262)*(x2268)))+(((cj11)*(x2261)*(x2267)))+(((r21)*(sj11)*(x2257)))+(((IkReal(-1.00000000000000))*(x2257)*(x2258)*(x2259)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2260)))+(((x2262)*(x2263)))+(((IkReal(-1.00000000000000))*(r20)*(x2260)*(x2261))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*(((((x2263)*(x2265)))+(((IkReal(-1.00000000000000))*(x2257)*(x2259)*(x2260)))+(((IkReal(-1.00000000000000))*(x2257)*(x2260)*(x2264)))+(((sj11)*(x2261)*(x2266)))+(((x2265)*(x2268)))+(((IkReal(-1.00000000000000))*(r21)*(x2257)*(x2258)))+(((cj11)*(r20)*(x2261)))+(((r22)*(x2262)))+(((sj11)*(x2261)*(x2267))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst63)*(((((cj11)*(x2261)*(x2266)))+(((IkReal(-1.00000000000000))*(x2257)*(x2258)*(x2264)))+(((x2262)*(x2268)))+(((cj11)*(x2261)*(x2267)))+(((r21)*(sj11)*(x2257)))+(((IkReal(-1.00000000000000))*(x2257)*(x2258)*(x2259)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2260)))+(((x2262)*(x2263)))+(((IkReal(-1.00000000000000))*(r20)*(x2260)*(x2261)))))), ((gconst63)*(((((x2263)*(x2265)))+(((IkReal(-1.00000000000000))*(x2257)*(x2259)*(x2260)))+(((IkReal(-1.00000000000000))*(x2257)*(x2260)*(x2264)))+(((sj11)*(x2261)*(x2266)))+(((x2265)*(x2268)))+(((IkReal(-1.00000000000000))*(r21)*(x2257)*(x2258)))+(((cj11)*(r20)*(x2261)))+(((r22)*(x2262)))+(((sj11)*(x2261)*(x2267)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2269=IKsin(j10);
IkReal x2270=IKcos(j10);
IkReal x2271=((IkReal(1.00000000000000))*(sj13));
IkReal x2272=((r11)*(sj9));
IkReal x2273=((cj9)*(r01));
IkReal x2274=((IkReal(1.00000000000000))*(cj11));
IkReal x2275=((r21)*(sj14));
IkReal x2276=((cj9)*(r02));
IkReal x2277=((sj13)*(sj9));
IkReal x2278=((cj14)*(r10));
IkReal x2279=((IkReal(1.00000000000000))*(cj13));
IkReal x2280=((cj14)*(r20));
IkReal x2281=((sj11)*(x2269));
IkReal x2282=((sj14)*(x2279));
IkReal x2283=((sj11)*(x2270));
IkReal x2284=((cj14)*(cj9)*(r00));
IkReal x2285=((x2270)*(x2274));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2285)))+(((cj13)*(x2275)))+(((IkReal(-1.00000000000000))*(r22)*(x2271)))+(x2281)+(((IkReal(-1.00000000000000))*(x2279)*(x2280))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2283)))+(((IkReal(-1.00000000000000))*(x2269)*(x2274)))+(((IkReal(-1.00000000000000))*(x2271)*(x2280)))+(((sj13)*(x2275)))+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x2276)))+(((r12)*(x2277)))+(((cj13)*(x2284)))+(((IkReal(-1.00000000000000))*(x2273)*(x2282)))+(((IkReal(-1.00000000000000))*(x2272)*(x2282)))+(((cj13)*(sj9)*(x2278)))+(x2283)+(((cj11)*(x2269))));
evalcond[3]=((((x2277)*(x2278)))+(((sj13)*(x2284)))+(((IkReal(-1.00000000000000))*(x2285)))+(((IkReal(-1.00000000000000))*(sj14)*(x2271)*(x2272)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2279)))+(x2281)+(((IkReal(-1.00000000000000))*(x2276)*(x2279)))+(((IkReal(-1.00000000000000))*(sj14)*(x2271)*(x2273))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2286=((cj13)*(sj11));
IkReal x2287=((cj11)*(cj13));
IkReal x2288=((r21)*(sj14));
IkReal x2289=((cj11)*(sj13));
IkReal x2290=((sj11)*(sj13));
IkReal x2291=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst62)*(((((r22)*(x2287)))+(((IkReal(-1.00000000000000))*(x2289)*(x2291)))+(((r22)*(x2290)))+(((IkReal(-1.00000000000000))*(x2286)*(x2288)))+(((x2288)*(x2289)))+(((cj14)*(r20)*(x2286))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*(((((x2287)*(x2288)))+(((IkReal(-1.00000000000000))*(x2287)*(x2291)))+(((x2288)*(x2290)))+(((r22)*(x2286)))+(((IkReal(-1.00000000000000))*(x2290)*(x2291)))+(((IkReal(-1.00000000000000))*(r22)*(x2289))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst62)*(((((r22)*(x2287)))+(((IkReal(-1.00000000000000))*(x2289)*(x2291)))+(((r22)*(x2290)))+(((IkReal(-1.00000000000000))*(x2286)*(x2288)))+(((x2288)*(x2289)))+(((cj14)*(r20)*(x2286)))))), ((gconst62)*(((((x2287)*(x2288)))+(((IkReal(-1.00000000000000))*(x2287)*(x2291)))+(((x2288)*(x2290)))+(((r22)*(x2286)))+(((IkReal(-1.00000000000000))*(x2290)*(x2291)))+(((IkReal(-1.00000000000000))*(r22)*(x2289)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2292=IKsin(j10);
IkReal x2293=IKcos(j10);
IkReal x2294=((IkReal(1.00000000000000))*(sj13));
IkReal x2295=((r11)*(sj9));
IkReal x2296=((cj9)*(r01));
IkReal x2297=((IkReal(1.00000000000000))*(cj11));
IkReal x2298=((r21)*(sj14));
IkReal x2299=((cj9)*(r02));
IkReal x2300=((sj13)*(sj9));
IkReal x2301=((cj14)*(r10));
IkReal x2302=((IkReal(1.00000000000000))*(cj13));
IkReal x2303=((cj14)*(r20));
IkReal x2304=((sj11)*(x2292));
IkReal x2305=((sj14)*(x2302));
IkReal x2306=((sj11)*(x2293));
IkReal x2307=((cj14)*(cj9)*(r00));
IkReal x2308=((x2293)*(x2297));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2308)))+(((IkReal(-1.00000000000000))*(r22)*(x2294)))+(((cj13)*(x2298)))+(((IkReal(-1.00000000000000))*(x2302)*(x2303)))+(x2304));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2294)*(x2303)))+(((IkReal(-1.00000000000000))*(x2292)*(x2297)))+(((IkReal(-1.00000000000000))*(x2306)))+(((cj13)*(r22)))+(((sj13)*(x2298))));
evalcond[2]=((((r12)*(x2300)))+(((cj13)*(sj9)*(x2301)))+(((sj13)*(x2299)))+(((cj13)*(x2307)))+(((cj11)*(x2292)))+(((IkReal(-1.00000000000000))*(x2296)*(x2305)))+(((IkReal(-1.00000000000000))*(x2295)*(x2305)))+(x2306));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2299)*(x2302)))+(((IkReal(-1.00000000000000))*(sj14)*(x2294)*(x2296)))+(((IkReal(-1.00000000000000))*(x2308)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2302)))+(((x2300)*(x2301)))+(((sj13)*(x2307)))+(((IkReal(-1.00000000000000))*(sj14)*(x2294)*(x2295)))+(x2304));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2309=((IkReal(4.00000000000000))*(cj13));
IkReal x2310=((npy)*(sj14));
IkReal x2311=((IkReal(4.00000000000000))*(sj13));
IkReal x2312=((cj14)*(npx));
if( IKabs(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(sj13)))+(((npz)*(x2309)))+(((IkReal(0.0800000000000000))*(cj12)))+(((x2310)*(x2311)))+(((IkReal(-1.00000000000000))*(x2311)*(x2312)))+(((IkReal(-0.320000000000000))*(sj12))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((npz)*(x2311)))+(((x2309)*(x2312)))+(((IkReal(-1.00000000000000))*(x2309)*(x2310))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(sj13)))+(((npz)*(x2309)))+(((IkReal(0.0800000000000000))*(cj12)))+(((x2310)*(x2311)))+(((IkReal(-1.00000000000000))*(x2311)*(x2312)))+(((IkReal(-0.320000000000000))*(sj12)))))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((npz)*(x2311)))+(((x2309)*(x2312)))+(((IkReal(-1.00000000000000))*(x2309)*(x2310)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(sj13)))+(((npz)*(x2309)))+(((IkReal(0.0800000000000000))*(cj12)))+(((x2310)*(x2311)))+(((IkReal(-1.00000000000000))*(x2311)*(x2312)))+(((IkReal(-0.320000000000000))*(sj12)))))), ((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((npz)*(x2311)))+(((x2309)*(x2312)))+(((IkReal(-1.00000000000000))*(x2309)*(x2310)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x2313=IKsin(j11);
IkReal x2314=((npy)*(sj14));
IkReal x2315=((IkReal(1.00000000000000))*(cj14)*(npx));
IkReal x2316=((IkReal(0.250000000000000))*(x2313));
evalcond[0]=((((cj14)*(npy)))+(((IkReal(-0.0800000000000000))*(cj12)))+(((IkReal(-0.0200000000000000))*(sj12)))+(((sj12)*(x2316)))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((cj13)*(x2314)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x2315)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj13)*(x2315)))+(((cj13)*(npz)))+(((IkReal(0.0200000000000000))*(cj12)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(cj12)*(x2316)))+(((sj13)*(x2314)))+(((IkReal(-0.0800000000000000))*(sj12))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11))))));
dummyeval[0]=((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2317=((r00)*(sj9));
IkReal x2318=((IkReal(1.00000000000000))*(sj13));
IkReal x2319=((cj13)*(sj14));
IkReal x2320=((cj9)*(sj14));
IkReal x2321=((cj13)*(r02));
IkReal x2322=((sj13)*(sj14));
IkReal x2323=((r01)*(sj9));
IkReal x2324=((cj9)*(sj13));
IkReal x2325=((IkReal(1.00000000000000))*(cj9));
IkReal x2326=((cj14)*(r10));
IkReal x2327=((cj14)*(npx));
IkReal x2328=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x2318)))+(((IkReal(-1.00000000000000))*(x2327)*(x2328)))+(((npy)*(x2319))));
evalcond[3]=((((cj14)*(x2323)))+(((IkReal(-1.00000000000000))*(r10)*(x2320)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2325)))+(((sj14)*(x2317))));
evalcond[4]=((((r21)*(x2322)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2318))));
evalcond[5]=((IkReal(-0.0800000000000000))+(((IkReal(-1.00000000000000))*(x2318)*(x2327)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((npy)*(x2322))));
evalcond[6]=((((cj13)*(cj9)*(x2326)))+(((r12)*(x2324)))+(((IkReal(-1.00000000000000))*(cj14)*(x2317)*(x2328)))+(((IkReal(-1.00000000000000))*(r11)*(x2319)*(x2325)))+(((x2319)*(x2323)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2318))));
evalcond[7]=((IkReal(1.00000000000000))+(((x2322)*(x2323)))+(((IkReal(-1.00000000000000))*(cj14)*(x2317)*(x2318)))+(((IkReal(-1.00000000000000))*(r11)*(x2318)*(x2320)))+(((x2324)*(x2326)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2325)))+(((sj9)*(x2321))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r01)*(x2318)*(x2320)))+(((sj13)*(sj9)*(x2326)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2328)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x2318)))+(((IkReal(-1.00000000000000))*(x2321)*(x2325)))+(((cj14)*(r00)*(x2324))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2329=((IkReal(1.00000000000000))*(cj11));
IkReal x2330=((r20)*(sj14));
IkReal x2331=((cj14)*(r21));
IkReal x2332=((cj14)*(cj9)*(r01));
IkReal x2333=((r10)*(sj14)*(sj9));
IkReal x2334=((cj9)*(r00)*(sj14));
IkReal x2335=((cj14)*(r11)*(sj9));
if( IKabs(((gconst49)*(((((cj11)*(x2331)))+(((sj11)*(x2332)))+(((cj11)*(x2330)))+(((sj11)*(x2333)))+(((sj11)*(x2334)))+(((sj11)*(x2335))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(x2329)*(x2332)))+(((IkReal(-1.00000000000000))*(x2329)*(x2333)))+(((sj11)*(x2330)))+(((sj11)*(x2331)))+(((IkReal(-1.00000000000000))*(x2329)*(x2334)))+(((IkReal(-1.00000000000000))*(x2329)*(x2335))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst49)*(((((cj11)*(x2331)))+(((sj11)*(x2332)))+(((cj11)*(x2330)))+(((sj11)*(x2333)))+(((sj11)*(x2334)))+(((sj11)*(x2335)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(x2329)*(x2332)))+(((IkReal(-1.00000000000000))*(x2329)*(x2333)))+(((sj11)*(x2330)))+(((sj11)*(x2331)))+(((IkReal(-1.00000000000000))*(x2329)*(x2334)))+(((IkReal(-1.00000000000000))*(x2329)*(x2335)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2336=IKsin(j10);
IkReal x2337=IKcos(j10);
IkReal x2338=((cj13)*(sj14));
IkReal x2339=((cj13)*(cj14));
IkReal x2340=((r10)*(sj9));
IkReal x2341=((IkReal(1.00000000000000))*(cj9));
IkReal x2342=((sj11)*(x2336));
IkReal x2343=((IkReal(1.00000000000000))*(x2337));
IkReal x2344=((cj11)*(x2336));
IkReal x2345=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2346=((cj11)*(x2343));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x2343)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2344))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x2342)+(((IkReal(-1.00000000000000))*(x2346)))+(((IkReal(-1.00000000000000))*(r20)*(x2339)))+(((r21)*(x2338))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2341)))+(((IkReal(-1.00000000000000))*(sj14)*(x2340)))+(((IkReal(-1.00000000000000))*(cj14)*(x2345)))+(x2342)+(((IkReal(-1.00000000000000))*(x2346)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2341))));
evalcond[3]=((x2344)+(((IkReal(-1.00000000000000))*(x2338)*(x2345)))+(((IkReal(-1.00000000000000))*(r01)*(x2338)*(x2341)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x2339)))+(((x2339)*(x2340)))+(((sj11)*(x2337))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2347=((cj11)*(r20));
IkReal x2348=((IkReal(1.00000000000000))*(cj13));
IkReal x2349=((r21)*(sj14));
IkReal x2350=((r22)*(sj13));
IkReal x2351=((r20)*(sj11));
IkReal x2352=((cj14)*(r21));
if( IKabs(((gconst48)*(((((IkReal(-1.00000000000000))*(sj11)*(x2348)*(x2349)))+(((cj11)*(x2352)))+(((sj14)*(x2347)))+(((sj11)*(x2350)))+(((cj13)*(cj14)*(x2351))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((sj11)*(x2352)))+(((IkReal(-1.00000000000000))*(cj14)*(x2347)*(x2348)))+(((sj14)*(x2351)))+(((IkReal(-1.00000000000000))*(cj11)*(x2350)))+(((cj11)*(cj13)*(x2349))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst48)*(((((IkReal(-1.00000000000000))*(sj11)*(x2348)*(x2349)))+(((cj11)*(x2352)))+(((sj14)*(x2347)))+(((sj11)*(x2350)))+(((cj13)*(cj14)*(x2351)))))), ((gconst48)*(((((sj11)*(x2352)))+(((IkReal(-1.00000000000000))*(cj14)*(x2347)*(x2348)))+(((sj14)*(x2351)))+(((IkReal(-1.00000000000000))*(cj11)*(x2350)))+(((cj11)*(cj13)*(x2349)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2353=IKsin(j10);
IkReal x2354=IKcos(j10);
IkReal x2355=((cj13)*(sj14));
IkReal x2356=((cj13)*(cj14));
IkReal x2357=((r10)*(sj9));
IkReal x2358=((IkReal(1.00000000000000))*(cj9));
IkReal x2359=((sj11)*(x2353));
IkReal x2360=((IkReal(1.00000000000000))*(x2354));
IkReal x2361=((cj11)*(x2353));
IkReal x2362=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2363=((cj11)*(x2360));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2361)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x2360))));
evalcond[1]=((x2359)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x2355)))+(((IkReal(-1.00000000000000))*(r20)*(x2356)))+(((IkReal(-1.00000000000000))*(x2363))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x2357)))+(x2359)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2358)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2358)))+(((IkReal(-1.00000000000000))*(x2363)))+(((IkReal(-1.00000000000000))*(cj14)*(x2362))));
evalcond[3]=((((x2356)*(x2357)))+(((sj11)*(x2354)))+(x2361)+(((IkReal(-1.00000000000000))*(r01)*(x2355)*(x2358)))+(((cj9)*(r00)*(x2356)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x2355)*(x2362))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2364=((r00)*(sj9));
IkReal x2365=((IkReal(1.00000000000000))*(sj13));
IkReal x2366=((cj13)*(sj14));
IkReal x2367=((cj9)*(sj14));
IkReal x2368=((cj13)*(r02));
IkReal x2369=((sj13)*(sj14));
IkReal x2370=((r01)*(sj9));
IkReal x2371=((cj9)*(sj13));
IkReal x2372=((IkReal(1.00000000000000))*(cj9));
IkReal x2373=((cj14)*(r10));
IkReal x2374=((cj14)*(npx));
IkReal x2375=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0200000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(x2374)*(x2375)))+(((IkReal(0.0800000000000000))*(cj13)))+(((npy)*(x2366)))+(((IkReal(-1.00000000000000))*(npz)*(x2365))));
evalcond[3]=((((sj14)*(x2364)))+(((IkReal(-1.00000000000000))*(r10)*(x2367)))+(((cj14)*(x2370)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2372))));
evalcond[4]=((((r21)*(x2369)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2365)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0800000000000000))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2365)*(x2374)))+(((npy)*(x2369))));
evalcond[6]=((((x2366)*(x2370)))+(((r12)*(x2371)))+(((cj13)*(cj9)*(x2373)))+(((IkReal(-1.00000000000000))*(r11)*(x2366)*(x2372)))+(((IkReal(-1.00000000000000))*(cj14)*(x2364)*(x2375)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2365))));
evalcond[7]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(x2364)*(x2365)))+(((IkReal(-1.00000000000000))*(r11)*(x2365)*(x2367)))+(((x2369)*(x2370)))+(((sj9)*(x2368)))+(((x2371)*(x2373)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2372))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x2368)*(x2372)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x2365)))+(((IkReal(-1.00000000000000))*(r01)*(x2365)*(x2367)))+(((sj13)*(sj9)*(x2373)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2375)))+(((cj14)*(r00)*(x2371))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2376=((IkReal(1.00000000000000))*(cj14));
IkReal x2377=((sj11)*(sj9));
IkReal x2378=((cj9)*(r01));
IkReal x2379=((cj11)*(cj14));
IkReal x2380=((cj9)*(r00));
IkReal x2381=((r10)*(sj14));
IkReal x2382=((cj11)*(sj14));
IkReal x2383=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x2377)*(x2381)))+(((IkReal(-1.00000000000000))*(r20)*(x2382)))+(((IkReal(-1.00000000000000))*(sj11)*(x2376)*(x2378)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x2376)))+(((IkReal(-1.00000000000000))*(x2380)*(x2383)))+(((IkReal(-1.00000000000000))*(r11)*(x2376)*(x2377))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(r20)*(x2383)))+(((x2378)*(x2379)))+(((cj11)*(sj9)*(x2381)))+(((r11)*(sj9)*(x2379)))+(((x2380)*(x2382)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x2376))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(x2377)*(x2381)))+(((IkReal(-1.00000000000000))*(r20)*(x2382)))+(((IkReal(-1.00000000000000))*(sj11)*(x2376)*(x2378)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x2376)))+(((IkReal(-1.00000000000000))*(x2380)*(x2383)))+(((IkReal(-1.00000000000000))*(r11)*(x2376)*(x2377)))))), ((gconst51)*(((((IkReal(-1.00000000000000))*(r20)*(x2383)))+(((x2378)*(x2379)))+(((cj11)*(sj9)*(x2381)))+(((r11)*(sj9)*(x2379)))+(((x2380)*(x2382)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x2376)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2384=IKsin(j10);
IkReal x2385=IKcos(j10);
IkReal x2386=((cj14)*(sj9));
IkReal x2387=((IkReal(1.00000000000000))*(r11));
IkReal x2388=((cj13)*(sj14));
IkReal x2389=((IkReal(1.00000000000000))*(cj9));
IkReal x2390=((cj13)*(cj14));
IkReal x2391=((cj11)*(x2384));
IkReal x2392=((sj11)*(x2385));
IkReal x2393=((cj11)*(x2385));
IkReal x2394=((sj11)*(x2384));
IkReal x2395=((x2392)+(x2391));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x2395));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x2388)))+(((IkReal(-1.00000000000000))*(x2393)))+(x2394)+(((IkReal(-1.00000000000000))*(r20)*(x2390))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2394)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2389)))+(x2393)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2389)))+(((IkReal(-1.00000000000000))*(x2386)*(x2387))));
evalcond[3]=((((cj13)*(r10)*(x2386)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(x2395)+(((cj9)*(r00)*(x2390)))+(((IkReal(-1.00000000000000))*(sj9)*(x2387)*(x2388)))+(((IkReal(-1.00000000000000))*(r01)*(x2388)*(x2389))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2396=((cj13)*(sj11));
IkReal x2397=((r21)*(sj14));
IkReal x2398=((cj14)*(r20));
IkReal x2399=((cj11)*(cj13));
IkReal x2400=((r22)*(sj13));
IkReal x2401=((r20)*(sj14));
IkReal x2402=((cj14)*(r21));
if( IKabs(((gconst50)*(((((x2396)*(x2397)))+(((cj11)*(x2401)))+(((IkReal(-1.00000000000000))*(sj11)*(x2400)))+(((cj11)*(x2402)))+(((IkReal(-1.00000000000000))*(x2396)*(x2398))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((x2398)*(x2399)))+(((sj11)*(x2402)))+(((sj11)*(x2401)))+(((cj11)*(x2400)))+(((IkReal(-1.00000000000000))*(x2397)*(x2399))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst50)*(((((x2396)*(x2397)))+(((cj11)*(x2401)))+(((IkReal(-1.00000000000000))*(sj11)*(x2400)))+(((cj11)*(x2402)))+(((IkReal(-1.00000000000000))*(x2396)*(x2398)))))), ((gconst50)*(((((x2398)*(x2399)))+(((sj11)*(x2402)))+(((sj11)*(x2401)))+(((cj11)*(x2400)))+(((IkReal(-1.00000000000000))*(x2397)*(x2399)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2403=IKsin(j10);
IkReal x2404=IKcos(j10);
IkReal x2405=((cj14)*(sj9));
IkReal x2406=((IkReal(1.00000000000000))*(r11));
IkReal x2407=((cj13)*(sj14));
IkReal x2408=((IkReal(1.00000000000000))*(cj9));
IkReal x2409=((cj13)*(cj14));
IkReal x2410=((cj11)*(x2403));
IkReal x2411=((sj11)*(x2404));
IkReal x2412=((cj11)*(x2404));
IkReal x2413=((sj11)*(x2403));
IkReal x2414=((x2411)+(x2410));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x2414));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2412)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x2409)))+(x2413)+(((r21)*(x2407))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2408)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(x2412)+(((IkReal(-1.00000000000000))*(x2413)))+(((IkReal(-1.00000000000000))*(x2405)*(x2406)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2408))));
evalcond[3]=((((cj9)*(r00)*(x2409)))+(((cj13)*(r10)*(x2405)))+(x2414)+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x2407)*(x2408)))+(((IkReal(-1.00000000000000))*(sj9)*(x2406)*(x2407))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2415=((cj13)*(sj14));
IkReal x2416=((sj14)*(sj9));
IkReal x2417=((r02)*(sj9));
IkReal x2418=((r01)*(sj9));
IkReal x2419=((cj9)*(sj13));
IkReal x2420=((IkReal(1.00000000000000))*(cj9));
IkReal x2421=((IkReal(1.00000000000000))*(sj13));
IkReal x2422=((cj14)*(npx));
IkReal x2423=((cj14)*(r10));
IkReal x2424=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2425=((sj14)*(x2420));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.230000000000000))+(((npy)*(x2415)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x2422)))+(((IkReal(-1.00000000000000))*(npz)*(x2421)))+(((IkReal(0.0800000000000000))*(cj13))));
evalcond[4]=((IkReal(1.00000000000000))+(((cj14)*(x2418)))+(((IkReal(-1.00000000000000))*(r10)*(x2425)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2420)))+(((r00)*(x2416))));
evalcond[5]=((IkReal(0.0200000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((npy)*(sj13)*(sj14)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2421)*(x2422))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r10)*(x2416)))+(((IkReal(-1.00000000000000))*(r11)*(x2424)))+(((IkReal(-1.00000000000000))*(r00)*(x2425)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2420))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r11)*(x2415)*(x2420)))+(((x2415)*(x2418)))+(((cj13)*(cj9)*(x2423)))+(((r12)*(x2419)))+(((IkReal(-1.00000000000000))*(x2417)*(x2421)))+(((IkReal(-1.00000000000000))*(cj13)*(r00)*(x2424))));
evalcond[8]=((((x2419)*(x2423)))+(((r01)*(sj13)*(x2416)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)*(x2421)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2420)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2419)))+(((cj13)*(x2417))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2426=((cj13)*(sj14));
IkReal x2427=((IkReal(1.00000000000000))*(cj11));
IkReal x2428=((r11)*(sj9));
IkReal x2429=((cj11)*(sj13));
IkReal x2430=((r12)*(sj9));
IkReal x2431=((r10)*(sj9));
IkReal x2432=((sj11)*(sj13));
IkReal x2433=((cj9)*(r02));
IkReal x2434=((cj9)*(r01));
IkReal x2435=((IkReal(1.00000000000000))*(sj11));
IkReal x2436=((cj9)*(r00));
IkReal x2437=((cj13)*(cj14)*(sj11));
IkReal x2438=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst53)*(((((x2429)*(x2433)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x2435)))+(((x2431)*(x2438)))+(((IkReal(-1.00000000000000))*(x2426)*(x2427)*(x2428)))+(((IkReal(-1.00000000000000))*(x2426)*(x2427)*(x2434)))+(((x2429)*(x2430)))+(((IkReal(-1.00000000000000))*(r22)*(x2432)))+(((r21)*(sj11)*(x2426)))+(((x2436)*(x2438))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((r22)*(x2429)))+(((IkReal(-1.00000000000000))*(r21)*(x2426)*(x2427)))+(((IkReal(-1.00000000000000))*(x2426)*(x2428)*(x2435)))+(((x2432)*(x2433)))+(((IkReal(-1.00000000000000))*(x2426)*(x2434)*(x2435)))+(((r20)*(x2438)))+(((x2430)*(x2432)))+(((x2431)*(x2437)))+(((x2436)*(x2437))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst53)*(((((x2429)*(x2433)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x2435)))+(((x2431)*(x2438)))+(((IkReal(-1.00000000000000))*(x2426)*(x2427)*(x2428)))+(((IkReal(-1.00000000000000))*(x2426)*(x2427)*(x2434)))+(((x2429)*(x2430)))+(((IkReal(-1.00000000000000))*(r22)*(x2432)))+(((r21)*(sj11)*(x2426)))+(((x2436)*(x2438)))))), ((gconst53)*(((((r22)*(x2429)))+(((IkReal(-1.00000000000000))*(r21)*(x2426)*(x2427)))+(((IkReal(-1.00000000000000))*(x2426)*(x2428)*(x2435)))+(((x2432)*(x2433)))+(((IkReal(-1.00000000000000))*(x2426)*(x2434)*(x2435)))+(((r20)*(x2438)))+(((x2430)*(x2432)))+(((x2431)*(x2437)))+(((x2436)*(x2437)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2439=IKsin(j10);
IkReal x2440=IKcos(j10);
IkReal x2441=((IkReal(1.00000000000000))*(sj13));
IkReal x2442=((r11)*(sj9));
IkReal x2443=((cj9)*(r01));
IkReal x2444=((r21)*(sj14));
IkReal x2445=((cj9)*(r02));
IkReal x2446=((sj13)*(sj9));
IkReal x2447=((cj14)*(r10));
IkReal x2448=((IkReal(1.00000000000000))*(cj13));
IkReal x2449=((cj14)*(r20));
IkReal x2450=((cj11)*(x2439));
IkReal x2451=((sj11)*(x2440));
IkReal x2452=((sj14)*(x2448));
IkReal x2453=((sj11)*(x2439));
IkReal x2454=((cj11)*(x2440));
IkReal x2455=((cj14)*(cj9)*(r00));
IkReal x2456=((x2451)+(x2450));
evalcond[0]=((((cj13)*(x2444)))+(((IkReal(-1.00000000000000))*(r22)*(x2441)))+(((IkReal(-1.00000000000000))*(x2454)))+(x2453)+(((IkReal(-1.00000000000000))*(x2448)*(x2449))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2441)*(x2449)))+(((sj13)*(x2444)))+(x2456)+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x2446)))+(((IkReal(-1.00000000000000))*(x2442)*(x2452)))+(((sj13)*(x2445)))+(((cj13)*(sj9)*(x2447)))+(x2456)+(((cj13)*(x2455)))+(((IkReal(-1.00000000000000))*(x2443)*(x2452))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x2441)*(x2443)))+(((IkReal(-1.00000000000000))*(sj14)*(x2441)*(x2442)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2448)))+(x2454)+(((sj13)*(x2455)))+(((IkReal(-1.00000000000000))*(x2453)))+(((IkReal(-1.00000000000000))*(x2445)*(x2448)))+(((x2446)*(x2447))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2457=((cj13)*(sj11));
IkReal x2458=((r21)*(sj14));
IkReal x2459=((cj11)*(cj13));
IkReal x2460=((cj11)*(sj13));
IkReal x2461=((sj11)*(sj13));
IkReal x2462=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst52)*(((((x2458)*(x2460)))+(((r22)*(x2459)))+(((IkReal(-1.00000000000000))*(r22)*(x2461)))+(((x2457)*(x2458)))+(((IkReal(-1.00000000000000))*(x2457)*(x2462)))+(((IkReal(-1.00000000000000))*(x2460)*(x2462))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((r22)*(x2460)))+(((IkReal(-1.00000000000000))*(x2461)*(x2462)))+(((r22)*(x2457)))+(((x2458)*(x2461)))+(((IkReal(-1.00000000000000))*(x2458)*(x2459)))+(((cj14)*(r20)*(x2459))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst52)*(((((x2458)*(x2460)))+(((r22)*(x2459)))+(((IkReal(-1.00000000000000))*(r22)*(x2461)))+(((x2457)*(x2458)))+(((IkReal(-1.00000000000000))*(x2457)*(x2462)))+(((IkReal(-1.00000000000000))*(x2460)*(x2462)))))), ((gconst52)*(((((r22)*(x2460)))+(((IkReal(-1.00000000000000))*(x2461)*(x2462)))+(((r22)*(x2457)))+(((x2458)*(x2461)))+(((IkReal(-1.00000000000000))*(x2458)*(x2459)))+(((cj14)*(r20)*(x2459)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2463=IKsin(j10);
IkReal x2464=IKcos(j10);
IkReal x2465=((IkReal(1.00000000000000))*(sj13));
IkReal x2466=((r11)*(sj9));
IkReal x2467=((cj9)*(r01));
IkReal x2468=((r21)*(sj14));
IkReal x2469=((cj9)*(r02));
IkReal x2470=((sj13)*(sj9));
IkReal x2471=((cj14)*(r10));
IkReal x2472=((IkReal(1.00000000000000))*(cj13));
IkReal x2473=((cj14)*(r20));
IkReal x2474=((cj11)*(x2463));
IkReal x2475=((sj11)*(x2464));
IkReal x2476=((sj14)*(x2472));
IkReal x2477=((sj11)*(x2463));
IkReal x2478=((cj11)*(x2464));
IkReal x2479=((cj14)*(cj9)*(r00));
IkReal x2480=((x2475)+(x2474));
evalcond[0]=((x2477)+(((IkReal(-1.00000000000000))*(x2472)*(x2473)))+(((IkReal(-1.00000000000000))*(r22)*(x2465)))+(((IkReal(-1.00000000000000))*(x2478)))+(((cj13)*(x2468))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2465)*(x2473)))+(((sj13)*(x2468)))+(x2480)+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x2471)))+(((IkReal(-1.00000000000000))*(x2467)*(x2476)))+(((sj13)*(x2469)))+(x2480)+(((r12)*(x2470)))+(((cj13)*(x2479)))+(((IkReal(-1.00000000000000))*(x2466)*(x2476))));
evalcond[3]=((x2478)+(((IkReal(-1.00000000000000))*(x2477)))+(((sj13)*(x2479)))+(((x2470)*(x2471)))+(((IkReal(-1.00000000000000))*(sj14)*(x2465)*(x2467)))+(((IkReal(-1.00000000000000))*(sj14)*(x2465)*(x2466)))+(((IkReal(-1.00000000000000))*(x2469)*(x2472)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2472))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2481=((cj13)*(sj14));
IkReal x2482=((sj14)*(sj9));
IkReal x2483=((r02)*(sj9));
IkReal x2484=((r01)*(sj9));
IkReal x2485=((cj9)*(sj13));
IkReal x2486=((IkReal(1.00000000000000))*(cj9));
IkReal x2487=((IkReal(1.00000000000000))*(sj13));
IkReal x2488=((cj14)*(npx));
IkReal x2489=((cj14)*(r10));
IkReal x2490=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2491=((sj14)*(x2486));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.230000000000000))+(((npy)*(x2481)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x2488)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x2487))));
evalcond[4]=((IkReal(-1.00000000000000))+(((cj14)*(x2484)))+(((r00)*(x2482)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2486)))+(((IkReal(-1.00000000000000))*(r10)*(x2491))));
evalcond[5]=((IkReal(-0.0200000000000000))+(((npy)*(sj13)*(sj14)))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(x2487)*(x2488)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r10)*(x2482)))+(((IkReal(-1.00000000000000))*(r00)*(x2491)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2486)))+(((IkReal(-1.00000000000000))*(r11)*(x2490))));
evalcond[7]=((((x2481)*(x2484)))+(((r12)*(x2485)))+(((IkReal(-1.00000000000000))*(cj13)*(r00)*(x2490)))+(((IkReal(-1.00000000000000))*(r11)*(x2481)*(x2486)))+(((IkReal(-1.00000000000000))*(x2483)*(x2487)))+(((cj13)*(cj9)*(x2489))));
evalcond[8]=((((cj13)*(x2483)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2485)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)*(x2487)))+(((x2485)*(x2489)))+(((r01)*(sj13)*(x2482)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2486))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2492=((cj13)*(sj14));
IkReal x2493=((IkReal(1.00000000000000))*(cj11));
IkReal x2494=((r11)*(sj9));
IkReal x2495=((IkReal(1.00000000000000))*(sj11));
IkReal x2496=((cj13)*(cj14));
IkReal x2497=((cj11)*(sj13));
IkReal x2498=((r12)*(sj9));
IkReal x2499=((cj9)*(r01));
IkReal x2500=((sj11)*(sj13));
IkReal x2501=((cj9)*(r02));
IkReal x2502=((r10)*(sj9));
IkReal x2503=((cj9)*(r00));
if( IKabs(((gconst55)*(((((x2497)*(x2498)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2495)))+(((IkReal(-1.00000000000000))*(x2492)*(x2493)*(x2494)))+(((IkReal(-1.00000000000000))*(x2492)*(x2493)*(x2499)))+(((r21)*(sj11)*(x2492)))+(((cj11)*(x2496)*(x2503)))+(((IkReal(-1.00000000000000))*(r20)*(x2495)*(x2496)))+(((x2497)*(x2501)))+(((cj11)*(x2496)*(x2502))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((cj11)*(r20)*(x2496)))+(((IkReal(-1.00000000000000))*(r21)*(x2492)*(x2493)))+(((x2500)*(x2501)))+(((IkReal(-1.00000000000000))*(x2492)*(x2494)*(x2495)))+(((sj11)*(x2496)*(x2502)))+(((x2498)*(x2500)))+(((sj11)*(x2496)*(x2503)))+(((IkReal(-1.00000000000000))*(x2492)*(x2495)*(x2499)))+(((r22)*(x2497))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst55)*(((((x2497)*(x2498)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2495)))+(((IkReal(-1.00000000000000))*(x2492)*(x2493)*(x2494)))+(((IkReal(-1.00000000000000))*(x2492)*(x2493)*(x2499)))+(((r21)*(sj11)*(x2492)))+(((cj11)*(x2496)*(x2503)))+(((IkReal(-1.00000000000000))*(r20)*(x2495)*(x2496)))+(((x2497)*(x2501)))+(((cj11)*(x2496)*(x2502)))))), ((gconst55)*(((((cj11)*(r20)*(x2496)))+(((IkReal(-1.00000000000000))*(r21)*(x2492)*(x2493)))+(((x2500)*(x2501)))+(((IkReal(-1.00000000000000))*(x2492)*(x2494)*(x2495)))+(((sj11)*(x2496)*(x2502)))+(((x2498)*(x2500)))+(((sj11)*(x2496)*(x2503)))+(((IkReal(-1.00000000000000))*(x2492)*(x2495)*(x2499)))+(((r22)*(x2497)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2504=IKsin(j10);
IkReal x2505=IKcos(j10);
IkReal x2506=((IkReal(1.00000000000000))*(sj13));
IkReal x2507=((r11)*(sj9));
IkReal x2508=((cj9)*(r01));
IkReal x2509=((IkReal(1.00000000000000))*(cj11));
IkReal x2510=((r21)*(sj14));
IkReal x2511=((cj9)*(r02));
IkReal x2512=((sj13)*(sj9));
IkReal x2513=((cj14)*(r10));
IkReal x2514=((IkReal(1.00000000000000))*(cj13));
IkReal x2515=((cj14)*(r20));
IkReal x2516=((sj11)*(x2504));
IkReal x2517=((sj14)*(x2514));
IkReal x2518=((sj11)*(x2505));
IkReal x2519=((cj14)*(cj9)*(r00));
IkReal x2520=((x2505)*(x2509));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2520)))+(((IkReal(-1.00000000000000))*(x2514)*(x2515)))+(((IkReal(-1.00000000000000))*(r22)*(x2506)))+(((cj13)*(x2510)))+(x2516));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2504)*(x2509)))+(((sj13)*(x2510)))+(((IkReal(-1.00000000000000))*(x2506)*(x2515)))+(((IkReal(-1.00000000000000))*(x2518)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x2513)))+(((cj13)*(x2519)))+(((IkReal(-1.00000000000000))*(x2507)*(x2517)))+(((r12)*(x2512)))+(((cj11)*(x2504)))+(((IkReal(-1.00000000000000))*(x2508)*(x2517)))+(x2518)+(((sj13)*(x2511))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x2506)*(x2508)))+(((IkReal(-1.00000000000000))*(x2511)*(x2514)))+(((IkReal(-1.00000000000000))*(sj14)*(x2506)*(x2507)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2514)))+(((IkReal(-1.00000000000000))*(x2520)))+(((sj13)*(x2519)))+(((x2512)*(x2513)))+(x2516));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2521=((cj13)*(sj11));
IkReal x2522=((r21)*(sj14));
IkReal x2523=((cj11)*(cj13));
IkReal x2524=((IkReal(1.00000000000000))*(sj13));
IkReal x2525=((sj11)*(sj13));
IkReal x2526=((cj14)*(r20));
if( IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(cj11)*(x2524)*(x2526)))+(((r22)*(x2523)))+(((cj11)*(sj13)*(x2522)))+(((x2521)*(x2526)))+(((r22)*(x2525)))+(((IkReal(-1.00000000000000))*(x2521)*(x2522))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(x2523)*(x2526)))+(((r22)*(x2521)))+(((x2522)*(x2523)))+(((IkReal(-1.00000000000000))*(sj11)*(x2524)*(x2526)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x2524)))+(((x2522)*(x2525))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst54)*(((((IkReal(-1.00000000000000))*(cj11)*(x2524)*(x2526)))+(((r22)*(x2523)))+(((cj11)*(sj13)*(x2522)))+(((x2521)*(x2526)))+(((r22)*(x2525)))+(((IkReal(-1.00000000000000))*(x2521)*(x2522)))))), ((gconst54)*(((((IkReal(-1.00000000000000))*(x2523)*(x2526)))+(((r22)*(x2521)))+(((x2522)*(x2523)))+(((IkReal(-1.00000000000000))*(sj11)*(x2524)*(x2526)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x2524)))+(((x2522)*(x2525)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2527=IKsin(j10);
IkReal x2528=IKcos(j10);
IkReal x2529=((IkReal(1.00000000000000))*(sj13));
IkReal x2530=((r11)*(sj9));
IkReal x2531=((cj9)*(r01));
IkReal x2532=((IkReal(1.00000000000000))*(cj11));
IkReal x2533=((r21)*(sj14));
IkReal x2534=((cj9)*(r02));
IkReal x2535=((sj13)*(sj9));
IkReal x2536=((cj14)*(r10));
IkReal x2537=((IkReal(1.00000000000000))*(cj13));
IkReal x2538=((cj14)*(r20));
IkReal x2539=((sj11)*(x2527));
IkReal x2540=((sj14)*(x2537));
IkReal x2541=((sj11)*(x2528));
IkReal x2542=((cj14)*(cj9)*(r00));
IkReal x2543=((x2528)*(x2532));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2537)*(x2538)))+(((IkReal(-1.00000000000000))*(x2543)))+(((IkReal(-1.00000000000000))*(r22)*(x2529)))+(((cj13)*(x2533)))+(x2539));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2529)*(x2538)))+(((sj13)*(x2533)))+(((IkReal(-1.00000000000000))*(x2527)*(x2532)))+(((IkReal(-1.00000000000000))*(x2541)))+(((cj13)*(r22))));
evalcond[2]=((((cj11)*(x2527)))+(((sj13)*(x2534)))+(((cj13)*(x2542)))+(((IkReal(-1.00000000000000))*(x2530)*(x2540)))+(((r12)*(x2535)))+(((IkReal(-1.00000000000000))*(x2531)*(x2540)))+(((cj13)*(sj9)*(x2536)))+(x2541));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2534)*(x2537)))+(((IkReal(-1.00000000000000))*(sj14)*(x2529)*(x2531)))+(((IkReal(-1.00000000000000))*(sj14)*(x2529)*(x2530)))+(((x2535)*(x2536)))+(((IkReal(-1.00000000000000))*(x2543)))+(((sj13)*(x2542)))+(x2539)+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2537))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2544=((r21)*(sj14));
IkReal x2545=((cj12)*(cj13));
IkReal x2546=((sj11)*(sj13));
IkReal x2547=((cj14)*(r20));
IkReal x2548=((IkReal(1.00000000000000))*(sj11));
IkReal x2549=((cj12)*(r22));
IkReal x2550=((IkReal(1.00000000000000))*(cj11));
IkReal x2551=((cj13)*(r22));
IkReal x2552=((sj13)*(x2550));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x2544)*(x2545)*(x2548)))+(((IkReal(-1.00000000000000))*(x2544)*(x2552)))+(((x2546)*(x2549)))+(((sj11)*(x2545)*(x2547)))+(((cj11)*(sj13)*(x2547)))+(((IkReal(-1.00000000000000))*(x2550)*(x2551))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x2548)*(x2551)))+(((x2546)*(x2547)))+(((IkReal(-1.00000000000000))*(x2549)*(x2552)))+(((IkReal(-1.00000000000000))*(x2545)*(x2547)*(x2550)))+(((cj11)*(x2544)*(x2545)))+(((IkReal(-1.00000000000000))*(x2544)*(x2546))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(x2544)*(x2545)*(x2548)))+(((IkReal(-1.00000000000000))*(x2544)*(x2552)))+(((x2546)*(x2549)))+(((sj11)*(x2545)*(x2547)))+(((cj11)*(sj13)*(x2547)))+(((IkReal(-1.00000000000000))*(x2550)*(x2551)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(x2548)*(x2551)))+(((x2546)*(x2547)))+(((IkReal(-1.00000000000000))*(x2549)*(x2552)))+(((IkReal(-1.00000000000000))*(x2545)*(x2547)*(x2550)))+(((cj11)*(x2544)*(x2545)))+(((IkReal(-1.00000000000000))*(x2544)*(x2546)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x2553=IKsin(j10);
IkReal x2554=IKcos(j10);
IkReal x2555=((IkReal(1.00000000000000))*(cj13));
IkReal x2556=((cj9)*(r02));
IkReal x2557=((IkReal(1.00000000000000))*(sj13));
IkReal x2558=((r11)*(sj9));
IkReal x2559=((IkReal(1.00000000000000))*(cj14));
IkReal x2560=((cj9)*(r01));
IkReal x2561=((r21)*(sj14));
IkReal x2562=((IkReal(1.00000000000000))*(sj12));
IkReal x2563=((r10)*(sj9));
IkReal x2564=((cj14)*(sj13));
IkReal x2565=((cj14)*(r20));
IkReal x2566=((IkReal(1.00000000000000))*(sj14));
IkReal x2567=((r12)*(sj9));
IkReal x2568=((cj13)*(cj14));
IkReal x2569=((cj9)*(r00));
IkReal x2570=((sj11)*(x2553));
IkReal x2571=((cj11)*(x2553));
IkReal x2572=((sj11)*(x2554));
IkReal x2573=((cj11)*(x2554));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2562)*(x2571)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2562)*(x2572))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2557)))+(((IkReal(-1.00000000000000))*(x2573)))+(((IkReal(-1.00000000000000))*(x2555)*(x2565)))+(((cj13)*(x2561)))+(x2570));
evalcond[2]=((((sj13)*(x2561)))+(((cj12)*(x2572)))+(((cj12)*(x2571)))+(((IkReal(-1.00000000000000))*(x2557)*(x2565)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2559)*(x2560)))+(((IkReal(-1.00000000000000))*(x2566)*(x2569)))+(((IkReal(-1.00000000000000))*(x2563)*(x2566)))+(((IkReal(-1.00000000000000))*(x2558)*(x2559)))+(((sj12)*(x2570)))+(((IkReal(-1.00000000000000))*(x2562)*(x2573))));
evalcond[4]=((((sj13)*(x2556)))+(((x2563)*(x2568)))+(((sj13)*(x2567)))+(((IkReal(-1.00000000000000))*(sj14)*(x2555)*(x2558)))+(((IkReal(-1.00000000000000))*(sj14)*(x2555)*(x2560)))+(((x2568)*(x2569)))+(x2572)+(x2571));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2555)*(x2556)))+(((IkReal(-1.00000000000000))*(x2555)*(x2567)))+(((IkReal(-1.00000000000000))*(sj14)*(x2557)*(x2558)))+(((IkReal(-1.00000000000000))*(sj14)*(x2557)*(x2560)))+(((IkReal(-1.00000000000000))*(cj12)*(x2570)))+(((x2564)*(x2569)))+(((cj12)*(x2573)))+(((x2563)*(x2564))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2574=((cj11)*(sj12));
IkReal x2575=((r22)*(sj13));
IkReal x2576=((r20)*(sj14));
IkReal x2577=((cj14)*(sj11));
IkReal x2578=((cj13)*(r20));
IkReal x2579=((sj11)*(sj12));
IkReal x2580=((cj13)*(r21)*(sj14));
if( IKabs(((gconst46)*(((((sj12)*(x2577)*(x2578)))+(((cj11)*(x2576)))+(((cj11)*(cj14)*(r21)))+(((x2575)*(x2579)))+(((IkReal(-1.00000000000000))*(x2579)*(x2580))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(cj14)*(x2574)*(x2578)))+(((x2574)*(x2580)))+(((IkReal(-1.00000000000000))*(x2574)*(x2575)))+(((sj11)*(x2576)))+(((r21)*(x2577))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst46)*(((((sj12)*(x2577)*(x2578)))+(((cj11)*(x2576)))+(((cj11)*(cj14)*(r21)))+(((x2575)*(x2579)))+(((IkReal(-1.00000000000000))*(x2579)*(x2580)))))), ((gconst46)*(((((IkReal(-1.00000000000000))*(cj14)*(x2574)*(x2578)))+(((x2574)*(x2580)))+(((IkReal(-1.00000000000000))*(x2574)*(x2575)))+(((sj11)*(x2576)))+(((r21)*(x2577)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x2581=IKsin(j10);
IkReal x2582=IKcos(j10);
IkReal x2583=((IkReal(1.00000000000000))*(cj13));
IkReal x2584=((cj9)*(r02));
IkReal x2585=((IkReal(1.00000000000000))*(sj13));
IkReal x2586=((r11)*(sj9));
IkReal x2587=((IkReal(1.00000000000000))*(cj14));
IkReal x2588=((cj9)*(r01));
IkReal x2589=((r21)*(sj14));
IkReal x2590=((IkReal(1.00000000000000))*(sj12));
IkReal x2591=((r10)*(sj9));
IkReal x2592=((cj14)*(sj13));
IkReal x2593=((cj14)*(r20));
IkReal x2594=((IkReal(1.00000000000000))*(sj14));
IkReal x2595=((r12)*(sj9));
IkReal x2596=((cj13)*(cj14));
IkReal x2597=((cj9)*(r00));
IkReal x2598=((sj11)*(x2581));
IkReal x2599=((cj11)*(x2581));
IkReal x2600=((sj11)*(x2582));
IkReal x2601=((cj11)*(x2582));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2590)*(x2599)))+(((IkReal(-1.00000000000000))*(x2590)*(x2600))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2583)*(x2593)))+(((IkReal(-1.00000000000000))*(r22)*(x2585)))+(((cj13)*(x2589)))+(((IkReal(-1.00000000000000))*(x2601)))+(x2598));
evalcond[2]=((((cj12)*(x2600)))+(((cj12)*(x2599)))+(((sj13)*(x2589)))+(((IkReal(-1.00000000000000))*(x2585)*(x2593)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2594)*(x2597)))+(((sj12)*(x2598)))+(((IkReal(-1.00000000000000))*(x2586)*(x2587)))+(((IkReal(-1.00000000000000))*(x2591)*(x2594)))+(((IkReal(-1.00000000000000))*(x2590)*(x2601)))+(((IkReal(-1.00000000000000))*(x2587)*(x2588))));
evalcond[4]=((((sj13)*(x2595)))+(x2600)+(((x2596)*(x2597)))+(((IkReal(-1.00000000000000))*(sj14)*(x2583)*(x2588)))+(((sj13)*(x2584)))+(((IkReal(-1.00000000000000))*(sj14)*(x2583)*(x2586)))+(x2599)+(((x2591)*(x2596))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2583)*(x2584)))+(((IkReal(-1.00000000000000))*(sj14)*(x2585)*(x2586)))+(((x2591)*(x2592)))+(((IkReal(-1.00000000000000))*(sj14)*(x2585)*(x2588)))+(((IkReal(-1.00000000000000))*(cj12)*(x2598)))+(((x2592)*(x2597)))+(((IkReal(-1.00000000000000))*(x2583)*(x2595)))+(((cj12)*(x2601))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2602=((IkReal(4.00000000000000))*(sj14));
IkReal x2603=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(npx)*(x2602)))+(((IkReal(0.0800000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(npy)*(x2603))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((cj13)*(npx)*(x2603)))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2602)))+(((IkReal(4.00000000000000))*(npz)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(npx)*(x2602)))+(((IkReal(0.0800000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(npy)*(x2603)))))))+IKsqr(((IkReal(-0.920000000000000))+(((cj13)*(npx)*(x2603)))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2602)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(npx)*(x2602)))+(((IkReal(0.0800000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(npy)*(x2603)))))), ((IkReal(-0.920000000000000))+(((cj13)*(npx)*(x2603)))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2602)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x2604=IKsin(j11);
IkReal x2605=((npy)*(sj14));
IkReal x2606=((IkReal(1.00000000000000))*(cj14)*(npx));
IkReal x2607=((IkReal(0.250000000000000))*(x2604));
evalcond[0]=((((cj14)*(npy)))+(((IkReal(-0.0800000000000000))*(cj12)))+(((IkReal(-0.0200000000000000))*(sj12)))+(((sj12)*(x2607)))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((cj13)*(x2605)))+(((IkReal(-1.00000000000000))*(cj13)*(x2606)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj12)*(x2607)))+(((cj13)*(npz)))+(((IkReal(0.0200000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(sj13)*(x2606)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-0.0800000000000000))*(sj12)))+(((sj13)*(x2605))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11))))));
dummyeval[0]=((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2608=((r00)*(sj9));
IkReal x2609=((IkReal(1.00000000000000))*(sj13));
IkReal x2610=((cj13)*(sj14));
IkReal x2611=((cj9)*(sj14));
IkReal x2612=((cj13)*(r02));
IkReal x2613=((sj13)*(sj14));
IkReal x2614=((r01)*(sj9));
IkReal x2615=((cj9)*(sj13));
IkReal x2616=((IkReal(1.00000000000000))*(cj9));
IkReal x2617=((cj14)*(r10));
IkReal x2618=((cj14)*(npx));
IkReal x2619=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x2609)))+(((npy)*(x2610)))+(((IkReal(-1.00000000000000))*(x2618)*(x2619))));
evalcond[3]=((((sj14)*(x2608)))+(((IkReal(-1.00000000000000))*(r10)*(x2611)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2616)))+(((cj14)*(x2614))));
evalcond[4]=((((r21)*(x2613)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2609)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(-0.0800000000000000))+(((IkReal(-1.00000000000000))*(x2609)*(x2618)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((npy)*(x2613))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x2608)*(x2619)))+(((cj13)*(cj9)*(x2617)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2609)))+(((r12)*(x2615)))+(((x2610)*(x2614)))+(((IkReal(-1.00000000000000))*(r11)*(x2610)*(x2616))));
evalcond[7]=((IkReal(1.00000000000000))+(((x2615)*(x2617)))+(((IkReal(-1.00000000000000))*(r11)*(x2609)*(x2611)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2616)))+(((x2613)*(x2614)))+(((IkReal(-1.00000000000000))*(cj14)*(x2608)*(x2609)))+(((sj9)*(x2612))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2619)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x2609)))+(((cj14)*(r00)*(x2615)))+(((IkReal(-1.00000000000000))*(r01)*(x2609)*(x2611)))+(((IkReal(-1.00000000000000))*(x2612)*(x2616)))+(((sj13)*(sj9)*(x2617))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2620=((IkReal(1.00000000000000))*(cj11));
IkReal x2621=((r20)*(sj14));
IkReal x2622=((cj14)*(r21));
IkReal x2623=((cj14)*(cj9)*(r01));
IkReal x2624=((r10)*(sj14)*(sj9));
IkReal x2625=((cj9)*(r00)*(sj14));
IkReal x2626=((cj14)*(r11)*(sj9));
if( IKabs(((gconst49)*(((((cj11)*(x2622)))+(((sj11)*(x2625)))+(((sj11)*(x2623)))+(((sj11)*(x2624)))+(((sj11)*(x2626)))+(((cj11)*(x2621))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(x2620)*(x2625)))+(((sj11)*(x2621)))+(((IkReal(-1.00000000000000))*(x2620)*(x2623)))+(((sj11)*(x2622)))+(((IkReal(-1.00000000000000))*(x2620)*(x2624)))+(((IkReal(-1.00000000000000))*(x2620)*(x2626))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst49)*(((((cj11)*(x2622)))+(((sj11)*(x2625)))+(((sj11)*(x2623)))+(((sj11)*(x2624)))+(((sj11)*(x2626)))+(((cj11)*(x2621)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(x2620)*(x2625)))+(((sj11)*(x2621)))+(((IkReal(-1.00000000000000))*(x2620)*(x2623)))+(((sj11)*(x2622)))+(((IkReal(-1.00000000000000))*(x2620)*(x2624)))+(((IkReal(-1.00000000000000))*(x2620)*(x2626)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2627=IKsin(j10);
IkReal x2628=IKcos(j10);
IkReal x2629=((cj13)*(sj14));
IkReal x2630=((cj13)*(cj14));
IkReal x2631=((r10)*(sj9));
IkReal x2632=((IkReal(1.00000000000000))*(cj9));
IkReal x2633=((sj11)*(x2627));
IkReal x2634=((IkReal(1.00000000000000))*(x2628));
IkReal x2635=((cj11)*(x2627));
IkReal x2636=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2637=((cj11)*(x2634));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x2634)))+(((IkReal(-1.00000000000000))*(x2635)))+(((cj14)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x2629)))+(x2633)+(((IkReal(-1.00000000000000))*(r20)*(x2630)))+(((IkReal(-1.00000000000000))*(x2637))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x2631)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2632)))+(x2633)+(((IkReal(-1.00000000000000))*(x2637)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2632)))+(((IkReal(-1.00000000000000))*(cj14)*(x2636))));
evalcond[3]=((((x2630)*(x2631)))+(x2635)+(((IkReal(-1.00000000000000))*(x2629)*(x2636)))+(((IkReal(-1.00000000000000))*(r01)*(x2629)*(x2632)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x2630)))+(((sj11)*(x2628))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2638=((cj11)*(r20));
IkReal x2639=((IkReal(1.00000000000000))*(cj13));
IkReal x2640=((r21)*(sj14));
IkReal x2641=((r22)*(sj13));
IkReal x2642=((r20)*(sj11));
IkReal x2643=((cj14)*(r21));
if( IKabs(((gconst48)*(((((sj14)*(x2638)))+(((cj11)*(x2643)))+(((sj11)*(x2641)))+(((cj13)*(cj14)*(x2642)))+(((IkReal(-1.00000000000000))*(sj11)*(x2639)*(x2640))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((sj14)*(x2642)))+(((IkReal(-1.00000000000000))*(cj14)*(x2638)*(x2639)))+(((cj11)*(cj13)*(x2640)))+(((IkReal(-1.00000000000000))*(cj11)*(x2641)))+(((sj11)*(x2643))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst48)*(((((sj14)*(x2638)))+(((cj11)*(x2643)))+(((sj11)*(x2641)))+(((cj13)*(cj14)*(x2642)))+(((IkReal(-1.00000000000000))*(sj11)*(x2639)*(x2640)))))), ((gconst48)*(((((sj14)*(x2642)))+(((IkReal(-1.00000000000000))*(cj14)*(x2638)*(x2639)))+(((cj11)*(cj13)*(x2640)))+(((IkReal(-1.00000000000000))*(cj11)*(x2641)))+(((sj11)*(x2643)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2644=IKsin(j10);
IkReal x2645=IKcos(j10);
IkReal x2646=((cj13)*(sj14));
IkReal x2647=((cj13)*(cj14));
IkReal x2648=((r10)*(sj9));
IkReal x2649=((IkReal(1.00000000000000))*(cj9));
IkReal x2650=((sj11)*(x2644));
IkReal x2651=((IkReal(1.00000000000000))*(x2645));
IkReal x2652=((cj11)*(x2644));
IkReal x2653=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2654=((cj11)*(x2651));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj11)*(x2651)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2652)))+(((cj14)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x2650)+(((r21)*(x2646)))+(((IkReal(-1.00000000000000))*(x2654)))+(((IkReal(-1.00000000000000))*(r20)*(x2647))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2649)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2649)))+(((IkReal(-1.00000000000000))*(cj14)*(x2653)))+(x2650)+(((IkReal(-1.00000000000000))*(x2654)))+(((IkReal(-1.00000000000000))*(sj14)*(x2648))));
evalcond[3]=((((sj11)*(x2645)))+(((IkReal(-1.00000000000000))*(r01)*(x2646)*(x2649)))+(x2652)+(((x2647)*(x2648)))+(((IkReal(-1.00000000000000))*(x2646)*(x2653)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x2647))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2655=((r00)*(sj9));
IkReal x2656=((IkReal(1.00000000000000))*(sj13));
IkReal x2657=((cj13)*(sj14));
IkReal x2658=((cj9)*(sj14));
IkReal x2659=((cj13)*(r02));
IkReal x2660=((sj13)*(sj14));
IkReal x2661=((r01)*(sj9));
IkReal x2662=((cj9)*(sj13));
IkReal x2663=((IkReal(1.00000000000000))*(cj9));
IkReal x2664=((cj14)*(r10));
IkReal x2665=((cj14)*(npx));
IkReal x2666=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0200000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x2656)))+(((IkReal(0.250000000000000))*(cj11)))+(((npy)*(x2657)))+(((IkReal(-1.00000000000000))*(x2665)*(x2666)))+(((IkReal(0.0800000000000000))*(cj13))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x2658)))+(((cj14)*(x2661)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2663)))+(((sj14)*(x2655))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2656)))+(((r21)*(x2660)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x2656)*(x2665)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((npy)*(x2660))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(x2657)*(x2663)))+(((r12)*(x2662)))+(((IkReal(-1.00000000000000))*(cj14)*(x2655)*(x2666)))+(((cj13)*(cj9)*(x2664)))+(((x2657)*(x2661)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2656))));
evalcond[7]=((IkReal(-1.00000000000000))+(((sj9)*(x2659)))+(((IkReal(-1.00000000000000))*(cj14)*(x2655)*(x2656)))+(((x2660)*(x2661)))+(((IkReal(-1.00000000000000))*(r11)*(x2656)*(x2658)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2663)))+(((x2662)*(x2664))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r01)*(x2656)*(x2658)))+(((sj13)*(sj9)*(x2664)))+(((cj14)*(r00)*(x2662)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2666)))+(((IkReal(-1.00000000000000))*(x2659)*(x2663)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x2656))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2667=((IkReal(1.00000000000000))*(cj14));
IkReal x2668=((sj11)*(sj9));
IkReal x2669=((cj9)*(r01));
IkReal x2670=((cj11)*(cj14));
IkReal x2671=((cj9)*(r00));
IkReal x2672=((r10)*(sj14));
IkReal x2673=((cj11)*(sj14));
IkReal x2674=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x2668)*(x2672)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x2667)))+(((IkReal(-1.00000000000000))*(r11)*(x2667)*(x2668)))+(((IkReal(-1.00000000000000))*(x2671)*(x2674)))+(((IkReal(-1.00000000000000))*(sj11)*(x2667)*(x2669)))+(((IkReal(-1.00000000000000))*(r20)*(x2673))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((x2671)*(x2673)))+(((IkReal(-1.00000000000000))*(r20)*(x2674)))+(((cj11)*(sj9)*(x2672)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x2667)))+(((x2669)*(x2670)))+(((r11)*(sj9)*(x2670))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(x2668)*(x2672)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x2667)))+(((IkReal(-1.00000000000000))*(r11)*(x2667)*(x2668)))+(((IkReal(-1.00000000000000))*(x2671)*(x2674)))+(((IkReal(-1.00000000000000))*(sj11)*(x2667)*(x2669)))+(((IkReal(-1.00000000000000))*(r20)*(x2673)))))), ((gconst51)*(((((x2671)*(x2673)))+(((IkReal(-1.00000000000000))*(r20)*(x2674)))+(((cj11)*(sj9)*(x2672)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x2667)))+(((x2669)*(x2670)))+(((r11)*(sj9)*(x2670)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2675=IKsin(j10);
IkReal x2676=IKcos(j10);
IkReal x2677=((cj14)*(sj9));
IkReal x2678=((IkReal(1.00000000000000))*(r11));
IkReal x2679=((cj13)*(sj14));
IkReal x2680=((IkReal(1.00000000000000))*(cj9));
IkReal x2681=((cj13)*(cj14));
IkReal x2682=((cj11)*(x2675));
IkReal x2683=((sj11)*(x2676));
IkReal x2684=((cj11)*(x2676));
IkReal x2685=((sj11)*(x2675));
IkReal x2686=((x2682)+(x2683));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x2686));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x2681)))+(((IkReal(-1.00000000000000))*(x2684)))+(x2685)+(((r21)*(x2679))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2685)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2680)))+(x2684)+(((IkReal(-1.00000000000000))*(x2677)*(x2678)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2680))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2679)*(x2680)))+(((cj13)*(r10)*(x2677)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(x2686)+(((IkReal(-1.00000000000000))*(sj9)*(x2678)*(x2679)))+(((cj9)*(r00)*(x2681))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2687=((cj13)*(sj11));
IkReal x2688=((r21)*(sj14));
IkReal x2689=((cj14)*(r20));
IkReal x2690=((cj11)*(cj13));
IkReal x2691=((r22)*(sj13));
IkReal x2692=((r20)*(sj14));
IkReal x2693=((cj14)*(r21));
if( IKabs(((gconst50)*(((((cj11)*(x2693)))+(((IkReal(-1.00000000000000))*(sj11)*(x2691)))+(((x2687)*(x2688)))+(((cj11)*(x2692)))+(((IkReal(-1.00000000000000))*(x2687)*(x2689))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((sj11)*(x2692)))+(((x2689)*(x2690)))+(((sj11)*(x2693)))+(((IkReal(-1.00000000000000))*(x2688)*(x2690)))+(((cj11)*(x2691))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst50)*(((((cj11)*(x2693)))+(((IkReal(-1.00000000000000))*(sj11)*(x2691)))+(((x2687)*(x2688)))+(((cj11)*(x2692)))+(((IkReal(-1.00000000000000))*(x2687)*(x2689)))))), ((gconst50)*(((((sj11)*(x2692)))+(((x2689)*(x2690)))+(((sj11)*(x2693)))+(((IkReal(-1.00000000000000))*(x2688)*(x2690)))+(((cj11)*(x2691)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2694=IKsin(j10);
IkReal x2695=IKcos(j10);
IkReal x2696=((cj14)*(sj9));
IkReal x2697=((IkReal(1.00000000000000))*(r11));
IkReal x2698=((cj13)*(sj14));
IkReal x2699=((IkReal(1.00000000000000))*(cj9));
IkReal x2700=((cj13)*(cj14));
IkReal x2701=((cj11)*(x2694));
IkReal x2702=((sj11)*(x2695));
IkReal x2703=((cj11)*(x2695));
IkReal x2704=((sj11)*(x2694));
IkReal x2705=((x2701)+(x2702));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x2705));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x2698)))+(((IkReal(-1.00000000000000))*(x2703)))+(((IkReal(-1.00000000000000))*(r20)*(x2700)))+(x2704));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x2696)*(x2697)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2699)))+(((IkReal(-1.00000000000000))*(x2704)))+(x2703)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2699))));
evalcond[3]=((((cj13)*(r10)*(x2696)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(sj9)*(x2697)*(x2698)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x2700)))+(((IkReal(-1.00000000000000))*(r01)*(x2698)*(x2699)))+(x2705));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2706=((cj13)*(sj14));
IkReal x2707=((sj14)*(sj9));
IkReal x2708=((r02)*(sj9));
IkReal x2709=((r01)*(sj9));
IkReal x2710=((cj9)*(sj13));
IkReal x2711=((IkReal(1.00000000000000))*(cj9));
IkReal x2712=((IkReal(1.00000000000000))*(sj13));
IkReal x2713=((cj14)*(npx));
IkReal x2714=((cj14)*(r10));
IkReal x2715=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2716=((sj14)*(x2711));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.230000000000000))+(((npy)*(x2706)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(npz)*(x2712)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x2713))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x2716)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2711)))+(((r00)*(x2707)))+(((cj14)*(x2709))));
evalcond[5]=((IkReal(0.0200000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((npy)*(sj13)*(sj14)))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(x2712)*(x2713)))+(((IkReal(0.0800000000000000))*(sj13))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(x2715)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2711)))+(((IkReal(-1.00000000000000))*(r00)*(x2716)))+(((IkReal(-1.00000000000000))*(r10)*(x2707))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x2708)*(x2712)))+(((cj13)*(cj9)*(x2714)))+(((IkReal(-1.00000000000000))*(cj13)*(r00)*(x2715)))+(((x2706)*(x2709)))+(((IkReal(-1.00000000000000))*(r11)*(x2706)*(x2711)))+(((r12)*(x2710))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)*(x2712)))+(((x2710)*(x2714)))+(((r01)*(sj13)*(x2707)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2711)))+(((cj13)*(x2708)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2710))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2717=((cj13)*(sj14));
IkReal x2718=((IkReal(1.00000000000000))*(cj11));
IkReal x2719=((r11)*(sj9));
IkReal x2720=((cj11)*(sj13));
IkReal x2721=((r12)*(sj9));
IkReal x2722=((r10)*(sj9));
IkReal x2723=((sj11)*(sj13));
IkReal x2724=((cj9)*(r02));
IkReal x2725=((cj9)*(r01));
IkReal x2726=((IkReal(1.00000000000000))*(sj11));
IkReal x2727=((cj9)*(r00));
IkReal x2728=((cj13)*(cj14)*(sj11));
IkReal x2729=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst53)*(((((x2727)*(x2729)))+(((x2720)*(x2721)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x2726)))+(((IkReal(-1.00000000000000))*(r22)*(x2723)))+(((IkReal(-1.00000000000000))*(x2717)*(x2718)*(x2725)))+(((r21)*(sj11)*(x2717)))+(((IkReal(-1.00000000000000))*(x2717)*(x2718)*(x2719)))+(((x2720)*(x2724)))+(((x2722)*(x2729))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(x2717)*(x2725)*(x2726)))+(((x2727)*(x2728)))+(((x2723)*(x2724)))+(((IkReal(-1.00000000000000))*(r21)*(x2717)*(x2718)))+(((IkReal(-1.00000000000000))*(x2717)*(x2719)*(x2726)))+(((r20)*(x2729)))+(((r22)*(x2720)))+(((x2722)*(x2728)))+(((x2721)*(x2723))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst53)*(((((x2727)*(x2729)))+(((x2720)*(x2721)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x2726)))+(((IkReal(-1.00000000000000))*(r22)*(x2723)))+(((IkReal(-1.00000000000000))*(x2717)*(x2718)*(x2725)))+(((r21)*(sj11)*(x2717)))+(((IkReal(-1.00000000000000))*(x2717)*(x2718)*(x2719)))+(((x2720)*(x2724)))+(((x2722)*(x2729)))))), ((gconst53)*(((((IkReal(-1.00000000000000))*(x2717)*(x2725)*(x2726)))+(((x2727)*(x2728)))+(((x2723)*(x2724)))+(((IkReal(-1.00000000000000))*(r21)*(x2717)*(x2718)))+(((IkReal(-1.00000000000000))*(x2717)*(x2719)*(x2726)))+(((r20)*(x2729)))+(((r22)*(x2720)))+(((x2722)*(x2728)))+(((x2721)*(x2723)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2730=IKsin(j10);
IkReal x2731=IKcos(j10);
IkReal x2732=((IkReal(1.00000000000000))*(sj13));
IkReal x2733=((r11)*(sj9));
IkReal x2734=((cj9)*(r01));
IkReal x2735=((r21)*(sj14));
IkReal x2736=((cj9)*(r02));
IkReal x2737=((sj13)*(sj9));
IkReal x2738=((cj14)*(r10));
IkReal x2739=((IkReal(1.00000000000000))*(cj13));
IkReal x2740=((cj14)*(r20));
IkReal x2741=((cj11)*(x2730));
IkReal x2742=((sj11)*(x2731));
IkReal x2743=((sj14)*(x2739));
IkReal x2744=((sj11)*(x2730));
IkReal x2745=((cj11)*(x2731));
IkReal x2746=((cj14)*(cj9)*(r00));
IkReal x2747=((x2741)+(x2742));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2745)))+(((IkReal(-1.00000000000000))*(r22)*(x2732)))+(((cj13)*(x2735)))+(((IkReal(-1.00000000000000))*(x2739)*(x2740)))+(x2744));
evalcond[1]=((((sj13)*(x2735)))+(x2747)+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(x2732)*(x2740))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2733)*(x2743)))+(((cj13)*(sj9)*(x2738)))+(((sj13)*(x2736)))+(((IkReal(-1.00000000000000))*(x2734)*(x2743)))+(x2747)+(((cj13)*(x2746)))+(((r12)*(x2737))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x2732)*(x2734)))+(((x2737)*(x2738)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2739)))+(((IkReal(-1.00000000000000))*(x2736)*(x2739)))+(((sj13)*(x2746)))+(x2745)+(((IkReal(-1.00000000000000))*(x2744)))+(((IkReal(-1.00000000000000))*(sj14)*(x2732)*(x2733))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2748=((cj13)*(sj11));
IkReal x2749=((r21)*(sj14));
IkReal x2750=((cj11)*(cj13));
IkReal x2751=((cj11)*(sj13));
IkReal x2752=((sj11)*(sj13));
IkReal x2753=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(x2751)*(x2753)))+(((r22)*(x2750)))+(((x2748)*(x2749)))+(((IkReal(-1.00000000000000))*(x2748)*(x2753)))+(((IkReal(-1.00000000000000))*(r22)*(x2752)))+(((x2749)*(x2751))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((cj14)*(r20)*(x2750)))+(((x2749)*(x2752)))+(((IkReal(-1.00000000000000))*(x2749)*(x2750)))+(((r22)*(x2748)))+(((r22)*(x2751)))+(((IkReal(-1.00000000000000))*(x2752)*(x2753))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst52)*(((((IkReal(-1.00000000000000))*(x2751)*(x2753)))+(((r22)*(x2750)))+(((x2748)*(x2749)))+(((IkReal(-1.00000000000000))*(x2748)*(x2753)))+(((IkReal(-1.00000000000000))*(r22)*(x2752)))+(((x2749)*(x2751)))))), ((gconst52)*(((((cj14)*(r20)*(x2750)))+(((x2749)*(x2752)))+(((IkReal(-1.00000000000000))*(x2749)*(x2750)))+(((r22)*(x2748)))+(((r22)*(x2751)))+(((IkReal(-1.00000000000000))*(x2752)*(x2753)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2754=IKsin(j10);
IkReal x2755=IKcos(j10);
IkReal x2756=((IkReal(1.00000000000000))*(sj13));
IkReal x2757=((r11)*(sj9));
IkReal x2758=((cj9)*(r01));
IkReal x2759=((r21)*(sj14));
IkReal x2760=((cj9)*(r02));
IkReal x2761=((sj13)*(sj9));
IkReal x2762=((cj14)*(r10));
IkReal x2763=((IkReal(1.00000000000000))*(cj13));
IkReal x2764=((cj14)*(r20));
IkReal x2765=((cj11)*(x2754));
IkReal x2766=((sj11)*(x2755));
IkReal x2767=((sj14)*(x2763));
IkReal x2768=((sj11)*(x2754));
IkReal x2769=((cj11)*(x2755));
IkReal x2770=((cj14)*(cj9)*(r00));
IkReal x2771=((x2766)+(x2765));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2756)))+(((IkReal(-1.00000000000000))*(x2769)))+(((cj13)*(x2759)))+(x2768)+(((IkReal(-1.00000000000000))*(x2763)*(x2764))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2756)*(x2764)))+(((sj13)*(x2759)))+(x2771)+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x2761)))+(((cj13)*(sj9)*(x2762)))+(x2771)+(((cj13)*(x2770)))+(((sj13)*(x2760)))+(((IkReal(-1.00000000000000))*(x2757)*(x2767)))+(((IkReal(-1.00000000000000))*(x2758)*(x2767))));
evalcond[3]=((((sj13)*(x2770)))+(x2769)+(((IkReal(-1.00000000000000))*(sj14)*(x2756)*(x2758)))+(((IkReal(-1.00000000000000))*(x2768)))+(((x2761)*(x2762)))+(((IkReal(-1.00000000000000))*(x2760)*(x2763)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2763)))+(((IkReal(-1.00000000000000))*(sj14)*(x2756)*(x2757))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2772=((cj13)*(sj14));
IkReal x2773=((sj14)*(sj9));
IkReal x2774=((r02)*(sj9));
IkReal x2775=((r01)*(sj9));
IkReal x2776=((cj9)*(sj13));
IkReal x2777=((IkReal(1.00000000000000))*(cj9));
IkReal x2778=((IkReal(1.00000000000000))*(sj13));
IkReal x2779=((cj14)*(npx));
IkReal x2780=((cj14)*(r10));
IkReal x2781=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2782=((sj14)*(x2777));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x2779)))+(((npy)*(x2772)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x2778))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2777)))+(((r00)*(x2773)))+(((IkReal(-1.00000000000000))*(r10)*(x2782)))+(((cj14)*(x2775))));
evalcond[5]=((IkReal(-0.0200000000000000))+(((npy)*(sj13)*(sj14)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2778)*(x2779)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r10)*(x2773)))+(((IkReal(-1.00000000000000))*(r00)*(x2782)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2777)))+(((IkReal(-1.00000000000000))*(r11)*(x2781))));
evalcond[7]=((((x2772)*(x2775)))+(((IkReal(-1.00000000000000))*(r11)*(x2772)*(x2777)))+(((IkReal(-1.00000000000000))*(x2774)*(x2778)))+(((cj13)*(cj9)*(x2780)))+(((IkReal(-1.00000000000000))*(cj13)*(r00)*(x2781)))+(((r12)*(x2776))));
evalcond[8]=((((x2776)*(x2780)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2776)))+(((cj13)*(x2774)))+(((r01)*(sj13)*(x2773)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2777)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)*(x2778))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2783=((cj13)*(sj14));
IkReal x2784=((IkReal(1.00000000000000))*(cj11));
IkReal x2785=((r11)*(sj9));
IkReal x2786=((IkReal(1.00000000000000))*(sj11));
IkReal x2787=((cj13)*(cj14));
IkReal x2788=((cj11)*(sj13));
IkReal x2789=((r12)*(sj9));
IkReal x2790=((cj9)*(r01));
IkReal x2791=((sj11)*(sj13));
IkReal x2792=((cj9)*(r02));
IkReal x2793=((r10)*(sj9));
IkReal x2794=((cj9)*(r00));
if( IKabs(((gconst55)*(((((x2788)*(x2789)))+(((cj11)*(x2787)*(x2794)))+(((IkReal(-1.00000000000000))*(x2783)*(x2784)*(x2785)))+(((IkReal(-1.00000000000000))*(r20)*(x2786)*(x2787)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2786)))+(((cj11)*(x2787)*(x2793)))+(((IkReal(-1.00000000000000))*(x2783)*(x2784)*(x2790)))+(((x2788)*(x2792)))+(((r21)*(sj11)*(x2783))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(r21)*(x2783)*(x2784)))+(((r22)*(x2788)))+(((sj11)*(x2787)*(x2794)))+(((cj11)*(r20)*(x2787)))+(((IkReal(-1.00000000000000))*(x2783)*(x2786)*(x2790)))+(((x2789)*(x2791)))+(((x2791)*(x2792)))+(((sj11)*(x2787)*(x2793)))+(((IkReal(-1.00000000000000))*(x2783)*(x2785)*(x2786))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst55)*(((((x2788)*(x2789)))+(((cj11)*(x2787)*(x2794)))+(((IkReal(-1.00000000000000))*(x2783)*(x2784)*(x2785)))+(((IkReal(-1.00000000000000))*(r20)*(x2786)*(x2787)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2786)))+(((cj11)*(x2787)*(x2793)))+(((IkReal(-1.00000000000000))*(x2783)*(x2784)*(x2790)))+(((x2788)*(x2792)))+(((r21)*(sj11)*(x2783)))))), ((gconst55)*(((((IkReal(-1.00000000000000))*(r21)*(x2783)*(x2784)))+(((r22)*(x2788)))+(((sj11)*(x2787)*(x2794)))+(((cj11)*(r20)*(x2787)))+(((IkReal(-1.00000000000000))*(x2783)*(x2786)*(x2790)))+(((x2789)*(x2791)))+(((x2791)*(x2792)))+(((sj11)*(x2787)*(x2793)))+(((IkReal(-1.00000000000000))*(x2783)*(x2785)*(x2786)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2795=IKsin(j10);
IkReal x2796=IKcos(j10);
IkReal x2797=((IkReal(1.00000000000000))*(sj13));
IkReal x2798=((r11)*(sj9));
IkReal x2799=((cj9)*(r01));
IkReal x2800=((IkReal(1.00000000000000))*(cj11));
IkReal x2801=((r21)*(sj14));
IkReal x2802=((cj9)*(r02));
IkReal x2803=((sj13)*(sj9));
IkReal x2804=((cj14)*(r10));
IkReal x2805=((IkReal(1.00000000000000))*(cj13));
IkReal x2806=((cj14)*(r20));
IkReal x2807=((sj11)*(x2795));
IkReal x2808=((sj14)*(x2805));
IkReal x2809=((sj11)*(x2796));
IkReal x2810=((cj14)*(cj9)*(r00));
IkReal x2811=((x2796)*(x2800));
evalcond[0]=((((cj13)*(x2801)))+(((IkReal(-1.00000000000000))*(r22)*(x2797)))+(((IkReal(-1.00000000000000))*(x2811)))+(((IkReal(-1.00000000000000))*(x2805)*(x2806)))+(x2807));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2797)*(x2806)))+(((sj13)*(x2801)))+(((IkReal(-1.00000000000000))*(x2809)))+(((IkReal(-1.00000000000000))*(x2795)*(x2800)))+(((cj13)*(r22))));
evalcond[2]=((((cj11)*(x2795)))+(((IkReal(-1.00000000000000))*(x2799)*(x2808)))+(((sj13)*(x2802)))+(x2809)+(((cj13)*(sj9)*(x2804)))+(((r12)*(x2803)))+(((cj13)*(x2810)))+(((IkReal(-1.00000000000000))*(x2798)*(x2808))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x2797)*(x2798)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2805)))+(((x2803)*(x2804)))+(((IkReal(-1.00000000000000))*(x2802)*(x2805)))+(((IkReal(-1.00000000000000))*(x2811)))+(((sj13)*(x2810)))+(x2807)+(((IkReal(-1.00000000000000))*(sj14)*(x2797)*(x2799))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2812=((cj13)*(sj11));
IkReal x2813=((r21)*(sj14));
IkReal x2814=((cj11)*(cj13));
IkReal x2815=((IkReal(1.00000000000000))*(sj13));
IkReal x2816=((sj11)*(sj13));
IkReal x2817=((cj14)*(r20));
if( IKabs(((gconst54)*(((((x2812)*(x2817)))+(((cj11)*(sj13)*(x2813)))+(((r22)*(x2816)))+(((IkReal(-1.00000000000000))*(cj11)*(x2815)*(x2817)))+(((r22)*(x2814)))+(((IkReal(-1.00000000000000))*(x2812)*(x2813))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((x2813)*(x2816)))+(((IkReal(-1.00000000000000))*(x2814)*(x2817)))+(((IkReal(-1.00000000000000))*(sj11)*(x2815)*(x2817)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x2815)))+(((r22)*(x2812)))+(((x2813)*(x2814))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst54)*(((((x2812)*(x2817)))+(((cj11)*(sj13)*(x2813)))+(((r22)*(x2816)))+(((IkReal(-1.00000000000000))*(cj11)*(x2815)*(x2817)))+(((r22)*(x2814)))+(((IkReal(-1.00000000000000))*(x2812)*(x2813)))))), ((gconst54)*(((((x2813)*(x2816)))+(((IkReal(-1.00000000000000))*(x2814)*(x2817)))+(((IkReal(-1.00000000000000))*(sj11)*(x2815)*(x2817)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x2815)))+(((r22)*(x2812)))+(((x2813)*(x2814)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2818=IKsin(j10);
IkReal x2819=IKcos(j10);
IkReal x2820=((IkReal(1.00000000000000))*(sj13));
IkReal x2821=((r11)*(sj9));
IkReal x2822=((cj9)*(r01));
IkReal x2823=((IkReal(1.00000000000000))*(cj11));
IkReal x2824=((r21)*(sj14));
IkReal x2825=((cj9)*(r02));
IkReal x2826=((sj13)*(sj9));
IkReal x2827=((cj14)*(r10));
IkReal x2828=((IkReal(1.00000000000000))*(cj13));
IkReal x2829=((cj14)*(r20));
IkReal x2830=((sj11)*(x2818));
IkReal x2831=((sj14)*(x2828));
IkReal x2832=((sj11)*(x2819));
IkReal x2833=((cj14)*(cj9)*(r00));
IkReal x2834=((x2819)*(x2823));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2820)))+(((cj13)*(x2824)))+(((IkReal(-1.00000000000000))*(x2828)*(x2829)))+(((IkReal(-1.00000000000000))*(x2834)))+(x2830));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2820)*(x2829)))+(((IkReal(-1.00000000000000))*(x2818)*(x2823)))+(((IkReal(-1.00000000000000))*(x2832)))+(((sj13)*(x2824)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2822)*(x2831)))+(((cj11)*(x2818)))+(((IkReal(-1.00000000000000))*(x2821)*(x2831)))+(((r12)*(x2826)))+(((sj13)*(x2825)))+(((cj13)*(sj9)*(x2827)))+(((cj13)*(x2833)))+(x2832));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2825)*(x2828)))+(((IkReal(-1.00000000000000))*(sj14)*(x2820)*(x2821)))+(((sj13)*(x2833)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2828)))+(((x2826)*(x2827)))+(((IkReal(-1.00000000000000))*(sj14)*(x2820)*(x2822)))+(((IkReal(-1.00000000000000))*(x2834)))+(x2830));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2835=((r21)*(sj14));
IkReal x2836=((cj12)*(cj13));
IkReal x2837=((sj11)*(sj13));
IkReal x2838=((cj14)*(r20));
IkReal x2839=((IkReal(1.00000000000000))*(sj11));
IkReal x2840=((cj12)*(r22));
IkReal x2841=((IkReal(1.00000000000000))*(cj11));
IkReal x2842=((cj13)*(r22));
IkReal x2843=((sj13)*(x2841));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x2835)*(x2843)))+(((cj11)*(sj13)*(x2838)))+(((sj11)*(x2836)*(x2838)))+(((IkReal(-1.00000000000000))*(x2835)*(x2836)*(x2839)))+(((x2837)*(x2840)))+(((IkReal(-1.00000000000000))*(x2841)*(x2842))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x2836)*(x2838)*(x2841)))+(((x2837)*(x2838)))+(((IkReal(-1.00000000000000))*(x2839)*(x2842)))+(((cj11)*(x2835)*(x2836)))+(((IkReal(-1.00000000000000))*(x2835)*(x2837)))+(((IkReal(-1.00000000000000))*(x2840)*(x2843))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(x2835)*(x2843)))+(((cj11)*(sj13)*(x2838)))+(((sj11)*(x2836)*(x2838)))+(((IkReal(-1.00000000000000))*(x2835)*(x2836)*(x2839)))+(((x2837)*(x2840)))+(((IkReal(-1.00000000000000))*(x2841)*(x2842)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(x2836)*(x2838)*(x2841)))+(((x2837)*(x2838)))+(((IkReal(-1.00000000000000))*(x2839)*(x2842)))+(((cj11)*(x2835)*(x2836)))+(((IkReal(-1.00000000000000))*(x2835)*(x2837)))+(((IkReal(-1.00000000000000))*(x2840)*(x2843)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x2844=IKsin(j10);
IkReal x2845=IKcos(j10);
IkReal x2846=((IkReal(1.00000000000000))*(cj13));
IkReal x2847=((cj9)*(r02));
IkReal x2848=((IkReal(1.00000000000000))*(sj13));
IkReal x2849=((r11)*(sj9));
IkReal x2850=((IkReal(1.00000000000000))*(cj14));
IkReal x2851=((cj9)*(r01));
IkReal x2852=((r21)*(sj14));
IkReal x2853=((IkReal(1.00000000000000))*(sj12));
IkReal x2854=((r10)*(sj9));
IkReal x2855=((cj14)*(sj13));
IkReal x2856=((cj14)*(r20));
IkReal x2857=((IkReal(1.00000000000000))*(sj14));
IkReal x2858=((r12)*(sj9));
IkReal x2859=((cj13)*(cj14));
IkReal x2860=((cj9)*(r00));
IkReal x2861=((sj11)*(x2844));
IkReal x2862=((cj11)*(x2844));
IkReal x2863=((sj11)*(x2845));
IkReal x2864=((cj11)*(x2845));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2853)*(x2862)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2853)*(x2863))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2846)*(x2856)))+(x2861)+(((IkReal(-1.00000000000000))*(r22)*(x2848)))+(((IkReal(-1.00000000000000))*(x2864)))+(((cj13)*(x2852))));
evalcond[2]=((((cj12)*(x2862)))+(((sj13)*(x2852)))+(((cj12)*(x2863)))+(((IkReal(-1.00000000000000))*(x2848)*(x2856)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2854)*(x2857)))+(((IkReal(-1.00000000000000))*(x2849)*(x2850)))+(((IkReal(-1.00000000000000))*(x2857)*(x2860)))+(((IkReal(-1.00000000000000))*(x2850)*(x2851)))+(((IkReal(-1.00000000000000))*(x2853)*(x2864)))+(((sj12)*(x2861))));
evalcond[4]=((((sj13)*(x2858)))+(((IkReal(-1.00000000000000))*(sj14)*(x2846)*(x2851)))+(x2862)+(x2863)+(((x2854)*(x2859)))+(((IkReal(-1.00000000000000))*(sj14)*(x2846)*(x2849)))+(((sj13)*(x2847)))+(((x2859)*(x2860))));
evalcond[5]=((((x2855)*(x2860)))+(((IkReal(-1.00000000000000))*(x2846)*(x2847)))+(((cj12)*(x2864)))+(((IkReal(-1.00000000000000))*(x2846)*(x2858)))+(((IkReal(-1.00000000000000))*(sj14)*(x2848)*(x2851)))+(((IkReal(-1.00000000000000))*(cj12)*(x2861)))+(((x2854)*(x2855)))+(((IkReal(-1.00000000000000))*(sj14)*(x2848)*(x2849))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2865=((cj11)*(sj12));
IkReal x2866=((r22)*(sj13));
IkReal x2867=((r20)*(sj14));
IkReal x2868=((cj14)*(sj11));
IkReal x2869=((cj13)*(r20));
IkReal x2870=((sj11)*(sj12));
IkReal x2871=((cj13)*(r21)*(sj14));
if( IKabs(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((sj12)*(x2868)*(x2869)))+(((cj11)*(x2867)))+(((IkReal(-1.00000000000000))*(x2870)*(x2871)))+(((x2866)*(x2870))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((sj11)*(x2867)))+(((IkReal(-1.00000000000000))*(cj14)*(x2865)*(x2869)))+(((x2865)*(x2871)))+(((r21)*(x2868)))+(((IkReal(-1.00000000000000))*(x2865)*(x2866))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((sj12)*(x2868)*(x2869)))+(((cj11)*(x2867)))+(((IkReal(-1.00000000000000))*(x2870)*(x2871)))+(((x2866)*(x2870)))))), ((gconst46)*(((((sj11)*(x2867)))+(((IkReal(-1.00000000000000))*(cj14)*(x2865)*(x2869)))+(((x2865)*(x2871)))+(((r21)*(x2868)))+(((IkReal(-1.00000000000000))*(x2865)*(x2866)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x2872=IKsin(j10);
IkReal x2873=IKcos(j10);
IkReal x2874=((IkReal(1.00000000000000))*(cj13));
IkReal x2875=((cj9)*(r02));
IkReal x2876=((IkReal(1.00000000000000))*(sj13));
IkReal x2877=((r11)*(sj9));
IkReal x2878=((IkReal(1.00000000000000))*(cj14));
IkReal x2879=((cj9)*(r01));
IkReal x2880=((r21)*(sj14));
IkReal x2881=((IkReal(1.00000000000000))*(sj12));
IkReal x2882=((r10)*(sj9));
IkReal x2883=((cj14)*(sj13));
IkReal x2884=((cj14)*(r20));
IkReal x2885=((IkReal(1.00000000000000))*(sj14));
IkReal x2886=((r12)*(sj9));
IkReal x2887=((cj13)*(cj14));
IkReal x2888=((cj9)*(r00));
IkReal x2889=((sj11)*(x2872));
IkReal x2890=((cj11)*(x2872));
IkReal x2891=((sj11)*(x2873));
IkReal x2892=((cj11)*(x2873));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2881)*(x2891)))+(((IkReal(-1.00000000000000))*(x2881)*(x2890)))+(((cj14)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2876)))+(x2889)+(((IkReal(-1.00000000000000))*(x2874)*(x2884)))+(((cj13)*(x2880)))+(((IkReal(-1.00000000000000))*(x2892))));
evalcond[2]=((((sj13)*(x2880)))+(((cj12)*(x2891)))+(((cj12)*(x2890)))+(((IkReal(-1.00000000000000))*(x2876)*(x2884)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2882)*(x2885)))+(((sj12)*(x2889)))+(((IkReal(-1.00000000000000))*(x2877)*(x2878)))+(((IkReal(-1.00000000000000))*(x2881)*(x2892)))+(((IkReal(-1.00000000000000))*(x2885)*(x2888)))+(((IkReal(-1.00000000000000))*(x2878)*(x2879))));
evalcond[4]=((((sj13)*(x2886)))+(((x2887)*(x2888)))+(x2891)+(x2890)+(((IkReal(-1.00000000000000))*(sj14)*(x2874)*(x2879)))+(((x2882)*(x2887)))+(((sj13)*(x2875)))+(((IkReal(-1.00000000000000))*(sj14)*(x2874)*(x2877))));
evalcond[5]=((((cj12)*(x2892)))+(((x2883)*(x2888)))+(((IkReal(-1.00000000000000))*(x2874)*(x2886)))+(((IkReal(-1.00000000000000))*(cj12)*(x2889)))+(((x2882)*(x2883)))+(((IkReal(-1.00000000000000))*(x2874)*(x2875)))+(((IkReal(-1.00000000000000))*(sj14)*(x2876)*(x2877)))+(((IkReal(-1.00000000000000))*(sj14)*(x2876)*(x2879))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x2893=((cj12)*(cj13));
IkReal x2894=((cj12)*(sj13));
IkReal x2895=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(r11)*(x2893)*(x2895)))+(((r12)*(x2894)))+(((cj14)*(r10)*(x2893))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(r01)*(x2893)*(x2895)))+(((cj14)*(r00)*(x2893)))+(((r02)*(x2894))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst0)*(((((IkReal(-1.00000000000000))*(r11)*(x2893)*(x2895)))+(((r12)*(x2894)))+(((cj14)*(r10)*(x2893)))))), ((gconst0)*(((((IkReal(-1.00000000000000))*(r01)*(x2893)*(x2895)))+(((cj14)*(r00)*(x2893)))+(((r02)*(x2894)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[3];
IkReal x2896=IKsin(j9);
IkReal x2897=IKcos(j9);
IkReal x2898=((IkReal(1.00000000000000))*(sj14));
IkReal x2899=((sj13)*(x2897));
IkReal x2900=((cj13)*(x2896));
IkReal x2901=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x2902=((r01)*(x2896));
IkReal x2903=((r10)*(x2897));
IkReal x2904=((sj13)*(x2896));
IkReal x2905=((cj13)*(x2897));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2898)*(x2903)))+(cj12)+(((r00)*(sj14)*(x2896)))+(((cj14)*(x2902)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2897))));
evalcond[1]=((((r12)*(x2899)))+(((IkReal(-1.00000000000000))*(r02)*(x2904)))+(((IkReal(-1.00000000000000))*(r11)*(x2898)*(x2905)))+(((r01)*(sj14)*(x2900)))+(((cj13)*(cj14)*(x2903)))+(((IkReal(-1.00000000000000))*(x2900)*(x2901))));
evalcond[2]=((((cj14)*(r10)*(x2899)))+(((IkReal(-1.00000000000000))*(r11)*(x2898)*(x2899)))+(((sj13)*(sj14)*(x2902)))+(((IkReal(-1.00000000000000))*(r12)*(x2905)))+(sj12)+(((IkReal(-1.00000000000000))*(x2901)*(x2904)))+(((r02)*(x2900))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2906=((IkReal(1.00000000000000))*(sj13));
IkReal x2907=((cj14)*(sj9));
IkReal x2908=((cj9)*(sj14));
IkReal x2909=((cj13)*(sj9));
IkReal x2910=((sj13)*(sj14));
IkReal x2911=((cj9)*(sj13));
IkReal x2912=((IkReal(1.00000000000000))*(cj13));
IkReal x2913=((cj14)*(r10));
IkReal x2914=((sj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(x2907)))+(((IkReal(-1.00000000000000))*(r10)*(x2908)))+(((r00)*(x2914)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2906)))+(((r21)*(x2910)))+(((cj13)*(r22))));
evalcond[3]=((IkReal(-0.0800000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(npx)*(x2906)))+(((npy)*(x2910)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13))));
evalcond[4]=((((cj13)*(cj9)*(x2913)))+(((r01)*(sj14)*(x2909)))+(((IkReal(-1.00000000000000))*(r00)*(x2907)*(x2912)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2906)))+(((r12)*(x2911)))+(((IkReal(-1.00000000000000))*(r11)*(x2908)*(x2912))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x2906)*(x2907)))+(((r01)*(sj9)*(x2910)))+(((IkReal(-1.00000000000000))*(r11)*(x2906)*(x2908)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2912)))+(((r02)*(x2909)))+(((x2911)*(x2913))));
evalcond[6]=((((r10)*(sj13)*(x2907)))+(((IkReal(-1.00000000000000))*(r01)*(x2906)*(x2908)))+(((IkReal(-1.00000000000000))*(r12)*(x2909)))+(((cj14)*(r00)*(x2911)))+(((IkReal(-1.00000000000000))*(r11)*(x2906)*(x2914)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x2912))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2915=((IkReal(4.00000000000000))*(sj14));
IkReal x2916=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x2915)))+(((IkReal(-1.00000000000000))*(npy)*(x2916))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((cj13)*(npx)*(x2916)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2915))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x2915)))+(((IkReal(-1.00000000000000))*(npy)*(x2916)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((cj13)*(npx)*(x2916)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2915)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x2915)))+(((IkReal(-1.00000000000000))*(npy)*(x2916)))), ((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((cj13)*(npx)*(x2916)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2915)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0200000000000000))+(((cj14)*(npy)))+(((IkReal(0.250000000000000))*(IKsin(j11))))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(npx)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((cj13)*(npy)*(sj14))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst57;
gconst57=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2917=((IkReal(1.00000000000000))*(cj11));
IkReal x2918=((r20)*(sj14));
IkReal x2919=((cj14)*(r21));
IkReal x2920=((cj14)*(cj9)*(r01));
IkReal x2921=((r10)*(sj14)*(sj9));
IkReal x2922=((cj9)*(r00)*(sj14));
IkReal x2923=((cj14)*(r11)*(sj9));
if( IKabs(((gconst57)*(((((cj11)*(x2918)))+(((sj11)*(x2920)))+(((sj11)*(x2922)))+(((sj11)*(x2921)))+(((cj11)*(x2919)))+(((sj11)*(x2923))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst57)*(((((IkReal(-1.00000000000000))*(x2917)*(x2920)))+(((IkReal(-1.00000000000000))*(x2917)*(x2921)))+(((IkReal(-1.00000000000000))*(x2917)*(x2922)))+(((sj11)*(x2919)))+(((IkReal(-1.00000000000000))*(x2917)*(x2923)))+(((sj11)*(x2918))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst57)*(((((cj11)*(x2918)))+(((sj11)*(x2920)))+(((sj11)*(x2922)))+(((sj11)*(x2921)))+(((cj11)*(x2919)))+(((sj11)*(x2923)))))), ((gconst57)*(((((IkReal(-1.00000000000000))*(x2917)*(x2920)))+(((IkReal(-1.00000000000000))*(x2917)*(x2921)))+(((IkReal(-1.00000000000000))*(x2917)*(x2922)))+(((sj11)*(x2919)))+(((IkReal(-1.00000000000000))*(x2917)*(x2923)))+(((sj11)*(x2918)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2924=IKsin(j10);
IkReal x2925=IKcos(j10);
IkReal x2926=((cj13)*(sj14));
IkReal x2927=((cj13)*(cj14));
IkReal x2928=((r10)*(sj9));
IkReal x2929=((IkReal(1.00000000000000))*(cj9));
IkReal x2930=((sj11)*(x2924));
IkReal x2931=((IkReal(1.00000000000000))*(x2925));
IkReal x2932=((cj11)*(x2924));
IkReal x2933=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2934=((cj11)*(x2931));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x2931)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2932))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x2926)))+(x2930)+(((IkReal(-1.00000000000000))*(x2934)))+(((IkReal(-1.00000000000000))*(r20)*(x2927))));
evalcond[2]=((x2930)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2929)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2929)))+(((IkReal(-1.00000000000000))*(sj14)*(x2928)))+(((IkReal(-1.00000000000000))*(x2934)))+(((IkReal(-1.00000000000000))*(cj14)*(x2933))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2926)*(x2929)))+(x2932)+(((cj9)*(r00)*(x2927)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(x2926)*(x2933)))+(((cj9)*(r02)*(sj13)))+(((x2927)*(x2928)))+(((sj11)*(x2925))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2935=((r20)*(sj14));
IkReal x2936=((IkReal(1.00000000000000))*(cj13));
IkReal x2937=((cj14)*(r20));
IkReal x2938=((r21)*(sj14));
IkReal x2939=((r22)*(sj13));
IkReal x2940=((cj14)*(r21));
if( IKabs(((gconst56)*(((((IkReal(-1.00000000000000))*(sj11)*(x2936)*(x2938)))+(((cj11)*(x2940)))+(((sj11)*(x2939)))+(((cj11)*(x2935)))+(((cj13)*(sj11)*(x2937))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((IkReal(-1.00000000000000))*(cj11)*(x2939)))+(((sj11)*(x2935)))+(((IkReal(-1.00000000000000))*(cj11)*(x2936)*(x2937)))+(((sj11)*(x2940)))+(((cj11)*(cj13)*(x2938))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst56)*(((((IkReal(-1.00000000000000))*(sj11)*(x2936)*(x2938)))+(((cj11)*(x2940)))+(((sj11)*(x2939)))+(((cj11)*(x2935)))+(((cj13)*(sj11)*(x2937)))))), ((gconst56)*(((((IkReal(-1.00000000000000))*(cj11)*(x2939)))+(((sj11)*(x2935)))+(((IkReal(-1.00000000000000))*(cj11)*(x2936)*(x2937)))+(((sj11)*(x2940)))+(((cj11)*(cj13)*(x2938)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2941=IKsin(j10);
IkReal x2942=IKcos(j10);
IkReal x2943=((cj13)*(sj14));
IkReal x2944=((cj13)*(cj14));
IkReal x2945=((r10)*(sj9));
IkReal x2946=((IkReal(1.00000000000000))*(cj9));
IkReal x2947=((sj11)*(x2941));
IkReal x2948=((IkReal(1.00000000000000))*(x2942));
IkReal x2949=((cj11)*(x2941));
IkReal x2950=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2951=((cj11)*(x2948));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x2948)))+(((IkReal(-1.00000000000000))*(x2949))));
evalcond[1]=((((r21)*(x2943)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x2944)))+(x2947)+(((IkReal(-1.00000000000000))*(x2951))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x2945)))+(x2947)+(((IkReal(-1.00000000000000))*(x2951)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2946)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2946)))+(((IkReal(-1.00000000000000))*(cj14)*(x2950))));
evalcond[3]=((((cj9)*(r00)*(x2944)))+(((x2944)*(x2945)))+(((sj11)*(x2942)))+(((IkReal(-1.00000000000000))*(x2943)*(x2950)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x2943)*(x2946)))+(x2949));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2952=((IkReal(1.00000000000000))*(sj13));
IkReal x2953=((cj14)*(sj9));
IkReal x2954=((cj9)*(sj14));
IkReal x2955=((cj13)*(sj9));
IkReal x2956=((sj13)*(sj14));
IkReal x2957=((cj9)*(sj13));
IkReal x2958=((IkReal(1.00000000000000))*(cj13));
IkReal x2959=((cj14)*(r10));
IkReal x2960=((sj14)*(sj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((IkReal(-1.00000000000000))*(r10)*(x2954)))+(((r00)*(x2960)))+(((r01)*(x2953))));
evalcond[2]=((((r21)*(x2956)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(x2952)))+(((cj13)*(r22))));
evalcond[3]=((IkReal(0.0800000000000000))+(((cj13)*(npz)))+(((npy)*(x2956)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(cj14)*(npx)*(x2952))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r11)*(x2954)*(x2958)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2952)))+(((IkReal(-1.00000000000000))*(r00)*(x2953)*(x2958)))+(((r01)*(sj14)*(x2955)))+(((r12)*(x2957)))+(((cj13)*(cj9)*(x2959))));
evalcond[5]=((IkReal(-1.00000000000000))+(((r01)*(sj9)*(x2956)))+(((IkReal(-1.00000000000000))*(r11)*(x2952)*(x2954)))+(((r02)*(x2955)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2958)))+(((x2957)*(x2959)))+(((IkReal(-1.00000000000000))*(r00)*(x2952)*(x2953))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x2955)))+(((IkReal(-1.00000000000000))*(r11)*(x2952)*(x2960)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x2958)))+(((cj14)*(r00)*(x2957)))+(((r10)*(sj13)*(x2953)))+(((IkReal(-1.00000000000000))*(r01)*(x2952)*(x2954))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2961=((IkReal(4.00000000000000))*(sj14));
IkReal x2962=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((IkReal(0.0800000000000000))+(((npy)*(x2962)))+(((npx)*(x2961))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2961)))+(((cj13)*(npx)*(x2962))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((npy)*(x2962)))+(((npx)*(x2961)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2961)))+(((cj13)*(npx)*(x2962)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.0800000000000000))+(((npy)*(x2962)))+(((npx)*(x2961)))), ((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2961)))+(((cj13)*(npx)*(x2962)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0200000000000000))+(((cj14)*(npy)))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(npx)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((cj13)*(npy)*(sj14))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst58;
gconst58=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2963=((IkReal(1.00000000000000))*(cj14));
IkReal x2964=((sj11)*(sj9));
IkReal x2965=((cj9)*(r01));
IkReal x2966=((cj11)*(cj14));
IkReal x2967=((cj9)*(r00));
IkReal x2968=((r10)*(sj14));
IkReal x2969=((cj11)*(sj14));
IkReal x2970=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(cj11)*(r21)*(x2963)))+(((IkReal(-1.00000000000000))*(r20)*(x2969)))+(((IkReal(-1.00000000000000))*(r11)*(x2963)*(x2964)))+(((IkReal(-1.00000000000000))*(sj11)*(x2963)*(x2965)))+(((IkReal(-1.00000000000000))*(x2964)*(x2968)))+(((IkReal(-1.00000000000000))*(x2967)*(x2970))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(r20)*(x2970)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x2963)))+(((cj11)*(sj9)*(x2968)))+(((x2965)*(x2966)))+(((r11)*(sj9)*(x2966)))+(((x2967)*(x2969))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst59)*(((((IkReal(-1.00000000000000))*(cj11)*(r21)*(x2963)))+(((IkReal(-1.00000000000000))*(r20)*(x2969)))+(((IkReal(-1.00000000000000))*(r11)*(x2963)*(x2964)))+(((IkReal(-1.00000000000000))*(sj11)*(x2963)*(x2965)))+(((IkReal(-1.00000000000000))*(x2964)*(x2968)))+(((IkReal(-1.00000000000000))*(x2967)*(x2970)))))), ((gconst59)*(((((IkReal(-1.00000000000000))*(r20)*(x2970)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x2963)))+(((cj11)*(sj9)*(x2968)))+(((x2965)*(x2966)))+(((r11)*(sj9)*(x2966)))+(((x2967)*(x2969)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2971=IKsin(j10);
IkReal x2972=IKcos(j10);
IkReal x2973=((cj14)*(sj9));
IkReal x2974=((IkReal(1.00000000000000))*(r11));
IkReal x2975=((cj13)*(sj14));
IkReal x2976=((IkReal(1.00000000000000))*(cj9));
IkReal x2977=((cj13)*(cj14));
IkReal x2978=((cj11)*(x2971));
IkReal x2979=((sj11)*(x2972));
IkReal x2980=((cj11)*(x2972));
IkReal x2981=((sj11)*(x2971));
IkReal x2982=((x2978)+(x2979));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x2982));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x2981)+(((IkReal(-1.00000000000000))*(r20)*(x2977)))+(((IkReal(-1.00000000000000))*(x2980)))+(((r21)*(x2975))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2976)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x2981)))+(x2980)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2976)))+(((IkReal(-1.00000000000000))*(x2973)*(x2974))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2975)*(x2976)))+(((IkReal(-1.00000000000000))*(sj9)*(x2974)*(x2975)))+(x2982)+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r10)*(x2973)))+(((cj9)*(r00)*(x2977))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2983=((cj13)*(sj11));
IkReal x2984=((r21)*(sj14));
IkReal x2985=((cj14)*(r20));
IkReal x2986=((cj11)*(cj13));
IkReal x2987=((r22)*(sj13));
IkReal x2988=((r20)*(sj14));
IkReal x2989=((cj14)*(r21));
if( IKabs(((gconst58)*(((((x2983)*(x2984)))+(((cj11)*(x2988)))+(((IkReal(-1.00000000000000))*(x2983)*(x2985)))+(((IkReal(-1.00000000000000))*(sj11)*(x2987)))+(((cj11)*(x2989))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst58)*(((((sj11)*(x2988)))+(((x2985)*(x2986)))+(((cj11)*(x2987)))+(((IkReal(-1.00000000000000))*(x2984)*(x2986)))+(((sj11)*(x2989))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst58)*(((((x2983)*(x2984)))+(((cj11)*(x2988)))+(((IkReal(-1.00000000000000))*(x2983)*(x2985)))+(((IkReal(-1.00000000000000))*(sj11)*(x2987)))+(((cj11)*(x2989)))))), ((gconst58)*(((((sj11)*(x2988)))+(((x2985)*(x2986)))+(((cj11)*(x2987)))+(((IkReal(-1.00000000000000))*(x2984)*(x2986)))+(((sj11)*(x2989)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2990=IKsin(j10);
IkReal x2991=IKcos(j10);
IkReal x2992=((cj14)*(sj9));
IkReal x2993=((IkReal(1.00000000000000))*(r11));
IkReal x2994=((cj13)*(sj14));
IkReal x2995=((IkReal(1.00000000000000))*(cj9));
IkReal x2996=((cj13)*(cj14));
IkReal x2997=((cj11)*(x2990));
IkReal x2998=((sj11)*(x2991));
IkReal x2999=((cj11)*(x2991));
IkReal x3000=((sj11)*(x2990));
IkReal x3001=((x2998)+(x2997));
evalcond[0]=((x3001)+(((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[1]=((x3000)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x2994)))+(((IkReal(-1.00000000000000))*(r20)*(x2996)))+(((IkReal(-1.00000000000000))*(x2999))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(x2999)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2995)))+(((IkReal(-1.00000000000000))*(x3000)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2995)))+(((IkReal(-1.00000000000000))*(x2992)*(x2993))));
evalcond[3]=((((cj9)*(r00)*(x2996)))+(x3001)+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(sj9)*(x2993)*(x2994)))+(((cj13)*(r10)*(x2992)))+(((IkReal(-1.00000000000000))*(r01)*(x2994)*(x2995))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x3002=((cj13)*(sj9));
IkReal x3003=((r01)*(sj14));
IkReal x3004=((cj9)*(sj13));
IkReal x3005=((sj13)*(sj9));
IkReal x3006=((cj14)*(r01));
IkReal x3007=((cj14)*(r10));
IkReal x3008=((cj13)*(cj9));
IkReal x3009=((IkReal(1.00000000000000))*(cj9));
IkReal x3010=((sj14)*(sj9));
IkReal x3011=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3012=((sj14)*(x3009));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x3012)))+(((sj9)*(x3006)))+(((r00)*(x3010)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3009))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x3010)))+(((IkReal(-1.00000000000000))*(r00)*(x3012)))+(((IkReal(-1.00000000000000))*(x3006)*(x3009)))+(((IkReal(-1.00000000000000))*(r11)*(x3011))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x3005)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3008)))+(((x3002)*(x3003)))+(((x3007)*(x3008)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x3002)))+(((r12)*(x3004))));
evalcond[6]=((((x3003)*(x3005)))+(((IkReal(-1.00000000000000))*(r12)*(x3008)))+(((x3004)*(x3007)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3004)))+(((r02)*(x3002)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x3005))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x3013=((IkReal(4.00000000000000))*(cj13));
IkReal x3014=((npy)*(sj14));
IkReal x3015=((cj14)*(npx));
IkReal x3016=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.0800000000000000))+(((IkReal(0.320000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3015)*(x3016)))+(((x3014)*(x3016)))+(((npz)*(x3013))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((npz)*(x3016)))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x3013)*(x3014)))+(((x3013)*(x3015))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((IkReal(0.320000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3015)*(x3016)))+(((x3014)*(x3016)))+(((npz)*(x3013)))))+IKsqr(((IkReal(-0.920000000000000))+(((npz)*(x3016)))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x3013)*(x3014)))+(((x3013)*(x3015)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.0800000000000000))+(((IkReal(0.320000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3015)*(x3016)))+(((x3014)*(x3016)))+(((npz)*(x3013)))), ((IkReal(-0.920000000000000))+(((npz)*(x3016)))+(((IkReal(-0.320000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x3013)*(x3014)))+(((x3013)*(x3015)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x3017=((npy)*(sj14));
IkReal x3018=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(-1.00000000000000))*(cj13)*(x3018)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((cj13)*(x3017))));
evalcond[1]=((IkReal(0.0200000000000000))+(((cj13)*(npz)))+(((sj13)*(x3017)))+(((IkReal(-1.00000000000000))*(sj13)*(x3018)))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((IkReal(0.0800000000000000))*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst60;
gconst60=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3019=((cj13)*(sj14));
IkReal x3020=((IkReal(1.00000000000000))*(cj11));
IkReal x3021=((r11)*(sj9));
IkReal x3022=((IkReal(1.00000000000000))*(sj11));
IkReal x3023=((cj13)*(cj14));
IkReal x3024=((cj11)*(sj13));
IkReal x3025=((r12)*(sj9));
IkReal x3026=((cj9)*(r01));
IkReal x3027=((sj11)*(sj13));
IkReal x3028=((cj9)*(r02));
IkReal x3029=((r10)*(sj9));
IkReal x3030=((cj9)*(r00));
if( IKabs(((gconst61)*(((((IkReal(-1.00000000000000))*(x3019)*(x3020)*(x3021)))+(((cj11)*(x3023)*(x3030)))+(((IkReal(-1.00000000000000))*(x3019)*(x3020)*(x3026)))+(((x3024)*(x3025)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3022)))+(((r21)*(sj11)*(x3019)))+(((cj11)*(x3023)*(x3029)))+(((x3024)*(x3028)))+(((IkReal(-1.00000000000000))*(r20)*(x3022)*(x3023))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst61)*(((((cj11)*(r20)*(x3023)))+(((sj11)*(x3023)*(x3030)))+(((x3027)*(x3028)))+(((IkReal(-1.00000000000000))*(x3019)*(x3021)*(x3022)))+(((r22)*(x3024)))+(((IkReal(-1.00000000000000))*(r21)*(x3019)*(x3020)))+(((IkReal(-1.00000000000000))*(x3019)*(x3022)*(x3026)))+(((sj11)*(x3023)*(x3029)))+(((x3025)*(x3027))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst61)*(((((IkReal(-1.00000000000000))*(x3019)*(x3020)*(x3021)))+(((cj11)*(x3023)*(x3030)))+(((IkReal(-1.00000000000000))*(x3019)*(x3020)*(x3026)))+(((x3024)*(x3025)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3022)))+(((r21)*(sj11)*(x3019)))+(((cj11)*(x3023)*(x3029)))+(((x3024)*(x3028)))+(((IkReal(-1.00000000000000))*(r20)*(x3022)*(x3023)))))), ((gconst61)*(((((cj11)*(r20)*(x3023)))+(((sj11)*(x3023)*(x3030)))+(((x3027)*(x3028)))+(((IkReal(-1.00000000000000))*(x3019)*(x3021)*(x3022)))+(((r22)*(x3024)))+(((IkReal(-1.00000000000000))*(r21)*(x3019)*(x3020)))+(((IkReal(-1.00000000000000))*(x3019)*(x3022)*(x3026)))+(((sj11)*(x3023)*(x3029)))+(((x3025)*(x3027)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3031=IKsin(j10);
IkReal x3032=IKcos(j10);
IkReal x3033=((IkReal(1.00000000000000))*(sj13));
IkReal x3034=((r11)*(sj9));
IkReal x3035=((cj9)*(r01));
IkReal x3036=((r21)*(sj14));
IkReal x3037=((cj9)*(r02));
IkReal x3038=((sj13)*(sj9));
IkReal x3039=((cj14)*(r10));
IkReal x3040=((IkReal(1.00000000000000))*(cj13));
IkReal x3041=((cj14)*(r20));
IkReal x3042=((cj11)*(x3031));
IkReal x3043=((sj11)*(x3032));
IkReal x3044=((sj14)*(x3040));
IkReal x3045=((sj11)*(x3031));
IkReal x3046=((cj11)*(x3032));
IkReal x3047=((cj14)*(cj9)*(r00));
IkReal x3048=((x3043)+(x3042));
evalcond[0]=((((cj13)*(x3036)))+(x3045)+(((IkReal(-1.00000000000000))*(x3040)*(x3041)))+(((IkReal(-1.00000000000000))*(r22)*(x3033)))+(((IkReal(-1.00000000000000))*(x3046))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3033)*(x3041)))+(((sj13)*(x3036)))+(x3048)+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(x3047)))+(((cj13)*(sj9)*(x3039)))+(x3048)+(((sj13)*(x3037)))+(((IkReal(-1.00000000000000))*(x3034)*(x3044)))+(((r12)*(x3038)))+(((IkReal(-1.00000000000000))*(x3035)*(x3044))));
evalcond[3]=((((sj13)*(x3047)))+(((IkReal(-1.00000000000000))*(x3037)*(x3040)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3040)))+(((IkReal(-1.00000000000000))*(sj14)*(x3033)*(x3034)))+(((IkReal(-1.00000000000000))*(sj14)*(x3033)*(x3035)))+(x3046)+(((x3038)*(x3039)))+(((IkReal(-1.00000000000000))*(x3045))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3049=((cj13)*(sj11));
IkReal x3050=((r21)*(sj14));
IkReal x3051=((cj11)*(cj13));
IkReal x3052=((cj11)*(sj13));
IkReal x3053=((sj11)*(sj13));
IkReal x3054=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst60)*(((((IkReal(-1.00000000000000))*(x3052)*(x3054)))+(((x3050)*(x3052)))+(((IkReal(-1.00000000000000))*(x3049)*(x3054)))+(((r22)*(x3051)))+(((IkReal(-1.00000000000000))*(r22)*(x3053)))+(((x3049)*(x3050))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((IkReal(-1.00000000000000))*(x3053)*(x3054)))+(((IkReal(-1.00000000000000))*(x3050)*(x3051)))+(((x3050)*(x3053)))+(((r22)*(x3052)))+(((cj14)*(r20)*(x3051)))+(((r22)*(x3049))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst60)*(((((IkReal(-1.00000000000000))*(x3052)*(x3054)))+(((x3050)*(x3052)))+(((IkReal(-1.00000000000000))*(x3049)*(x3054)))+(((r22)*(x3051)))+(((IkReal(-1.00000000000000))*(r22)*(x3053)))+(((x3049)*(x3050)))))), ((gconst60)*(((((IkReal(-1.00000000000000))*(x3053)*(x3054)))+(((IkReal(-1.00000000000000))*(x3050)*(x3051)))+(((x3050)*(x3053)))+(((r22)*(x3052)))+(((cj14)*(r20)*(x3051)))+(((r22)*(x3049)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3055=IKsin(j10);
IkReal x3056=IKcos(j10);
IkReal x3057=((IkReal(1.00000000000000))*(sj13));
IkReal x3058=((r11)*(sj9));
IkReal x3059=((cj9)*(r01));
IkReal x3060=((r21)*(sj14));
IkReal x3061=((cj9)*(r02));
IkReal x3062=((sj13)*(sj9));
IkReal x3063=((cj14)*(r10));
IkReal x3064=((IkReal(1.00000000000000))*(cj13));
IkReal x3065=((cj14)*(r20));
IkReal x3066=((cj11)*(x3055));
IkReal x3067=((sj11)*(x3056));
IkReal x3068=((sj14)*(x3064));
IkReal x3069=((sj11)*(x3055));
IkReal x3070=((cj11)*(x3056));
IkReal x3071=((cj14)*(cj9)*(r00));
IkReal x3072=((x3067)+(x3066));
evalcond[0]=((x3069)+(((IkReal(-1.00000000000000))*(r22)*(x3057)))+(((cj13)*(x3060)))+(((IkReal(-1.00000000000000))*(x3070)))+(((IkReal(-1.00000000000000))*(x3064)*(x3065))));
evalcond[1]=((x3072)+(((sj13)*(x3060)))+(((IkReal(-1.00000000000000))*(x3057)*(x3065)))+(((cj13)*(r22))));
evalcond[2]=((x3072)+(((IkReal(-1.00000000000000))*(x3059)*(x3068)))+(((sj13)*(x3061)))+(((cj13)*(sj9)*(x3063)))+(((r12)*(x3062)))+(((cj13)*(x3071)))+(((IkReal(-1.00000000000000))*(x3058)*(x3068))));
evalcond[3]=((x3070)+(((IkReal(-1.00000000000000))*(x3069)))+(((sj13)*(x3071)))+(((IkReal(-1.00000000000000))*(sj14)*(x3057)*(x3058)))+(((IkReal(-1.00000000000000))*(x3061)*(x3064)))+(((x3062)*(x3063)))+(((IkReal(-1.00000000000000))*(sj14)*(x3057)*(x3059)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3064))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x3073=((cj13)*(sj9));
IkReal x3074=((r01)*(sj14));
IkReal x3075=((cj9)*(sj13));
IkReal x3076=((sj13)*(sj9));
IkReal x3077=((cj14)*(r01));
IkReal x3078=((cj14)*(r10));
IkReal x3079=((cj13)*(cj9));
IkReal x3080=((IkReal(1.00000000000000))*(cj9));
IkReal x3081=((sj14)*(sj9));
IkReal x3082=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3083=((sj14)*(x3080));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x3083)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3080)))+(((r00)*(x3081)))+(((sj9)*(x3077))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r11)*(x3082)))+(((IkReal(-1.00000000000000))*(r00)*(x3083)))+(((IkReal(-1.00000000000000))*(r10)*(x3081)))+(((IkReal(-1.00000000000000))*(x3077)*(x3080))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3079)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x3073)))+(((IkReal(-1.00000000000000))*(r02)*(x3076)))+(((r12)*(x3075)))+(((x3078)*(x3079)))+(((x3073)*(x3074))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3075)))+(((IkReal(-1.00000000000000))*(r12)*(x3079)))+(((r02)*(x3073)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x3076)))+(((x3074)*(x3076)))+(((x3075)*(x3078))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x3084=((IkReal(4.00000000000000))*(cj13));
IkReal x3085=((npy)*(sj14));
IkReal x3086=((cj14)*(npx));
IkReal x3087=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x3085)*(x3087)))+(((x3086)*(x3087)))+(((IkReal(-1.00000000000000))*(npz)*(x3084)))+(((IkReal(-0.320000000000000))*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(-1.00000000000000))*(x3084)*(x3085)))+(((IkReal(-0.320000000000000))*(cj13)))+(((x3084)*(x3086)))+(((npz)*(x3087))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x3085)*(x3087)))+(((x3086)*(x3087)))+(((IkReal(-1.00000000000000))*(npz)*(x3084)))+(((IkReal(-0.320000000000000))*(sj13)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(-1.00000000000000))*(x3084)*(x3085)))+(((IkReal(-0.320000000000000))*(cj13)))+(((x3084)*(x3086)))+(((npz)*(x3087)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x3085)*(x3087)))+(((x3086)*(x3087)))+(((IkReal(-1.00000000000000))*(npz)*(x3084)))+(((IkReal(-0.320000000000000))*(sj13)))), ((IkReal(-0.920000000000000))+(((IkReal(-1.00000000000000))*(x3084)*(x3085)))+(((IkReal(-0.320000000000000))*(cj13)))+(((x3084)*(x3086)))+(((npz)*(x3087)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x3088=((npy)*(sj14));
IkReal x3089=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(cj13)*(x3089)))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((cj13)*(x3088))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(sj13)*(x3089)))+(((IkReal(0.250000000000000))*(IKsin(j11))))+(((sj13)*(x3088))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst63;
gconst63=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3090=((cj13)*(sj14));
IkReal x3091=((IkReal(1.00000000000000))*(cj11));
IkReal x3092=((r11)*(sj9));
IkReal x3093=((IkReal(1.00000000000000))*(sj11));
IkReal x3094=((cj13)*(cj14));
IkReal x3095=((cj11)*(sj13));
IkReal x3096=((r12)*(sj9));
IkReal x3097=((cj9)*(r01));
IkReal x3098=((sj11)*(sj13));
IkReal x3099=((r10)*(sj9));
IkReal x3100=((cj9)*(r00));
IkReal x3101=((cj9)*(r02));
if( IKabs(((gconst63)*(((((r21)*(sj11)*(x3090)))+(((IkReal(-1.00000000000000))*(r20)*(x3093)*(x3094)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3093)))+(((IkReal(-1.00000000000000))*(x3090)*(x3091)*(x3092)))+(((IkReal(-1.00000000000000))*(x3090)*(x3091)*(x3097)))+(((x3095)*(x3096)))+(((x3095)*(x3101)))+(((cj11)*(x3094)*(x3099)))+(((cj11)*(x3094)*(x3100))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*(((((IkReal(-1.00000000000000))*(r21)*(x3090)*(x3091)))+(((IkReal(-1.00000000000000))*(x3090)*(x3093)*(x3097)))+(((cj11)*(r20)*(x3094)))+(((x3096)*(x3098)))+(((r22)*(x3095)))+(((sj11)*(x3094)*(x3099)))+(((IkReal(-1.00000000000000))*(x3090)*(x3092)*(x3093)))+(((x3098)*(x3101)))+(((sj11)*(x3094)*(x3100))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst63)*(((((r21)*(sj11)*(x3090)))+(((IkReal(-1.00000000000000))*(r20)*(x3093)*(x3094)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3093)))+(((IkReal(-1.00000000000000))*(x3090)*(x3091)*(x3092)))+(((IkReal(-1.00000000000000))*(x3090)*(x3091)*(x3097)))+(((x3095)*(x3096)))+(((x3095)*(x3101)))+(((cj11)*(x3094)*(x3099)))+(((cj11)*(x3094)*(x3100)))))), ((gconst63)*(((((IkReal(-1.00000000000000))*(r21)*(x3090)*(x3091)))+(((IkReal(-1.00000000000000))*(x3090)*(x3093)*(x3097)))+(((cj11)*(r20)*(x3094)))+(((x3096)*(x3098)))+(((r22)*(x3095)))+(((sj11)*(x3094)*(x3099)))+(((IkReal(-1.00000000000000))*(x3090)*(x3092)*(x3093)))+(((x3098)*(x3101)))+(((sj11)*(x3094)*(x3100)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3102=IKsin(j10);
IkReal x3103=IKcos(j10);
IkReal x3104=((IkReal(1.00000000000000))*(sj13));
IkReal x3105=((r11)*(sj9));
IkReal x3106=((cj9)*(r01));
IkReal x3107=((IkReal(1.00000000000000))*(cj11));
IkReal x3108=((r21)*(sj14));
IkReal x3109=((cj9)*(r02));
IkReal x3110=((sj13)*(sj9));
IkReal x3111=((cj14)*(r10));
IkReal x3112=((IkReal(1.00000000000000))*(cj13));
IkReal x3113=((cj14)*(r20));
IkReal x3114=((sj11)*(x3102));
IkReal x3115=((sj14)*(x3112));
IkReal x3116=((sj11)*(x3103));
IkReal x3117=((cj14)*(cj9)*(r00));
IkReal x3118=((x3103)*(x3107));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3112)*(x3113)))+(x3114)+(((IkReal(-1.00000000000000))*(x3118)))+(((IkReal(-1.00000000000000))*(r22)*(x3104)))+(((cj13)*(x3108))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3102)*(x3107)))+(((IkReal(-1.00000000000000))*(x3116)))+(((sj13)*(x3108)))+(((IkReal(-1.00000000000000))*(x3104)*(x3113)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3106)*(x3115)))+(((cj13)*(sj9)*(x3111)))+(x3116)+(((cj11)*(x3102)))+(((IkReal(-1.00000000000000))*(x3105)*(x3115)))+(((r12)*(x3110)))+(((cj13)*(x3117)))+(((sj13)*(x3109))));
evalcond[3]=((x3114)+(((IkReal(-1.00000000000000))*(x3118)))+(((IkReal(-1.00000000000000))*(sj14)*(x3104)*(x3106)))+(((IkReal(-1.00000000000000))*(x3109)*(x3112)))+(((sj13)*(x3117)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3112)))+(((IkReal(-1.00000000000000))*(sj14)*(x3104)*(x3105)))+(((x3110)*(x3111))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3119=((cj13)*(sj11));
IkReal x3120=((cj11)*(cj13));
IkReal x3121=((r21)*(sj14));
IkReal x3122=((cj11)*(sj13));
IkReal x3123=((sj11)*(sj13));
IkReal x3124=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst62)*(((((IkReal(-1.00000000000000))*(x3119)*(x3121)))+(((r22)*(x3120)))+(((IkReal(-1.00000000000000))*(x3122)*(x3124)))+(((cj14)*(r20)*(x3119)))+(((x3121)*(x3122)))+(((r22)*(x3123))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*(((((x3121)*(x3123)))+(((r22)*(x3119)))+(((x3120)*(x3121)))+(((IkReal(-1.00000000000000))*(x3123)*(x3124)))+(((IkReal(-1.00000000000000))*(x3120)*(x3124)))+(((IkReal(-1.00000000000000))*(r22)*(x3122))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst62)*(((((IkReal(-1.00000000000000))*(x3119)*(x3121)))+(((r22)*(x3120)))+(((IkReal(-1.00000000000000))*(x3122)*(x3124)))+(((cj14)*(r20)*(x3119)))+(((x3121)*(x3122)))+(((r22)*(x3123)))))), ((gconst62)*(((((x3121)*(x3123)))+(((r22)*(x3119)))+(((x3120)*(x3121)))+(((IkReal(-1.00000000000000))*(x3123)*(x3124)))+(((IkReal(-1.00000000000000))*(x3120)*(x3124)))+(((IkReal(-1.00000000000000))*(r22)*(x3122)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3125=IKsin(j10);
IkReal x3126=IKcos(j10);
IkReal x3127=((IkReal(1.00000000000000))*(sj13));
IkReal x3128=((r11)*(sj9));
IkReal x3129=((cj9)*(r01));
IkReal x3130=((IkReal(1.00000000000000))*(cj11));
IkReal x3131=((r21)*(sj14));
IkReal x3132=((cj9)*(r02));
IkReal x3133=((sj13)*(sj9));
IkReal x3134=((cj14)*(r10));
IkReal x3135=((IkReal(1.00000000000000))*(cj13));
IkReal x3136=((cj14)*(r20));
IkReal x3137=((sj11)*(x3125));
IkReal x3138=((sj14)*(x3135));
IkReal x3139=((sj11)*(x3126));
IkReal x3140=((cj14)*(cj9)*(r00));
IkReal x3141=((x3126)*(x3130));
evalcond[0]=((x3137)+(((IkReal(-1.00000000000000))*(r22)*(x3127)))+(((IkReal(-1.00000000000000))*(x3135)*(x3136)))+(((IkReal(-1.00000000000000))*(x3141)))+(((cj13)*(x3131))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3127)*(x3136)))+(((sj13)*(x3131)))+(((IkReal(-1.00000000000000))*(x3139)))+(((IkReal(-1.00000000000000))*(x3125)*(x3130)))+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x3133)))+(x3139)+(((sj13)*(x3132)))+(((IkReal(-1.00000000000000))*(x3128)*(x3138)))+(((cj11)*(x3125)))+(((cj13)*(x3140)))+(((IkReal(-1.00000000000000))*(x3129)*(x3138)))+(((cj13)*(sj9)*(x3134))));
evalcond[3]=((x3137)+(((IkReal(-1.00000000000000))*(sj14)*(x3127)*(x3128)))+(((IkReal(-1.00000000000000))*(sj14)*(x3127)*(x3129)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3135)))+(((x3133)*(x3134)))+(((sj13)*(x3140)))+(((IkReal(-1.00000000000000))*(x3132)*(x3135)))+(((IkReal(-1.00000000000000))*(x3141))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x3142=((IkReal(4.00000000000000))*(cj13));
IkReal x3143=((npy)*(sj14));
IkReal x3144=((IkReal(4.00000000000000))*(sj13));
IkReal x3145=((cj14)*(npx));
if( IKabs(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(sj13)))+(((x3143)*(x3144)))+(((IkReal(0.0800000000000000))*(cj12)))+(((npz)*(x3142)))+(((IkReal(-0.320000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x3144)*(x3145))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((x3142)*(x3145)))+(((IkReal(-0.320000000000000))*(cj13)))+(((npz)*(x3144)))+(((IkReal(-1.00000000000000))*(x3142)*(x3143))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(sj13)))+(((x3143)*(x3144)))+(((IkReal(0.0800000000000000))*(cj12)))+(((npz)*(x3142)))+(((IkReal(-0.320000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x3144)*(x3145)))))))+IKsqr(((IkReal(-0.920000000000000))+(((x3142)*(x3145)))+(((IkReal(-0.320000000000000))*(cj13)))+(((npz)*(x3144)))+(((IkReal(-1.00000000000000))*(x3142)*(x3143)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(sj13)))+(((x3143)*(x3144)))+(((IkReal(0.0800000000000000))*(cj12)))+(((npz)*(x3142)))+(((IkReal(-0.320000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x3144)*(x3145)))))), ((IkReal(-0.920000000000000))+(((x3142)*(x3145)))+(((IkReal(-0.320000000000000))*(cj13)))+(((npz)*(x3144)))+(((IkReal(-1.00000000000000))*(x3142)*(x3143)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x3146=IKsin(j11);
IkReal x3147=((npy)*(sj14));
IkReal x3148=((IkReal(1.00000000000000))*(cj14)*(npx));
IkReal x3149=((IkReal(0.250000000000000))*(x3146));
evalcond[0]=((((sj12)*(x3149)))+(((cj14)*(npy)))+(((IkReal(-0.0800000000000000))*(cj12)))+(((IkReal(-0.0200000000000000))*(sj12)))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(-1.00000000000000))*(cj13)*(x3148)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((cj13)*(x3147))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj13)*(x3148)))+(((cj13)*(npz)))+(((IkReal(0.0200000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(cj12)*(x3149)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-0.0800000000000000))*(sj12)))+(((sj13)*(x3147))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11))))));
dummyeval[0]=((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3150=((r00)*(sj9));
IkReal x3151=((IkReal(1.00000000000000))*(sj13));
IkReal x3152=((cj13)*(sj14));
IkReal x3153=((cj9)*(sj14));
IkReal x3154=((cj13)*(r02));
IkReal x3155=((sj13)*(sj14));
IkReal x3156=((r01)*(sj9));
IkReal x3157=((cj9)*(sj13));
IkReal x3158=((IkReal(1.00000000000000))*(cj9));
IkReal x3159=((cj14)*(r10));
IkReal x3160=((cj14)*(npx));
IkReal x3161=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(npz)*(x3151)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x3160)*(x3161)))+(((npy)*(x3152))));
evalcond[3]=((((sj14)*(x3150)))+(((IkReal(-1.00000000000000))*(r10)*(x3153)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3158)))+(((cj14)*(x3156))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x3151)))+(((r21)*(x3155)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(-0.0800000000000000))+(((npy)*(x3155)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3151)*(x3160))));
evalcond[6]=((((r12)*(x3157)))+(((cj13)*(cj9)*(x3159)))+(((x3152)*(x3156)))+(((IkReal(-1.00000000000000))*(r11)*(x3152)*(x3158)))+(((IkReal(-1.00000000000000))*(cj14)*(x3150)*(x3161)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3151))));
evalcond[7]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x3151)*(x3153)))+(((x3157)*(x3159)))+(((x3155)*(x3156)))+(((IkReal(-1.00000000000000))*(cj14)*(x3150)*(x3151)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3158)))+(((sj9)*(x3154))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3161)))+(((sj13)*(sj9)*(x3159)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x3151)))+(((IkReal(-1.00000000000000))*(x3154)*(x3158)))+(((cj14)*(r00)*(x3157)))+(((IkReal(-1.00000000000000))*(r01)*(x3151)*(x3153))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3162=((IkReal(1.00000000000000))*(cj11));
IkReal x3163=((r20)*(sj14));
IkReal x3164=((cj14)*(r21));
IkReal x3165=((cj14)*(cj9)*(r01));
IkReal x3166=((r10)*(sj14)*(sj9));
IkReal x3167=((cj9)*(r00)*(sj14));
IkReal x3168=((cj14)*(r11)*(sj9));
if( IKabs(((gconst49)*(((((sj11)*(x3166)))+(((cj11)*(x3163)))+(((sj11)*(x3165)))+(((sj11)*(x3168)))+(((cj11)*(x3164)))+(((sj11)*(x3167))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((sj11)*(x3163)))+(((IkReal(-1.00000000000000))*(x3162)*(x3165)))+(((sj11)*(x3164)))+(((IkReal(-1.00000000000000))*(x3162)*(x3166)))+(((IkReal(-1.00000000000000))*(x3162)*(x3168)))+(((IkReal(-1.00000000000000))*(x3162)*(x3167))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst49)*(((((sj11)*(x3166)))+(((cj11)*(x3163)))+(((sj11)*(x3165)))+(((sj11)*(x3168)))+(((cj11)*(x3164)))+(((sj11)*(x3167)))))), ((gconst49)*(((((sj11)*(x3163)))+(((IkReal(-1.00000000000000))*(x3162)*(x3165)))+(((sj11)*(x3164)))+(((IkReal(-1.00000000000000))*(x3162)*(x3166)))+(((IkReal(-1.00000000000000))*(x3162)*(x3168)))+(((IkReal(-1.00000000000000))*(x3162)*(x3167)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3169=IKsin(j10);
IkReal x3170=IKcos(j10);
IkReal x3171=((cj13)*(sj14));
IkReal x3172=((cj13)*(cj14));
IkReal x3173=((r10)*(sj9));
IkReal x3174=((IkReal(1.00000000000000))*(cj9));
IkReal x3175=((sj11)*(x3169));
IkReal x3176=((IkReal(1.00000000000000))*(x3170));
IkReal x3177=((cj11)*(x3169));
IkReal x3178=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x3179=((cj11)*(x3176));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3177)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x3176))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x3175)+(((r21)*(x3171)))+(((IkReal(-1.00000000000000))*(r20)*(x3172)))+(((IkReal(-1.00000000000000))*(x3179))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x3173)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3174)))+(x3175)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3174)))+(((IkReal(-1.00000000000000))*(cj14)*(x3178)))+(((IkReal(-1.00000000000000))*(x3179))));
evalcond[3]=((x3177)+(((r12)*(sj13)*(sj9)))+(((x3172)*(x3173)))+(((cj9)*(r02)*(sj13)))+(((sj11)*(x3170)))+(((IkReal(-1.00000000000000))*(r01)*(x3171)*(x3174)))+(((IkReal(-1.00000000000000))*(x3171)*(x3178)))+(((cj9)*(r00)*(x3172))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3180=((cj11)*(r20));
IkReal x3181=((IkReal(1.00000000000000))*(cj13));
IkReal x3182=((r21)*(sj14));
IkReal x3183=((r22)*(sj13));
IkReal x3184=((r20)*(sj11));
IkReal x3185=((cj14)*(r21));
if( IKabs(((gconst48)*(((((cj11)*(x3185)))+(((cj13)*(cj14)*(x3184)))+(((sj11)*(x3183)))+(((sj14)*(x3180)))+(((IkReal(-1.00000000000000))*(sj11)*(x3181)*(x3182))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((IkReal(-1.00000000000000))*(cj14)*(x3180)*(x3181)))+(((sj14)*(x3184)))+(((sj11)*(x3185)))+(((IkReal(-1.00000000000000))*(cj11)*(x3183)))+(((cj11)*(cj13)*(x3182))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst48)*(((((cj11)*(x3185)))+(((cj13)*(cj14)*(x3184)))+(((sj11)*(x3183)))+(((sj14)*(x3180)))+(((IkReal(-1.00000000000000))*(sj11)*(x3181)*(x3182)))))), ((gconst48)*(((((IkReal(-1.00000000000000))*(cj14)*(x3180)*(x3181)))+(((sj14)*(x3184)))+(((sj11)*(x3185)))+(((IkReal(-1.00000000000000))*(cj11)*(x3183)))+(((cj11)*(cj13)*(x3182)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3186=IKsin(j10);
IkReal x3187=IKcos(j10);
IkReal x3188=((cj13)*(sj14));
IkReal x3189=((cj13)*(cj14));
IkReal x3190=((r10)*(sj9));
IkReal x3191=((IkReal(1.00000000000000))*(cj9));
IkReal x3192=((sj11)*(x3186));
IkReal x3193=((IkReal(1.00000000000000))*(x3187));
IkReal x3194=((cj11)*(x3186));
IkReal x3195=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x3196=((cj11)*(x3193));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3194)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x3193))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3196)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x3188)))+(x3192)+(((IkReal(-1.00000000000000))*(r20)*(x3189))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x3195)))+(((IkReal(-1.00000000000000))*(x3196)))+(x3192)+(((IkReal(-1.00000000000000))*(sj14)*(x3190)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3191)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3191))));
evalcond[3]=((((x3189)*(x3190)))+(((cj9)*(r00)*(x3189)))+(x3194)+(((IkReal(-1.00000000000000))*(r01)*(x3188)*(x3191)))+(((IkReal(-1.00000000000000))*(x3188)*(x3195)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((sj11)*(x3187))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3197=((r00)*(sj9));
IkReal x3198=((IkReal(1.00000000000000))*(sj13));
IkReal x3199=((cj13)*(sj14));
IkReal x3200=((cj9)*(sj14));
IkReal x3201=((cj13)*(r02));
IkReal x3202=((sj13)*(sj14));
IkReal x3203=((r01)*(sj9));
IkReal x3204=((cj9)*(sj13));
IkReal x3205=((IkReal(1.00000000000000))*(cj9));
IkReal x3206=((cj14)*(r10));
IkReal x3207=((cj14)*(npx));
IkReal x3208=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0200000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((npy)*(x3199)))+(((IkReal(-1.00000000000000))*(npz)*(x3198)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x3207)*(x3208))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3205)))+(((IkReal(-1.00000000000000))*(r10)*(x3200)))+(((cj14)*(x3203)))+(((sj14)*(x3197))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x3198)))+(((r21)*(x3202)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0800000000000000))+(((npy)*(x3202)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3198)*(x3207))));
evalcond[6]=((((x3199)*(x3203)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3198)))+(((IkReal(-1.00000000000000))*(cj14)*(x3197)*(x3208)))+(((r12)*(x3204)))+(((IkReal(-1.00000000000000))*(r11)*(x3199)*(x3205)))+(((cj13)*(cj9)*(x3206))));
evalcond[7]=((IkReal(-1.00000000000000))+(((x3202)*(x3203)))+(((IkReal(-1.00000000000000))*(r11)*(x3198)*(x3200)))+(((sj9)*(x3201)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3205)))+(((IkReal(-1.00000000000000))*(cj14)*(x3197)*(x3198)))+(((x3204)*(x3206))));
evalcond[8]=((((sj13)*(sj9)*(x3206)))+(((cj14)*(r00)*(x3204)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x3198)))+(((IkReal(-1.00000000000000))*(r01)*(x3198)*(x3200)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3208)))+(((IkReal(-1.00000000000000))*(x3201)*(x3205))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3209=((IkReal(1.00000000000000))*(cj14));
IkReal x3210=((sj11)*(sj9));
IkReal x3211=((cj9)*(r01));
IkReal x3212=((cj11)*(cj14));
IkReal x3213=((cj9)*(r00));
IkReal x3214=((r10)*(sj14));
IkReal x3215=((cj11)*(sj14));
IkReal x3216=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(r20)*(x3215)))+(((IkReal(-1.00000000000000))*(r11)*(x3209)*(x3210)))+(((IkReal(-1.00000000000000))*(x3213)*(x3216)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x3209)))+(((IkReal(-1.00000000000000))*(sj11)*(x3209)*(x3211)))+(((IkReal(-1.00000000000000))*(x3210)*(x3214))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(r21)*(sj11)*(x3209)))+(((x3213)*(x3215)))+(((x3211)*(x3212)))+(((IkReal(-1.00000000000000))*(r20)*(x3216)))+(((r11)*(sj9)*(x3212)))+(((cj11)*(sj9)*(x3214))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(r20)*(x3215)))+(((IkReal(-1.00000000000000))*(r11)*(x3209)*(x3210)))+(((IkReal(-1.00000000000000))*(x3213)*(x3216)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x3209)))+(((IkReal(-1.00000000000000))*(sj11)*(x3209)*(x3211)))+(((IkReal(-1.00000000000000))*(x3210)*(x3214)))))), ((gconst51)*(((((IkReal(-1.00000000000000))*(r21)*(sj11)*(x3209)))+(((x3213)*(x3215)))+(((x3211)*(x3212)))+(((IkReal(-1.00000000000000))*(r20)*(x3216)))+(((r11)*(sj9)*(x3212)))+(((cj11)*(sj9)*(x3214)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3217=IKsin(j10);
IkReal x3218=IKcos(j10);
IkReal x3219=((cj14)*(sj9));
IkReal x3220=((IkReal(1.00000000000000))*(r11));
IkReal x3221=((cj13)*(sj14));
IkReal x3222=((IkReal(1.00000000000000))*(cj9));
IkReal x3223=((cj13)*(cj14));
IkReal x3224=((cj11)*(x3217));
IkReal x3225=((sj11)*(x3218));
IkReal x3226=((cj11)*(x3218));
IkReal x3227=((sj11)*(x3217));
IkReal x3228=((x3225)+(x3224));
evalcond[0]=((((r20)*(sj14)))+(x3228)+(((cj14)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x3223)))+(x3227)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x3226)))+(((r21)*(x3221))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3222)))+(((IkReal(-1.00000000000000))*(x3219)*(x3220)))+(x3226)+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3222)))+(((IkReal(-1.00000000000000))*(x3227))));
evalcond[3]=((x3228)+(((cj9)*(r00)*(x3223)))+(((cj13)*(r10)*(x3219)))+(((IkReal(-1.00000000000000))*(r01)*(x3221)*(x3222)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(sj9)*(x3220)*(x3221)))+(((cj9)*(r02)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3229=((cj13)*(sj11));
IkReal x3230=((r21)*(sj14));
IkReal x3231=((cj14)*(r20));
IkReal x3232=((cj11)*(cj13));
IkReal x3233=((r22)*(sj13));
IkReal x3234=((r20)*(sj14));
IkReal x3235=((cj14)*(r21));
if( IKabs(((gconst50)*(((((cj11)*(x3234)))+(((IkReal(-1.00000000000000))*(sj11)*(x3233)))+(((cj11)*(x3235)))+(((x3229)*(x3230)))+(((IkReal(-1.00000000000000))*(x3229)*(x3231))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((sj11)*(x3235)))+(((IkReal(-1.00000000000000))*(x3230)*(x3232)))+(((x3231)*(x3232)))+(((sj11)*(x3234)))+(((cj11)*(x3233))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst50)*(((((cj11)*(x3234)))+(((IkReal(-1.00000000000000))*(sj11)*(x3233)))+(((cj11)*(x3235)))+(((x3229)*(x3230)))+(((IkReal(-1.00000000000000))*(x3229)*(x3231)))))), ((gconst50)*(((((sj11)*(x3235)))+(((IkReal(-1.00000000000000))*(x3230)*(x3232)))+(((x3231)*(x3232)))+(((sj11)*(x3234)))+(((cj11)*(x3233)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3236=IKsin(j10);
IkReal x3237=IKcos(j10);
IkReal x3238=((cj14)*(sj9));
IkReal x3239=((IkReal(1.00000000000000))*(r11));
IkReal x3240=((cj13)*(sj14));
IkReal x3241=((IkReal(1.00000000000000))*(cj9));
IkReal x3242=((cj13)*(cj14));
IkReal x3243=((cj11)*(x3236));
IkReal x3244=((sj11)*(x3237));
IkReal x3245=((cj11)*(x3237));
IkReal x3246=((sj11)*(x3236));
IkReal x3247=((x3243)+(x3244));
evalcond[0]=((((r20)*(sj14)))+(x3247)+(((cj14)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x3242)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x3245)))+(x3246)+(((r21)*(x3240))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3241)))+(x3245)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3241)))+(((IkReal(-1.00000000000000))*(x3238)*(x3239)))+(((IkReal(-1.00000000000000))*(x3246))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x3240)*(x3241)))+(((cj9)*(r00)*(x3242)))+(x3247)+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r10)*(x3238)))+(((IkReal(-1.00000000000000))*(sj9)*(x3239)*(x3240))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3248=((cj13)*(sj14));
IkReal x3249=((sj14)*(sj9));
IkReal x3250=((r02)*(sj9));
IkReal x3251=((r01)*(sj9));
IkReal x3252=((cj9)*(sj13));
IkReal x3253=((IkReal(1.00000000000000))*(cj9));
IkReal x3254=((IkReal(1.00000000000000))*(sj13));
IkReal x3255=((cj14)*(npx));
IkReal x3256=((cj14)*(r10));
IkReal x3257=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3258=((sj14)*(x3253));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((npy)*(x3248)))+(((IkReal(-1.00000000000000))*(cj13)*(x3255)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x3254))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x3258)))+(((cj14)*(x3251)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3253)))+(((r00)*(x3249))));
evalcond[5]=((IkReal(0.0200000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((npy)*(sj13)*(sj14)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3254)*(x3255))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3253)))+(((IkReal(-1.00000000000000))*(r10)*(x3249)))+(((IkReal(-1.00000000000000))*(r11)*(x3257)))+(((IkReal(-1.00000000000000))*(r00)*(x3258))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r11)*(x3248)*(x3253)))+(((IkReal(-1.00000000000000))*(x3250)*(x3254)))+(((r12)*(x3252)))+(((cj13)*(cj9)*(x3256)))+(((IkReal(-1.00000000000000))*(cj13)*(r00)*(x3257)))+(((x3248)*(x3251))));
evalcond[8]=((((x3252)*(x3256)))+(((cj13)*(x3250)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)*(x3254)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3253)))+(((r01)*(sj13)*(x3249)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3252))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3259=((cj13)*(sj14));
IkReal x3260=((IkReal(1.00000000000000))*(cj11));
IkReal x3261=((r11)*(sj9));
IkReal x3262=((cj11)*(sj13));
IkReal x3263=((r12)*(sj9));
IkReal x3264=((r10)*(sj9));
IkReal x3265=((sj11)*(sj13));
IkReal x3266=((cj9)*(r02));
IkReal x3267=((cj9)*(r01));
IkReal x3268=((IkReal(1.00000000000000))*(sj11));
IkReal x3269=((cj9)*(r00));
IkReal x3270=((cj13)*(cj14)*(sj11));
IkReal x3271=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst53)*(((((x3269)*(x3271)))+(((x3262)*(x3263)))+(((x3262)*(x3266)))+(((x3264)*(x3271)))+(((IkReal(-1.00000000000000))*(x3259)*(x3260)*(x3261)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x3268)))+(((IkReal(-1.00000000000000))*(r22)*(x3265)))+(((IkReal(-1.00000000000000))*(x3259)*(x3260)*(x3267)))+(((r21)*(sj11)*(x3259))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(x3259)*(x3267)*(x3268)))+(((r20)*(x3271)))+(((x3264)*(x3270)))+(((IkReal(-1.00000000000000))*(x3259)*(x3261)*(x3268)))+(((IkReal(-1.00000000000000))*(r21)*(x3259)*(x3260)))+(((r22)*(x3262)))+(((x3263)*(x3265)))+(((x3265)*(x3266)))+(((x3269)*(x3270))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst53)*(((((x3269)*(x3271)))+(((x3262)*(x3263)))+(((x3262)*(x3266)))+(((x3264)*(x3271)))+(((IkReal(-1.00000000000000))*(x3259)*(x3260)*(x3261)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x3268)))+(((IkReal(-1.00000000000000))*(r22)*(x3265)))+(((IkReal(-1.00000000000000))*(x3259)*(x3260)*(x3267)))+(((r21)*(sj11)*(x3259)))))), ((gconst53)*(((((IkReal(-1.00000000000000))*(x3259)*(x3267)*(x3268)))+(((r20)*(x3271)))+(((x3264)*(x3270)))+(((IkReal(-1.00000000000000))*(x3259)*(x3261)*(x3268)))+(((IkReal(-1.00000000000000))*(r21)*(x3259)*(x3260)))+(((r22)*(x3262)))+(((x3263)*(x3265)))+(((x3265)*(x3266)))+(((x3269)*(x3270)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3272=IKsin(j10);
IkReal x3273=IKcos(j10);
IkReal x3274=((IkReal(1.00000000000000))*(sj13));
IkReal x3275=((r11)*(sj9));
IkReal x3276=((cj9)*(r01));
IkReal x3277=((r21)*(sj14));
IkReal x3278=((cj9)*(r02));
IkReal x3279=((sj13)*(sj9));
IkReal x3280=((cj14)*(r10));
IkReal x3281=((IkReal(1.00000000000000))*(cj13));
IkReal x3282=((cj14)*(r20));
IkReal x3283=((cj11)*(x3272));
IkReal x3284=((sj11)*(x3273));
IkReal x3285=((sj14)*(x3281));
IkReal x3286=((sj11)*(x3272));
IkReal x3287=((cj11)*(x3273));
IkReal x3288=((cj14)*(cj9)*(r00));
IkReal x3289=((x3284)+(x3283));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3287)))+(((cj13)*(x3277)))+(x3286)+(((IkReal(-1.00000000000000))*(x3281)*(x3282)))+(((IkReal(-1.00000000000000))*(r22)*(x3274))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3274)*(x3282)))+(x3289)+(((sj13)*(x3277)))+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x3278)))+(((r12)*(x3279)))+(x3289)+(((IkReal(-1.00000000000000))*(x3275)*(x3285)))+(((IkReal(-1.00000000000000))*(x3276)*(x3285)))+(((cj13)*(x3288)))+(((cj13)*(sj9)*(x3280))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3278)*(x3281)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3281)))+(((sj13)*(x3288)))+(((IkReal(-1.00000000000000))*(sj14)*(x3274)*(x3276)))+(((IkReal(-1.00000000000000))*(sj14)*(x3274)*(x3275)))+(x3287)+(((x3279)*(x3280)))+(((IkReal(-1.00000000000000))*(x3286))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3290=((cj13)*(sj11));
IkReal x3291=((r21)*(sj14));
IkReal x3292=((cj11)*(cj13));
IkReal x3293=((cj11)*(sj13));
IkReal x3294=((sj11)*(sj13));
IkReal x3295=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst52)*(((((x3291)*(x3293)))+(((IkReal(-1.00000000000000))*(x3290)*(x3295)))+(((IkReal(-1.00000000000000))*(r22)*(x3294)))+(((r22)*(x3292)))+(((IkReal(-1.00000000000000))*(x3293)*(x3295)))+(((x3290)*(x3291))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((r22)*(x3293)))+(((x3291)*(x3294)))+(((r22)*(x3290)))+(((IkReal(-1.00000000000000))*(x3291)*(x3292)))+(((IkReal(-1.00000000000000))*(x3294)*(x3295)))+(((cj14)*(r20)*(x3292))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst52)*(((((x3291)*(x3293)))+(((IkReal(-1.00000000000000))*(x3290)*(x3295)))+(((IkReal(-1.00000000000000))*(r22)*(x3294)))+(((r22)*(x3292)))+(((IkReal(-1.00000000000000))*(x3293)*(x3295)))+(((x3290)*(x3291)))))), ((gconst52)*(((((r22)*(x3293)))+(((x3291)*(x3294)))+(((r22)*(x3290)))+(((IkReal(-1.00000000000000))*(x3291)*(x3292)))+(((IkReal(-1.00000000000000))*(x3294)*(x3295)))+(((cj14)*(r20)*(x3292)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3296=IKsin(j10);
IkReal x3297=IKcos(j10);
IkReal x3298=((IkReal(1.00000000000000))*(sj13));
IkReal x3299=((r11)*(sj9));
IkReal x3300=((cj9)*(r01));
IkReal x3301=((r21)*(sj14));
IkReal x3302=((cj9)*(r02));
IkReal x3303=((sj13)*(sj9));
IkReal x3304=((cj14)*(r10));
IkReal x3305=((IkReal(1.00000000000000))*(cj13));
IkReal x3306=((cj14)*(r20));
IkReal x3307=((cj11)*(x3296));
IkReal x3308=((sj11)*(x3297));
IkReal x3309=((sj14)*(x3305));
IkReal x3310=((sj11)*(x3296));
IkReal x3311=((cj11)*(x3297));
IkReal x3312=((cj14)*(cj9)*(r00));
IkReal x3313=((x3308)+(x3307));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3305)*(x3306)))+(((cj13)*(x3301)))+(x3310)+(((IkReal(-1.00000000000000))*(r22)*(x3298)))+(((IkReal(-1.00000000000000))*(x3311))));
evalcond[1]=((x3313)+(((sj13)*(x3301)))+(((IkReal(-1.00000000000000))*(x3298)*(x3306)))+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x3303)))+(((cj13)*(sj9)*(x3304)))+(((IkReal(-1.00000000000000))*(x3299)*(x3309)))+(x3313)+(((cj13)*(x3312)))+(((sj13)*(x3302)))+(((IkReal(-1.00000000000000))*(x3300)*(x3309))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x3298)*(x3299)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3305)))+(((sj13)*(x3312)))+(((x3303)*(x3304)))+(((IkReal(-1.00000000000000))*(x3310)))+(x3311)+(((IkReal(-1.00000000000000))*(sj14)*(x3298)*(x3300)))+(((IkReal(-1.00000000000000))*(x3302)*(x3305))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3314=((cj13)*(sj14));
IkReal x3315=((sj14)*(sj9));
IkReal x3316=((r02)*(sj9));
IkReal x3317=((r01)*(sj9));
IkReal x3318=((cj9)*(sj13));
IkReal x3319=((IkReal(1.00000000000000))*(cj9));
IkReal x3320=((IkReal(1.00000000000000))*(sj13));
IkReal x3321=((cj14)*(npx));
IkReal x3322=((cj14)*(r10));
IkReal x3323=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3324=((sj14)*(x3319));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x3320)))+(((IkReal(-1.00000000000000))*(cj13)*(x3321)))+(((npy)*(x3314))));
evalcond[4]=((IkReal(-1.00000000000000))+(((r00)*(x3315)))+(((cj14)*(x3317)))+(((IkReal(-1.00000000000000))*(r10)*(x3324)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3319))));
evalcond[5]=((IkReal(-0.0200000000000000))+(((npy)*(sj13)*(sj14)))+(((IkReal(-1.00000000000000))*(x3320)*(x3321)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x3324)))+(((IkReal(-1.00000000000000))*(r10)*(x3315)))+(((IkReal(-1.00000000000000))*(r11)*(x3323)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3319))));
evalcond[7]=((((r12)*(x3318)))+(((IkReal(-1.00000000000000))*(cj13)*(r00)*(x3323)))+(((IkReal(-1.00000000000000))*(r11)*(x3314)*(x3319)))+(((x3314)*(x3317)))+(((cj13)*(cj9)*(x3322)))+(((IkReal(-1.00000000000000))*(x3316)*(x3320))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3319)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)*(x3320)))+(((cj13)*(x3316)))+(((r01)*(sj13)*(x3315)))+(((x3318)*(x3322)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3318))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3325=((cj13)*(sj14));
IkReal x3326=((IkReal(1.00000000000000))*(cj11));
IkReal x3327=((r11)*(sj9));
IkReal x3328=((IkReal(1.00000000000000))*(sj11));
IkReal x3329=((cj13)*(cj14));
IkReal x3330=((cj11)*(sj13));
IkReal x3331=((r12)*(sj9));
IkReal x3332=((cj9)*(r01));
IkReal x3333=((sj11)*(sj13));
IkReal x3334=((cj9)*(r02));
IkReal x3335=((r10)*(sj9));
IkReal x3336=((cj9)*(r00));
if( IKabs(((gconst55)*(((((cj11)*(x3329)*(x3336)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3328)))+(((r21)*(sj11)*(x3325)))+(((IkReal(-1.00000000000000))*(x3325)*(x3326)*(x3332)))+(((x3330)*(x3334)))+(((x3330)*(x3331)))+(((IkReal(-1.00000000000000))*(x3325)*(x3326)*(x3327)))+(((cj11)*(x3329)*(x3335)))+(((IkReal(-1.00000000000000))*(r20)*(x3328)*(x3329))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(r21)*(x3325)*(x3326)))+(((x3333)*(x3334)))+(((IkReal(-1.00000000000000))*(x3325)*(x3327)*(x3328)))+(((x3331)*(x3333)))+(((r22)*(x3330)))+(((sj11)*(x3329)*(x3336)))+(((IkReal(-1.00000000000000))*(x3325)*(x3328)*(x3332)))+(((sj11)*(x3329)*(x3335)))+(((cj11)*(r20)*(x3329))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst55)*(((((cj11)*(x3329)*(x3336)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3328)))+(((r21)*(sj11)*(x3325)))+(((IkReal(-1.00000000000000))*(x3325)*(x3326)*(x3332)))+(((x3330)*(x3334)))+(((x3330)*(x3331)))+(((IkReal(-1.00000000000000))*(x3325)*(x3326)*(x3327)))+(((cj11)*(x3329)*(x3335)))+(((IkReal(-1.00000000000000))*(r20)*(x3328)*(x3329)))))), ((gconst55)*(((((IkReal(-1.00000000000000))*(r21)*(x3325)*(x3326)))+(((x3333)*(x3334)))+(((IkReal(-1.00000000000000))*(x3325)*(x3327)*(x3328)))+(((x3331)*(x3333)))+(((r22)*(x3330)))+(((sj11)*(x3329)*(x3336)))+(((IkReal(-1.00000000000000))*(x3325)*(x3328)*(x3332)))+(((sj11)*(x3329)*(x3335)))+(((cj11)*(r20)*(x3329)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3337=IKsin(j10);
IkReal x3338=IKcos(j10);
IkReal x3339=((IkReal(1.00000000000000))*(sj13));
IkReal x3340=((r11)*(sj9));
IkReal x3341=((cj9)*(r01));
IkReal x3342=((IkReal(1.00000000000000))*(cj11));
IkReal x3343=((r21)*(sj14));
IkReal x3344=((cj9)*(r02));
IkReal x3345=((sj13)*(sj9));
IkReal x3346=((cj14)*(r10));
IkReal x3347=((IkReal(1.00000000000000))*(cj13));
IkReal x3348=((cj14)*(r20));
IkReal x3349=((sj11)*(x3337));
IkReal x3350=((sj14)*(x3347));
IkReal x3351=((sj11)*(x3338));
IkReal x3352=((cj14)*(cj9)*(r00));
IkReal x3353=((x3338)*(x3342));
evalcond[0]=((x3349)+(((IkReal(-1.00000000000000))*(x3353)))+(((IkReal(-1.00000000000000))*(r22)*(x3339)))+(((IkReal(-1.00000000000000))*(x3347)*(x3348)))+(((cj13)*(x3343))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3337)*(x3342)))+(((IkReal(-1.00000000000000))*(x3351)))+(((sj13)*(x3343)))+(((IkReal(-1.00000000000000))*(x3339)*(x3348)))+(((cj13)*(r22))));
evalcond[2]=((x3351)+(((cj13)*(sj9)*(x3346)))+(((r12)*(x3345)))+(((cj13)*(x3352)))+(((IkReal(-1.00000000000000))*(x3341)*(x3350)))+(((IkReal(-1.00000000000000))*(x3340)*(x3350)))+(((sj13)*(x3344)))+(((cj11)*(x3337))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3344)*(x3347)))+(x3349)+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3347)))+(((IkReal(-1.00000000000000))*(x3353)))+(((IkReal(-1.00000000000000))*(sj14)*(x3339)*(x3340)))+(((IkReal(-1.00000000000000))*(sj14)*(x3339)*(x3341)))+(((sj13)*(x3352)))+(((x3345)*(x3346))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3354=((cj13)*(sj11));
IkReal x3355=((r21)*(sj14));
IkReal x3356=((cj11)*(cj13));
IkReal x3357=((IkReal(1.00000000000000))*(sj13));
IkReal x3358=((sj11)*(sj13));
IkReal x3359=((cj14)*(r20));
if( IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(cj11)*(x3357)*(x3359)))+(((IkReal(-1.00000000000000))*(x3354)*(x3355)))+(((x3354)*(x3359)))+(((r22)*(x3358)))+(((r22)*(x3356)))+(((cj11)*(sj13)*(x3355))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((x3355)*(x3358)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x3357)))+(((x3355)*(x3356)))+(((IkReal(-1.00000000000000))*(x3356)*(x3359)))+(((r22)*(x3354)))+(((IkReal(-1.00000000000000))*(sj11)*(x3357)*(x3359))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst54)*(((((IkReal(-1.00000000000000))*(cj11)*(x3357)*(x3359)))+(((IkReal(-1.00000000000000))*(x3354)*(x3355)))+(((x3354)*(x3359)))+(((r22)*(x3358)))+(((r22)*(x3356)))+(((cj11)*(sj13)*(x3355)))))), ((gconst54)*(((((x3355)*(x3358)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x3357)))+(((x3355)*(x3356)))+(((IkReal(-1.00000000000000))*(x3356)*(x3359)))+(((r22)*(x3354)))+(((IkReal(-1.00000000000000))*(sj11)*(x3357)*(x3359)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3360=IKsin(j10);
IkReal x3361=IKcos(j10);
IkReal x3362=((IkReal(1.00000000000000))*(sj13));
IkReal x3363=((r11)*(sj9));
IkReal x3364=((cj9)*(r01));
IkReal x3365=((IkReal(1.00000000000000))*(cj11));
IkReal x3366=((r21)*(sj14));
IkReal x3367=((cj9)*(r02));
IkReal x3368=((sj13)*(sj9));
IkReal x3369=((cj14)*(r10));
IkReal x3370=((IkReal(1.00000000000000))*(cj13));
IkReal x3371=((cj14)*(r20));
IkReal x3372=((sj11)*(x3360));
IkReal x3373=((sj14)*(x3370));
IkReal x3374=((sj11)*(x3361));
IkReal x3375=((cj14)*(cj9)*(r00));
IkReal x3376=((x3361)*(x3365));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x3362)))+(((IkReal(-1.00000000000000))*(x3370)*(x3371)))+(((IkReal(-1.00000000000000))*(x3376)))+(x3372)+(((cj13)*(x3366))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3362)*(x3371)))+(((IkReal(-1.00000000000000))*(x3374)))+(((IkReal(-1.00000000000000))*(x3360)*(x3365)))+(((sj13)*(x3366)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3363)*(x3373)))+(((cj11)*(x3360)))+(((cj13)*(sj9)*(x3369)))+(((cj13)*(x3375)))+(((r12)*(x3368)))+(((sj13)*(x3367)))+(x3374)+(((IkReal(-1.00000000000000))*(x3364)*(x3373))));
evalcond[3]=((((x3368)*(x3369)))+(((IkReal(-1.00000000000000))*(sj14)*(x3362)*(x3363)))+(((IkReal(-1.00000000000000))*(x3367)*(x3370)))+(((IkReal(-1.00000000000000))*(sj14)*(x3362)*(x3364)))+(((sj13)*(x3375)))+(((IkReal(-1.00000000000000))*(x3376)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3370)))+(x3372));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3377=((r21)*(sj14));
IkReal x3378=((cj12)*(cj13));
IkReal x3379=((sj11)*(sj13));
IkReal x3380=((cj14)*(r20));
IkReal x3381=((IkReal(1.00000000000000))*(sj11));
IkReal x3382=((cj12)*(r22));
IkReal x3383=((IkReal(1.00000000000000))*(cj11));
IkReal x3384=((cj13)*(r22));
IkReal x3385=((sj13)*(x3383));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x3377)*(x3378)*(x3381)))+(((sj11)*(x3378)*(x3380)))+(((cj11)*(sj13)*(x3380)))+(((x3379)*(x3382)))+(((IkReal(-1.00000000000000))*(x3377)*(x3385)))+(((IkReal(-1.00000000000000))*(x3383)*(x3384))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x3381)*(x3384)))+(((IkReal(-1.00000000000000))*(x3378)*(x3380)*(x3383)))+(((x3379)*(x3380)))+(((cj11)*(x3377)*(x3378)))+(((IkReal(-1.00000000000000))*(x3382)*(x3385)))+(((IkReal(-1.00000000000000))*(x3377)*(x3379))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(x3377)*(x3378)*(x3381)))+(((sj11)*(x3378)*(x3380)))+(((cj11)*(sj13)*(x3380)))+(((x3379)*(x3382)))+(((IkReal(-1.00000000000000))*(x3377)*(x3385)))+(((IkReal(-1.00000000000000))*(x3383)*(x3384)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(x3381)*(x3384)))+(((IkReal(-1.00000000000000))*(x3378)*(x3380)*(x3383)))+(((x3379)*(x3380)))+(((cj11)*(x3377)*(x3378)))+(((IkReal(-1.00000000000000))*(x3382)*(x3385)))+(((IkReal(-1.00000000000000))*(x3377)*(x3379)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x3386=IKsin(j10);
IkReal x3387=IKcos(j10);
IkReal x3388=((IkReal(1.00000000000000))*(cj13));
IkReal x3389=((cj9)*(r02));
IkReal x3390=((IkReal(1.00000000000000))*(sj13));
IkReal x3391=((r11)*(sj9));
IkReal x3392=((IkReal(1.00000000000000))*(cj14));
IkReal x3393=((cj9)*(r01));
IkReal x3394=((r21)*(sj14));
IkReal x3395=((IkReal(1.00000000000000))*(sj12));
IkReal x3396=((r10)*(sj9));
IkReal x3397=((cj14)*(sj13));
IkReal x3398=((cj14)*(r20));
IkReal x3399=((IkReal(1.00000000000000))*(sj14));
IkReal x3400=((r12)*(sj9));
IkReal x3401=((cj13)*(cj14));
IkReal x3402=((cj9)*(r00));
IkReal x3403=((sj11)*(x3386));
IkReal x3404=((cj11)*(x3386));
IkReal x3405=((sj11)*(x3387));
IkReal x3406=((cj11)*(x3387));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3395)*(x3405)))+(((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x3395)*(x3404))));
evalcond[1]=((x3403)+(((IkReal(-1.00000000000000))*(r22)*(x3390)))+(((IkReal(-1.00000000000000))*(x3388)*(x3398)))+(((cj13)*(x3394)))+(((IkReal(-1.00000000000000))*(x3406))));
evalcond[2]=((((cj12)*(x3405)))+(((cj12)*(x3404)))+(((sj13)*(x3394)))+(((IkReal(-1.00000000000000))*(x3390)*(x3398)))+(((cj13)*(r22))));
evalcond[3]=((((sj12)*(x3403)))+(((IkReal(-1.00000000000000))*(x3391)*(x3392)))+(((IkReal(-1.00000000000000))*(x3395)*(x3406)))+(((IkReal(-1.00000000000000))*(x3392)*(x3393)))+(((IkReal(-1.00000000000000))*(x3399)*(x3402)))+(((IkReal(-1.00000000000000))*(x3396)*(x3399))));
evalcond[4]=((x3405)+(x3404)+(((IkReal(-1.00000000000000))*(sj14)*(x3388)*(x3391)))+(((IkReal(-1.00000000000000))*(sj14)*(x3388)*(x3393)))+(((sj13)*(x3389)))+(((x3401)*(x3402)))+(((sj13)*(x3400)))+(((x3396)*(x3401))));
evalcond[5]=((((x3396)*(x3397)))+(((IkReal(-1.00000000000000))*(cj12)*(x3403)))+(((x3397)*(x3402)))+(((IkReal(-1.00000000000000))*(x3388)*(x3389)))+(((IkReal(-1.00000000000000))*(sj14)*(x3390)*(x3393)))+(((IkReal(-1.00000000000000))*(x3388)*(x3400)))+(((IkReal(-1.00000000000000))*(sj14)*(x3390)*(x3391)))+(((cj12)*(x3406))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3407=((cj11)*(sj12));
IkReal x3408=((r22)*(sj13));
IkReal x3409=((r20)*(sj14));
IkReal x3410=((cj14)*(sj11));
IkReal x3411=((cj13)*(r20));
IkReal x3412=((sj11)*(sj12));
IkReal x3413=((cj13)*(r21)*(sj14));
if( IKabs(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((x3408)*(x3412)))+(((IkReal(-1.00000000000000))*(x3412)*(x3413)))+(((cj11)*(x3409)))+(((sj12)*(x3410)*(x3411))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(x3407)*(x3408)))+(((IkReal(-1.00000000000000))*(cj14)*(x3407)*(x3411)))+(((sj11)*(x3409)))+(((x3407)*(x3413)))+(((r21)*(x3410))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((x3408)*(x3412)))+(((IkReal(-1.00000000000000))*(x3412)*(x3413)))+(((cj11)*(x3409)))+(((sj12)*(x3410)*(x3411)))))), ((gconst46)*(((((IkReal(-1.00000000000000))*(x3407)*(x3408)))+(((IkReal(-1.00000000000000))*(cj14)*(x3407)*(x3411)))+(((sj11)*(x3409)))+(((x3407)*(x3413)))+(((r21)*(x3410)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x3414=IKsin(j10);
IkReal x3415=IKcos(j10);
IkReal x3416=((IkReal(1.00000000000000))*(cj13));
IkReal x3417=((cj9)*(r02));
IkReal x3418=((IkReal(1.00000000000000))*(sj13));
IkReal x3419=((r11)*(sj9));
IkReal x3420=((IkReal(1.00000000000000))*(cj14));
IkReal x3421=((cj9)*(r01));
IkReal x3422=((r21)*(sj14));
IkReal x3423=((IkReal(1.00000000000000))*(sj12));
IkReal x3424=((r10)*(sj9));
IkReal x3425=((cj14)*(sj13));
IkReal x3426=((cj14)*(r20));
IkReal x3427=((IkReal(1.00000000000000))*(sj14));
IkReal x3428=((r12)*(sj9));
IkReal x3429=((cj13)*(cj14));
IkReal x3430=((cj9)*(r00));
IkReal x3431=((sj11)*(x3414));
IkReal x3432=((cj11)*(x3414));
IkReal x3433=((sj11)*(x3415));
IkReal x3434=((cj11)*(x3415));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x3423)*(x3432)))+(((IkReal(-1.00000000000000))*(x3423)*(x3433))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3416)*(x3426)))+(x3431)+(((IkReal(-1.00000000000000))*(r22)*(x3418)))+(((cj13)*(x3422)))+(((IkReal(-1.00000000000000))*(x3434))));
evalcond[2]=((((cj12)*(x3433)))+(((IkReal(-1.00000000000000))*(x3418)*(x3426)))+(((sj13)*(x3422)))+(((cj12)*(x3432)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3423)*(x3434)))+(((IkReal(-1.00000000000000))*(x3419)*(x3420)))+(((IkReal(-1.00000000000000))*(x3420)*(x3421)))+(((IkReal(-1.00000000000000))*(x3424)*(x3427)))+(((sj12)*(x3431)))+(((IkReal(-1.00000000000000))*(x3427)*(x3430))));
evalcond[4]=((((sj13)*(x3417)))+(((x3429)*(x3430)))+(((IkReal(-1.00000000000000))*(sj14)*(x3416)*(x3421)))+(((IkReal(-1.00000000000000))*(sj14)*(x3416)*(x3419)))+(((x3424)*(x3429)))+(((sj13)*(x3428)))+(x3432)+(x3433));
evalcond[5]=((((x3424)*(x3425)))+(((IkReal(-1.00000000000000))*(x3416)*(x3417)))+(((cj12)*(x3434)))+(((IkReal(-1.00000000000000))*(sj14)*(x3418)*(x3421)))+(((IkReal(-1.00000000000000))*(cj12)*(x3431)))+(((x3425)*(x3430)))+(((IkReal(-1.00000000000000))*(sj14)*(x3418)*(x3419)))+(((IkReal(-1.00000000000000))*(x3416)*(x3428))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x3435=((IkReal(4.00000000000000))*(sj14));
IkReal x3436=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(cj12)))+(((IkReal(0.0800000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(npy)*(x3436)))+(((IkReal(-1.00000000000000))*(npx)*(x3435))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((cj13)*(npx)*(x3436)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x3435)))+(((IkReal(4.00000000000000))*(npz)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(cj12)))+(((IkReal(0.0800000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(npy)*(x3436)))+(((IkReal(-1.00000000000000))*(npx)*(x3435)))))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((cj13)*(npx)*(x3436)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x3435)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(cj12)))+(((IkReal(0.0800000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(npy)*(x3436)))+(((IkReal(-1.00000000000000))*(npx)*(x3435)))))), ((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj13)))+(((cj13)*(npx)*(x3436)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x3435)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x3437=IKsin(j11);
IkReal x3438=((npy)*(sj14));
IkReal x3439=((IkReal(1.00000000000000))*(cj14)*(npx));
IkReal x3440=((IkReal(0.250000000000000))*(x3437));
evalcond[0]=((((cj14)*(npy)))+(((IkReal(-0.0800000000000000))*(cj12)))+(((IkReal(-0.0200000000000000))*(sj12)))+(((sj12)*(x3440)))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(cj13)*(x3439)))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((cj13)*(x3438)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj12)*(x3440)))+(((IkReal(-1.00000000000000))*(sj13)*(x3439)))+(((cj13)*(npz)))+(((IkReal(0.0200000000000000))*(cj12)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-0.0800000000000000))*(sj12)))+(((sj13)*(x3438))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11))))));
dummyeval[0]=((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3441=((r00)*(sj9));
IkReal x3442=((IkReal(1.00000000000000))*(sj13));
IkReal x3443=((cj13)*(sj14));
IkReal x3444=((cj9)*(sj14));
IkReal x3445=((cj13)*(r02));
IkReal x3446=((sj13)*(sj14));
IkReal x3447=((r01)*(sj9));
IkReal x3448=((cj9)*(sj13));
IkReal x3449=((IkReal(1.00000000000000))*(cj9));
IkReal x3450=((cj14)*(r10));
IkReal x3451=((cj14)*(npx));
IkReal x3452=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(npz)*(x3442)))+(((IkReal(-1.00000000000000))*(x3451)*(x3452)))+(((npy)*(x3443)))+(((IkReal(0.0800000000000000))*(cj13))));
evalcond[3]=((((cj14)*(x3447)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3449)))+(((sj14)*(x3441)))+(((IkReal(-1.00000000000000))*(r10)*(x3444))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x3442)))+(((r21)*(x3446)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(-0.0800000000000000))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(x3442)*(x3451)))+(((IkReal(0.0800000000000000))*(sj13)))+(((npy)*(x3446))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3442)))+(((IkReal(-1.00000000000000))*(r11)*(x3443)*(x3449)))+(((x3443)*(x3447)))+(((cj13)*(cj9)*(x3450)))+(((IkReal(-1.00000000000000))*(cj14)*(x3441)*(x3452)))+(((r12)*(x3448))));
evalcond[7]=((IkReal(1.00000000000000))+(((sj9)*(x3445)))+(((x3446)*(x3447)))+(((IkReal(-1.00000000000000))*(r11)*(x3442)*(x3444)))+(((x3448)*(x3450)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3449)))+(((IkReal(-1.00000000000000))*(cj14)*(x3441)*(x3442))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r01)*(x3442)*(x3444)))+(((sj13)*(sj9)*(x3450)))+(((IkReal(-1.00000000000000))*(x3445)*(x3449)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x3442)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3452)))+(((cj14)*(r00)*(x3448))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3453=((IkReal(1.00000000000000))*(cj11));
IkReal x3454=((r20)*(sj14));
IkReal x3455=((cj14)*(r21));
IkReal x3456=((cj14)*(cj9)*(r01));
IkReal x3457=((r10)*(sj14)*(sj9));
IkReal x3458=((cj9)*(r00)*(sj14));
IkReal x3459=((cj14)*(r11)*(sj9));
if( IKabs(((gconst49)*(((((sj11)*(x3457)))+(((sj11)*(x3459)))+(((cj11)*(x3455)))+(((sj11)*(x3458)))+(((cj11)*(x3454)))+(((sj11)*(x3456))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(x3453)*(x3458)))+(((sj11)*(x3454)))+(((IkReal(-1.00000000000000))*(x3453)*(x3459)))+(((sj11)*(x3455)))+(((IkReal(-1.00000000000000))*(x3453)*(x3456)))+(((IkReal(-1.00000000000000))*(x3453)*(x3457))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst49)*(((((sj11)*(x3457)))+(((sj11)*(x3459)))+(((cj11)*(x3455)))+(((sj11)*(x3458)))+(((cj11)*(x3454)))+(((sj11)*(x3456)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(x3453)*(x3458)))+(((sj11)*(x3454)))+(((IkReal(-1.00000000000000))*(x3453)*(x3459)))+(((sj11)*(x3455)))+(((IkReal(-1.00000000000000))*(x3453)*(x3456)))+(((IkReal(-1.00000000000000))*(x3453)*(x3457)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3460=IKsin(j10);
IkReal x3461=IKcos(j10);
IkReal x3462=((cj13)*(sj14));
IkReal x3463=((cj13)*(cj14));
IkReal x3464=((r10)*(sj9));
IkReal x3465=((IkReal(1.00000000000000))*(cj9));
IkReal x3466=((sj11)*(x3460));
IkReal x3467=((IkReal(1.00000000000000))*(x3461));
IkReal x3468=((cj11)*(x3460));
IkReal x3469=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x3470=((cj11)*(x3467));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x3467)))+(((IkReal(-1.00000000000000))*(x3468)))+(((cj14)*(r21))));
evalcond[1]=((x3466)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x3463)))+(((r21)*(x3462)))+(((IkReal(-1.00000000000000))*(x3470))));
evalcond[2]=((x3466)+(((IkReal(-1.00000000000000))*(sj14)*(x3464)))+(((IkReal(-1.00000000000000))*(cj14)*(x3469)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3465)))+(((IkReal(-1.00000000000000))*(x3470)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3465))));
evalcond[3]=((x3468)+(((IkReal(-1.00000000000000))*(r01)*(x3462)*(x3465)))+(((x3463)*(x3464)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x3462)*(x3469)))+(((cj9)*(r00)*(x3463)))+(((sj11)*(x3461))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3471=((cj11)*(r20));
IkReal x3472=((IkReal(1.00000000000000))*(cj13));
IkReal x3473=((r21)*(sj14));
IkReal x3474=((r22)*(sj13));
IkReal x3475=((r20)*(sj11));
IkReal x3476=((cj14)*(r21));
if( IKabs(((gconst48)*(((((cj13)*(cj14)*(x3475)))+(((cj11)*(x3476)))+(((sj14)*(x3471)))+(((sj11)*(x3474)))+(((IkReal(-1.00000000000000))*(sj11)*(x3472)*(x3473))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((IkReal(-1.00000000000000))*(cj11)*(x3474)))+(((sj11)*(x3476)))+(((sj14)*(x3475)))+(((cj11)*(cj13)*(x3473)))+(((IkReal(-1.00000000000000))*(cj14)*(x3471)*(x3472))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst48)*(((((cj13)*(cj14)*(x3475)))+(((cj11)*(x3476)))+(((sj14)*(x3471)))+(((sj11)*(x3474)))+(((IkReal(-1.00000000000000))*(sj11)*(x3472)*(x3473)))))), ((gconst48)*(((((IkReal(-1.00000000000000))*(cj11)*(x3474)))+(((sj11)*(x3476)))+(((sj14)*(x3475)))+(((cj11)*(cj13)*(x3473)))+(((IkReal(-1.00000000000000))*(cj14)*(x3471)*(x3472)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3477=IKsin(j10);
IkReal x3478=IKcos(j10);
IkReal x3479=((cj13)*(sj14));
IkReal x3480=((cj13)*(cj14));
IkReal x3481=((r10)*(sj9));
IkReal x3482=((IkReal(1.00000000000000))*(cj9));
IkReal x3483=((sj11)*(x3477));
IkReal x3484=((IkReal(1.00000000000000))*(x3478));
IkReal x3485=((cj11)*(x3477));
IkReal x3486=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x3487=((cj11)*(x3484));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x3484)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x3485))));
evalcond[1]=((x3483)+(((IkReal(-1.00000000000000))*(r20)*(x3480)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x3479)))+(((IkReal(-1.00000000000000))*(x3487))));
evalcond[2]=((x3483)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3482)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3482)))+(((IkReal(-1.00000000000000))*(sj14)*(x3481)))+(((IkReal(-1.00000000000000))*(x3487)))+(((IkReal(-1.00000000000000))*(cj14)*(x3486))));
evalcond[3]=((x3485)+(((cj9)*(r00)*(x3480)))+(((IkReal(-1.00000000000000))*(x3479)*(x3486)))+(((sj11)*(x3478)))+(((IkReal(-1.00000000000000))*(r01)*(x3479)*(x3482)))+(((x3480)*(x3481)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3488=((r00)*(sj9));
IkReal x3489=((IkReal(1.00000000000000))*(sj13));
IkReal x3490=((cj13)*(sj14));
IkReal x3491=((cj9)*(sj14));
IkReal x3492=((cj13)*(r02));
IkReal x3493=((sj13)*(sj14));
IkReal x3494=((r01)*(sj9));
IkReal x3495=((cj9)*(sj13));
IkReal x3496=((IkReal(1.00000000000000))*(cj9));
IkReal x3497=((cj14)*(r10));
IkReal x3498=((cj14)*(npx));
IkReal x3499=((IkReal(1.00000000000000))*(cj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0200000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((npy)*(x3490)))+(((IkReal(0.0800000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x3489)))+(((IkReal(-1.00000000000000))*(x3498)*(x3499))));
evalcond[3]=((((cj14)*(x3494)))+(((sj14)*(x3488)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3496)))+(((IkReal(-1.00000000000000))*(r10)*(x3491))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x3489)))+(((r21)*(x3493)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0800000000000000))+(((cj13)*(npz)))+(((npy)*(x3493)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3489)*(x3498))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3489)))+(((IkReal(-1.00000000000000))*(r11)*(x3490)*(x3496)))+(((cj13)*(cj9)*(x3497)))+(((IkReal(-1.00000000000000))*(cj14)*(x3488)*(x3499)))+(((r12)*(x3495)))+(((x3490)*(x3494))));
evalcond[7]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3496)))+(((IkReal(-1.00000000000000))*(r11)*(x3489)*(x3491)))+(((sj9)*(x3492)))+(((IkReal(-1.00000000000000))*(cj14)*(x3488)*(x3489)))+(((x3495)*(x3497)))+(((x3493)*(x3494))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r01)*(x3489)*(x3491)))+(((IkReal(-1.00000000000000))*(x3492)*(x3496)))+(((sj13)*(sj9)*(x3497)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(sj9)*(x3489)))+(((cj14)*(r00)*(x3495)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3499))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3500=((IkReal(1.00000000000000))*(cj14));
IkReal x3501=((sj11)*(sj9));
IkReal x3502=((cj9)*(r01));
IkReal x3503=((cj11)*(cj14));
IkReal x3504=((cj9)*(r00));
IkReal x3505=((r10)*(sj14));
IkReal x3506=((cj11)*(sj14));
IkReal x3507=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x3501)*(x3505)))+(((IkReal(-1.00000000000000))*(r20)*(x3506)))+(((IkReal(-1.00000000000000))*(r11)*(x3500)*(x3501)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x3500)))+(((IkReal(-1.00000000000000))*(x3504)*(x3507)))+(((IkReal(-1.00000000000000))*(sj11)*(x3500)*(x3502))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((r11)*(sj9)*(x3503)))+(((x3504)*(x3506)))+(((cj11)*(sj9)*(x3505)))+(((x3502)*(x3503)))+(((IkReal(-1.00000000000000))*(r20)*(x3507)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x3500))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(x3501)*(x3505)))+(((IkReal(-1.00000000000000))*(r20)*(x3506)))+(((IkReal(-1.00000000000000))*(r11)*(x3500)*(x3501)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x3500)))+(((IkReal(-1.00000000000000))*(x3504)*(x3507)))+(((IkReal(-1.00000000000000))*(sj11)*(x3500)*(x3502)))))), ((gconst51)*(((((r11)*(sj9)*(x3503)))+(((x3504)*(x3506)))+(((cj11)*(sj9)*(x3505)))+(((x3502)*(x3503)))+(((IkReal(-1.00000000000000))*(r20)*(x3507)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x3500)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3508=IKsin(j10);
IkReal x3509=IKcos(j10);
IkReal x3510=((cj14)*(sj9));
IkReal x3511=((IkReal(1.00000000000000))*(r11));
IkReal x3512=((cj13)*(sj14));
IkReal x3513=((IkReal(1.00000000000000))*(cj9));
IkReal x3514=((cj13)*(cj14));
IkReal x3515=((cj11)*(x3508));
IkReal x3516=((sj11)*(x3509));
IkReal x3517=((cj11)*(x3509));
IkReal x3518=((sj11)*(x3508));
IkReal x3519=((x3516)+(x3515));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x3519));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x3514)))+(((r21)*(x3512)))+(((IkReal(-1.00000000000000))*(x3517)))+(x3518));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3513)))+(((IkReal(-1.00000000000000))*(x3518)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3513)))+(x3517)+(((IkReal(-1.00000000000000))*(x3510)*(x3511))));
evalcond[3]=((((cj13)*(r10)*(x3510)))+(((IkReal(-1.00000000000000))*(sj9)*(x3511)*(x3512)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x3514)))+(((IkReal(-1.00000000000000))*(r01)*(x3512)*(x3513)))+(x3519));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3520=((cj13)*(sj11));
IkReal x3521=((r21)*(sj14));
IkReal x3522=((cj14)*(r20));
IkReal x3523=((cj11)*(cj13));
IkReal x3524=((r22)*(sj13));
IkReal x3525=((r20)*(sj14));
IkReal x3526=((cj14)*(r21));
if( IKabs(((gconst50)*(((((cj11)*(x3526)))+(((x3520)*(x3521)))+(((IkReal(-1.00000000000000))*(x3520)*(x3522)))+(((IkReal(-1.00000000000000))*(sj11)*(x3524)))+(((cj11)*(x3525))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((cj11)*(x3524)))+(((sj11)*(x3526)))+(((IkReal(-1.00000000000000))*(x3521)*(x3523)))+(((sj11)*(x3525)))+(((x3522)*(x3523))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst50)*(((((cj11)*(x3526)))+(((x3520)*(x3521)))+(((IkReal(-1.00000000000000))*(x3520)*(x3522)))+(((IkReal(-1.00000000000000))*(sj11)*(x3524)))+(((cj11)*(x3525)))))), ((gconst50)*(((((cj11)*(x3524)))+(((sj11)*(x3526)))+(((IkReal(-1.00000000000000))*(x3521)*(x3523)))+(((sj11)*(x3525)))+(((x3522)*(x3523)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3527=IKsin(j10);
IkReal x3528=IKcos(j10);
IkReal x3529=((cj14)*(sj9));
IkReal x3530=((IkReal(1.00000000000000))*(r11));
IkReal x3531=((cj13)*(sj14));
IkReal x3532=((IkReal(1.00000000000000))*(cj9));
IkReal x3533=((cj13)*(cj14));
IkReal x3534=((cj11)*(x3527));
IkReal x3535=((sj11)*(x3528));
IkReal x3536=((cj11)*(x3528));
IkReal x3537=((sj11)*(x3527));
IkReal x3538=((x3535)+(x3534));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x3538));
evalcond[1]=((((r21)*(x3531)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x3536)))+(x3537)+(((IkReal(-1.00000000000000))*(r20)*(x3533))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3532)))+(((IkReal(-1.00000000000000))*(x3529)*(x3530)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x3537)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3532)))+(x3536));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x3531)*(x3532)))+(((IkReal(-1.00000000000000))*(sj9)*(x3530)*(x3531)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x3533)))+(x3538)+(((cj13)*(r10)*(x3529))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3539=((cj13)*(sj14));
IkReal x3540=((sj14)*(sj9));
IkReal x3541=((r02)*(sj9));
IkReal x3542=((r01)*(sj9));
IkReal x3543=((cj9)*(sj13));
IkReal x3544=((IkReal(1.00000000000000))*(cj9));
IkReal x3545=((IkReal(1.00000000000000))*(sj13));
IkReal x3546=((cj14)*(npx));
IkReal x3547=((cj14)*(r10));
IkReal x3548=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3549=((sj14)*(x3544));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x3546)))+(((IkReal(0.0800000000000000))*(cj13)))+(((npy)*(x3539)))+(((IkReal(-1.00000000000000))*(npz)*(x3545))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x3549)))+(((r00)*(x3540)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3544)))+(((cj14)*(x3542))));
evalcond[5]=((IkReal(0.0200000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(x3545)*(x3546)))+(((npy)*(sj13)*(sj14)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x3549)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3544)))+(((IkReal(-1.00000000000000))*(r10)*(x3540)))+(((IkReal(-1.00000000000000))*(r11)*(x3548))));
evalcond[7]=((((cj13)*(cj9)*(x3547)))+(((IkReal(-1.00000000000000))*(cj13)*(r00)*(x3548)))+(((IkReal(-1.00000000000000))*(x3541)*(x3545)))+(((x3539)*(x3542)))+(((r12)*(x3543)))+(((IkReal(-1.00000000000000))*(r11)*(x3539)*(x3544))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3544)))+(((x3543)*(x3547)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3543)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)*(x3545)))+(((r01)*(sj13)*(x3540)))+(((cj13)*(x3541))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3550=((cj13)*(sj14));
IkReal x3551=((IkReal(1.00000000000000))*(cj11));
IkReal x3552=((r11)*(sj9));
IkReal x3553=((cj11)*(sj13));
IkReal x3554=((r12)*(sj9));
IkReal x3555=((r10)*(sj9));
IkReal x3556=((sj11)*(sj13));
IkReal x3557=((cj9)*(r02));
IkReal x3558=((cj9)*(r01));
IkReal x3559=((IkReal(1.00000000000000))*(sj11));
IkReal x3560=((cj9)*(r00));
IkReal x3561=((cj13)*(cj14)*(sj11));
IkReal x3562=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst53)*(((((x3553)*(x3554)))+(((r21)*(sj11)*(x3550)))+(((IkReal(-1.00000000000000))*(x3550)*(x3551)*(x3558)))+(((x3560)*(x3562)))+(((IkReal(-1.00000000000000))*(r22)*(x3556)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x3559)))+(((x3555)*(x3562)))+(((IkReal(-1.00000000000000))*(x3550)*(x3551)*(x3552)))+(((x3553)*(x3557))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((x3555)*(x3561)))+(((x3556)*(x3557)))+(((x3554)*(x3556)))+(((x3560)*(x3561)))+(((IkReal(-1.00000000000000))*(x3550)*(x3552)*(x3559)))+(((r22)*(x3553)))+(((IkReal(-1.00000000000000))*(r21)*(x3550)*(x3551)))+(((IkReal(-1.00000000000000))*(x3550)*(x3558)*(x3559)))+(((r20)*(x3562))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst53)*(((((x3553)*(x3554)))+(((r21)*(sj11)*(x3550)))+(((IkReal(-1.00000000000000))*(x3550)*(x3551)*(x3558)))+(((x3560)*(x3562)))+(((IkReal(-1.00000000000000))*(r22)*(x3556)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x3559)))+(((x3555)*(x3562)))+(((IkReal(-1.00000000000000))*(x3550)*(x3551)*(x3552)))+(((x3553)*(x3557)))))), ((gconst53)*(((((x3555)*(x3561)))+(((x3556)*(x3557)))+(((x3554)*(x3556)))+(((x3560)*(x3561)))+(((IkReal(-1.00000000000000))*(x3550)*(x3552)*(x3559)))+(((r22)*(x3553)))+(((IkReal(-1.00000000000000))*(r21)*(x3550)*(x3551)))+(((IkReal(-1.00000000000000))*(x3550)*(x3558)*(x3559)))+(((r20)*(x3562)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3563=IKsin(j10);
IkReal x3564=IKcos(j10);
IkReal x3565=((IkReal(1.00000000000000))*(sj13));
IkReal x3566=((r11)*(sj9));
IkReal x3567=((cj9)*(r01));
IkReal x3568=((r21)*(sj14));
IkReal x3569=((cj9)*(r02));
IkReal x3570=((sj13)*(sj9));
IkReal x3571=((cj14)*(r10));
IkReal x3572=((IkReal(1.00000000000000))*(cj13));
IkReal x3573=((cj14)*(r20));
IkReal x3574=((cj11)*(x3563));
IkReal x3575=((sj11)*(x3564));
IkReal x3576=((sj14)*(x3572));
IkReal x3577=((sj11)*(x3563));
IkReal x3578=((cj11)*(x3564));
IkReal x3579=((cj14)*(cj9)*(r00));
IkReal x3580=((x3575)+(x3574));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3572)*(x3573)))+(x3577)+(((IkReal(-1.00000000000000))*(r22)*(x3565)))+(((IkReal(-1.00000000000000))*(x3578)))+(((cj13)*(x3568))));
evalcond[1]=((((sj13)*(x3568)))+(x3580)+(((IkReal(-1.00000000000000))*(x3565)*(x3573)))+(((cj13)*(r22))));
evalcond[2]=((x3580)+(((IkReal(-1.00000000000000))*(x3566)*(x3576)))+(((cj13)*(x3579)))+(((IkReal(-1.00000000000000))*(x3567)*(x3576)))+(((sj13)*(x3569)))+(((cj13)*(sj9)*(x3571)))+(((r12)*(x3570))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3572)))+(((IkReal(-1.00000000000000))*(sj14)*(x3565)*(x3566)))+(((sj13)*(x3579)))+(x3578)+(((IkReal(-1.00000000000000))*(x3569)*(x3572)))+(((IkReal(-1.00000000000000))*(x3577)))+(((x3570)*(x3571)))+(((IkReal(-1.00000000000000))*(sj14)*(x3565)*(x3567))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3581=((cj13)*(sj11));
IkReal x3582=((r21)*(sj14));
IkReal x3583=((cj11)*(cj13));
IkReal x3584=((cj11)*(sj13));
IkReal x3585=((sj11)*(sj13));
IkReal x3586=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst52)*(((((x3581)*(x3582)))+(((IkReal(-1.00000000000000))*(r22)*(x3585)))+(((r22)*(x3583)))+(((IkReal(-1.00000000000000))*(x3581)*(x3586)))+(((x3582)*(x3584)))+(((IkReal(-1.00000000000000))*(x3584)*(x3586))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((r22)*(x3584)))+(((IkReal(-1.00000000000000))*(x3585)*(x3586)))+(((x3582)*(x3585)))+(((IkReal(-1.00000000000000))*(x3582)*(x3583)))+(((r22)*(x3581)))+(((cj14)*(r20)*(x3583))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst52)*(((((x3581)*(x3582)))+(((IkReal(-1.00000000000000))*(r22)*(x3585)))+(((r22)*(x3583)))+(((IkReal(-1.00000000000000))*(x3581)*(x3586)))+(((x3582)*(x3584)))+(((IkReal(-1.00000000000000))*(x3584)*(x3586)))))), ((gconst52)*(((((r22)*(x3584)))+(((IkReal(-1.00000000000000))*(x3585)*(x3586)))+(((x3582)*(x3585)))+(((IkReal(-1.00000000000000))*(x3582)*(x3583)))+(((r22)*(x3581)))+(((cj14)*(r20)*(x3583)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3587=IKsin(j10);
IkReal x3588=IKcos(j10);
IkReal x3589=((IkReal(1.00000000000000))*(sj13));
IkReal x3590=((r11)*(sj9));
IkReal x3591=((cj9)*(r01));
IkReal x3592=((r21)*(sj14));
IkReal x3593=((cj9)*(r02));
IkReal x3594=((sj13)*(sj9));
IkReal x3595=((cj14)*(r10));
IkReal x3596=((IkReal(1.00000000000000))*(cj13));
IkReal x3597=((cj14)*(r20));
IkReal x3598=((cj11)*(x3587));
IkReal x3599=((sj11)*(x3588));
IkReal x3600=((sj14)*(x3596));
IkReal x3601=((sj11)*(x3587));
IkReal x3602=((cj11)*(x3588));
IkReal x3603=((cj14)*(cj9)*(r00));
IkReal x3604=((x3599)+(x3598));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x3589)))+(x3601)+(((cj13)*(x3592)))+(((IkReal(-1.00000000000000))*(x3602)))+(((IkReal(-1.00000000000000))*(x3596)*(x3597))));
evalcond[1]=((x3604)+(((IkReal(-1.00000000000000))*(x3589)*(x3597)))+(((sj13)*(x3592)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3590)*(x3600)))+(((IkReal(-1.00000000000000))*(x3591)*(x3600)))+(x3604)+(((sj13)*(x3593)))+(((cj13)*(x3603)))+(((cj13)*(sj9)*(x3595)))+(((r12)*(x3594))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x3589)*(x3591)))+(((IkReal(-1.00000000000000))*(x3593)*(x3596)))+(((sj13)*(x3603)))+(x3602)+(((x3594)*(x3595)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3596)))+(((IkReal(-1.00000000000000))*(sj14)*(x3589)*(x3590)))+(((IkReal(-1.00000000000000))*(x3601))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3605=((cj13)*(sj14));
IkReal x3606=((sj14)*(sj9));
IkReal x3607=((r02)*(sj9));
IkReal x3608=((r01)*(sj9));
IkReal x3609=((cj9)*(sj13));
IkReal x3610=((IkReal(1.00000000000000))*(cj9));
IkReal x3611=((IkReal(1.00000000000000))*(sj13));
IkReal x3612=((cj14)*(npx));
IkReal x3613=((cj14)*(r10));
IkReal x3614=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3615=((sj14)*(x3610));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0800000000000000))*(cj13)))+(((npy)*(x3605)))+(((IkReal(-1.00000000000000))*(npz)*(x3611)))+(((IkReal(-1.00000000000000))*(cj13)*(x3612))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x3615)))+(((r00)*(x3606)))+(((cj14)*(x3608)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3610))));
evalcond[5]=((IkReal(-0.0200000000000000))+(((npy)*(sj13)*(sj14)))+(((IkReal(-1.00000000000000))*(x3611)*(x3612)))+(((cj13)*(npz)))+(((IkReal(0.0800000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x3615)))+(((IkReal(-1.00000000000000))*(r11)*(x3614)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3610)))+(((IkReal(-1.00000000000000))*(r10)*(x3606))));
evalcond[7]=((((cj13)*(cj9)*(x3613)))+(((IkReal(-1.00000000000000))*(cj13)*(r00)*(x3614)))+(((r12)*(x3609)))+(((x3605)*(x3608)))+(((IkReal(-1.00000000000000))*(x3607)*(x3611)))+(((IkReal(-1.00000000000000))*(r11)*(x3605)*(x3610))));
evalcond[8]=((((x3609)*(x3613)))+(((r01)*(sj13)*(x3606)))+(((cj13)*(x3607)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3610)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3609)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)*(x3611))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3616=((cj13)*(sj14));
IkReal x3617=((IkReal(1.00000000000000))*(cj11));
IkReal x3618=((r11)*(sj9));
IkReal x3619=((IkReal(1.00000000000000))*(sj11));
IkReal x3620=((cj13)*(cj14));
IkReal x3621=((cj11)*(sj13));
IkReal x3622=((r12)*(sj9));
IkReal x3623=((cj9)*(r01));
IkReal x3624=((sj11)*(sj13));
IkReal x3625=((cj9)*(r02));
IkReal x3626=((r10)*(sj9));
IkReal x3627=((cj9)*(r00));
if( IKabs(((gconst55)*(((((x3621)*(x3622)))+(((cj11)*(x3620)*(x3627)))+(((r21)*(sj11)*(x3616)))+(((IkReal(-1.00000000000000))*(r20)*(x3619)*(x3620)))+(((cj11)*(x3620)*(x3626)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3619)))+(((x3621)*(x3625)))+(((IkReal(-1.00000000000000))*(x3616)*(x3617)*(x3623)))+(((IkReal(-1.00000000000000))*(x3616)*(x3617)*(x3618))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((cj11)*(r20)*(x3620)))+(((sj11)*(x3620)*(x3626)))+(((x3622)*(x3624)))+(((IkReal(-1.00000000000000))*(r21)*(x3616)*(x3617)))+(((sj11)*(x3620)*(x3627)))+(((r22)*(x3621)))+(((x3624)*(x3625)))+(((IkReal(-1.00000000000000))*(x3616)*(x3618)*(x3619)))+(((IkReal(-1.00000000000000))*(x3616)*(x3619)*(x3623))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst55)*(((((x3621)*(x3622)))+(((cj11)*(x3620)*(x3627)))+(((r21)*(sj11)*(x3616)))+(((IkReal(-1.00000000000000))*(r20)*(x3619)*(x3620)))+(((cj11)*(x3620)*(x3626)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3619)))+(((x3621)*(x3625)))+(((IkReal(-1.00000000000000))*(x3616)*(x3617)*(x3623)))+(((IkReal(-1.00000000000000))*(x3616)*(x3617)*(x3618)))))), ((gconst55)*(((((cj11)*(r20)*(x3620)))+(((sj11)*(x3620)*(x3626)))+(((x3622)*(x3624)))+(((IkReal(-1.00000000000000))*(r21)*(x3616)*(x3617)))+(((sj11)*(x3620)*(x3627)))+(((r22)*(x3621)))+(((x3624)*(x3625)))+(((IkReal(-1.00000000000000))*(x3616)*(x3618)*(x3619)))+(((IkReal(-1.00000000000000))*(x3616)*(x3619)*(x3623)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3628=IKsin(j10);
IkReal x3629=IKcos(j10);
IkReal x3630=((IkReal(1.00000000000000))*(sj13));
IkReal x3631=((r11)*(sj9));
IkReal x3632=((cj9)*(r01));
IkReal x3633=((IkReal(1.00000000000000))*(cj11));
IkReal x3634=((r21)*(sj14));
IkReal x3635=((cj9)*(r02));
IkReal x3636=((sj13)*(sj9));
IkReal x3637=((cj14)*(r10));
IkReal x3638=((IkReal(1.00000000000000))*(cj13));
IkReal x3639=((cj14)*(r20));
IkReal x3640=((sj11)*(x3628));
IkReal x3641=((sj14)*(x3638));
IkReal x3642=((sj11)*(x3629));
IkReal x3643=((cj14)*(cj9)*(r00));
IkReal x3644=((x3629)*(x3633));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3644)))+(x3640)+(((IkReal(-1.00000000000000))*(x3638)*(x3639)))+(((cj13)*(x3634)))+(((IkReal(-1.00000000000000))*(r22)*(x3630))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3628)*(x3633)))+(((IkReal(-1.00000000000000))*(x3642)))+(((sj13)*(x3634)))+(((IkReal(-1.00000000000000))*(x3630)*(x3639)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(x3643)))+(x3642)+(((cj13)*(sj9)*(x3637)))+(((sj13)*(x3635)))+(((r12)*(x3636)))+(((IkReal(-1.00000000000000))*(x3631)*(x3641)))+(((cj11)*(x3628)))+(((IkReal(-1.00000000000000))*(x3632)*(x3641))));
evalcond[3]=((((x3636)*(x3637)))+(((IkReal(-1.00000000000000))*(x3644)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3638)))+(x3640)+(((IkReal(-1.00000000000000))*(sj14)*(x3630)*(x3631)))+(((IkReal(-1.00000000000000))*(x3635)*(x3638)))+(((IkReal(-1.00000000000000))*(sj14)*(x3630)*(x3632)))+(((sj13)*(x3643))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3645=((cj13)*(sj11));
IkReal x3646=((r21)*(sj14));
IkReal x3647=((cj11)*(cj13));
IkReal x3648=((IkReal(1.00000000000000))*(sj13));
IkReal x3649=((sj11)*(sj13));
IkReal x3650=((cj14)*(r20));
if( IKabs(((gconst54)*(((((x3645)*(x3650)))+(((r22)*(x3647)))+(((IkReal(-1.00000000000000))*(x3645)*(x3646)))+(((r22)*(x3649)))+(((IkReal(-1.00000000000000))*(cj11)*(x3648)*(x3650)))+(((cj11)*(sj13)*(x3646))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(sj11)*(x3648)*(x3650)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x3648)))+(((IkReal(-1.00000000000000))*(x3647)*(x3650)))+(((r22)*(x3645)))+(((x3646)*(x3649)))+(((x3646)*(x3647))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst54)*(((((x3645)*(x3650)))+(((r22)*(x3647)))+(((IkReal(-1.00000000000000))*(x3645)*(x3646)))+(((r22)*(x3649)))+(((IkReal(-1.00000000000000))*(cj11)*(x3648)*(x3650)))+(((cj11)*(sj13)*(x3646)))))), ((gconst54)*(((((IkReal(-1.00000000000000))*(sj11)*(x3648)*(x3650)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x3648)))+(((IkReal(-1.00000000000000))*(x3647)*(x3650)))+(((r22)*(x3645)))+(((x3646)*(x3649)))+(((x3646)*(x3647)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3651=IKsin(j10);
IkReal x3652=IKcos(j10);
IkReal x3653=((IkReal(1.00000000000000))*(sj13));
IkReal x3654=((r11)*(sj9));
IkReal x3655=((cj9)*(r01));
IkReal x3656=((IkReal(1.00000000000000))*(cj11));
IkReal x3657=((r21)*(sj14));
IkReal x3658=((cj9)*(r02));
IkReal x3659=((sj13)*(sj9));
IkReal x3660=((cj14)*(r10));
IkReal x3661=((IkReal(1.00000000000000))*(cj13));
IkReal x3662=((cj14)*(r20));
IkReal x3663=((sj11)*(x3651));
IkReal x3664=((sj14)*(x3661));
IkReal x3665=((sj11)*(x3652));
IkReal x3666=((cj14)*(cj9)*(r00));
IkReal x3667=((x3652)*(x3656));
evalcond[0]=((((cj13)*(x3657)))+(x3663)+(((IkReal(-1.00000000000000))*(r22)*(x3653)))+(((IkReal(-1.00000000000000))*(x3667)))+(((IkReal(-1.00000000000000))*(x3661)*(x3662))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3665)))+(((IkReal(-1.00000000000000))*(x3653)*(x3662)))+(((sj13)*(x3657)))+(((IkReal(-1.00000000000000))*(x3651)*(x3656)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(x3666)))+(((r12)*(x3659)))+(((cj11)*(x3651)))+(x3665)+(((cj13)*(sj9)*(x3660)))+(((IkReal(-1.00000000000000))*(x3655)*(x3664)))+(((sj13)*(x3658)))+(((IkReal(-1.00000000000000))*(x3654)*(x3664))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x3653)*(x3655)))+(x3663)+(((IkReal(-1.00000000000000))*(x3667)))+(((IkReal(-1.00000000000000))*(x3658)*(x3661)))+(((sj13)*(x3666)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3661)))+(((IkReal(-1.00000000000000))*(sj14)*(x3653)*(x3654)))+(((x3659)*(x3660))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3668=((r21)*(sj14));
IkReal x3669=((cj12)*(cj13));
IkReal x3670=((sj11)*(sj13));
IkReal x3671=((cj14)*(r20));
IkReal x3672=((IkReal(1.00000000000000))*(sj11));
IkReal x3673=((cj12)*(r22));
IkReal x3674=((IkReal(1.00000000000000))*(cj11));
IkReal x3675=((cj13)*(r22));
IkReal x3676=((sj13)*(x3674));
if( IKabs(((gconst47)*(((((sj11)*(x3669)*(x3671)))+(((IkReal(-1.00000000000000))*(x3668)*(x3676)))+(((IkReal(-1.00000000000000))*(x3668)*(x3669)*(x3672)))+(((IkReal(-1.00000000000000))*(x3674)*(x3675)))+(((cj11)*(sj13)*(x3671)))+(((x3670)*(x3673))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x3669)*(x3671)*(x3674)))+(((x3670)*(x3671)))+(((IkReal(-1.00000000000000))*(x3668)*(x3670)))+(((IkReal(-1.00000000000000))*(x3672)*(x3675)))+(((IkReal(-1.00000000000000))*(x3673)*(x3676)))+(((cj11)*(x3668)*(x3669))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst47)*(((((sj11)*(x3669)*(x3671)))+(((IkReal(-1.00000000000000))*(x3668)*(x3676)))+(((IkReal(-1.00000000000000))*(x3668)*(x3669)*(x3672)))+(((IkReal(-1.00000000000000))*(x3674)*(x3675)))+(((cj11)*(sj13)*(x3671)))+(((x3670)*(x3673)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(x3669)*(x3671)*(x3674)))+(((x3670)*(x3671)))+(((IkReal(-1.00000000000000))*(x3668)*(x3670)))+(((IkReal(-1.00000000000000))*(x3672)*(x3675)))+(((IkReal(-1.00000000000000))*(x3673)*(x3676)))+(((cj11)*(x3668)*(x3669)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x3677=IKsin(j10);
IkReal x3678=IKcos(j10);
IkReal x3679=((IkReal(1.00000000000000))*(cj13));
IkReal x3680=((cj9)*(r02));
IkReal x3681=((IkReal(1.00000000000000))*(sj13));
IkReal x3682=((r11)*(sj9));
IkReal x3683=((IkReal(1.00000000000000))*(cj14));
IkReal x3684=((cj9)*(r01));
IkReal x3685=((r21)*(sj14));
IkReal x3686=((IkReal(1.00000000000000))*(sj12));
IkReal x3687=((r10)*(sj9));
IkReal x3688=((cj14)*(sj13));
IkReal x3689=((cj14)*(r20));
IkReal x3690=((IkReal(1.00000000000000))*(sj14));
IkReal x3691=((r12)*(sj9));
IkReal x3692=((cj13)*(cj14));
IkReal x3693=((cj9)*(r00));
IkReal x3694=((sj11)*(x3677));
IkReal x3695=((cj11)*(x3677));
IkReal x3696=((sj11)*(x3678));
IkReal x3697=((cj11)*(x3678));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3686)*(x3696)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x3686)*(x3695))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x3681)))+(((IkReal(-1.00000000000000))*(x3697)))+(((cj13)*(x3685)))+(((IkReal(-1.00000000000000))*(x3679)*(x3689)))+(x3694));
evalcond[2]=((((cj12)*(x3696)))+(((IkReal(-1.00000000000000))*(x3681)*(x3689)))+(((cj12)*(x3695)))+(((sj13)*(x3685)))+(((cj13)*(r22))));
evalcond[3]=((((sj12)*(x3694)))+(((IkReal(-1.00000000000000))*(x3690)*(x3693)))+(((IkReal(-1.00000000000000))*(x3683)*(x3684)))+(((IkReal(-1.00000000000000))*(x3682)*(x3683)))+(((IkReal(-1.00000000000000))*(x3687)*(x3690)))+(((IkReal(-1.00000000000000))*(x3686)*(x3697))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj14)*(x3679)*(x3684)))+(((sj13)*(x3680)))+(((IkReal(-1.00000000000000))*(sj14)*(x3679)*(x3682)))+(x3695)+(((x3692)*(x3693)))+(x3696)+(((x3687)*(x3692)))+(((sj13)*(x3691))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj14)*(x3681)*(x3682)))+(((IkReal(-1.00000000000000))*(x3679)*(x3680)))+(((x3688)*(x3693)))+(((IkReal(-1.00000000000000))*(cj12)*(x3694)))+(((IkReal(-1.00000000000000))*(x3679)*(x3691)))+(((cj12)*(x3697)))+(((x3687)*(x3688)))+(((IkReal(-1.00000000000000))*(sj14)*(x3681)*(x3684))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3698=((cj11)*(sj12));
IkReal x3699=((r22)*(sj13));
IkReal x3700=((r20)*(sj14));
IkReal x3701=((cj14)*(sj11));
IkReal x3702=((cj13)*(r20));
IkReal x3703=((sj11)*(sj12));
IkReal x3704=((cj13)*(r21)*(sj14));
if( IKabs(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((cj11)*(x3700)))+(((x3699)*(x3703)))+(((sj12)*(x3701)*(x3702)))+(((IkReal(-1.00000000000000))*(x3703)*(x3704))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(x3698)*(x3699)))+(((IkReal(-1.00000000000000))*(cj14)*(x3698)*(x3702)))+(((r21)*(x3701)))+(((x3698)*(x3704)))+(((sj11)*(x3700))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((cj11)*(x3700)))+(((x3699)*(x3703)))+(((sj12)*(x3701)*(x3702)))+(((IkReal(-1.00000000000000))*(x3703)*(x3704)))))), ((gconst46)*(((((IkReal(-1.00000000000000))*(x3698)*(x3699)))+(((IkReal(-1.00000000000000))*(cj14)*(x3698)*(x3702)))+(((r21)*(x3701)))+(((x3698)*(x3704)))+(((sj11)*(x3700)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x3705=IKsin(j10);
IkReal x3706=IKcos(j10);
IkReal x3707=((IkReal(1.00000000000000))*(cj13));
IkReal x3708=((cj9)*(r02));
IkReal x3709=((IkReal(1.00000000000000))*(sj13));
IkReal x3710=((r11)*(sj9));
IkReal x3711=((IkReal(1.00000000000000))*(cj14));
IkReal x3712=((cj9)*(r01));
IkReal x3713=((r21)*(sj14));
IkReal x3714=((IkReal(1.00000000000000))*(sj12));
IkReal x3715=((r10)*(sj9));
IkReal x3716=((cj14)*(sj13));
IkReal x3717=((cj14)*(r20));
IkReal x3718=((IkReal(1.00000000000000))*(sj14));
IkReal x3719=((r12)*(sj9));
IkReal x3720=((cj13)*(cj14));
IkReal x3721=((cj9)*(r00));
IkReal x3722=((sj11)*(x3705));
IkReal x3723=((cj11)*(x3705));
IkReal x3724=((sj11)*(x3706));
IkReal x3725=((cj11)*(x3706));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3714)*(x3724)))+(((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x3714)*(x3723))));
evalcond[1]=((x3722)+(((cj13)*(x3713)))+(((IkReal(-1.00000000000000))*(x3707)*(x3717)))+(((IkReal(-1.00000000000000))*(r22)*(x3709)))+(((IkReal(-1.00000000000000))*(x3725))));
evalcond[2]=((((cj12)*(x3723)))+(((cj12)*(x3724)))+(((IkReal(-1.00000000000000))*(x3709)*(x3717)))+(((sj13)*(x3713)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3711)*(x3712)))+(((IkReal(-1.00000000000000))*(x3718)*(x3721)))+(((IkReal(-1.00000000000000))*(x3714)*(x3725)))+(((IkReal(-1.00000000000000))*(x3710)*(x3711)))+(((sj12)*(x3722)))+(((IkReal(-1.00000000000000))*(x3715)*(x3718))));
evalcond[4]=((x3724)+(x3723)+(((x3720)*(x3721)))+(((IkReal(-1.00000000000000))*(sj14)*(x3707)*(x3712)))+(((sj13)*(x3719)))+(((sj13)*(x3708)))+(((IkReal(-1.00000000000000))*(sj14)*(x3707)*(x3710)))+(((x3715)*(x3720))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj14)*(x3709)*(x3710)))+(((IkReal(-1.00000000000000))*(x3707)*(x3719)))+(((x3716)*(x3721)))+(((x3715)*(x3716)))+(((cj12)*(x3725)))+(((IkReal(-1.00000000000000))*(x3707)*(x3708)))+(((IkReal(-1.00000000000000))*(cj12)*(x3722)))+(((IkReal(-1.00000000000000))*(sj14)*(x3709)*(x3712))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - HRP2STEP1 (5268c17360e4473e99ccf794a93cfb5f)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
