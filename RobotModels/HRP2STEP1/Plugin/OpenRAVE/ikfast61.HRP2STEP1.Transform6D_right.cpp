/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2015-04-22 22:44:35.299430
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKcos(j[2]);
x3=IKsin(j[1]);
x4=IKsin(j[2]);
x5=IKsin(j[3]);
x6=IKcos(j[3]);
x7=IKsin(j[0]);
x8=IKsin(j[4]);
x9=IKcos(j[4]);
x10=IKsin(j[5]);
x11=IKcos(j[5]);
x12=((IkReal(0.0800000000000000))*(x0));
x13=((IkReal(0.00517641653934882))*(x2));
x14=((IkReal(0.258820826967441))*(x8));
x15=((IkReal(1.00000000000000))*(x9));
x16=((IkReal(0.0190000000000000))*(x3));
x17=((IkReal(0.0800000000000000))*(x4));
x18=((IkReal(0.965925348838040))*(x8));
x19=((IkReal(0.965925348838040))*(x9));
x20=((IkReal(1.00000000000000))*(x5));
x21=((IkReal(0.258820826967441))*(x10));
x22=((IkReal(0.258820826967441))*(x9));
x23=((IkReal(0.965925348838040))*(x10));
x24=((IkReal(0.0800000000000000))*(x7));
x25=((IkReal(0.0800000000000000))*(x6));
x26=((IkReal(0.258820826967441))*(x11));
x27=((IkReal(0.965925348838040))*(x11));
x28=((IkReal(1.00000000000000))*(x8));
x29=((IkReal(0.230000000000000))*(x0));
x30=((IkReal(1.00000000000000))*(x2));
x31=((IkReal(0.0200000000000000))*(x0));
x32=((IkReal(1.00000000000000))*(x4));
x33=((IkReal(1.00000000000000))*(x0));
x34=((IkReal(1.00000000000000))*(x6));
x35=((x1)*(x7));
x36=((x1)*(x2));
x37=((IkReal(-0.0190000000000000))*(x6));
x38=((x3)*(x7));
x39=((x1)*(x4));
x40=((x3)*(x4));
x41=((x0)*(x5));
x42=((x2)*(x3));
x43=((x20)*(x7));
x44=((x34)*(x7));
x45=((x0)*(x3)*(x32));
x46=((x32)*(x38));
x47=((x40)+(((IkReal(-1.00000000000000))*(x1)*(x30))));
x48=((((x17)*(x3)))+(((IkReal(-0.0800000000000000))*(x36))));
x49=((((IkReal(0.0190000000000000))*(x36)))+(((IkReal(-1.00000000000000))*(x16)*(x4))));
x50=((((x1)*(x32)))+(((x3)*(x30))));
x51=((IkReal(-1.00000000000000))*(x50));
x52=((((IkReal(0.0190000000000000))*(x39)))+(((x16)*(x2))));
x53=((((x1)*(x17)))+(((IkReal(0.0800000000000000))*(x42))));
x54=((IkReal(0.258820826967441))*(x51));
x55=((((x0)*(x36)))+(((IkReal(-1.00000000000000))*(x45))));
x56=((((IkReal(-1.00000000000000))*(x46)))+(((x2)*(x35))));
x57=((x51)*(x6));
x58=((x52)*(x6));
x59=((x53)*(x6));
x60=((x5)*(x50));
x61=((x45)+(((IkReal(-1.00000000000000))*(x0)*(x1)*(x30))));
x62=((((IkReal(-1.00000000000000))*(x30)*(x35)))+(x46));
x63=((x0)*(((((IkReal(-1.00000000000000))*(x3)*(x30)))+(((IkReal(-1.00000000000000))*(x1)*(x32))))));
x64=((((IkReal(-1.00000000000000))*(x32)*(x35)))+(((IkReal(-1.00000000000000))*(x30)*(x38))));
x65=((((IkReal(0.0190000000000000))*(x35)*(x4)))+(((x16)*(x2)*(x7))));
x66=((((IkReal(-1.00000000000000))*(x24)*(x42)))+(((IkReal(-1.00000000000000))*(x17)*(x35))));
x67=((x56)*(x6));
x68=((x55)*(x6));
x69=((x10)*(x5)*(x51));
x70=((x5)*(x61));
x71=((x67)+(x41));
x72=((((x5)*(x62)))+(((x0)*(x6))));
x73=((((IkReal(-1.00000000000000))*(x20)*(x62)))+(((IkReal(-1.00000000000000))*(x33)*(x6))));
x74=((((IkReal(-1.00000000000000))*(x28)*(x50)*(x6)))+(((IkReal(-1.00000000000000))*(x15)*(x47))));
x75=((((IkReal(-1.00000000000000))*(x15)*(x63)))+(((x28)*(((((x34)*(x55)))+(((IkReal(-1.00000000000000))*(x43))))))));
x76=((((x28)*(((((x0)*(x20)))+(((x34)*(x56)))))))+(((IkReal(-1.00000000000000))*(x15)*(x64))));
eerot[0]=((((x9)*(((x68)+(((IkReal(-1.00000000000000))*(x43)))))))+(((x63)*(x8))));
eerot[1]=((((x10)*(x75)))+(((x11)*(((((IkReal(-1.00000000000000))*(x44)))+(x70))))));
eerot[2]=((((x10)*(((x44)+(((IkReal(-1.00000000000000))*(x20)*(x61)))))))+(((x11)*(x75))));
IkReal x77=((IkReal(1.00000000000000))*(x29));
IkReal x78=((IkReal(1.00000000000000))*(x12));
eetrans[0]=((x24)+(((x8)*(((((x24)*(x5)))+(((IkReal(-1.00000000000000))*(x25)*(x55)))))))+(((x8)*(((((IkReal(0.0190000000000000))*(x0)*(x39)))+(((x0)*(x16)*(x2)))))))+(((IkReal(-1.00000000000000))*(x39)*(x77)))+(((x9)*(((((IkReal(-1.00000000000000))*(x39)*(x78)))+(((IkReal(-1.00000000000000))*(x42)*(x78)))))))+(((x9)*(((((x37)*(x55)))+(((IkReal(0.0190000000000000))*(x5)*(x7)))))))+(((IkReal(-0.250000000000000))*(x0)*(x3)))+(((x31)*(x40)))+(((IkReal(-1.00000000000000))*(x42)*(x77)))+(((IkReal(-1.00000000000000))*(x31)*(x36))));
eerot[3]=((((IkReal(-1.00000000000000))*(x14)*(x47)))+(((IkReal(-1.00000000000000))*(x22)*(x57)))+(((x19)*(x71)))+(((x18)*(x64))));
eerot[4]=((((IkReal(-1.00000000000000))*(x21)*(x74)))+(((x23)*(x76)))+(((IkReal(-1.00000000000000))*(x26)*(x60)))+(((x27)*(x72))));
eerot[5]=((((IkReal(-1.00000000000000))*(x21)*(x5)*(x51)))+(((x27)*(x76)))+(((x23)*(x73)))+(((IkReal(-1.00000000000000))*(x26)*(x74))));
IkReal x79=((IkReal(1.00000000000000))*(x22));
IkReal x80=((IkReal(1.00000000000000))*(x14));
eetrans[1]=((IkReal(-0.150000000000000))+(((IkReal(0.0595287902025114))*(x36)))+(((IkReal(0.0193185069767608))*(x38)*(x4)))+(((x19)*(((((x37)*(x56)))+(((IkReal(-0.0190000000000000))*(x41)))))))+(((x18)*(((((IkReal(-1.00000000000000))*(x12)*(x5)))+(((IkReal(-1.00000000000000))*(x25)*(x56)))))))+(((x19)*(x66)))+(((IkReal(-0.00517641653934882))*(x39)))+(((IkReal(0.0647052067418602))*(x1)))+(((IkReal(-0.0595287902025114))*(x40)))+(((x18)*(x65)))+(((IkReal(-1.00000000000000))*(x59)*(x80)))+(((IkReal(-1.00000000000000))*(x58)*(x79)))+(((IkReal(-1.00000000000000))*(x49)*(x80)))+(((IkReal(-1.00000000000000))*(x13)*(x3)))+(((IkReal(-0.0772740279070432))*(x0)))+(((IkReal(-0.222162830232749))*(x35)*(x4)))+(((IkReal(-0.222162830232749))*(x2)*(x38)))+(((IkReal(-1.00000000000000))*(x48)*(x79)))+(((IkReal(-0.241481337209510))*(x38)))+(((IkReal(-0.0193185069767608))*(x2)*(x35))));
eerot[6]=((((x22)*(x71)))+(((x18)*(x47)))+(((x14)*(x64)))+(((x19)*(x57))));
eerot[7]=((((x21)*(x76)))+(((x27)*(x60)))+(((x26)*(x72)))+(((x23)*(x74))));
eerot[8]=((((x21)*(x73)))+(((x26)*(x76)))+(((x23)*(x5)*(x51)))+(((x27)*(x74))));
eetrans[2]=((IkReal(0.355000000000000))+(((IkReal(0.222162830232749))*(x40)))+(((IkReal(0.00517641653934882))*(x38)*(x4)))+(((IkReal(-0.241481337209510))*(x1)))+(((x18)*(x59)))+(((x14)*(x65)))+(((x19)*(x58)))+(((IkReal(-1.00000000000000))*(x13)*(x35)))+(((IkReal(0.0193185069767608))*(x39)))+(((IkReal(-0.0595287902025114))*(x35)*(x4)))+(((IkReal(-0.0647052067418602))*(x38)))+(((IkReal(-0.0207056661573953))*(x0)))+(((IkReal(-0.0595287902025114))*(x2)*(x38)))+(((x19)*(x48)))+(((x22)*(((((IkReal(-0.0190000000000000))*(x67)))+(((IkReal(-0.0190000000000000))*(x41)))))))+(((IkReal(0.0193185069767608))*(x42)))+(((x14)*(((((IkReal(-0.0800000000000000))*(x41)))+(((IkReal(-0.0800000000000000))*(x67)))))))+(((x18)*(x49)))+(((x22)*(x66)))+(((IkReal(-0.222162830232749))*(x36))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,j7,cj7,sj7,htj7,j8,cj8,sj8,htj8,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6,_ij7[2], _nj7,_ij8[2], _nj8;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1; j7=numeric_limits<IkReal>::quiet_NaN(); _ij7[0] = -1; _ij7[1] = -1; _nj7 = -1; j8=numeric_limits<IkReal>::quiet_NaN(); _ij8[0] = -1; _ij8[1] = -1; _nj8 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((IkReal(-1.00000000000000))*(r02));
new_r01=r01;
new_r02=r00;
new_px=((((IkReal(0.0190000000000000))*(r00)))+(px));
new_r10=((((IkReal(-0.965925348838040))*(r12)))+(((IkReal(-0.258820826967441))*(r22))));
new_r11=((((IkReal(0.258820826967441))*(r21)))+(((IkReal(0.965925348838040))*(r11))));
new_r12=((((IkReal(0.258820826967441))*(r20)))+(((IkReal(0.965925348838040))*(r10))));
new_py=((IkReal(0.0530074087522645))+(((IkReal(0.00491759571238138))*(r20)))+(((IkReal(0.965925348838040))*(py)))+(((IkReal(0.0183525816279228))*(r10)))+(((IkReal(0.258820826967441))*(pz))));
new_r20=((((IkReal(0.258820826967441))*(r12)))+(((IkReal(-0.965925348838040))*(r22))));
new_r21=((((IkReal(0.965925348838040))*(r21)))+(((IkReal(-0.258820826967441))*(r11))));
new_r22=((((IkReal(-0.258820826967441))*(r10)))+(((IkReal(0.965925348838040))*(r20))));
new_pz=((IkReal(-0.381726622882620))+(((IkReal(0.0183525816279228))*(r20)))+(((IkReal(-0.258820826967441))*(py)))+(((IkReal(0.965925348838040))*(pz)))+(((IkReal(-0.00491759571238138))*(r10))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((pz)*(pz))+((py)*(py)));
npx=((((py)*(r10)))+(((pz)*(r20)))+(((px)*(r00))));
npy=((((px)*(r01)))+(((pz)*(r21)))+(((py)*(r11))));
npz=((((py)*(r12)))+(((pz)*(r22)))+(((px)*(r02))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((py)*(r00)))+(((IkReal(-1.00000000000000))*(px)*(r10))));
rxp1_0=((((pz)*(r11)))+(((IkReal(-1.00000000000000))*(py)*(r21))));
rxp1_1=((((IkReal(-1.00000000000000))*(pz)*(r01)))+(((px)*(r21))));
rxp1_2=((((py)*(r01)))+(((IkReal(-1.00000000000000))*(px)*(r11))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((py)*(r02)))+(((IkReal(-1.00000000000000))*(px)*(r12))));
IkReal op[72], zeror[48];
int numroots;
IkReal x81=((IkReal(1.00000000000000))*(pp));
IkReal x82=((IkReal(0.620000000000000))*(npx));
IkReal x83=((IkReal(0.0400000000000000))*(npz));
IkReal x84=((IkReal(0.0400000000000000))*(npy));
IkReal x85=((IkReal(0.0800000000000000))*(r22));
IkReal x86=((IkReal(0.0800000000000000))*(npx));
IkReal x87=((IkReal(0.0800000000000000))*(r21));
IkReal x88=((IkReal(1.00000000000000))*(rxp0_2));
IkReal x89=((IkReal(0.160000000000000))*(r20));
IkReal x90=((IkReal(2.00000000000000))*(rxp1_2));
IkReal x91=((IkReal(0.920000000000000))*(npz));
IkReal x92=((IkReal(2.00000000000000))*(rxp2_2));
IkReal x93=((IkReal(0.160000000000000))*(r21));
IkReal x94=((IkReal(0.320000000000000))*(r20));
IkReal x95=((IkReal(0.320000000000000))*(r21));
IkReal x96=((IkReal(0.300000000000000))*(npx));
IkReal x97=((IkReal(-0.00320000000000000))+(((IkReal(-1.00000000000000))*(x84))));
IkReal x98=((IkReal(0.600000000000000))*(npy));
IkReal x99=((IkReal(0.00320000000000000))+(((IkReal(-1.00000000000000))*(x84))));
IkReal x100=((rxp0_2)+(((IkReal(-1.00000000000000))*(x85))));
IkReal x101=((IkReal(-1.24000000000000))*(npy));
IkReal x102=((IkReal(-0.0800000000000000))*(r21));
IkReal x103=((IkReal(-0.00320000000000000))+(x84));
IkReal x104=((rxp0_2)+(x85));
IkReal x105=((((IkReal(-1.00000000000000))*(x88)))+(x85));
IkReal x106=((IkReal(0.00320000000000000))+(x84));
IkReal x107=((IkReal(-2.00000000000000))*(rxp1_2));
IkReal x108=((IkReal(0.0460000000000000))+(x96));
IkReal x109=((IkReal(0.00640000000000000))+(x91));
IkReal x110=((IkReal(-0.00640000000000000))+(x91));
IkReal x111=((IkReal(-0.0276000000000000))+(x83));
IkReal x112=((x83)+(x81));
IkReal x113=((((IkReal(-1.00000000000000))*(x88)))+(((IkReal(-1.00000000000000))*(x85))));
IkReal x114=((x89)+(x93));
op[0]=((IkReal(-0.0276000000000000))+(((IkReal(-1.00000000000000))*(x112)))+(x82));
op[1]=x103;
op[2]=x101;
op[3]=x86;
op[4]=((IkReal(-0.0276000000000000))+(((IkReal(-1.00000000000000))*(x82)))+(((IkReal(-1.00000000000000))*(x112))));
op[5]=x97;
op[6]=x113;
op[7]=x87;
op[8]=x90;
op[9]=x89;
op[10]=x100;
op[11]=x102;
op[12]=x106;
op[13]=((((IkReal(-1.00000000000000))*(x81)))+(x111)+(x82));
op[14]=x86;
op[15]=x101;
op[16]=x99;
op[17]=((((IkReal(-1.00000000000000))*(x82)))+(((IkReal(-1.00000000000000))*(x81)))+(x111));
op[18]=x87;
op[19]=x105;
op[20]=x89;
op[21]=x90;
op[22]=x102;
op[23]=x104;
op[24]=((x110)+(x86));
op[25]=IkReal(0);
op[26]=((IkReal(-0.160000000000000))*(npy));
op[27]=IkReal(0);
op[28]=((((IkReal(-1.00000000000000))*(x86)))+(x110));
op[29]=IkReal(0);
op[30]=((((IkReal(-1.00000000000000))*(x92)))+(x114));
op[31]=IkReal(0);
op[32]=((((IkReal(-1.00000000000000))*(x95)))+(x94));
op[33]=IkReal(0);
op[34]=((((IkReal(-1.00000000000000))*(x114)))+(((IkReal(-1.00000000000000))*(x92))));
op[35]=IkReal(0);
op[36]=IkReal(0);
op[37]=((((IkReal(-1.00000000000000))*(x86)))+(x109));
op[38]=IkReal(0);
op[39]=((IkReal(0.160000000000000))*(npy));
op[40]=IkReal(0);
op[41]=((x109)+(x86));
op[42]=IkReal(0);
op[43]=((((IkReal(-1.00000000000000))*(x89)))+(((IkReal(-1.00000000000000))*(x92)))+(x93));
op[44]=IkReal(0);
op[45]=((x95)+(x94));
op[46]=IkReal(0);
op[47]=((((IkReal(-1.00000000000000))*(x93)))+(((IkReal(-1.00000000000000))*(x92)))+(x89));
op[48]=((IkReal(0.0460000000000000))+(((IkReal(-1.00000000000000))*(x96)))+(((IkReal(-1.00000000000000))*(x81)))+(x83));
op[49]=x103;
op[50]=x98;
op[51]=x86;
op[52]=((((IkReal(-1.00000000000000))*(x81)))+(x108)+(x83));
op[53]=x97;
op[54]=x104;
op[55]=x87;
op[56]=x107;
op[57]=x89;
op[58]=x105;
op[59]=x102;
op[60]=x106;
op[61]=((IkReal(0.0460000000000000))+(((IkReal(-1.00000000000000))*(x112)))+(((IkReal(-1.00000000000000))*(x96))));
op[62]=x86;
op[63]=x98;
op[64]=x99;
op[65]=((((IkReal(-1.00000000000000))*(x112)))+(x108));
op[66]=x87;
op[67]=x100;
op[68]=x89;
op[69]=x107;
op[70]=x102;
op[71]=x113;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j7array[16], cj7array[16], sj7array[16], j8array[16], cj8array[16], sj8array[16], j6array[16], cj6array[16], sj6array[16];
int numsolutions = 0;
for(int ij7 = 0; ij7 < numroots; ij7 += 3)
{
IkReal htj7 = zeror[ij7+0], htj8 = zeror[ij7+1], htj6 = zeror[ij7+2];
j7array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj7)));
j8array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj8)));
j6array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj6)));
IkReal x115=(htj7)*(htj7);
IkReal x116=(htj8)*(htj8);
IkReal x117=(htj6)*(htj6);
cj7array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x115))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x115)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x115))))));
cj8array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x116))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x116)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x116))))));
cj6array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x117))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x117)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x117))))));
sj7array[numsolutions]=((IkReal(2.00000000000000))*(htj7)*(((IKabs(((IkReal(1.00000000000000))+((htj7)*(htj7)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj7)*(htj7))))):(IkReal)1.0e30)));
sj8array[numsolutions]=((IkReal(2.00000000000000))*(htj8)*(((IKabs(((IkReal(1.00000000000000))+((htj8)*(htj8)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj8)*(htj8))))):(IkReal)1.0e30)));
sj6array[numsolutions]=((IkReal(2.00000000000000))*(htj6)*(((IKabs(((IkReal(1.00000000000000))+((htj6)*(htj6)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj6)*(htj6))))):(IkReal)1.0e30)));
if( j7array[numsolutions] > IKPI )
{
    j7array[numsolutions]-=IK2PI;
}
else if( j7array[numsolutions] < -IKPI )
{
    j7array[numsolutions]+=IK2PI;
}
if( j8array[numsolutions] > IKPI )
{
    j8array[numsolutions]-=IK2PI;
}
else if( j8array[numsolutions] < -IKPI )
{
    j8array[numsolutions]+=IK2PI;
}
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j7valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj7 = 16;
_nj8 = 1;
_nj6 = 1;
for(int ij7 = 0; ij7 < numsolutions; ++ij7)
    {
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
_ij8[0] = 0; _ij8[1] = -1;
_ij6[0] = 0; _ij6[1] = -1;
for(int iij7 = ij7+1; iij7 < numsolutions; ++iij7)
{
if( !j7valid[iij7] ) { continue; }
if( IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(cj8array[ij7]-cj8array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij7]-sj8array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(cj6array[ij7]-cj6array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij7]-sj6array[iij7]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j7valid[iij7]=false; _ij7[1] = iij7; _ij8[1] = 0; _ij6[1] = 0;  break; 
}
}
    j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];

    j8 = j8array[ij7]; cj8 = cj8array[ij7]; sj8 = sj8array[ij7];

    j6 = j6array[ij7]; cj6 = cj6array[ij7]; sj6 = sj6array[ij7];

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x118=(cj8)*(cj8);
IkReal x119=(sj8)*(sj8);
IkReal x120=((r00)*(r11));
IkReal x121=((r02)*(sj7));
IkReal x122=((cj7)*(x118));
IkReal x123=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x124=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x125=((cj7)*(x119));
gconst0=IKsign(((((x120)*(x122)))+(((IkReal(-1.00000000000000))*(x122)*(x124)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x123)))+(((r10)*(sj8)*(x121)))+(((cj8)*(r11)*(x121)))+(((x120)*(x125)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x123)))+(((IkReal(-1.00000000000000))*(x124)*(x125)))));
IkReal x126=(cj8)*(cj8);
IkReal x127=(sj8)*(sj8);
IkReal x128=((r00)*(r11));
IkReal x129=((r02)*(sj7));
IkReal x130=((cj7)*(x126));
IkReal x131=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x132=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x133=((cj7)*(x127));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x132)*(x133)))+(((IkReal(-1.00000000000000))*(x130)*(x132)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x131)))+(((x128)*(x130)))+(((x128)*(x133)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x131)))+(((cj8)*(r11)*(x129)))+(((r10)*(sj8)*(x129))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x134=(sj8)*(sj8);
IkReal x135=(cj8)*(cj8);
IkReal x136=((IkReal(1.00000000000000))*(r10));
IkReal x137=((cj7)*(sj8));
IkReal x138=((r00)*(r11));
IkReal x139=((cj7)*(cj8));
IkReal x140=((sj7)*(x134));
IkReal x141=((sj7)*(x135));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(r01)*(x136)*(x140)))+(((r00)*(r12)*(x137)))+(((IkReal(-1.00000000000000))*(r01)*(x136)*(x141)))+(((x138)*(x141)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x139)))+(((IkReal(-1.00000000000000))*(r02)*(x136)*(x137)))+(((r01)*(r12)*(x139)))+(((x138)*(x140)))));
IkReal x142=(sj8)*(sj8);
IkReal x143=(cj8)*(cj8);
IkReal x144=((IkReal(1.00000000000000))*(r10));
IkReal x145=((cj7)*(sj8));
IkReal x146=((r00)*(r11));
IkReal x147=((cj7)*(cj8));
IkReal x148=((sj7)*(x142));
IkReal x149=((sj7)*(x143));
dummyeval[0]=((((x146)*(x148)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x147)))+(((r01)*(r12)*(x147)))+(((IkReal(-1.00000000000000))*(r02)*(x144)*(x145)))+(((r00)*(r12)*(x145)))+(((IkReal(-1.00000000000000))*(r01)*(x144)*(x149)))+(((x146)*(x149)))+(((IkReal(-1.00000000000000))*(r01)*(x144)*(x148))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x150=((IkReal(4.00000000000000))*(sj7));
IkReal x151=((npy)*(sj8));
IkReal x152=((IkReal(4.00000000000000))*(cj7));
IkReal x153=((cj8)*(npx));
if( IKabs(((IkReal(0.0800000000000000))+(((x150)*(x151)))+(((IkReal(-1.00000000000000))*(x150)*(x153)))+(((npz)*(x152)))+(((IkReal(0.320000000000000))*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((npz)*(x150)))+(((IkReal(-1.00000000000000))*(x151)*(x152)))+(((IkReal(-0.320000000000000))*(cj7)))+(((x152)*(x153))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((x150)*(x151)))+(((IkReal(-1.00000000000000))*(x150)*(x153)))+(((npz)*(x152)))+(((IkReal(0.320000000000000))*(sj7)))))+IKsqr(((IkReal(-0.920000000000000))+(((npz)*(x150)))+(((IkReal(-1.00000000000000))*(x151)*(x152)))+(((IkReal(-0.320000000000000))*(cj7)))+(((x152)*(x153)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.0800000000000000))+(((x150)*(x151)))+(((IkReal(-1.00000000000000))*(x150)*(x153)))+(((npz)*(x152)))+(((IkReal(0.320000000000000))*(sj7)))), ((IkReal(-0.920000000000000))+(((npz)*(x150)))+(((IkReal(-1.00000000000000))*(x151)*(x152)))+(((IkReal(-0.320000000000000))*(cj7)))+(((x152)*(x153)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x154=((IkReal(1.00000000000000))*(sj7));
IkReal x155=((npy)*(sj8));
IkReal x156=((cj8)*(npx));
evalcond[0]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj7)*(x156)))+(((IkReal(-1.00000000000000))*(npz)*(x154)))+(((IkReal(0.0800000000000000))*(cj7)))+(((cj7)*(x155))));
evalcond[1]=((IkReal(0.0200000000000000))+(((IkReal(-1.00000000000000))*(x154)*(x156)))+(((cj7)*(npz)))+(((sj7)*(x155)))+(((IkReal(0.0800000000000000))*(sj7)))+(((IkReal(-0.250000000000000))*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst66;
IkReal x157=(cj8)*(cj8);
IkReal x158=(sj8)*(sj8);
IkReal x159=((IkReal(2.00000000000000))*(cj8)*(sj8));
gconst66=IKsign(((((r00)*(r01)*(x159)))+(((x157)*((r11)*(r11))))+(((x158)*((r10)*(r10))))+(((r10)*(r11)*(x159)))+(((x158)*((r00)*(r00))))+(((x157)*((r01)*(r01))))));
IkReal x160=(cj8)*(cj8);
IkReal x161=(sj8)*(sj8);
IkReal x162=((IkReal(2.00000000000000))*(cj8)*(sj8));
dummyeval[0]=((((r00)*(r01)*(x162)))+(((r10)*(r11)*(x162)))+(((x160)*((r01)*(r01))))+(((x160)*((r11)*(r11))))+(((x161)*((r00)*(r00))))+(((x161)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst68;
gconst68=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst67;
IkReal x163=(cj8)*(cj8);
IkReal x164=(sj8)*(sj8);
IkReal x165=((r00)*(r11));
IkReal x166=((r02)*(sj7));
IkReal x167=((cj7)*(x163));
IkReal x168=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x169=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x170=((cj7)*(x164));
gconst67=IKsign(((((x165)*(x170)))+(((r10)*(sj8)*(x166)))+(((IkReal(-1.00000000000000))*(x169)*(x170)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x168)))+(((x165)*(x167)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x168)))+(((cj8)*(r11)*(x166)))+(((IkReal(-1.00000000000000))*(x167)*(x169)))));
IkReal x171=(cj8)*(cj8);
IkReal x172=(sj8)*(sj8);
IkReal x173=((r00)*(r11));
IkReal x174=((r02)*(sj7));
IkReal x175=((cj7)*(x171));
IkReal x176=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x177=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x178=((cj7)*(x172));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x175)*(x177)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x176)))+(((r10)*(sj8)*(x174)))+(((x173)*(x178)))+(((IkReal(-1.00000000000000))*(x177)*(x178)))+(((x173)*(x175)))+(((cj8)*(r11)*(x174)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x176))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x179=((cj7)*(cj8));
IkReal x180=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst67)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x180)))+(((r10)*(x179))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst67)*(((((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x180)))+(((r00)*(x179))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst67)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x180)))+(((r10)*(x179)))))), ((gconst67)*(((((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x180)))+(((r00)*(x179)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x181=IKsin(j3);
IkReal x182=IKcos(j3);
IkReal x183=((IkReal(1.00000000000000))*(sj8));
IkReal x184=((IkReal(1.00000000000000))*(cj8));
IkReal x185=((r01)*(sj8));
IkReal x186=((cj8)*(r10));
IkReal x187=((sj7)*(x182));
IkReal x188=((cj7)*(x181));
IkReal x189=((r00)*(x181));
IkReal x190=((sj7)*(x181));
IkReal x191=((cj7)*(x182));
evalcond[0]=((IkReal(1.00000000000000))+(((cj8)*(r01)*(x181)))+(((IkReal(-1.00000000000000))*(r10)*(x182)*(x183)))+(((sj8)*(x189)))+(((IkReal(-1.00000000000000))*(r11)*(x182)*(x184))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x182)*(x184)))+(((IkReal(-1.00000000000000))*(r10)*(x181)*(x183)))+(((IkReal(-1.00000000000000))*(r11)*(x181)*(x184)))+(((IkReal(-1.00000000000000))*(r00)*(x182)*(x183))));
evalcond[2]=((((r12)*(x187)))+(((IkReal(-1.00000000000000))*(r02)*(x190)))+(((IkReal(-1.00000000000000))*(r00)*(x184)*(x188)))+(((x185)*(x188)))+(((x186)*(x191)))+(((IkReal(-1.00000000000000))*(r11)*(x183)*(x191))));
evalcond[3]=((((x186)*(x187)))+(((x185)*(x190)))+(((IkReal(-1.00000000000000))*(r12)*(x191)))+(((r02)*(x188)))+(((IkReal(-1.00000000000000))*(r11)*(x183)*(x187)))+(((IkReal(-1.00000000000000))*(sj7)*(x184)*(x189))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst69;
gconst69=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst70;
gconst70=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x192=((cj3)*(cj5));
IkReal x193=((r02)*(sj7));
IkReal x194=((cj3)*(sj5));
IkReal x195=((cj5)*(sj3));
IkReal x196=((cj7)*(cj8));
IkReal x197=((sj5)*(sj7));
IkReal x198=((sj3)*(sj5));
IkReal x199=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst70)*(((((IkReal(-1.00000000000000))*(r11)*(x195)*(x199)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x196)))+(((r12)*(sj7)*(x195)))+(((IkReal(-1.00000000000000))*(r22)*(x197)))+(((IkReal(-1.00000000000000))*(r01)*(x192)*(x199)))+(((r10)*(x195)*(x196)))+(((x192)*(x193)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((r00)*(x192)*(x196))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((cj5)*(r20)*(x196)))+(((IkReal(-1.00000000000000))*(r11)*(x198)*(x199)))+(((r00)*(x194)*(x196)))+(((x193)*(x194)))+(((IkReal(-1.00000000000000))*(r01)*(x194)*(x199)))+(((r12)*(sj3)*(x197)))+(((r10)*(x196)*(x198)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x199)))+(((cj5)*(r22)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst70)*(((((IkReal(-1.00000000000000))*(r11)*(x195)*(x199)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x196)))+(((r12)*(sj7)*(x195)))+(((IkReal(-1.00000000000000))*(r22)*(x197)))+(((IkReal(-1.00000000000000))*(r01)*(x192)*(x199)))+(((r10)*(x195)*(x196)))+(((x192)*(x193)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((r00)*(x192)*(x196)))))), ((gconst70)*(((((cj5)*(r20)*(x196)))+(((IkReal(-1.00000000000000))*(r11)*(x198)*(x199)))+(((r00)*(x194)*(x196)))+(((x193)*(x194)))+(((IkReal(-1.00000000000000))*(r01)*(x194)*(x199)))+(((r12)*(sj3)*(x197)))+(((r10)*(x196)*(x198)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x199)))+(((cj5)*(r22)*(sj7)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x200=IKsin(j4);
IkReal x201=IKcos(j4);
IkReal x202=((IkReal(1.00000000000000))*(cj7));
IkReal x203=((cj8)*(r20));
IkReal x204=((cj3)*(r02));
IkReal x205=((IkReal(1.00000000000000))*(sj7));
IkReal x206=((sj3)*(sj7));
IkReal x207=((r21)*(sj8));
IkReal x208=((cj8)*(r10));
IkReal x209=((cj5)*(x200));
IkReal x210=((sj5)*(x201));
IkReal x211=((r11)*(sj3)*(sj8));
IkReal x212=((cj3)*(cj8)*(r00));
IkReal x213=((cj5)*(x201));
IkReal x214=((cj3)*(r01)*(sj8));
IkReal x215=((sj5)*(x200));
IkReal x216=((x210)+(x209));
evalcond[0]=((((cj7)*(x207)))+(x215)+(((IkReal(-1.00000000000000))*(r22)*(x205)))+(((IkReal(-1.00000000000000))*(x202)*(x203)))+(((IkReal(-1.00000000000000))*(x213))));
evalcond[1]=((((cj7)*(r22)))+(x216)+(((IkReal(-1.00000000000000))*(x203)*(x205)))+(((sj7)*(x207))));
evalcond[2]=((((r12)*(x206)))+(((sj7)*(x204)))+(x216)+(((cj7)*(x212)))+(((IkReal(-1.00000000000000))*(x202)*(x214)))+(((cj7)*(sj3)*(x208)))+(((IkReal(-1.00000000000000))*(x202)*(x211))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x215)))+(((IkReal(-1.00000000000000))*(x205)*(x214)))+(x213)+(((IkReal(-1.00000000000000))*(x202)*(x204)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x202)))+(((x206)*(x208)))+(((IkReal(-1.00000000000000))*(x205)*(x211)))+(((sj7)*(x212))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x217=((sj5)*(sj7));
IkReal x218=((r21)*(sj8));
IkReal x219=((cj7)*(sj5));
IkReal x220=((cj5)*(sj7));
IkReal x221=((cj5)*(cj7));
IkReal x222=((IkReal(1.00000000000000))*(cj8)*(r20));
if( IKabs(((gconst69)*(((((r22)*(x221)))+(((IkReal(-1.00000000000000))*(r22)*(x217)))+(((IkReal(-1.00000000000000))*(x220)*(x222)))+(((x218)*(x219)))+(((x218)*(x220)))+(((IkReal(-1.00000000000000))*(x219)*(x222))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst69)*(((((r22)*(x219)))+(((x217)*(x218)))+(((cj8)*(r20)*(x221)))+(((IkReal(-1.00000000000000))*(x218)*(x221)))+(((r22)*(x220)))+(((IkReal(-1.00000000000000))*(x217)*(x222))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst69)*(((((r22)*(x221)))+(((IkReal(-1.00000000000000))*(r22)*(x217)))+(((IkReal(-1.00000000000000))*(x220)*(x222)))+(((x218)*(x219)))+(((x218)*(x220)))+(((IkReal(-1.00000000000000))*(x219)*(x222)))))), ((gconst69)*(((((r22)*(x219)))+(((x217)*(x218)))+(((cj8)*(r20)*(x221)))+(((IkReal(-1.00000000000000))*(x218)*(x221)))+(((r22)*(x220)))+(((IkReal(-1.00000000000000))*(x217)*(x222)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x223=IKsin(j4);
IkReal x224=IKcos(j4);
IkReal x225=((IkReal(1.00000000000000))*(cj7));
IkReal x226=((cj8)*(r20));
IkReal x227=((cj3)*(r02));
IkReal x228=((IkReal(1.00000000000000))*(sj7));
IkReal x229=((sj3)*(sj7));
IkReal x230=((r21)*(sj8));
IkReal x231=((cj8)*(r10));
IkReal x232=((cj5)*(x223));
IkReal x233=((sj5)*(x224));
IkReal x234=((r11)*(sj3)*(sj8));
IkReal x235=((cj3)*(cj8)*(r00));
IkReal x236=((cj5)*(x224));
IkReal x237=((cj3)*(r01)*(sj8));
IkReal x238=((sj5)*(x223));
IkReal x239=((x232)+(x233));
evalcond[0]=((x238)+(((IkReal(-1.00000000000000))*(r22)*(x228)))+(((cj7)*(x230)))+(((IkReal(-1.00000000000000))*(x236)))+(((IkReal(-1.00000000000000))*(x225)*(x226))));
evalcond[1]=((((cj7)*(r22)))+(x239)+(((sj7)*(x230)))+(((IkReal(-1.00000000000000))*(x226)*(x228))));
evalcond[2]=((((r12)*(x229)))+(x239)+(((IkReal(-1.00000000000000))*(x225)*(x237)))+(((cj7)*(sj3)*(x231)))+(((sj7)*(x227)))+(((cj7)*(x235)))+(((IkReal(-1.00000000000000))*(x225)*(x234))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x225)))+(((IkReal(-1.00000000000000))*(x228)*(x234)))+(x236)+(((IkReal(-1.00000000000000))*(x228)*(x237)))+(((IkReal(-1.00000000000000))*(x225)*(x227)))+(((IkReal(-1.00000000000000))*(x238)))+(((x229)*(x231)))+(((sj7)*(x235))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x240=((sj5)*(sj7));
IkReal x241=((r21)*(sj8));
IkReal x242=((cj7)*(sj5));
IkReal x243=((cj8)*(r20));
IkReal x244=((cj5)*(cj7));
IkReal x245=((cj5)*(sj7));
if( IKabs(((gconst68)*(((((r22)*(x244)))+(((IkReal(-1.00000000000000))*(x243)*(x245)))+(((x241)*(x242)))+(((IkReal(-1.00000000000000))*(r22)*(x240)))+(((x241)*(x245)))+(((IkReal(-1.00000000000000))*(x242)*(x243))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst68)*(((((IkReal(-1.00000000000000))*(x241)*(x244)))+(((x243)*(x244)))+(((IkReal(-1.00000000000000))*(x240)*(x243)))+(((r22)*(x245)))+(((r22)*(x242)))+(((x240)*(x241))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst68)*(((((r22)*(x244)))+(((IkReal(-1.00000000000000))*(x243)*(x245)))+(((x241)*(x242)))+(((IkReal(-1.00000000000000))*(r22)*(x240)))+(((x241)*(x245)))+(((IkReal(-1.00000000000000))*(x242)*(x243)))))), ((gconst68)*(((((IkReal(-1.00000000000000))*(x241)*(x244)))+(((x243)*(x244)))+(((IkReal(-1.00000000000000))*(x240)*(x243)))+(((r22)*(x245)))+(((r22)*(x242)))+(((x240)*(x241)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x246=IKsin(j4);
IkReal x247=IKcos(j4);
IkReal x248=((r21)*(sj8));
IkReal x249=((IkReal(1.00000000000000))*(cj8)*(r20));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((sj5)*(x246)))+(((cj7)*(x248)))+(((IkReal(-1.00000000000000))*(cj7)*(x249)))+(((IkReal(-1.00000000000000))*(cj5)*(x247))));
evalcond[1]=((((cj5)*(x246)))+(((IkReal(-1.00000000000000))*(sj7)*(x249)))+(((cj7)*(r22)))+(((sj5)*(x247)))+(((sj7)*(x248))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst71;
IkReal x250=(cj8)*(cj8);
IkReal x251=(sj8)*(sj8);
IkReal x252=((IkReal(2.00000000000000))*(cj8)*(sj8));
gconst71=IKsign(((((r10)*(r11)*(x252)))+(((x251)*((r00)*(r00))))+(((r00)*(r01)*(x252)))+(((x250)*((r11)*(r11))))+(((x250)*((r01)*(r01))))+(((x251)*((r10)*(r10))))));
IkReal x253=(cj8)*(cj8);
IkReal x254=(sj8)*(sj8);
IkReal x255=((IkReal(2.00000000000000))*(cj8)*(sj8));
dummyeval[0]=((((r10)*(r11)*(x255)))+(((x254)*((r00)*(r00))))+(((x253)*((r01)*(r01))))+(((r00)*(r01)*(x255)))+(((x253)*((r11)*(r11))))+(((x254)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst72;
IkReal x256=(cj8)*(cj8);
IkReal x257=(sj8)*(sj8);
IkReal x258=((r00)*(r11));
IkReal x259=((r02)*(sj7));
IkReal x260=((cj7)*(x256));
IkReal x261=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x262=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x263=((cj7)*(x257));
gconst72=IKsign(((((x258)*(x263)))+(((IkReal(-1.00000000000000))*(x260)*(x262)))+(((x258)*(x260)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x261)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x261)))+(((IkReal(-1.00000000000000))*(x262)*(x263)))+(((r10)*(sj8)*(x259)))+(((cj8)*(r11)*(x259)))));
IkReal x264=(cj8)*(cj8);
IkReal x265=(sj8)*(sj8);
IkReal x266=((r00)*(r11));
IkReal x267=((r02)*(sj7));
IkReal x268=((cj7)*(x264));
IkReal x269=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x270=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x271=((cj7)*(x265));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(sj8)*(x269)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x269)))+(((IkReal(-1.00000000000000))*(x270)*(x271)))+(((x266)*(x268)))+(((x266)*(x271)))+(((r10)*(sj8)*(x267)))+(((cj8)*(r11)*(x267)))+(((IkReal(-1.00000000000000))*(x268)*(x270))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x272=((cj7)*(cj8));
IkReal x273=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst72)*(((((IkReal(-1.00000000000000))*(r11)*(x273)))+(((r12)*(sj7)))+(((r10)*(x272))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst72)*(((((IkReal(-1.00000000000000))*(r01)*(x273)))+(((r02)*(sj7)))+(((r00)*(x272))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst72)*(((((IkReal(-1.00000000000000))*(r11)*(x273)))+(((r12)*(sj7)))+(((r10)*(x272)))))), ((gconst72)*(((((IkReal(-1.00000000000000))*(r01)*(x273)))+(((r02)*(sj7)))+(((r00)*(x272)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x274=IKsin(j3);
IkReal x275=IKcos(j3);
IkReal x276=((r01)*(sj8));
IkReal x277=((cj8)*(r00));
IkReal x278=((r00)*(sj8));
IkReal x279=((cj8)*(r11));
IkReal x280=((r11)*(sj8));
IkReal x281=((r10)*(sj8));
IkReal x282=((cj8)*(r10));
IkReal x283=((cj7)*(x274));
IkReal x284=((sj7)*(x275));
IkReal x285=((IkReal(1.00000000000000))*(x274));
IkReal x286=((IkReal(1.00000000000000))*(x275));
IkReal x287=((cj8)*(x274));
IkReal x288=((IkReal(1.00000000000000))*(x280));
IkReal x289=((sj7)*(x274));
IkReal x290=((cj7)*(x275));
evalcond[0]=((IkReal(1.00000000000000))+(((x274)*(x278)))+(((r01)*(x287)))+(((IkReal(-1.00000000000000))*(x281)*(x286)))+(((IkReal(-1.00000000000000))*(x279)*(x286))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x281)*(x285)))+(((IkReal(-1.00000000000000))*(x279)*(x285)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x286)))+(((IkReal(-1.00000000000000))*(x278)*(x286))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x285)))+(((x282)*(x290)))+(((x276)*(x283)))+(((IkReal(-1.00000000000000))*(cj7)*(x280)*(x286)))+(((IkReal(-1.00000000000000))*(x277)*(x283)))+(((r12)*(x284))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj7)*(x277)*(x285)))+(((x276)*(x289)))+(((r02)*(x283)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x286)))+(((IkReal(-1.00000000000000))*(x284)*(x288)))+(((x282)*(x284))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x283)*(x288)))+(((cj5)*(sj4)))+(((x282)*(x283)))+(((r02)*(x284)))+(((x277)*(x290)))+(((cj4)*(sj5)))+(((r12)*(x289)))+(((IkReal(-1.00000000000000))*(cj7)*(x276)*(x286))));
evalcond[5]=((((x282)*(x289)))+(((x277)*(x284)))+(((IkReal(-1.00000000000000))*(sj7)*(x280)*(x285)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x286)))+(((cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(r12)*(x283)))+(((IkReal(-1.00000000000000))*(x276)*(x284))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst71)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst71)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst71)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst71)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x291=IKsin(j3);
IkReal x292=IKcos(j3);
IkReal x293=((r01)*(sj8));
IkReal x294=((cj8)*(r00));
IkReal x295=((r00)*(sj8));
IkReal x296=((cj8)*(r11));
IkReal x297=((r11)*(sj8));
IkReal x298=((r10)*(sj8));
IkReal x299=((cj8)*(r10));
IkReal x300=((cj7)*(x291));
IkReal x301=((sj7)*(x292));
IkReal x302=((IkReal(1.00000000000000))*(x291));
IkReal x303=((IkReal(1.00000000000000))*(x292));
IkReal x304=((cj8)*(x291));
IkReal x305=((IkReal(1.00000000000000))*(x297));
IkReal x306=((sj7)*(x291));
IkReal x307=((cj7)*(x292));
evalcond[0]=((IkReal(1.00000000000000))+(((x291)*(x295)))+(((r01)*(x304)))+(((IkReal(-1.00000000000000))*(x298)*(x303)))+(((IkReal(-1.00000000000000))*(x296)*(x303))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x295)*(x303)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x303)))+(((IkReal(-1.00000000000000))*(x298)*(x302)))+(((IkReal(-1.00000000000000))*(x296)*(x302))));
evalcond[2]=((((x299)*(x307)))+(((x293)*(x300)))+(((r12)*(x301)))+(((IkReal(-1.00000000000000))*(cj7)*(x297)*(x303)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x302)))+(((IkReal(-1.00000000000000))*(x294)*(x300))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj7)*(r12)*(x303)))+(((IkReal(-1.00000000000000))*(sj7)*(x294)*(x302)))+(((x293)*(x306)))+(((x299)*(x301)))+(((r02)*(x300)))+(((IkReal(-1.00000000000000))*(x301)*(x305))));
evalcond[4]=((((cj5)*(sj4)))+(((r12)*(x306)))+(((x294)*(x307)))+(((r02)*(x301)))+(((IkReal(-1.00000000000000))*(x300)*(x305)))+(((x299)*(x300)))+(((IkReal(-1.00000000000000))*(cj7)*(x293)*(x303)))+(((cj4)*(sj5))));
evalcond[5]=((((x294)*(x301)))+(((IkReal(-1.00000000000000))*(sj7)*(x297)*(x302)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x303)))+(((IkReal(-1.00000000000000))*(r12)*(x300)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5)))+(((cj4)*(cj5)))+(((x299)*(x306)))+(((IkReal(-1.00000000000000))*(x293)*(x301))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst66)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst66)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst66)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst66)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x308=IKsin(j3);
IkReal x309=IKcos(j3);
IkReal x310=((IkReal(1.00000000000000))*(sj8));
IkReal x311=((IkReal(1.00000000000000))*(cj8));
IkReal x312=((r01)*(sj8));
IkReal x313=((cj8)*(r10));
IkReal x314=((sj7)*(x309));
IkReal x315=((cj7)*(x308));
IkReal x316=((r00)*(x308));
IkReal x317=((sj7)*(x308));
IkReal x318=((cj7)*(x309));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x309)*(x310)))+(((sj8)*(x316)))+(((IkReal(-1.00000000000000))*(r11)*(x309)*(x311)))+(((cj8)*(r01)*(x308))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x308)*(x310)))+(((IkReal(-1.00000000000000))*(r00)*(x309)*(x310)))+(((IkReal(-1.00000000000000))*(r11)*(x308)*(x311)))+(((IkReal(-1.00000000000000))*(r01)*(x309)*(x311))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x311)*(x315)))+(((IkReal(-1.00000000000000))*(r02)*(x317)))+(((r12)*(x314)))+(((IkReal(-1.00000000000000))*(r11)*(x310)*(x318)))+(((x312)*(x315)))+(((x313)*(x318))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj7)*(x311)*(x316)))+(((r02)*(x315)))+(((x312)*(x317)))+(((x313)*(x314)))+(((IkReal(-1.00000000000000))*(r12)*(x318)))+(((IkReal(-1.00000000000000))*(r11)*(x310)*(x314))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst69;
gconst69=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst70;
gconst70=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x319=((cj3)*(cj5));
IkReal x320=((r02)*(sj7));
IkReal x321=((cj3)*(sj5));
IkReal x322=((cj5)*(sj3));
IkReal x323=((cj7)*(cj8));
IkReal x324=((sj5)*(sj7));
IkReal x325=((sj3)*(sj5));
IkReal x326=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst70)*(((((r00)*(x319)*(x323)))+(((r12)*(sj7)*(x322)))+(((IkReal(-1.00000000000000))*(r01)*(x319)*(x326)))+(((x319)*(x320)))+(((r10)*(x322)*(x323)))+(((IkReal(-1.00000000000000))*(r22)*(x324)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x323)))+(((IkReal(-1.00000000000000))*(r11)*(x322)*(x326)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((x320)*(x321)))+(((IkReal(-1.00000000000000))*(r11)*(x325)*(x326)))+(((r12)*(sj3)*(x324)))+(((cj5)*(r20)*(x323)))+(((r00)*(x321)*(x323)))+(((r10)*(x323)*(x325)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x321)*(x326)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x326))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst70)*(((((r00)*(x319)*(x323)))+(((r12)*(sj7)*(x322)))+(((IkReal(-1.00000000000000))*(r01)*(x319)*(x326)))+(((x319)*(x320)))+(((r10)*(x322)*(x323)))+(((IkReal(-1.00000000000000))*(r22)*(x324)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x323)))+(((IkReal(-1.00000000000000))*(r11)*(x322)*(x326)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst70)*(((((x320)*(x321)))+(((IkReal(-1.00000000000000))*(r11)*(x325)*(x326)))+(((r12)*(sj3)*(x324)))+(((cj5)*(r20)*(x323)))+(((r00)*(x321)*(x323)))+(((r10)*(x323)*(x325)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x321)*(x326)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x326)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x327=IKsin(j4);
IkReal x328=IKcos(j4);
IkReal x329=((IkReal(1.00000000000000))*(cj7));
IkReal x330=((cj8)*(r20));
IkReal x331=((cj3)*(r02));
IkReal x332=((IkReal(1.00000000000000))*(sj7));
IkReal x333=((sj3)*(sj7));
IkReal x334=((r21)*(sj8));
IkReal x335=((cj8)*(r10));
IkReal x336=((cj5)*(x327));
IkReal x337=((sj5)*(x328));
IkReal x338=((r11)*(sj3)*(sj8));
IkReal x339=((cj3)*(cj8)*(r00));
IkReal x340=((cj5)*(x328));
IkReal x341=((cj3)*(r01)*(sj8));
IkReal x342=((sj5)*(x327));
IkReal x343=((x337)+(x336));
evalcond[0]=((((IkReal(-1.00000000000000))*(x340)))+(((IkReal(-1.00000000000000))*(r22)*(x332)))+(x342)+(((IkReal(-1.00000000000000))*(x329)*(x330)))+(((cj7)*(x334))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x330)*(x332)))+(((cj7)*(r22)))+(((sj7)*(x334)))+(x343));
evalcond[2]=((((sj7)*(x331)))+(((r12)*(x333)))+(((cj7)*(sj3)*(x335)))+(((cj7)*(x339)))+(((IkReal(-1.00000000000000))*(x329)*(x341)))+(x343)+(((IkReal(-1.00000000000000))*(x329)*(x338))));
evalcond[3]=((((x333)*(x335)))+(((IkReal(-1.00000000000000))*(x342)))+(((IkReal(-1.00000000000000))*(x332)*(x338)))+(((IkReal(-1.00000000000000))*(x329)*(x331)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x329)))+(x340)+(((IkReal(-1.00000000000000))*(x332)*(x341)))+(((sj7)*(x339))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x344=((sj5)*(sj7));
IkReal x345=((r21)*(sj8));
IkReal x346=((cj7)*(sj5));
IkReal x347=((cj5)*(sj7));
IkReal x348=((cj5)*(cj7));
IkReal x349=((IkReal(1.00000000000000))*(cj8)*(r20));
if( IKabs(((gconst69)*(((((IkReal(-1.00000000000000))*(r22)*(x344)))+(((r22)*(x348)))+(((x345)*(x346)))+(((x345)*(x347)))+(((IkReal(-1.00000000000000))*(x347)*(x349)))+(((IkReal(-1.00000000000000))*(x346)*(x349))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst69)*(((((IkReal(-1.00000000000000))*(x345)*(x348)))+(((x344)*(x345)))+(((IkReal(-1.00000000000000))*(x344)*(x349)))+(((cj8)*(r20)*(x348)))+(((r22)*(x347)))+(((r22)*(x346))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst69)*(((((IkReal(-1.00000000000000))*(r22)*(x344)))+(((r22)*(x348)))+(((x345)*(x346)))+(((x345)*(x347)))+(((IkReal(-1.00000000000000))*(x347)*(x349)))+(((IkReal(-1.00000000000000))*(x346)*(x349)))))), ((gconst69)*(((((IkReal(-1.00000000000000))*(x345)*(x348)))+(((x344)*(x345)))+(((IkReal(-1.00000000000000))*(x344)*(x349)))+(((cj8)*(r20)*(x348)))+(((r22)*(x347)))+(((r22)*(x346)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x350=IKsin(j4);
IkReal x351=IKcos(j4);
IkReal x352=((IkReal(1.00000000000000))*(cj7));
IkReal x353=((cj8)*(r20));
IkReal x354=((cj3)*(r02));
IkReal x355=((IkReal(1.00000000000000))*(sj7));
IkReal x356=((sj3)*(sj7));
IkReal x357=((r21)*(sj8));
IkReal x358=((cj8)*(r10));
IkReal x359=((cj5)*(x350));
IkReal x360=((sj5)*(x351));
IkReal x361=((r11)*(sj3)*(sj8));
IkReal x362=((cj3)*(cj8)*(r00));
IkReal x363=((cj5)*(x351));
IkReal x364=((cj3)*(r01)*(sj8));
IkReal x365=((sj5)*(x350));
IkReal x366=((x360)+(x359));
evalcond[0]=((((IkReal(-1.00000000000000))*(x352)*(x353)))+(x365)+(((IkReal(-1.00000000000000))*(x363)))+(((cj7)*(x357)))+(((IkReal(-1.00000000000000))*(r22)*(x355))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x353)*(x355)))+(x366)+(((sj7)*(x357))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x352)*(x364)))+(((cj7)*(sj3)*(x358)))+(((r12)*(x356)))+(x366)+(((sj7)*(x354)))+(((IkReal(-1.00000000000000))*(x352)*(x361)))+(((cj7)*(x362))));
evalcond[3]=((((x356)*(x358)))+(((IkReal(-1.00000000000000))*(x355)*(x364)))+(((IkReal(-1.00000000000000))*(x355)*(x361)))+(x363)+(((IkReal(-1.00000000000000))*(x352)*(x354)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x352)))+(((sj7)*(x362)))+(((IkReal(-1.00000000000000))*(x365))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x367=((IkReal(4.00000000000000))*(sj7));
IkReal x368=((npy)*(sj8));
IkReal x369=((IkReal(4.00000000000000))*(cj7));
IkReal x370=((cj8)*(npx));
if( IKabs(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x369)))+(((x367)*(x370)))+(((IkReal(-0.320000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x367)*(x368))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(-1.00000000000000))*(x368)*(x369)))+(((IkReal(-0.320000000000000))*(cj7)))+(((npz)*(x367)))+(((x369)*(x370))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x369)))+(((x367)*(x370)))+(((IkReal(-0.320000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x367)*(x368)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(-1.00000000000000))*(x368)*(x369)))+(((IkReal(-0.320000000000000))*(cj7)))+(((npz)*(x367)))+(((x369)*(x370)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x369)))+(((x367)*(x370)))+(((IkReal(-0.320000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x367)*(x368)))), ((IkReal(-0.920000000000000))+(((IkReal(-1.00000000000000))*(x368)*(x369)))+(((IkReal(-0.320000000000000))*(cj7)))+(((npz)*(x367)))+(((x369)*(x370)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x371=((IkReal(1.00000000000000))*(sj7));
IkReal x372=((npy)*(sj8));
IkReal x373=((cj8)*(npx));
evalcond[0]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(0.0800000000000000))*(cj7)))+(((cj7)*(x372)))+(((IkReal(-1.00000000000000))*(cj7)*(x373)))+(((IkReal(-1.00000000000000))*(npz)*(x371))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((cj7)*(npz)))+(((IkReal(0.250000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(x371)*(x373)))+(((sj7)*(x372)))+(((IkReal(0.0800000000000000))*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst75;
IkReal x374=(cj8)*(cj8);
IkReal x375=(sj8)*(sj8);
IkReal x376=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x377=((IkReal(1.00000000000000))*(x374));
IkReal x378=((IkReal(1.00000000000000))*(x375));
gconst75=IKsign(((((IkReal(-1.00000000000000))*(x378)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x377)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x378)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x377)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x376)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x376)))));
IkReal x379=(cj8)*(cj8);
IkReal x380=(sj8)*(sj8);
IkReal x381=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x382=((IkReal(1.00000000000000))*(x379));
IkReal x383=((IkReal(1.00000000000000))*(x380));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(r11)*(x381)))+(((IkReal(-1.00000000000000))*(x382)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x382)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x383)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x383)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x381))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst77;
gconst77=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst76;
IkReal x384=(sj8)*(sj8);
IkReal x385=(cj8)*(cj8);
IkReal x386=((sj7)*(sj8));
IkReal x387=((IkReal(1.00000000000000))*(r02));
IkReal x388=((r01)*(r10));
IkReal x389=((cj8)*(sj7));
IkReal x390=((cj7)*(x384));
IkReal x391=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x392=((cj7)*(x385));
gconst76=IKsign(((((r01)*(r12)*(x389)))+(((IkReal(-1.00000000000000))*(x391)*(x392)))+(((x388)*(x390)))+(((IkReal(-1.00000000000000))*(r10)*(x386)*(x387)))+(((r00)*(r12)*(x386)))+(((IkReal(-1.00000000000000))*(r11)*(x387)*(x389)))+(((x388)*(x392)))+(((IkReal(-1.00000000000000))*(x390)*(x391)))));
IkReal x393=(sj8)*(sj8);
IkReal x394=(cj8)*(cj8);
IkReal x395=((sj7)*(sj8));
IkReal x396=((IkReal(1.00000000000000))*(r02));
IkReal x397=((r01)*(r10));
IkReal x398=((cj8)*(sj7));
IkReal x399=((cj7)*(x393));
IkReal x400=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x401=((cj7)*(x394));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x399)*(x400)))+(((IkReal(-1.00000000000000))*(x400)*(x401)))+(((IkReal(-1.00000000000000))*(r11)*(x396)*(x398)))+(((x397)*(x401)))+(((x397)*(x399)))+(((r01)*(r12)*(x398)))+(((IkReal(-1.00000000000000))*(r10)*(x395)*(x396)))+(((r00)*(r12)*(x395))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x402=((cj7)*(cj8));
IkReal x403=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst76)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x403)))+(((r10)*(x402))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst76)*(((((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x403)))+(((r00)*(x402))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst76)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x403)))+(((r10)*(x402)))))), ((gconst76)*(((((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x403)))+(((r00)*(x402)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x404=IKsin(j3);
IkReal x405=IKcos(j3);
IkReal x406=((IkReal(1.00000000000000))*(sj8));
IkReal x407=((IkReal(1.00000000000000))*(cj8));
IkReal x408=((r01)*(sj8));
IkReal x409=((cj8)*(r10));
IkReal x410=((sj7)*(x405));
IkReal x411=((cj7)*(x404));
IkReal x412=((r00)*(x404));
IkReal x413=((sj7)*(x404));
IkReal x414=((cj7)*(x405));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x405)*(x407)))+(((sj8)*(x412)))+(((IkReal(-1.00000000000000))*(r10)*(x405)*(x406)))+(((cj8)*(r01)*(x404))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x404)*(x406)))+(((IkReal(-1.00000000000000))*(r01)*(x405)*(x407)))+(((IkReal(-1.00000000000000))*(r00)*(x405)*(x406)))+(((IkReal(-1.00000000000000))*(r11)*(x404)*(x407))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x407)*(x411)))+(((x408)*(x411)))+(((IkReal(-1.00000000000000))*(r11)*(x406)*(x414)))+(((IkReal(-1.00000000000000))*(r02)*(x413)))+(((x409)*(x414)))+(((r12)*(x410))));
evalcond[3]=((((r02)*(x411)))+(((x409)*(x410)))+(((x408)*(x413)))+(((IkReal(-1.00000000000000))*(r12)*(x414)))+(((IkReal(-1.00000000000000))*(sj7)*(x407)*(x412)))+(((IkReal(-1.00000000000000))*(r11)*(x406)*(x410))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst78;
gconst78=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst79;
gconst79=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x415=((cj3)*(cj5));
IkReal x416=((r02)*(sj7));
IkReal x417=((cj8)*(r00));
IkReal x418=((cj5)*(sj3));
IkReal x419=((cj7)*(cj8));
IkReal x420=((sj5)*(sj7));
IkReal x421=((sj3)*(sj5));
IkReal x422=((cj3)*(cj7)*(sj5));
IkReal x423=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst79)*(((((x415)*(x416)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x419)))+(((cj7)*(x415)*(x417)))+(((r10)*(x418)*(x419)))+(((IkReal(-1.00000000000000))*(r11)*(x418)*(x423)))+(((IkReal(-1.00000000000000))*(r01)*(x415)*(x423)))+(((r12)*(sj7)*(x418)))+(((IkReal(-1.00000000000000))*(r22)*(x420)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst79)*(((((r12)*(sj3)*(x420)))+(((x417)*(x422)))+(((IkReal(-1.00000000000000))*(r11)*(x421)*(x423)))+(((cj3)*(sj5)*(x416)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x422)))+(((r10)*(x419)*(x421)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x423)))+(((cj5)*(r20)*(x419))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst79)*(((((x415)*(x416)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x419)))+(((cj7)*(x415)*(x417)))+(((r10)*(x418)*(x419)))+(((IkReal(-1.00000000000000))*(r11)*(x418)*(x423)))+(((IkReal(-1.00000000000000))*(r01)*(x415)*(x423)))+(((r12)*(sj7)*(x418)))+(((IkReal(-1.00000000000000))*(r22)*(x420)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst79)*(((((r12)*(sj3)*(x420)))+(((x417)*(x422)))+(((IkReal(-1.00000000000000))*(r11)*(x421)*(x423)))+(((cj3)*(sj5)*(x416)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x422)))+(((r10)*(x419)*(x421)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x423)))+(((cj5)*(r20)*(x419)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x424=IKcos(j4);
IkReal x425=IKsin(j4);
IkReal x426=((IkReal(1.00000000000000))*(cj7));
IkReal x427=((cj8)*(r20));
IkReal x428=((cj3)*(r02));
IkReal x429=((IkReal(1.00000000000000))*(sj7));
IkReal x430=((sj3)*(sj7));
IkReal x431=((r21)*(sj8));
IkReal x432=((IkReal(1.00000000000000))*(cj5));
IkReal x433=((cj8)*(r10));
IkReal x434=((sj5)*(x425));
IkReal x435=((sj5)*(x424));
IkReal x436=((r11)*(sj3)*(sj8));
IkReal x437=((cj3)*(cj8)*(r00));
IkReal x438=((cj3)*(r01)*(sj8));
IkReal x439=((x424)*(x432));
evalcond[0]=((((IkReal(-1.00000000000000))*(x426)*(x427)))+(x434)+(((cj7)*(x431)))+(((IkReal(-1.00000000000000))*(r22)*(x429)))+(((IkReal(-1.00000000000000))*(x439))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x435)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x427)*(x429)))+(((sj7)*(x431)))+(((IkReal(-1.00000000000000))*(x425)*(x432))));
evalcond[2]=((((cj7)*(x437)))+(((sj7)*(x428)))+(x435)+(((cj5)*(x425)))+(((IkReal(-1.00000000000000))*(x426)*(x436)))+(((cj7)*(sj3)*(x433)))+(((IkReal(-1.00000000000000))*(x426)*(x438)))+(((r12)*(x430))));
evalcond[3]=((x434)+(((x430)*(x433)))+(((IkReal(-1.00000000000000))*(x426)*(x428)))+(((sj7)*(x437)))+(((IkReal(-1.00000000000000))*(x429)*(x436)))+(((IkReal(-1.00000000000000))*(x429)*(x438)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x426)))+(((IkReal(-1.00000000000000))*(x439))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x440=((cj7)*(sj5));
IkReal x441=((r21)*(sj8));
IkReal x442=((cj5)*(cj7));
IkReal x443=((cj8)*(r20));
IkReal x444=((IkReal(1.00000000000000))*(sj7));
IkReal x445=((sj5)*(sj7));
IkReal x446=((IkReal(1.00000000000000))*(cj5)*(x443));
if( IKabs(((gconst78)*(((((IkReal(-1.00000000000000))*(x440)*(x441)))+(((cj5)*(sj7)*(x441)))+(((x440)*(x443)))+(((r22)*(x442)))+(((r22)*(x445)))+(((IkReal(-1.00000000000000))*(cj5)*(x443)*(x444))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst78)*(((((IkReal(-1.00000000000000))*(cj5)*(r22)*(x444)))+(((IkReal(-1.00000000000000))*(sj5)*(x443)*(x444)))+(((IkReal(-1.00000000000000))*(x442)*(x443)))+(((x441)*(x445)))+(((x441)*(x442)))+(((r22)*(x440))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst78)*(((((IkReal(-1.00000000000000))*(x440)*(x441)))+(((cj5)*(sj7)*(x441)))+(((x440)*(x443)))+(((r22)*(x442)))+(((r22)*(x445)))+(((IkReal(-1.00000000000000))*(cj5)*(x443)*(x444)))))), ((gconst78)*(((((IkReal(-1.00000000000000))*(cj5)*(r22)*(x444)))+(((IkReal(-1.00000000000000))*(sj5)*(x443)*(x444)))+(((IkReal(-1.00000000000000))*(x442)*(x443)))+(((x441)*(x445)))+(((x441)*(x442)))+(((r22)*(x440)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x447=IKcos(j4);
IkReal x448=IKsin(j4);
IkReal x449=((IkReal(1.00000000000000))*(cj7));
IkReal x450=((cj8)*(r20));
IkReal x451=((cj3)*(r02));
IkReal x452=((IkReal(1.00000000000000))*(sj7));
IkReal x453=((sj3)*(sj7));
IkReal x454=((r21)*(sj8));
IkReal x455=((IkReal(1.00000000000000))*(cj5));
IkReal x456=((cj8)*(r10));
IkReal x457=((sj5)*(x448));
IkReal x458=((sj5)*(x447));
IkReal x459=((r11)*(sj3)*(sj8));
IkReal x460=((cj3)*(cj8)*(r00));
IkReal x461=((cj3)*(r01)*(sj8));
IkReal x462=((x447)*(x455));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x452)))+(x457)+(((IkReal(-1.00000000000000))*(x462)))+(((IkReal(-1.00000000000000))*(x449)*(x450)))+(((cj7)*(x454))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x458)))+(((sj7)*(x454)))+(((IkReal(-1.00000000000000))*(x448)*(x455)))+(((IkReal(-1.00000000000000))*(x450)*(x452))));
evalcond[2]=((((r12)*(x453)))+(x458)+(((IkReal(-1.00000000000000))*(x449)*(x459)))+(((sj7)*(x451)))+(((cj7)*(x460)))+(((IkReal(-1.00000000000000))*(x449)*(x461)))+(((cj7)*(sj3)*(x456)))+(((cj5)*(x448))));
evalcond[3]=((((x453)*(x456)))+(((IkReal(-1.00000000000000))*(x452)*(x461)))+(((IkReal(-1.00000000000000))*(x452)*(x459)))+(x457)+(((IkReal(-1.00000000000000))*(x462)))+(((sj7)*(x460)))+(((IkReal(-1.00000000000000))*(x449)*(x451)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x449))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x463=((cj7)*(sj5));
IkReal x464=((r21)*(sj8));
IkReal x465=((cj5)*(cj7));
IkReal x466=((cj8)*(r20));
IkReal x467=((sj5)*(sj7));
IkReal x468=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst77)*(((((r22)*(x467)))+(((r22)*(x465)))+(((x463)*(x466)))+(((IkReal(-1.00000000000000))*(x463)*(x464)))+(((cj5)*(sj7)*(x464)))+(((IkReal(-1.00000000000000))*(x466)*(x468))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst77)*(((((r22)*(x463)))+(((IkReal(-1.00000000000000))*(x466)*(x467)))+(((IkReal(-1.00000000000000))*(r22)*(x468)))+(((x464)*(x467)))+(((IkReal(-1.00000000000000))*(x465)*(x466)))+(((x464)*(x465))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst77)*(((((r22)*(x467)))+(((r22)*(x465)))+(((x463)*(x466)))+(((IkReal(-1.00000000000000))*(x463)*(x464)))+(((cj5)*(sj7)*(x464)))+(((IkReal(-1.00000000000000))*(x466)*(x468)))))), ((gconst77)*(((((r22)*(x463)))+(((IkReal(-1.00000000000000))*(x466)*(x467)))+(((IkReal(-1.00000000000000))*(r22)*(x468)))+(((x464)*(x467)))+(((IkReal(-1.00000000000000))*(x465)*(x466)))+(((x464)*(x465)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x469=IKcos(j4);
IkReal x470=IKsin(j4);
IkReal x471=((IkReal(1.00000000000000))*(cj5));
IkReal x472=((r21)*(sj8));
IkReal x473=((IkReal(1.00000000000000))*(cj8)*(r20));
evalcond[0]=((((cj7)*(x472)))+(((sj5)*(x470)))+(((IkReal(-1.00000000000000))*(cj7)*(x473)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x469)*(x471))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj7)*(x473)))+(((IkReal(-1.00000000000000))*(sj5)*(x469)))+(((cj7)*(r22)))+(((sj7)*(x472)))+(((IkReal(-1.00000000000000))*(x470)*(x471))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst80;
IkReal x474=(cj8)*(cj8);
IkReal x475=(sj8)*(sj8);
IkReal x476=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x477=((IkReal(1.00000000000000))*(x474));
IkReal x478=((IkReal(1.00000000000000))*(x475));
gconst80=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x476)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x476)))+(((IkReal(-1.00000000000000))*(x477)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x477)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x478)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x478)*((r10)*(r10))))));
IkReal x479=(cj8)*(cj8);
IkReal x480=(sj8)*(sj8);
IkReal x481=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x482=((IkReal(1.00000000000000))*(x479));
IkReal x483=((IkReal(1.00000000000000))*(x480));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r01)*(x481)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x481)))+(((IkReal(-1.00000000000000))*(x482)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x483)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x483)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x482)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst81;
IkReal x484=(sj8)*(sj8);
IkReal x485=(cj8)*(cj8);
IkReal x486=((sj7)*(sj8));
IkReal x487=((IkReal(1.00000000000000))*(r02));
IkReal x488=((r01)*(r10));
IkReal x489=((cj8)*(sj7));
IkReal x490=((cj7)*(x484));
IkReal x491=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x492=((cj7)*(x485));
gconst81=IKsign(((((r01)*(r12)*(x489)))+(((IkReal(-1.00000000000000))*(r10)*(x486)*(x487)))+(((x488)*(x492)))+(((IkReal(-1.00000000000000))*(x490)*(x491)))+(((IkReal(-1.00000000000000))*(r11)*(x487)*(x489)))+(((x488)*(x490)))+(((r00)*(r12)*(x486)))+(((IkReal(-1.00000000000000))*(x491)*(x492)))));
IkReal x493=(sj8)*(sj8);
IkReal x494=(cj8)*(cj8);
IkReal x495=((sj7)*(sj8));
IkReal x496=((IkReal(1.00000000000000))*(r02));
IkReal x497=((r01)*(r10));
IkReal x498=((cj8)*(sj7));
IkReal x499=((cj7)*(x493));
IkReal x500=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x501=((cj7)*(x494));
dummyeval[0]=((((r01)*(r12)*(x498)))+(((IkReal(-1.00000000000000))*(r10)*(x495)*(x496)))+(((r00)*(r12)*(x495)))+(((x497)*(x501)))+(((IkReal(-1.00000000000000))*(x499)*(x500)))+(((x497)*(x499)))+(((IkReal(-1.00000000000000))*(r11)*(x496)*(x498)))+(((IkReal(-1.00000000000000))*(x500)*(x501))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x502=((cj7)*(cj8));
IkReal x503=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst81)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x503)))+(((r10)*(x502))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst81)*(((((r00)*(x502)))+(((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x503))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst81)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x503)))+(((r10)*(x502)))))), ((gconst81)*(((((r00)*(x502)))+(((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x503)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x504=IKsin(j3);
IkReal x505=IKcos(j3);
IkReal x506=((r01)*(sj8));
IkReal x507=((cj8)*(r00));
IkReal x508=((r00)*(sj8));
IkReal x509=((cj8)*(r11));
IkReal x510=((r11)*(sj8));
IkReal x511=((r10)*(sj8));
IkReal x512=((cj8)*(r10));
IkReal x513=((cj7)*(x504));
IkReal x514=((sj7)*(x505));
IkReal x515=((IkReal(1.00000000000000))*(x504));
IkReal x516=((IkReal(1.00000000000000))*(x505));
IkReal x517=((cj8)*(x504));
IkReal x518=((IkReal(1.00000000000000))*(x510));
IkReal x519=((sj7)*(x504));
IkReal x520=((cj7)*(x505));
evalcond[0]=((IkReal(-1.00000000000000))+(((r01)*(x517)))+(((x504)*(x508)))+(((IkReal(-1.00000000000000))*(x511)*(x516)))+(((IkReal(-1.00000000000000))*(x509)*(x516))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x516)))+(((IkReal(-1.00000000000000))*(x511)*(x515)))+(((IkReal(-1.00000000000000))*(x508)*(x516)))+(((IkReal(-1.00000000000000))*(x509)*(x515))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x515)))+(((x506)*(x513)))+(((x512)*(x520)))+(((IkReal(-1.00000000000000))*(cj7)*(x510)*(x516)))+(((IkReal(-1.00000000000000))*(x507)*(x513)))+(((r12)*(x514))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj7)*(r12)*(x516)))+(((x506)*(x519)))+(((IkReal(-1.00000000000000))*(sj7)*(x507)*(x515)))+(((IkReal(-1.00000000000000))*(x514)*(x518)))+(((x512)*(x514)))+(((r02)*(x513))));
evalcond[4]=((((r12)*(x519)))+(((IkReal(-1.00000000000000))*(x513)*(x518)))+(((cj5)*(sj4)))+(((x512)*(x513)))+(((r02)*(x514)))+(((x507)*(x520)))+(((IkReal(-1.00000000000000))*(cj7)*(x506)*(x516)))+(((cj4)*(sj5))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(x513)))+(((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((x507)*(x514)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x516)))+(((x512)*(x519)))+(((IkReal(-1.00000000000000))*(sj7)*(x510)*(x515)))+(((IkReal(-1.00000000000000))*(x506)*(x514))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst80)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst80)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst80)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst80)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x521=IKsin(j3);
IkReal x522=IKcos(j3);
IkReal x523=((r01)*(sj8));
IkReal x524=((cj8)*(r00));
IkReal x525=((r00)*(sj8));
IkReal x526=((cj8)*(r11));
IkReal x527=((r11)*(sj8));
IkReal x528=((r10)*(sj8));
IkReal x529=((cj8)*(r10));
IkReal x530=((cj7)*(x521));
IkReal x531=((sj7)*(x522));
IkReal x532=((IkReal(1.00000000000000))*(x521));
IkReal x533=((IkReal(1.00000000000000))*(x522));
IkReal x534=((cj8)*(x521));
IkReal x535=((IkReal(1.00000000000000))*(x527));
IkReal x536=((sj7)*(x521));
IkReal x537=((cj7)*(x522));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x528)*(x533)))+(((IkReal(-1.00000000000000))*(x526)*(x533)))+(((r01)*(x534)))+(((x521)*(x525))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x525)*(x533)))+(((IkReal(-1.00000000000000))*(x526)*(x532)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x533)))+(((IkReal(-1.00000000000000))*(x528)*(x532))));
evalcond[2]=((((r12)*(x531)))+(((x529)*(x537)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x532)))+(((IkReal(-1.00000000000000))*(cj7)*(x527)*(x533)))+(((x523)*(x530)))+(((IkReal(-1.00000000000000))*(x524)*(x530))));
evalcond[3]=((((x529)*(x531)))+(((r02)*(x530)))+(((x523)*(x536)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x533)))+(((IkReal(-1.00000000000000))*(x531)*(x535)))+(((IkReal(-1.00000000000000))*(sj7)*(x524)*(x532))));
evalcond[4]=((((cj5)*(sj4)))+(((r12)*(x536)))+(((r02)*(x531)))+(((IkReal(-1.00000000000000))*(cj7)*(x523)*(x533)))+(((x524)*(x537)))+(((IkReal(-1.00000000000000))*(x530)*(x535)))+(((cj4)*(sj5)))+(((x529)*(x530))));
evalcond[5]=((((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((x529)*(x536)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x533)))+(((IkReal(-1.00000000000000))*(x523)*(x531)))+(((IkReal(-1.00000000000000))*(sj7)*(x527)*(x532)))+(((x524)*(x531)))+(((IkReal(-1.00000000000000))*(r12)*(x530))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst75)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst75)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst75)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst75)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x538=IKsin(j3);
IkReal x539=IKcos(j3);
IkReal x540=((IkReal(1.00000000000000))*(sj8));
IkReal x541=((IkReal(1.00000000000000))*(cj8));
IkReal x542=((r01)*(sj8));
IkReal x543=((cj8)*(r10));
IkReal x544=((sj7)*(x539));
IkReal x545=((cj7)*(x538));
IkReal x546=((r00)*(x538));
IkReal x547=((sj7)*(x538));
IkReal x548=((cj7)*(x539));
evalcond[0]=((IkReal(-1.00000000000000))+(((cj8)*(r01)*(x538)))+(((IkReal(-1.00000000000000))*(r10)*(x539)*(x540)))+(((sj8)*(x546)))+(((IkReal(-1.00000000000000))*(r11)*(x539)*(x541))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x539)*(x541)))+(((IkReal(-1.00000000000000))*(r00)*(x539)*(x540)))+(((IkReal(-1.00000000000000))*(r11)*(x538)*(x541)))+(((IkReal(-1.00000000000000))*(r10)*(x538)*(x540))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(x540)*(x548)))+(((x542)*(x545)))+(((IkReal(-1.00000000000000))*(r00)*(x541)*(x545)))+(((x543)*(x548)))+(((r12)*(x544)))+(((IkReal(-1.00000000000000))*(r02)*(x547))));
evalcond[3]=((((r02)*(x545)))+(((IkReal(-1.00000000000000))*(r12)*(x548)))+(((x543)*(x544)))+(((x542)*(x547)))+(((IkReal(-1.00000000000000))*(r11)*(x540)*(x544)))+(((IkReal(-1.00000000000000))*(sj7)*(x541)*(x546))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst78;
gconst78=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst79;
gconst79=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x549=((cj3)*(cj5));
IkReal x550=((r02)*(sj7));
IkReal x551=((cj8)*(r00));
IkReal x552=((cj5)*(sj3));
IkReal x553=((cj7)*(cj8));
IkReal x554=((sj5)*(sj7));
IkReal x555=((sj3)*(sj5));
IkReal x556=((cj3)*(cj7)*(sj5));
IkReal x557=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst79)*(((((IkReal(-1.00000000000000))*(r01)*(x549)*(x557)))+(((IkReal(-1.00000000000000))*(r22)*(x554)))+(((x549)*(x550)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x553)))+(((cj7)*(x549)*(x551)))+(((r12)*(sj7)*(x552)))+(((IkReal(-1.00000000000000))*(r11)*(x552)*(x557)))+(((r10)*(x552)*(x553)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst79)*(((((cj3)*(sj5)*(x550)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x557)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x556)))+(((IkReal(-1.00000000000000))*(r11)*(x555)*(x557)))+(((cj5)*(r20)*(x553)))+(((r10)*(x553)*(x555)))+(((r12)*(sj3)*(x554)))+(((cj5)*(r22)*(sj7)))+(((x551)*(x556))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst79)*(((((IkReal(-1.00000000000000))*(r01)*(x549)*(x557)))+(((IkReal(-1.00000000000000))*(r22)*(x554)))+(((x549)*(x550)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x553)))+(((cj7)*(x549)*(x551)))+(((r12)*(sj7)*(x552)))+(((IkReal(-1.00000000000000))*(r11)*(x552)*(x557)))+(((r10)*(x552)*(x553)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst79)*(((((cj3)*(sj5)*(x550)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x557)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x556)))+(((IkReal(-1.00000000000000))*(r11)*(x555)*(x557)))+(((cj5)*(r20)*(x553)))+(((r10)*(x553)*(x555)))+(((r12)*(sj3)*(x554)))+(((cj5)*(r22)*(sj7)))+(((x551)*(x556)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x558=IKcos(j4);
IkReal x559=IKsin(j4);
IkReal x560=((IkReal(1.00000000000000))*(cj7));
IkReal x561=((cj8)*(r20));
IkReal x562=((cj3)*(r02));
IkReal x563=((IkReal(1.00000000000000))*(sj7));
IkReal x564=((sj3)*(sj7));
IkReal x565=((r21)*(sj8));
IkReal x566=((IkReal(1.00000000000000))*(cj5));
IkReal x567=((cj8)*(r10));
IkReal x568=((sj5)*(x559));
IkReal x569=((sj5)*(x558));
IkReal x570=((r11)*(sj3)*(sj8));
IkReal x571=((cj3)*(cj8)*(r00));
IkReal x572=((cj3)*(r01)*(sj8));
IkReal x573=((x558)*(x566));
evalcond[0]=((x568)+(((IkReal(-1.00000000000000))*(r22)*(x563)))+(((IkReal(-1.00000000000000))*(x560)*(x561)))+(((IkReal(-1.00000000000000))*(x573)))+(((cj7)*(x565))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x569)))+(((cj7)*(r22)))+(((sj7)*(x565)))+(((IkReal(-1.00000000000000))*(x561)*(x563)))+(((IkReal(-1.00000000000000))*(x559)*(x566))));
evalcond[2]=((((r12)*(x564)))+(((cj7)*(x571)))+(x569)+(((sj7)*(x562)))+(((cj5)*(x559)))+(((IkReal(-1.00000000000000))*(x560)*(x572)))+(((IkReal(-1.00000000000000))*(x560)*(x570)))+(((cj7)*(sj3)*(x567))));
evalcond[3]=((((sj7)*(x571)))+(((IkReal(-1.00000000000000))*(x563)*(x570)))+(((IkReal(-1.00000000000000))*(x563)*(x572)))+(x568)+(((x564)*(x567)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x560)))+(((IkReal(-1.00000000000000))*(x573)))+(((IkReal(-1.00000000000000))*(x560)*(x562))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x574=((cj7)*(sj5));
IkReal x575=((r21)*(sj8));
IkReal x576=((cj5)*(cj7));
IkReal x577=((cj8)*(r20));
IkReal x578=((IkReal(1.00000000000000))*(sj7));
IkReal x579=((sj5)*(sj7));
IkReal x580=((IkReal(1.00000000000000))*(cj5)*(x577));
if( IKabs(((gconst78)*(((((r22)*(x576)))+(((IkReal(-1.00000000000000))*(x574)*(x575)))+(((cj5)*(sj7)*(x575)))+(((r22)*(x579)))+(((IkReal(-1.00000000000000))*(cj5)*(x577)*(x578)))+(((x574)*(x577))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst78)*(((((r22)*(x574)))+(((x575)*(x576)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)*(x578)))+(((IkReal(-1.00000000000000))*(x576)*(x577)))+(((x575)*(x579)))+(((IkReal(-1.00000000000000))*(sj5)*(x577)*(x578))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst78)*(((((r22)*(x576)))+(((IkReal(-1.00000000000000))*(x574)*(x575)))+(((cj5)*(sj7)*(x575)))+(((r22)*(x579)))+(((IkReal(-1.00000000000000))*(cj5)*(x577)*(x578)))+(((x574)*(x577)))))), ((gconst78)*(((((r22)*(x574)))+(((x575)*(x576)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)*(x578)))+(((IkReal(-1.00000000000000))*(x576)*(x577)))+(((x575)*(x579)))+(((IkReal(-1.00000000000000))*(sj5)*(x577)*(x578)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x581=IKcos(j4);
IkReal x582=IKsin(j4);
IkReal x583=((IkReal(1.00000000000000))*(cj7));
IkReal x584=((cj8)*(r20));
IkReal x585=((cj3)*(r02));
IkReal x586=((IkReal(1.00000000000000))*(sj7));
IkReal x587=((sj3)*(sj7));
IkReal x588=((r21)*(sj8));
IkReal x589=((IkReal(1.00000000000000))*(cj5));
IkReal x590=((cj8)*(r10));
IkReal x591=((sj5)*(x582));
IkReal x592=((sj5)*(x581));
IkReal x593=((r11)*(sj3)*(sj8));
IkReal x594=((cj3)*(cj8)*(r00));
IkReal x595=((cj3)*(r01)*(sj8));
IkReal x596=((x581)*(x589));
evalcond[0]=((((IkReal(-1.00000000000000))*(x596)))+(((IkReal(-1.00000000000000))*(x583)*(x584)))+(((IkReal(-1.00000000000000))*(r22)*(x586)))+(x591)+(((cj7)*(x588))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x592)))+(((IkReal(-1.00000000000000))*(x584)*(x586)))+(((IkReal(-1.00000000000000))*(x582)*(x589)))+(((cj7)*(r22)))+(((sj7)*(x588))));
evalcond[2]=((((cj5)*(x582)))+(((sj7)*(x585)))+(((cj7)*(sj3)*(x590)))+(((cj7)*(x594)))+(((r12)*(x587)))+(((IkReal(-1.00000000000000))*(x583)*(x593)))+(((IkReal(-1.00000000000000))*(x583)*(x595)))+(x592));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x583)))+(((IkReal(-1.00000000000000))*(x596)))+(((IkReal(-1.00000000000000))*(x586)*(x593)))+(((sj7)*(x594)))+(((IkReal(-1.00000000000000))*(x583)*(x585)))+(((IkReal(-1.00000000000000))*(x586)*(x595)))+(((x587)*(x590)))+(x591));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x597=((IkReal(4.00000000000000))*(npx));
IkReal x598=((IkReal(4.00000000000000))*(npy));
if( IKabs(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.0800000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(sj8)*(x597)))+(((IkReal(-1.00000000000000))*(cj8)*(x598)))+(((IkReal(-0.320000000000000))*(cj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((cj7)*(cj8)*(x597)))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x598))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.0800000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(sj8)*(x597)))+(((IkReal(-1.00000000000000))*(cj8)*(x598)))+(((IkReal(-0.320000000000000))*(cj6)))))))+IKsqr(((IkReal(-0.920000000000000))+(((cj7)*(cj8)*(x597)))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x598)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.0800000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(sj8)*(x597)))+(((IkReal(-1.00000000000000))*(cj8)*(x598)))+(((IkReal(-0.320000000000000))*(cj6)))))), ((IkReal(-0.920000000000000))+(((cj7)*(cj8)*(x597)))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x598)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x599=IKsin(j5);
IkReal x600=((IkReal(1.00000000000000))*(sj7));
IkReal x601=((npy)*(sj8));
IkReal x602=((cj8)*(npx));
IkReal x603=((IkReal(0.250000000000000))*(x599));
evalcond[0]=((((IkReal(0.0800000000000000))*(cj6)))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((sj6)*(x603)))+(((IkReal(-0.0200000000000000))*(sj6))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((cj7)*(x601)))+(((IkReal(-1.00000000000000))*(npz)*(x600)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x602))));
evalcond[2]=((((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x600)*(x602)))+(((IkReal(-1.00000000000000))*(cj6)*(x603)))+(((IkReal(0.0800000000000000))*(sj6)))+(((IkReal(0.0200000000000000))*(cj6)))+(((sj7)*(x601)))+(((IkReal(0.0800000000000000))*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5))))));
dummyeval[0]=((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x604=(cj8)*(cj8);
IkReal x605=(sj8)*(sj8);
IkReal x606=((r00)*(r11));
IkReal x607=((r02)*(sj7));
IkReal x608=((cj7)*(x604));
IkReal x609=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x610=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x611=((cj7)*(x605));
gconst2=IKsign(((((x606)*(x611)))+(((cj8)*(r11)*(x607)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x609)))+(((IkReal(-1.00000000000000))*(x610)*(x611)))+(((IkReal(-1.00000000000000))*(x608)*(x610)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x609)))+(((x606)*(x608)))+(((r10)*(sj8)*(x607)))));
IkReal x612=(cj8)*(cj8);
IkReal x613=(sj8)*(sj8);
IkReal x614=((r00)*(r11));
IkReal x615=((r02)*(sj7));
IkReal x616=((cj7)*(x612));
IkReal x617=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x618=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x619=((cj7)*(x613));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x617)))+(((IkReal(-1.00000000000000))*(x618)*(x619)))+(((r10)*(sj8)*(x615)))+(((cj8)*(r11)*(x615)))+(((x614)*(x619)))+(((x614)*(x616)))+(((IkReal(-1.00000000000000))*(x616)*(x618)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x617))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x620=((IkReal(1.00000000000000))*(sj7));
IkReal x621=((npy)*(sj8));
IkReal x622=((cj8)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x620)))+(((IkReal(0.0800000000000000))*(cj7)))+(((cj7)*(x621)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(cj7)*(x622))));
evalcond[3]=((((cj7)*(r22)))+(((r21)*(sj7)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x620))));
evalcond[4]=((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x620)*(x622)))+(((sj7)*(x621)))+(((cj7)*(npz)))+(((IkReal(0.0800000000000000))*(sj7))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
IkReal x623=(sj8)*(sj8);
IkReal x624=(cj8)*(cj8);
IkReal x625=((cj7)*(r02));
IkReal x626=((IkReal(1.00000000000000))*(r00));
IkReal x627=((r11)*(sj7));
IkReal x628=((cj7)*(r12));
IkReal x629=((r01)*(r10)*(sj7));
gconst18=IKsign(((((IkReal(-1.00000000000000))*(x623)*(x626)*(x627)))+(((x624)*(x629)))+(((IkReal(-1.00000000000000))*(x624)*(x626)*(x627)))+(((r10)*(sj8)*(x625)))+(((x623)*(x629)))+(((IkReal(-1.00000000000000))*(sj8)*(x626)*(x628)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x628)))+(((cj8)*(r11)*(x625)))));
IkReal x630=(sj8)*(sj8);
IkReal x631=(cj8)*(cj8);
IkReal x632=((cj7)*(r02));
IkReal x633=((IkReal(1.00000000000000))*(r00));
IkReal x634=((r11)*(sj7));
IkReal x635=((cj7)*(r12));
IkReal x636=((r01)*(r10)*(sj7));
dummyeval[0]=((((IkReal(-1.00000000000000))*(sj8)*(x633)*(x635)))+(((x631)*(x636)))+(((IkReal(-1.00000000000000))*(x630)*(x633)*(x634)))+(((IkReal(-1.00000000000000))*(x631)*(x633)*(x634)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x635)))+(((r10)*(sj8)*(x632)))+(((cj8)*(r11)*(x632)))+(((x630)*(x636))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
IkReal x637=(cj7)*(cj7);
IkReal x638=(sj7)*(sj7);
IkReal x639=((r02)*(r11));
IkReal x640=((sj8)*(x638));
IkReal x641=((cj8)*(r00)*(r12));
IkReal x642=((IkReal(1.00000000000000))*(r01)*(r12));
IkReal x643=((sj8)*(x637));
IkReal x644=((IkReal(1.00000000000000))*(cj8)*(r02)*(r10));
gconst19=IKsign(((((IkReal(-1.00000000000000))*(x638)*(x644)))+(((x639)*(x640)))+(((IkReal(-1.00000000000000))*(x640)*(x642)))+(((x639)*(x643)))+(((x637)*(x641)))+(((x638)*(x641)))+(((IkReal(-1.00000000000000))*(x642)*(x643)))+(((IkReal(-1.00000000000000))*(x637)*(x644)))));
IkReal x645=(cj7)*(cj7);
IkReal x646=(sj7)*(sj7);
IkReal x647=((r02)*(r11));
IkReal x648=((sj8)*(x646));
IkReal x649=((cj8)*(r00)*(r12));
IkReal x650=((IkReal(1.00000000000000))*(r01)*(r12));
IkReal x651=((sj8)*(x645));
IkReal x652=x644;
dummyeval[0]=((((x647)*(x648)))+(((IkReal(-1.00000000000000))*(x645)*(x652)))+(((x646)*(x649)))+(((x647)*(x651)))+(((x645)*(x649)))+(((IkReal(-1.00000000000000))*(x650)*(x651)))+(((IkReal(-1.00000000000000))*(x648)*(x650)))+(((IkReal(-1.00000000000000))*(x646)*(x652))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x653=((cj7)*(cj8));
IkReal x654=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst19)*(((((r10)*(x653)))+(((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x654))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(r01)*(x654)))+(((r02)*(sj7)))+(((r00)*(x653))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst19)*(((((r10)*(x653)))+(((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x654)))))), ((gconst19)*(((((IkReal(-1.00000000000000))*(r01)*(x654)))+(((r02)*(sj7)))+(((r00)*(x653)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x655=IKsin(j3);
IkReal x656=IKcos(j3);
IkReal x657=((r01)*(sj8));
IkReal x658=((cj8)*(sj7));
IkReal x659=((IkReal(1.00000000000000))*(sj7));
IkReal x660=((IkReal(1.00000000000000))*(r12));
IkReal x661=((r11)*(sj8));
IkReal x662=((IkReal(1.00000000000000))*(r00));
IkReal x663=((cj7)*(x655));
IkReal x664=((r10)*(x656));
IkReal x665=((IkReal(1.00000000000000))*(cj7)*(x656));
evalcond[0]=((((r00)*(sj8)*(x655)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x656)))+(((cj8)*(r01)*(x655)))+(((IkReal(-1.00000000000000))*(sj8)*(x664))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(x662)*(x663)))+(((r12)*(sj7)*(x656)))+(((cj7)*(cj8)*(x664)))+(((IkReal(-1.00000000000000))*(r02)*(x655)*(x659)))+(((x657)*(x663)))+(((IkReal(-1.00000000000000))*(x661)*(x665))));
evalcond[2]=((IkReal(1.00000000000000))+(((x658)*(x664)))+(((r02)*(x663)))+(((IkReal(-1.00000000000000))*(cj7)*(x656)*(x660)))+(((IkReal(-1.00000000000000))*(x656)*(x659)*(x661)))+(((sj7)*(x655)*(x657)))+(((IkReal(-1.00000000000000))*(x655)*(x658)*(x662))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(x665)))+(((r00)*(x656)*(x658)))+(((IkReal(-1.00000000000000))*(x655)*(x659)*(x661)))+(((IkReal(-1.00000000000000))*(x660)*(x663)))+(((IkReal(-1.00000000000000))*(x656)*(x657)*(x659)))+(((r10)*(x655)*(x658))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
gconst22=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x666=((cj8)*(sj5));
IkReal x667=((cj3)*(r01));
IkReal x668=((IkReal(1.00000000000000))*(cj5));
IkReal x669=((r11)*(sj3));
IkReal x670=((sj5)*(sj8));
IkReal x671=((r10)*(sj3));
IkReal x672=((cj3)*(r00)*(sj8));
if( IKabs(((gconst22)*(((((x670)*(x671)))+(((cj5)*(cj8)*(r21)))+(((x666)*(x669)))+(((cj3)*(r00)*(x670)))+(((x666)*(x667)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((IkReal(-1.00000000000000))*(x668)*(x672)))+(((IkReal(-1.00000000000000))*(sj8)*(x668)*(x671)))+(((r20)*(x670)))+(((IkReal(-1.00000000000000))*(cj8)*(x667)*(x668)))+(((r21)*(x666)))+(((IkReal(-1.00000000000000))*(cj8)*(x668)*(x669))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst22)*(((((x670)*(x671)))+(((cj5)*(cj8)*(r21)))+(((x666)*(x669)))+(((cj3)*(r00)*(x670)))+(((x666)*(x667)))+(((cj5)*(r20)*(sj8)))))), ((gconst22)*(((((IkReal(-1.00000000000000))*(x668)*(x672)))+(((IkReal(-1.00000000000000))*(sj8)*(x668)*(x671)))+(((r20)*(x670)))+(((IkReal(-1.00000000000000))*(cj8)*(x667)*(x668)))+(((r21)*(x666)))+(((IkReal(-1.00000000000000))*(cj8)*(x668)*(x669)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x673=IKsin(j4);
IkReal x674=IKcos(j4);
IkReal x675=((IkReal(1.00000000000000))*(cj8));
IkReal x676=((cj3)*(r01));
IkReal x677=((cj3)*(r00));
IkReal x678=((cj7)*(cj8));
IkReal x679=((IkReal(1.00000000000000))*(cj5));
IkReal x680=((IkReal(1.00000000000000))*(sj8));
IkReal x681=((r11)*(sj3));
IkReal x682=((r10)*(sj3));
IkReal x683=((sj5)*(x673));
IkReal x684=((sj5)*(x674));
IkReal x685=((x674)*(x679));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x673)*(x679)))+(((IkReal(-1.00000000000000))*(x684))));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x685)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x675)))+(x683));
evalcond[2]=((((IkReal(-1.00000000000000))*(x677)*(x680)))+(((IkReal(-1.00000000000000))*(x675)*(x676)))+(((IkReal(-1.00000000000000))*(x675)*(x681)))+(((IkReal(-1.00000000000000))*(x685)))+(x683)+(((IkReal(-1.00000000000000))*(x680)*(x682))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x676)*(x680)))+(((r12)*(sj3)*(sj7)))+(((cj5)*(x673)))+(((IkReal(-1.00000000000000))*(cj7)*(x680)*(x681)))+(((x677)*(x678)))+(x684)+(((x678)*(x682))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x686=((cj8)*(sj5));
IkReal x687=((cj7)*(r20));
IkReal x688=((IkReal(1.00000000000000))*(cj5));
IkReal x689=((r22)*(sj7));
IkReal x690=((r20)*(sj8));
IkReal x691=((cj7)*(r21)*(sj8));
if( IKabs(((gconst21)*(((((cj5)*(x690)))+(((sj5)*(x689)))+(((cj5)*(cj8)*(r21)))+(((IkReal(-1.00000000000000))*(sj5)*(x691)))+(((x686)*(x687))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((cj5)*(x691)))+(((r21)*(x686)))+(((IkReal(-1.00000000000000))*(cj8)*(x687)*(x688)))+(((IkReal(-1.00000000000000))*(x688)*(x689)))+(((sj5)*(x690))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst21)*(((((cj5)*(x690)))+(((sj5)*(x689)))+(((cj5)*(cj8)*(r21)))+(((IkReal(-1.00000000000000))*(sj5)*(x691)))+(((x686)*(x687)))))), ((gconst21)*(((((cj5)*(x691)))+(((r21)*(x686)))+(((IkReal(-1.00000000000000))*(cj8)*(x687)*(x688)))+(((IkReal(-1.00000000000000))*(x688)*(x689)))+(((sj5)*(x690)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x692=IKsin(j4);
IkReal x693=IKcos(j4);
IkReal x694=((IkReal(1.00000000000000))*(cj8));
IkReal x695=((cj3)*(r01));
IkReal x696=((cj3)*(r00));
IkReal x697=((cj7)*(cj8));
IkReal x698=((IkReal(1.00000000000000))*(cj5));
IkReal x699=((IkReal(1.00000000000000))*(sj8));
IkReal x700=((r11)*(sj3));
IkReal x701=((r10)*(sj3));
IkReal x702=((sj5)*(x692));
IkReal x703=((sj5)*(x693));
IkReal x704=((x693)*(x698));
evalcond[0]=((((IkReal(-1.00000000000000))*(x703)))+(((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x692)*(x698))));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x694)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x702)+(((IkReal(-1.00000000000000))*(x704))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x699)*(x701)))+(((IkReal(-1.00000000000000))*(x694)*(x695)))+(((IkReal(-1.00000000000000))*(x694)*(x700)))+(x702)+(((IkReal(-1.00000000000000))*(x704)))+(((IkReal(-1.00000000000000))*(x696)*(x699))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x699)*(x700)))+(((r12)*(sj3)*(sj7)))+(((x696)*(x697)))+(((IkReal(-1.00000000000000))*(cj7)*(x695)*(x699)))+(((x697)*(x701)))+(x703)+(((cj5)*(x692))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x705=((IkReal(1.00000000000000))*(cj8));
IkReal x706=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r11)*(x705)))+(((IkReal(-1.00000000000000))*(r10)*(x706))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r00)*(x706)))+(((IkReal(-1.00000000000000))*(r01)*(x705))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst18)*(((((IkReal(-1.00000000000000))*(r11)*(x705)))+(((IkReal(-1.00000000000000))*(r10)*(x706)))))), ((gconst18)*(((((IkReal(-1.00000000000000))*(r00)*(x706)))+(((IkReal(-1.00000000000000))*(r01)*(x705)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x707=IKsin(j3);
IkReal x708=IKcos(j3);
IkReal x709=((r01)*(sj8));
IkReal x710=((cj8)*(sj7));
IkReal x711=((IkReal(1.00000000000000))*(sj7));
IkReal x712=((IkReal(1.00000000000000))*(r12));
IkReal x713=((r11)*(sj8));
IkReal x714=((IkReal(1.00000000000000))*(r00));
IkReal x715=((cj7)*(x707));
IkReal x716=((r10)*(x708));
IkReal x717=((IkReal(1.00000000000000))*(cj7)*(x708));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x708)))+(((IkReal(-1.00000000000000))*(sj8)*(x716)))+(((r00)*(sj8)*(x707)))+(((cj8)*(r01)*(x707))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x713)*(x717)))+(((IkReal(-1.00000000000000))*(cj8)*(x714)*(x715)))+(((cj7)*(cj8)*(x716)))+(((r12)*(sj7)*(x708)))+(((x709)*(x715)))+(((IkReal(-1.00000000000000))*(r02)*(x707)*(x711))));
evalcond[2]=((IkReal(1.00000000000000))+(((r02)*(x715)))+(((x710)*(x716)))+(((IkReal(-1.00000000000000))*(x707)*(x710)*(x714)))+(((IkReal(-1.00000000000000))*(x708)*(x711)*(x713)))+(((sj7)*(x707)*(x709)))+(((IkReal(-1.00000000000000))*(cj7)*(x708)*(x712))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x707)*(x711)*(x713)))+(((IkReal(-1.00000000000000))*(r02)*(x717)))+(((IkReal(-1.00000000000000))*(x712)*(x715)))+(((r10)*(x707)*(x710)))+(((IkReal(-1.00000000000000))*(x708)*(x709)*(x711)))+(((r00)*(x708)*(x710))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
gconst22=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x718=((cj8)*(sj5));
IkReal x719=((cj3)*(r01));
IkReal x720=((IkReal(1.00000000000000))*(cj5));
IkReal x721=((r11)*(sj3));
IkReal x722=((sj5)*(sj8));
IkReal x723=((r10)*(sj3));
IkReal x724=((cj3)*(r00)*(sj8));
if( IKabs(((gconst22)*(((((cj3)*(r00)*(x722)))+(((x718)*(x721)))+(((cj5)*(cj8)*(r21)))+(((x722)*(x723)))+(((x718)*(x719)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((r21)*(x718)))+(((IkReal(-1.00000000000000))*(x720)*(x724)))+(((IkReal(-1.00000000000000))*(sj8)*(x720)*(x723)))+(((r20)*(x722)))+(((IkReal(-1.00000000000000))*(cj8)*(x719)*(x720)))+(((IkReal(-1.00000000000000))*(cj8)*(x720)*(x721))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst22)*(((((cj3)*(r00)*(x722)))+(((x718)*(x721)))+(((cj5)*(cj8)*(r21)))+(((x722)*(x723)))+(((x718)*(x719)))+(((cj5)*(r20)*(sj8)))))), ((gconst22)*(((((r21)*(x718)))+(((IkReal(-1.00000000000000))*(x720)*(x724)))+(((IkReal(-1.00000000000000))*(sj8)*(x720)*(x723)))+(((r20)*(x722)))+(((IkReal(-1.00000000000000))*(cj8)*(x719)*(x720)))+(((IkReal(-1.00000000000000))*(cj8)*(x720)*(x721)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x725=IKsin(j4);
IkReal x726=IKcos(j4);
IkReal x727=((IkReal(1.00000000000000))*(cj8));
IkReal x728=((cj3)*(r01));
IkReal x729=((cj3)*(r00));
IkReal x730=((cj7)*(cj8));
IkReal x731=((IkReal(1.00000000000000))*(cj5));
IkReal x732=((IkReal(1.00000000000000))*(sj8));
IkReal x733=((r11)*(sj3));
IkReal x734=((r10)*(sj3));
IkReal x735=((sj5)*(x725));
IkReal x736=((sj5)*(x726));
IkReal x737=((x726)*(x731));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x725)*(x731)))+(((IkReal(-1.00000000000000))*(x736))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x727)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x737)))+(x735));
evalcond[2]=((((IkReal(-1.00000000000000))*(x727)*(x733)))+(((IkReal(-1.00000000000000))*(x729)*(x732)))+(((IkReal(-1.00000000000000))*(x737)))+(x735)+(((IkReal(-1.00000000000000))*(x732)*(x734)))+(((IkReal(-1.00000000000000))*(x727)*(x728))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x730)*(x734)))+(((x729)*(x730)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x728)*(x732)))+(x736)+(((IkReal(-1.00000000000000))*(cj7)*(x732)*(x733)))+(((cj5)*(x725))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x738=((cj8)*(sj5));
IkReal x739=((cj7)*(r20));
IkReal x740=((IkReal(1.00000000000000))*(cj5));
IkReal x741=((r22)*(sj7));
IkReal x742=((r20)*(sj8));
IkReal x743=((cj7)*(r21)*(sj8));
if( IKabs(((gconst21)*(((((cj5)*(x742)))+(((cj5)*(cj8)*(r21)))+(((sj5)*(x741)))+(((IkReal(-1.00000000000000))*(sj5)*(x743)))+(((x738)*(x739))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((r21)*(x738)))+(((IkReal(-1.00000000000000))*(x740)*(x741)))+(((IkReal(-1.00000000000000))*(cj8)*(x739)*(x740)))+(((cj5)*(x743)))+(((sj5)*(x742))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst21)*(((((cj5)*(x742)))+(((cj5)*(cj8)*(r21)))+(((sj5)*(x741)))+(((IkReal(-1.00000000000000))*(sj5)*(x743)))+(((x738)*(x739)))))), ((gconst21)*(((((r21)*(x738)))+(((IkReal(-1.00000000000000))*(x740)*(x741)))+(((IkReal(-1.00000000000000))*(cj8)*(x739)*(x740)))+(((cj5)*(x743)))+(((sj5)*(x742)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x744=IKsin(j4);
IkReal x745=IKcos(j4);
IkReal x746=((IkReal(1.00000000000000))*(cj8));
IkReal x747=((cj3)*(r01));
IkReal x748=((cj3)*(r00));
IkReal x749=((cj7)*(cj8));
IkReal x750=((IkReal(1.00000000000000))*(cj5));
IkReal x751=((IkReal(1.00000000000000))*(sj8));
IkReal x752=((r11)*(sj3));
IkReal x753=((r10)*(sj3));
IkReal x754=((sj5)*(x744));
IkReal x755=((sj5)*(x745));
IkReal x756=((x745)*(x750));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x755)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x744)*(x750))));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x756)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x746)))+(x754));
evalcond[2]=((((IkReal(-1.00000000000000))*(x751)*(x753)))+(((IkReal(-1.00000000000000))*(x756)))+(((IkReal(-1.00000000000000))*(x746)*(x747)))+(((IkReal(-1.00000000000000))*(x748)*(x751)))+(x754)+(((IkReal(-1.00000000000000))*(x746)*(x752))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x747)*(x751)))+(((r12)*(sj3)*(sj7)))+(((cj5)*(x744)))+(((x748)*(x749)))+(((x749)*(x753)))+(x755)+(((IkReal(-1.00000000000000))*(cj7)*(x751)*(x752))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x757=((sj5)*(sj8));
IkReal x758=((IkReal(1.00000000000000))*(cj7));
IkReal x759=((cj8)*(sj5));
IkReal x760=((r22)*(sj7));
IkReal x761=((cj5)*(cj8));
IkReal x762=((cj5)*(sj8));
if( IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(r21)*(x757)*(x758)))+(((cj7)*(r20)*(x759)))+(((r20)*(x762)))+(((sj5)*(x760)))+(((r21)*(x761))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(r20)*(x758)*(x761)))+(((r21)*(x759)))+(((IkReal(-1.00000000000000))*(cj5)*(x760)))+(((r20)*(x757)))+(((cj7)*(r21)*(x762))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst20)*(((((IkReal(-1.00000000000000))*(r21)*(x757)*(x758)))+(((cj7)*(r20)*(x759)))+(((r20)*(x762)))+(((sj5)*(x760)))+(((r21)*(x761)))))), ((gconst20)*(((((IkReal(-1.00000000000000))*(r20)*(x758)*(x761)))+(((r21)*(x759)))+(((IkReal(-1.00000000000000))*(cj5)*(x760)))+(((r20)*(x757)))+(((cj7)*(r21)*(x762)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x763=IKsin(j4);
IkReal x764=IKcos(j4);
IkReal x765=((IkReal(1.00000000000000))*(cj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(x763)*(x765)))+(((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(sj5)*(x764))));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((sj5)*(x763)))+(((IkReal(-1.00000000000000))*(x764)*(x765)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(r20))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst24;
IkReal x766=(sj8)*(sj8);
IkReal x767=(cj8)*(cj8);
IkReal x768=((cj7)*(r02));
IkReal x769=((IkReal(1.00000000000000))*(r00));
IkReal x770=((r11)*(sj7));
IkReal x771=((cj7)*(r12));
IkReal x772=((r01)*(r10)*(sj7));
gconst24=IKsign(((((x766)*(x772)))+(((IkReal(-1.00000000000000))*(sj8)*(x769)*(x771)))+(((cj8)*(r11)*(x768)))+(((IkReal(-1.00000000000000))*(x767)*(x769)*(x770)))+(((x767)*(x772)))+(((r10)*(sj8)*(x768)))+(((IkReal(-1.00000000000000))*(x766)*(x769)*(x770)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x771)))));
IkReal x773=(sj8)*(sj8);
IkReal x774=(cj8)*(cj8);
IkReal x775=((cj7)*(r02));
IkReal x776=((IkReal(1.00000000000000))*(r00));
IkReal x777=((r11)*(sj7));
IkReal x778=((cj7)*(r12));
IkReal x779=((r01)*(r10)*(sj7));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x773)*(x776)*(x777)))+(((cj8)*(r11)*(x775)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x778)))+(((IkReal(-1.00000000000000))*(x774)*(x776)*(x777)))+(((IkReal(-1.00000000000000))*(sj8)*(x776)*(x778)))+(((x774)*(x779)))+(((x773)*(x779)))+(((r10)*(sj8)*(x775))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst23;
IkReal x780=(cj8)*(cj8);
IkReal x781=(sj8)*(sj8);
IkReal x782=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x783=((IkReal(1.00000000000000))*(x780));
IkReal x784=((IkReal(1.00000000000000))*(x781));
gconst23=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x782)))+(((IkReal(-1.00000000000000))*(x783)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x782)))+(((IkReal(-1.00000000000000))*(x784)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x783)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x784)*((r10)*(r10))))));
IkReal x785=(cj8)*(cj8);
IkReal x786=(sj8)*(sj8);
IkReal x787=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x788=((IkReal(1.00000000000000))*(x785));
IkReal x789=((IkReal(1.00000000000000))*(x786));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x789)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x787)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x787)))+(((IkReal(-1.00000000000000))*(x788)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x789)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x788)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x790=((cj8)*(r01));
IkReal x791=((cj4)*(cj5));
IkReal x792=((r10)*(sj8));
IkReal x793=((cj8)*(r11));
IkReal x794=((r00)*(sj8));
IkReal x795=((IkReal(1.00000000000000))*(sj4)*(sj5));
if( IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(x793)*(x795)))+(((x791)*(x793)))+(((IkReal(-1.00000000000000))*(x792)*(x795)))+(((x791)*(x792))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((x791)*(x794)))+(((IkReal(-1.00000000000000))*(x790)*(x795)))+(((x790)*(x791)))+(((IkReal(-1.00000000000000))*(x794)*(x795))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst23)*(((((IkReal(-1.00000000000000))*(x793)*(x795)))+(((x791)*(x793)))+(((IkReal(-1.00000000000000))*(x792)*(x795)))+(((x791)*(x792)))))), ((gconst23)*(((((x791)*(x794)))+(((IkReal(-1.00000000000000))*(x790)*(x795)))+(((x790)*(x791)))+(((IkReal(-1.00000000000000))*(x794)*(x795)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x796=IKsin(j3);
IkReal x797=IKcos(j3);
IkReal x798=((r01)*(sj8));
IkReal x799=((cj8)*(r00));
IkReal x800=((r00)*(sj8));
IkReal x801=((cj8)*(r11));
IkReal x802=((r11)*(sj8));
IkReal x803=((r10)*(sj8));
IkReal x804=((cj8)*(r10));
IkReal x805=((cj7)*(x796));
IkReal x806=((sj7)*(x797));
IkReal x807=((IkReal(1.00000000000000))*(x796));
IkReal x808=((IkReal(1.00000000000000))*(x797));
IkReal x809=((cj8)*(x796));
IkReal x810=((IkReal(1.00000000000000))*(x802));
IkReal x811=((sj7)*(x796));
IkReal x812=((cj7)*(x797));
evalcond[0]=((((IkReal(-1.00000000000000))*(x801)*(x808)))+(((r01)*(x809)))+(((x796)*(x800)))+(((IkReal(-1.00000000000000))*(x803)*(x808))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x803)*(x807)))+(((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(x801)*(x807)))+(((IkReal(-1.00000000000000))*(x800)*(x808)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x808))));
evalcond[2]=((((x798)*(x805)))+(((IkReal(-1.00000000000000))*(cj7)*(x802)*(x808)))+(((x804)*(x812)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x807)))+(((r12)*(x806)))+(((IkReal(-1.00000000000000))*(x799)*(x805))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj7)*(x799)*(x807)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x808)))+(((x804)*(x806)))+(((IkReal(-1.00000000000000))*(x806)*(x810)))+(((r02)*(x805)))+(((x798)*(x811))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x805)*(x810)))+(((cj5)*(sj4)))+(((x804)*(x805)))+(((r02)*(x806)))+(((r12)*(x811)))+(((IkReal(-1.00000000000000))*(cj7)*(x798)*(x808)))+(((x799)*(x812)))+(((cj4)*(sj5))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x798)*(x806)))+(((x799)*(x806)))+(((IkReal(-1.00000000000000))*(sj7)*(x802)*(x807)))+(((x804)*(x811)))+(((IkReal(-1.00000000000000))*(r12)*(x805)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x808))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x813=((IkReal(1.00000000000000))*(cj8));
IkReal x814=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r10)*(x814)))+(((IkReal(-1.00000000000000))*(r11)*(x813))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r01)*(x813)))+(((IkReal(-1.00000000000000))*(r00)*(x814))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst24)*(((((IkReal(-1.00000000000000))*(r10)*(x814)))+(((IkReal(-1.00000000000000))*(r11)*(x813)))))), ((gconst24)*(((((IkReal(-1.00000000000000))*(r01)*(x813)))+(((IkReal(-1.00000000000000))*(r00)*(x814)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x815=IKsin(j3);
IkReal x816=IKcos(j3);
IkReal x817=((r01)*(sj8));
IkReal x818=((cj8)*(r00));
IkReal x819=((r00)*(sj8));
IkReal x820=((cj8)*(r11));
IkReal x821=((r11)*(sj8));
IkReal x822=((r10)*(sj8));
IkReal x823=((cj8)*(r10));
IkReal x824=((cj7)*(x815));
IkReal x825=((sj7)*(x816));
IkReal x826=((IkReal(1.00000000000000))*(x815));
IkReal x827=((IkReal(1.00000000000000))*(x816));
IkReal x828=((cj8)*(x815));
IkReal x829=((IkReal(1.00000000000000))*(x821));
IkReal x830=((sj7)*(x815));
IkReal x831=((cj7)*(x816));
evalcond[0]=((((x815)*(x819)))+(((IkReal(-1.00000000000000))*(x820)*(x827)))+(((IkReal(-1.00000000000000))*(x822)*(x827)))+(((r01)*(x828))));
evalcond[1]=((((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x827)))+(((IkReal(-1.00000000000000))*(x820)*(x826)))+(((IkReal(-1.00000000000000))*(x822)*(x826)))+(((IkReal(-1.00000000000000))*(x819)*(x827))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x818)*(x824)))+(((r12)*(x825)))+(((x817)*(x824)))+(((IkReal(-1.00000000000000))*(cj7)*(x821)*(x827)))+(((x823)*(x831)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x826))));
evalcond[3]=((IkReal(1.00000000000000))+(((x817)*(x830)))+(((x823)*(x825)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x827)))+(((IkReal(-1.00000000000000))*(sj7)*(x818)*(x826)))+(((IkReal(-1.00000000000000))*(x825)*(x829)))+(((r02)*(x824))));
evalcond[4]=((((cj5)*(sj4)))+(((r02)*(x825)))+(((x823)*(x824)))+(((r12)*(x830)))+(((IkReal(-1.00000000000000))*(cj7)*(x817)*(x827)))+(((IkReal(-1.00000000000000))*(x824)*(x829)))+(((cj4)*(sj5)))+(((x818)*(x831))));
evalcond[5]=((((x818)*(x825)))+(((x823)*(x830)))+(((IkReal(-1.00000000000000))*(r12)*(x824)))+(((IkReal(-1.00000000000000))*(x817)*(x825)))+(((IkReal(-1.00000000000000))*(sj7)*(x821)*(x826)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x827))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x832=((IkReal(1.00000000000000))*(sj7));
IkReal x833=((npy)*(sj8));
IkReal x834=((cj8)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0200000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x834)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x832)))+(((cj7)*(x833)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((cj7)*(r22)))+(((r21)*(sj7)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x832))));
evalcond[4]=((IkReal(-0.0800000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x832)*(x834)))+(((sj7)*(x833)))+(((IkReal(0.0800000000000000))*(sj7))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst27;
gconst27=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst25;
IkReal x835=(sj8)*(sj8);
IkReal x836=(cj8)*(cj8);
IkReal x837=((IkReal(1.00000000000000))*(r10));
IkReal x838=((cj7)*(sj8));
IkReal x839=((r00)*(r11));
IkReal x840=((cj7)*(cj8));
IkReal x841=((sj7)*(x835));
IkReal x842=((sj7)*(x836));
gconst25=IKsign(((((IkReal(-1.00000000000000))*(r01)*(x837)*(x842)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x840)))+(((r01)*(r12)*(x840)))+(((x839)*(x842)))+(((IkReal(-1.00000000000000))*(r02)*(x837)*(x838)))+(((x839)*(x841)))+(((IkReal(-1.00000000000000))*(r01)*(x837)*(x841)))+(((r00)*(r12)*(x838)))));
IkReal x843=(sj8)*(sj8);
IkReal x844=(cj8)*(cj8);
IkReal x845=((IkReal(1.00000000000000))*(r10));
IkReal x846=((cj7)*(sj8));
IkReal x847=((r00)*(r11));
IkReal x848=((cj7)*(cj8));
IkReal x849=((sj7)*(x843));
IkReal x850=((sj7)*(x844));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(x845)*(x846)))+(((IkReal(-1.00000000000000))*(r01)*(x845)*(x850)))+(((r01)*(r12)*(x848)))+(((r00)*(r12)*(x846)))+(((IkReal(-1.00000000000000))*(r01)*(x845)*(x849)))+(((x847)*(x850)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x848)))+(((x847)*(x849))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst26;
IkReal x851=(cj7)*(cj7);
IkReal x852=(sj7)*(sj7);
IkReal x853=((r02)*(r10));
IkReal x854=((r01)*(r12));
IkReal x855=((sj8)*(x852));
IkReal x856=((IkReal(1.00000000000000))*(r02)*(r11));
IkReal x857=((cj8)*(x851));
IkReal x858=((IkReal(1.00000000000000))*(r00)*(r12));
IkReal x859=((sj8)*(x851));
IkReal x860=((cj8)*(x852));
gconst26=IKsign(((((IkReal(-1.00000000000000))*(x856)*(x859)))+(((x854)*(x859)))+(((IkReal(-1.00000000000000))*(x857)*(x858)))+(((x853)*(x857)))+(((x854)*(x855)))+(((x853)*(x860)))+(((IkReal(-1.00000000000000))*(x855)*(x856)))+(((IkReal(-1.00000000000000))*(x858)*(x860)))));
IkReal x861=(cj7)*(cj7);
IkReal x862=(sj7)*(sj7);
IkReal x863=((r02)*(r10));
IkReal x864=((r01)*(r12));
IkReal x865=((sj8)*(x862));
IkReal x866=((IkReal(1.00000000000000))*(r02)*(r11));
IkReal x867=((cj8)*(x861));
IkReal x868=((IkReal(1.00000000000000))*(r00)*(r12));
IkReal x869=((sj8)*(x861));
IkReal x870=((cj8)*(x862));
dummyeval[0]=((((x863)*(x870)))+(((IkReal(-1.00000000000000))*(x865)*(x866)))+(((IkReal(-1.00000000000000))*(x866)*(x869)))+(((IkReal(-1.00000000000000))*(x867)*(x868)))+(((x864)*(x869)))+(((x864)*(x865)))+(((IkReal(-1.00000000000000))*(x868)*(x870)))+(((x863)*(x867))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x871=((cj7)*(cj8));
IkReal x872=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst26)*(((((r12)*(sj7)))+(((r10)*(x871)))+(((IkReal(-1.00000000000000))*(r11)*(x872))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst26)*(((((r00)*(x871)))+(((IkReal(-1.00000000000000))*(r01)*(x872)))+(((r02)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst26)*(((((r12)*(sj7)))+(((r10)*(x871)))+(((IkReal(-1.00000000000000))*(r11)*(x872)))))), ((gconst26)*(((((r00)*(x871)))+(((IkReal(-1.00000000000000))*(r01)*(x872)))+(((r02)*(sj7)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x873=IKsin(j3);
IkReal x874=IKcos(j3);
IkReal x875=((r01)*(sj8));
IkReal x876=((cj8)*(sj7));
IkReal x877=((IkReal(1.00000000000000))*(sj7));
IkReal x878=((IkReal(1.00000000000000))*(r12));
IkReal x879=((r11)*(sj8));
IkReal x880=((IkReal(1.00000000000000))*(r00));
IkReal x881=((cj7)*(x873));
IkReal x882=((r10)*(x874));
IkReal x883=((IkReal(1.00000000000000))*(cj7)*(x874));
evalcond[0]=((((r00)*(sj8)*(x873)))+(((cj8)*(r01)*(x873)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x874)))+(((IkReal(-1.00000000000000))*(sj8)*(x882))));
evalcond[1]=((((cj7)*(cj8)*(x882)))+(((r12)*(sj7)*(x874)))+(((IkReal(-1.00000000000000))*(x879)*(x883)))+(((x875)*(x881)))+(((IkReal(-1.00000000000000))*(r02)*(x873)*(x877)))+(((IkReal(-1.00000000000000))*(cj8)*(x880)*(x881))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x874)*(x877)*(x879)))+(((r02)*(x881)))+(((x876)*(x882)))+(((sj7)*(x873)*(x875)))+(((IkReal(-1.00000000000000))*(cj7)*(x874)*(x878)))+(((IkReal(-1.00000000000000))*(x873)*(x876)*(x880))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(x883)))+(((IkReal(-1.00000000000000))*(x873)*(x877)*(x879)))+(((IkReal(-1.00000000000000))*(x878)*(x881)))+(((r10)*(x873)*(x876)))+(((r00)*(x874)*(x876)))+(((IkReal(-1.00000000000000))*(x874)*(x875)*(x877))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x884=((IkReal(1.00000000000000))*(sj5));
IkReal x885=((r20)*(sj8));
IkReal x886=((cj5)*(cj8));
IkReal x887=((r11)*(sj3));
IkReal x888=((cj3)*(r01));
IkReal x889=((cj3)*(r00)*(sj8));
IkReal x890=((r10)*(sj3)*(sj8));
if( IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(x884)*(x889)))+(((IkReal(-1.00000000000000))*(cj5)*(x885)))+(((IkReal(-1.00000000000000))*(r21)*(x886)))+(((IkReal(-1.00000000000000))*(cj8)*(x884)*(x888)))+(((IkReal(-1.00000000000000))*(x884)*(x890)))+(((IkReal(-1.00000000000000))*(cj8)*(x884)*(x887))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(cj8)*(r21)*(x884)))+(((IkReal(-1.00000000000000))*(x884)*(x885)))+(((x886)*(x887)))+(((cj5)*(x890)))+(((cj5)*(x889)))+(((x886)*(x888))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst29)*(((((IkReal(-1.00000000000000))*(x884)*(x889)))+(((IkReal(-1.00000000000000))*(cj5)*(x885)))+(((IkReal(-1.00000000000000))*(r21)*(x886)))+(((IkReal(-1.00000000000000))*(cj8)*(x884)*(x888)))+(((IkReal(-1.00000000000000))*(x884)*(x890)))+(((IkReal(-1.00000000000000))*(cj8)*(x884)*(x887)))))), ((gconst29)*(((((IkReal(-1.00000000000000))*(cj8)*(r21)*(x884)))+(((IkReal(-1.00000000000000))*(x884)*(x885)))+(((x886)*(x887)))+(((cj5)*(x890)))+(((cj5)*(x889)))+(((x886)*(x888)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x891=IKsin(j4);
IkReal x892=IKcos(j4);
IkReal x893=((IkReal(1.00000000000000))*(cj8));
IkReal x894=((cj3)*(r01));
IkReal x895=((cj3)*(r00));
IkReal x896=((cj7)*(cj8));
IkReal x897=((r11)*(sj3));
IkReal x898=((IkReal(1.00000000000000))*(sj8));
IkReal x899=((r10)*(sj3));
IkReal x900=((cj5)*(x891));
IkReal x901=((sj5)*(x892));
IkReal x902=((cj5)*(x892));
IkReal x903=((sj5)*(x891));
IkReal x904=((x900)+(x901));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x904));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x902)))+(x903)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x893))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x898)*(x899)))+(((IkReal(-1.00000000000000))*(x893)*(x894)))+(((IkReal(-1.00000000000000))*(x903)))+(((IkReal(-1.00000000000000))*(x893)*(x897)))+(x902)+(((IkReal(-1.00000000000000))*(x895)*(x898))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x896)*(x899)))+(((IkReal(-1.00000000000000))*(cj7)*(x897)*(x898)))+(((r12)*(sj3)*(sj7)))+(x904)+(((IkReal(-1.00000000000000))*(cj7)*(x894)*(x898)))+(((x895)*(x896))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x905=((r22)*(sj7));
IkReal x906=((cj8)*(sj5));
IkReal x907=((sj5)*(sj8));
IkReal x908=((cj7)*(r20));
IkReal x909=((cj5)*(cj8));
IkReal x910=((cj7)*(r21));
IkReal x911=((cj5)*(sj8));
if( IKabs(((gconst28)*(((((r21)*(x909)))+(((IkReal(-1.00000000000000))*(x906)*(x908)))+(((r20)*(x911)))+(((IkReal(-1.00000000000000))*(sj5)*(x905)))+(((x907)*(x910))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((r20)*(x907)))+(((x908)*(x909)))+(((cj5)*(x905)))+(((r21)*(x906)))+(((IkReal(-1.00000000000000))*(x910)*(x911))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst28)*(((((r21)*(x909)))+(((IkReal(-1.00000000000000))*(x906)*(x908)))+(((r20)*(x911)))+(((IkReal(-1.00000000000000))*(sj5)*(x905)))+(((x907)*(x910)))))), ((gconst28)*(((((r20)*(x907)))+(((x908)*(x909)))+(((cj5)*(x905)))+(((r21)*(x906)))+(((IkReal(-1.00000000000000))*(x910)*(x911)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x912=IKsin(j4);
IkReal x913=IKcos(j4);
IkReal x914=((IkReal(1.00000000000000))*(cj8));
IkReal x915=((cj3)*(r01));
IkReal x916=((cj3)*(r00));
IkReal x917=((cj7)*(cj8));
IkReal x918=((r11)*(sj3));
IkReal x919=((IkReal(1.00000000000000))*(sj8));
IkReal x920=((r10)*(sj3));
IkReal x921=((cj5)*(x912));
IkReal x922=((sj5)*(x913));
IkReal x923=((cj5)*(x913));
IkReal x924=((sj5)*(x912));
IkReal x925=((x922)+(x921));
evalcond[0]=((((cj8)*(r21)))+(x925)+(((r20)*(sj8))));
evalcond[1]=((x924)+(((IkReal(-1.00000000000000))*(x923)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x914))));
evalcond[2]=((x923)+(((IkReal(-1.00000000000000))*(x914)*(x915)))+(((IkReal(-1.00000000000000))*(x916)*(x919)))+(((IkReal(-1.00000000000000))*(x919)*(x920)))+(((IkReal(-1.00000000000000))*(x924)))+(((IkReal(-1.00000000000000))*(x914)*(x918))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(x925)+(((x917)*(x920)))+(((x916)*(x917)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x918)*(x919)))+(((IkReal(-1.00000000000000))*(cj7)*(x915)*(x919))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x926=((IkReal(1.00000000000000))*(cj8));
IkReal x927=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(r10)*(x927)))+(((IkReal(-1.00000000000000))*(r11)*(x926))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(r00)*(x927)))+(((IkReal(-1.00000000000000))*(r01)*(x926))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst25)*(((((IkReal(-1.00000000000000))*(r10)*(x927)))+(((IkReal(-1.00000000000000))*(r11)*(x926)))))), ((gconst25)*(((((IkReal(-1.00000000000000))*(r00)*(x927)))+(((IkReal(-1.00000000000000))*(r01)*(x926)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x928=IKsin(j3);
IkReal x929=IKcos(j3);
IkReal x930=((r01)*(sj8));
IkReal x931=((cj8)*(sj7));
IkReal x932=((IkReal(1.00000000000000))*(sj7));
IkReal x933=((IkReal(1.00000000000000))*(r12));
IkReal x934=((r11)*(sj8));
IkReal x935=((IkReal(1.00000000000000))*(r00));
IkReal x936=((cj7)*(x928));
IkReal x937=((r10)*(x929));
IkReal x938=((IkReal(1.00000000000000))*(cj7)*(x929));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj8)*(x937)))+(((cj8)*(r01)*(x928)))+(((r00)*(sj8)*(x928)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x929))));
evalcond[1]=((((cj7)*(cj8)*(x937)))+(((IkReal(-1.00000000000000))*(cj8)*(x935)*(x936)))+(((IkReal(-1.00000000000000))*(r02)*(x928)*(x932)))+(((IkReal(-1.00000000000000))*(x934)*(x938)))+(((x930)*(x936)))+(((r12)*(sj7)*(x929))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x929)*(x933)))+(((IkReal(-1.00000000000000))*(x929)*(x932)*(x934)))+(((IkReal(-1.00000000000000))*(x928)*(x931)*(x935)))+(((x931)*(x937)))+(((r02)*(x936)))+(((sj7)*(x928)*(x930))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x928)*(x932)*(x934)))+(((IkReal(-1.00000000000000))*(r02)*(x938)))+(((r10)*(x928)*(x931)))+(((IkReal(-1.00000000000000))*(x933)*(x936)))+(((IkReal(-1.00000000000000))*(x929)*(x930)*(x932)))+(((r00)*(x929)*(x931))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x939=((IkReal(1.00000000000000))*(sj5));
IkReal x940=((r20)*(sj8));
IkReal x941=((cj5)*(cj8));
IkReal x942=((r11)*(sj3));
IkReal x943=((cj3)*(r01));
IkReal x944=((cj3)*(r00)*(sj8));
IkReal x945=((r10)*(sj3)*(sj8));
if( IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(cj5)*(x940)))+(((IkReal(-1.00000000000000))*(x939)*(x945)))+(((IkReal(-1.00000000000000))*(r21)*(x941)))+(((IkReal(-1.00000000000000))*(cj8)*(x939)*(x942)))+(((IkReal(-1.00000000000000))*(cj8)*(x939)*(x943)))+(((IkReal(-1.00000000000000))*(x939)*(x944))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(x939)*(x940)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x939)))+(((cj5)*(x945)))+(((x941)*(x942)))+(((x941)*(x943)))+(((cj5)*(x944))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst29)*(((((IkReal(-1.00000000000000))*(cj5)*(x940)))+(((IkReal(-1.00000000000000))*(x939)*(x945)))+(((IkReal(-1.00000000000000))*(r21)*(x941)))+(((IkReal(-1.00000000000000))*(cj8)*(x939)*(x942)))+(((IkReal(-1.00000000000000))*(cj8)*(x939)*(x943)))+(((IkReal(-1.00000000000000))*(x939)*(x944)))))), ((gconst29)*(((((IkReal(-1.00000000000000))*(x939)*(x940)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x939)))+(((cj5)*(x945)))+(((x941)*(x942)))+(((x941)*(x943)))+(((cj5)*(x944)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x946=IKsin(j4);
IkReal x947=IKcos(j4);
IkReal x948=((IkReal(1.00000000000000))*(cj8));
IkReal x949=((cj3)*(r01));
IkReal x950=((cj3)*(r00));
IkReal x951=((cj7)*(cj8));
IkReal x952=((r11)*(sj3));
IkReal x953=((IkReal(1.00000000000000))*(sj8));
IkReal x954=((r10)*(sj3));
IkReal x955=((cj5)*(x946));
IkReal x956=((sj5)*(x947));
IkReal x957=((cj5)*(x947));
IkReal x958=((sj5)*(x946));
IkReal x959=((x956)+(x955));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x959));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x948)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x958)+(((IkReal(-1.00000000000000))*(x957))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x948)*(x952)))+(((IkReal(-1.00000000000000))*(x950)*(x953)))+(((IkReal(-1.00000000000000))*(x948)*(x949)))+(x957)+(((IkReal(-1.00000000000000))*(x958)))+(((IkReal(-1.00000000000000))*(x953)*(x954))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x950)*(x951)))+(((x951)*(x954)))+(((r12)*(sj3)*(sj7)))+(x959)+(((IkReal(-1.00000000000000))*(cj7)*(x949)*(x953)))+(((IkReal(-1.00000000000000))*(cj7)*(x952)*(x953))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x960=((r22)*(sj7));
IkReal x961=((cj8)*(sj5));
IkReal x962=((sj5)*(sj8));
IkReal x963=((cj7)*(r20));
IkReal x964=((cj5)*(cj8));
IkReal x965=((cj7)*(r21));
IkReal x966=((cj5)*(sj8));
if( IKabs(((gconst28)*(((((r21)*(x964)))+(((IkReal(-1.00000000000000))*(x961)*(x963)))+(((r20)*(x966)))+(((x962)*(x965)))+(((IkReal(-1.00000000000000))*(sj5)*(x960))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((cj5)*(x960)))+(((r21)*(x961)))+(((IkReal(-1.00000000000000))*(x965)*(x966)))+(((r20)*(x962)))+(((x963)*(x964))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst28)*(((((r21)*(x964)))+(((IkReal(-1.00000000000000))*(x961)*(x963)))+(((r20)*(x966)))+(((x962)*(x965)))+(((IkReal(-1.00000000000000))*(sj5)*(x960)))))), ((gconst28)*(((((cj5)*(x960)))+(((r21)*(x961)))+(((IkReal(-1.00000000000000))*(x965)*(x966)))+(((r20)*(x962)))+(((x963)*(x964)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x967=IKsin(j4);
IkReal x968=IKcos(j4);
IkReal x969=((IkReal(1.00000000000000))*(cj8));
IkReal x970=((cj3)*(r01));
IkReal x971=((cj3)*(r00));
IkReal x972=((cj7)*(cj8));
IkReal x973=((r11)*(sj3));
IkReal x974=((IkReal(1.00000000000000))*(sj8));
IkReal x975=((r10)*(sj3));
IkReal x976=((cj5)*(x967));
IkReal x977=((sj5)*(x968));
IkReal x978=((cj5)*(x968));
IkReal x979=((sj5)*(x967));
IkReal x980=((x977)+(x976));
evalcond[0]=((((cj8)*(r21)))+(x980)+(((r20)*(sj8))));
evalcond[1]=((x979)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x978)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x969))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x974)*(x975)))+(x978)+(((IkReal(-1.00000000000000))*(x969)*(x970)))+(((IkReal(-1.00000000000000))*(x969)*(x973)))+(((IkReal(-1.00000000000000))*(x979)))+(((IkReal(-1.00000000000000))*(x971)*(x974))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x972)*(x975)))+(((x971)*(x972)))+(((IkReal(-1.00000000000000))*(cj7)*(x973)*(x974)))+(x980)+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x970)*(x974))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x981=((r22)*(sj7));
IkReal x982=((cj8)*(sj5));
IkReal x983=((sj5)*(sj8));
IkReal x984=((cj7)*(r20));
IkReal x985=((cj5)*(cj8));
IkReal x986=((cj7)*(r21));
IkReal x987=((cj5)*(sj8));
if( IKabs(((gconst27)*(((((x983)*(x986)))+(((IkReal(-1.00000000000000))*(x982)*(x984)))+(((IkReal(-1.00000000000000))*(sj5)*(x981)))+(((r21)*(x985)))+(((r20)*(x987))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst27)*(((((x984)*(x985)))+(((r20)*(x983)))+(((cj5)*(x981)))+(((r21)*(x982)))+(((IkReal(-1.00000000000000))*(x986)*(x987))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst27)*(((((x983)*(x986)))+(((IkReal(-1.00000000000000))*(x982)*(x984)))+(((IkReal(-1.00000000000000))*(sj5)*(x981)))+(((r21)*(x985)))+(((r20)*(x987)))))), ((gconst27)*(((((x984)*(x985)))+(((r20)*(x983)))+(((cj5)*(x981)))+(((r21)*(x982)))+(((IkReal(-1.00000000000000))*(x986)*(x987)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x988=IKsin(j4);
IkReal x989=IKcos(j4);
evalcond[0]=((((sj5)*(x989)))+(((cj8)*(r21)))+(((cj5)*(x988)))+(((r20)*(sj8))));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((sj5)*(x988)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(r20)))+(((IkReal(-1.00000000000000))*(cj5)*(x989))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst31;
IkReal x990=(sj8)*(sj8);
IkReal x991=(cj8)*(cj8);
IkReal x992=((IkReal(1.00000000000000))*(r10));
IkReal x993=((cj7)*(sj8));
IkReal x994=((r00)*(r11));
IkReal x995=((cj7)*(cj8));
IkReal x996=((sj7)*(x990));
IkReal x997=((sj7)*(x991));
gconst31=IKsign(((((IkReal(-1.00000000000000))*(r02)*(x992)*(x993)))+(((x994)*(x996)))+(((IkReal(-1.00000000000000))*(r01)*(x992)*(x996)))+(((r00)*(r12)*(x993)))+(((r01)*(r12)*(x995)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x995)))+(((IkReal(-1.00000000000000))*(r01)*(x992)*(x997)))+(((x994)*(x997)))));
IkReal x998=(sj8)*(sj8);
IkReal x999=(cj8)*(cj8);
IkReal x1000=((IkReal(1.00000000000000))*(r10));
IkReal x1001=((cj7)*(sj8));
IkReal x1002=((r00)*(r11));
IkReal x1003=((cj7)*(cj8));
IkReal x1004=((sj7)*(x998));
IkReal x1005=((sj7)*(x999));
dummyeval[0]=((((r00)*(r12)*(x1001)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1003)))+(((IkReal(-1.00000000000000))*(r01)*(x1000)*(x1004)))+(((r01)*(r12)*(x1003)))+(((IkReal(-1.00000000000000))*(r02)*(x1000)*(x1001)))+(((x1002)*(x1004)))+(((IkReal(-1.00000000000000))*(r01)*(x1000)*(x1005)))+(((x1002)*(x1005))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst30;
IkReal x1006=(cj8)*(cj8);
IkReal x1007=(sj8)*(sj8);
IkReal x1008=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1009=((IkReal(1.00000000000000))*(x1006));
IkReal x1010=((IkReal(1.00000000000000))*(x1007));
gconst30=IKsign(((((IkReal(-1.00000000000000))*(r00)*(r01)*(x1008)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1008)))+(((IkReal(-1.00000000000000))*(x1010)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1010)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1009)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1009)*((r01)*(r01))))));
IkReal x1011=(cj8)*(cj8);
IkReal x1012=(sj8)*(sj8);
IkReal x1013=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1014=((IkReal(1.00000000000000))*(x1011));
IkReal x1015=((IkReal(1.00000000000000))*(x1012));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1014)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1014)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1013)))+(((IkReal(-1.00000000000000))*(x1015)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1013)))+(((IkReal(-1.00000000000000))*(x1015)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1016=((sj4)*(sj5));
IkReal x1017=((r10)*(sj8));
IkReal x1018=((cj8)*(r01));
IkReal x1019=((cj8)*(r11));
IkReal x1020=((r00)*(sj8));
IkReal x1021=((IkReal(1.00000000000000))*(cj4)*(cj5));
if( IKabs(((gconst30)*(((((x1016)*(x1019)))+(((IkReal(-1.00000000000000))*(x1017)*(x1021)))+(((IkReal(-1.00000000000000))*(x1019)*(x1021)))+(((x1016)*(x1017))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst30)*(((((x1016)*(x1018)))+(((IkReal(-1.00000000000000))*(x1020)*(x1021)))+(((IkReal(-1.00000000000000))*(x1018)*(x1021)))+(((x1016)*(x1020))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst30)*(((((x1016)*(x1019)))+(((IkReal(-1.00000000000000))*(x1017)*(x1021)))+(((IkReal(-1.00000000000000))*(x1019)*(x1021)))+(((x1016)*(x1017)))))), ((gconst30)*(((((x1016)*(x1018)))+(((IkReal(-1.00000000000000))*(x1020)*(x1021)))+(((IkReal(-1.00000000000000))*(x1018)*(x1021)))+(((x1016)*(x1020)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1022=IKsin(j3);
IkReal x1023=IKcos(j3);
IkReal x1024=((r01)*(sj8));
IkReal x1025=((cj8)*(r00));
IkReal x1026=((IkReal(1.00000000000000))*(sj8));
IkReal x1027=((cj8)*(r11));
IkReal x1028=((IkReal(1.00000000000000))*(r12));
IkReal x1029=((cj8)*(r10));
IkReal x1030=((cj7)*(x1022));
IkReal x1031=((sj7)*(x1023));
IkReal x1032=((cj7)*(x1023));
IkReal x1033=((IkReal(1.00000000000000))*(x1022));
IkReal x1034=((cj8)*(x1022));
IkReal x1035=((sj7)*(x1022));
IkReal x1036=((IkReal(1.00000000000000))*(x1023));
evalcond[0]=((((r00)*(sj8)*(x1022)))+(((IkReal(-1.00000000000000))*(r10)*(x1023)*(x1026)))+(((IkReal(-1.00000000000000))*(x1027)*(x1036)))+(((r01)*(x1034))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x1022)*(x1026)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1036)))+(((IkReal(-1.00000000000000))*(x1027)*(x1033)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5)))+(((cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1023)*(x1026))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1025)*(x1030)))+(((r12)*(x1031)))+(((IkReal(-1.00000000000000))*(r11)*(x1026)*(x1032)))+(((x1024)*(x1030)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1033)))+(((x1029)*(x1032))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x1026)*(x1031)))+(((r02)*(x1030)))+(((x1024)*(x1035)))+(((IkReal(-1.00000000000000))*(x1028)*(x1032)))+(((x1029)*(x1031)))+(((IkReal(-1.00000000000000))*(sj7)*(x1025)*(x1033))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r11)*(x1026)*(x1030)))+(((r02)*(x1031)))+(((cj5)*(sj4)))+(((x1025)*(x1032)))+(((IkReal(-1.00000000000000))*(x1024)*(x1032)))+(((cj4)*(sj5)))+(((x1029)*(x1030)))+(((r12)*(x1035))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r11)*(x1026)*(x1035)))+(((x1029)*(x1035)))+(((IkReal(-1.00000000000000))*(x1024)*(x1031)))+(((x1025)*(x1031)))+(((IkReal(-1.00000000000000))*(x1028)*(x1030)))+(((IkReal(-1.00000000000000))*(r02)*(x1032))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1037=((IkReal(1.00000000000000))*(cj8));
IkReal x1038=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r11)*(x1037)))+(((IkReal(-1.00000000000000))*(r10)*(x1038))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r01)*(x1037)))+(((IkReal(-1.00000000000000))*(r00)*(x1038))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst31)*(((((IkReal(-1.00000000000000))*(r11)*(x1037)))+(((IkReal(-1.00000000000000))*(r10)*(x1038)))))), ((gconst31)*(((((IkReal(-1.00000000000000))*(r01)*(x1037)))+(((IkReal(-1.00000000000000))*(r00)*(x1038)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1039=IKsin(j3);
IkReal x1040=IKcos(j3);
IkReal x1041=((r01)*(sj8));
IkReal x1042=((cj8)*(r00));
IkReal x1043=((IkReal(1.00000000000000))*(sj8));
IkReal x1044=((cj8)*(r11));
IkReal x1045=((IkReal(1.00000000000000))*(r12));
IkReal x1046=((cj8)*(r10));
IkReal x1047=((cj7)*(x1039));
IkReal x1048=((sj7)*(x1040));
IkReal x1049=((cj7)*(x1040));
IkReal x1050=((IkReal(1.00000000000000))*(x1039));
IkReal x1051=((cj8)*(x1039));
IkReal x1052=((sj7)*(x1039));
IkReal x1053=((IkReal(1.00000000000000))*(x1040));
evalcond[0]=((((r01)*(x1051)))+(((IkReal(-1.00000000000000))*(x1044)*(x1053)))+(((IkReal(-1.00000000000000))*(r10)*(x1040)*(x1043)))+(((r00)*(sj8)*(x1039))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x1040)*(x1043)))+(((IkReal(-1.00000000000000))*(r10)*(x1039)*(x1043)))+(((IkReal(-1.00000000000000))*(x1044)*(x1050)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5)))+(((cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1053))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1050)))+(((x1046)*(x1049)))+(((x1041)*(x1047)))+(((IkReal(-1.00000000000000))*(x1042)*(x1047)))+(((r12)*(x1048)))+(((IkReal(-1.00000000000000))*(r11)*(x1043)*(x1049))));
evalcond[3]=((IkReal(-1.00000000000000))+(((r02)*(x1047)))+(((IkReal(-1.00000000000000))*(r11)*(x1043)*(x1048)))+(((x1041)*(x1052)))+(((x1046)*(x1048)))+(((IkReal(-1.00000000000000))*(x1045)*(x1049)))+(((IkReal(-1.00000000000000))*(sj7)*(x1042)*(x1050))));
evalcond[4]=((((r02)*(x1048)))+(((cj5)*(sj4)))+(((r12)*(x1052)))+(((x1046)*(x1047)))+(((x1042)*(x1049)))+(((IkReal(-1.00000000000000))*(x1041)*(x1049)))+(((cj4)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1043)*(x1047))));
evalcond[5]=((((x1046)*(x1052)))+(((IkReal(-1.00000000000000))*(x1041)*(x1048)))+(((x1042)*(x1048)))+(((IkReal(-1.00000000000000))*(r02)*(x1049)))+(((IkReal(-1.00000000000000))*(x1045)*(x1047)))+(((IkReal(-1.00000000000000))*(r11)*(x1043)*(x1052))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1054=((IkReal(1.00000000000000))*(sj7));
IkReal x1055=((npy)*(sj8));
IkReal x1056=((cj8)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x1056)))+(((IkReal(0.0800000000000000))*(cj7)))+(((cj7)*(x1055)))+(((IkReal(-1.00000000000000))*(npz)*(x1054)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(0.0200000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x1054)*(x1056)))+(((sj7)*(x1055)))+(((IkReal(-0.250000000000000))*(sj5)))+(((IkReal(0.0800000000000000))*(sj7))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst32;
IkReal x1057=(cj8)*(cj8);
IkReal x1058=(sj8)*(sj8);
IkReal x1059=((IkReal(2.00000000000000))*(cj8)*(sj8));
gconst32=IKsign(((((x1058)*((r00)*(r00))))+(((x1057)*((r01)*(r01))))+(((x1058)*((r10)*(r10))))+(((r10)*(r11)*(x1059)))+(((r00)*(r01)*(x1059)))+(((x1057)*((r11)*(r11))))));
IkReal x1060=(cj8)*(cj8);
IkReal x1061=(sj8)*(sj8);
IkReal x1062=((IkReal(2.00000000000000))*(cj8)*(sj8));
dummyeval[0]=((((r00)*(r01)*(x1062)))+(((x1061)*((r10)*(r10))))+(((x1061)*((r00)*(r00))))+(((r10)*(r11)*(x1062)))+(((x1060)*((r01)*(r01))))+(((x1060)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst34;
gconst34=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst33;
IkReal x1063=(cj8)*(cj8);
IkReal x1064=(sj8)*(sj8);
IkReal x1065=((r00)*(r11));
IkReal x1066=((r02)*(sj7));
IkReal x1067=((cj7)*(x1063));
IkReal x1068=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1069=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1070=((cj7)*(x1064));
gconst33=IKsign(((((x1065)*(x1070)))+(((cj8)*(r11)*(x1066)))+(((IkReal(-1.00000000000000))*(x1069)*(x1070)))+(((x1065)*(x1067)))+(((IkReal(-1.00000000000000))*(x1067)*(x1069)))+(((r10)*(sj8)*(x1066)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1068)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1068)))));
IkReal x1071=(cj8)*(cj8);
IkReal x1072=(sj8)*(sj8);
IkReal x1073=((r00)*(r11));
IkReal x1074=((r02)*(sj7));
IkReal x1075=((cj7)*(x1071));
IkReal x1076=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1077=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1078=((cj7)*(x1072));
dummyeval[0]=((((x1073)*(x1078)))+(((cj8)*(r11)*(x1074)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1076)))+(((x1073)*(x1075)))+(((IkReal(-1.00000000000000))*(x1075)*(x1077)))+(((r10)*(sj8)*(x1074)))+(((IkReal(-1.00000000000000))*(x1077)*(x1078)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1076))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1079=((cj7)*(cj8));
IkReal x1080=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst33)*(((((r12)*(sj7)))+(((r10)*(x1079)))+(((IkReal(-1.00000000000000))*(r11)*(x1080))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst33)*(((((IkReal(-1.00000000000000))*(r01)*(x1080)))+(((r00)*(x1079)))+(((r02)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst33)*(((((r12)*(sj7)))+(((r10)*(x1079)))+(((IkReal(-1.00000000000000))*(r11)*(x1080)))))), ((gconst33)*(((((IkReal(-1.00000000000000))*(r01)*(x1080)))+(((r00)*(x1079)))+(((r02)*(sj7)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1081=IKsin(j3);
IkReal x1082=IKcos(j3);
IkReal x1083=((IkReal(1.00000000000000))*(sj8));
IkReal x1084=((IkReal(1.00000000000000))*(cj8));
IkReal x1085=((r01)*(sj8));
IkReal x1086=((cj8)*(r10));
IkReal x1087=((sj7)*(x1082));
IkReal x1088=((cj7)*(x1081));
IkReal x1089=((r00)*(x1081));
IkReal x1090=((sj7)*(x1081));
IkReal x1091=((cj7)*(x1082));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1082)*(x1083)))+(((sj8)*(x1089)))+(((IkReal(-1.00000000000000))*(r11)*(x1082)*(x1084)))+(((cj8)*(r01)*(x1081))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x1082)*(x1083)))+(((IkReal(-1.00000000000000))*(r10)*(x1081)*(x1083)))+(((IkReal(-1.00000000000000))*(r01)*(x1082)*(x1084)))+(((IkReal(-1.00000000000000))*(r11)*(x1081)*(x1084))));
evalcond[2]=((((x1085)*(x1088)))+(((IkReal(-1.00000000000000))*(r02)*(x1090)))+(((IkReal(-1.00000000000000))*(r00)*(x1084)*(x1088)))+(((r12)*(x1087)))+(((x1086)*(x1091)))+(((IkReal(-1.00000000000000))*(r11)*(x1083)*(x1091))));
evalcond[3]=((((x1086)*(x1087)))+(((IkReal(-1.00000000000000))*(r11)*(x1083)*(x1087)))+(((r02)*(x1088)))+(((IkReal(-1.00000000000000))*(r12)*(x1091)))+(((IkReal(-1.00000000000000))*(sj7)*(x1084)*(x1089)))+(((x1085)*(x1090))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst36;
gconst36=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1092=((cj3)*(cj5));
IkReal x1093=((r02)*(sj7));
IkReal x1094=((cj8)*(r00));
IkReal x1095=((r22)*(sj7));
IkReal x1096=((cj5)*(sj3));
IkReal x1097=((cj7)*(cj8));
IkReal x1098=((IkReal(1.00000000000000))*(sj5));
IkReal x1099=((r12)*(sj7));
IkReal x1100=((sj3)*(sj5));
IkReal x1101=((cj3)*(cj7)*(sj5));
IkReal x1102=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(r20)*(x1097)*(x1098)))+(((r10)*(x1096)*(x1097)))+(((cj7)*(x1092)*(x1094)))+(((IkReal(-1.00000000000000))*(r11)*(x1096)*(x1102)))+(((x1092)*(x1093)))+(((IkReal(-1.00000000000000))*(r01)*(x1092)*(x1102)))+(((x1096)*(x1099)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(x1095)*(x1098))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((cj3)*(sj5)*(x1093)))+(((cj5)*(x1095)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1098)))+(((x1099)*(x1100)))+(((r10)*(x1097)*(x1100)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1102)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1098)))+(((x1094)*(x1101)))+(((cj5)*(r20)*(x1097))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst36)*(((((IkReal(-1.00000000000000))*(r20)*(x1097)*(x1098)))+(((r10)*(x1096)*(x1097)))+(((cj7)*(x1092)*(x1094)))+(((IkReal(-1.00000000000000))*(r11)*(x1096)*(x1102)))+(((x1092)*(x1093)))+(((IkReal(-1.00000000000000))*(r01)*(x1092)*(x1102)))+(((x1096)*(x1099)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(x1095)*(x1098)))))), ((gconst36)*(((((cj3)*(sj5)*(x1093)))+(((cj5)*(x1095)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1098)))+(((x1099)*(x1100)))+(((r10)*(x1097)*(x1100)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1102)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1098)))+(((x1094)*(x1101)))+(((cj5)*(r20)*(x1097)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1103=IKsin(j4);
IkReal x1104=IKcos(j4);
IkReal x1105=((IkReal(1.00000000000000))*(cj7));
IkReal x1106=((cj8)*(r20));
IkReal x1107=((cj3)*(r02));
IkReal x1108=((IkReal(1.00000000000000))*(sj7));
IkReal x1109=((sj3)*(sj7));
IkReal x1110=((r21)*(sj8));
IkReal x1111=((cj8)*(r10));
IkReal x1112=((cj5)*(x1103));
IkReal x1113=((sj5)*(x1104));
IkReal x1114=((r11)*(sj3)*(sj8));
IkReal x1115=((cj3)*(cj8)*(r00));
IkReal x1116=((cj5)*(x1104));
IkReal x1117=((cj3)*(r01)*(sj8));
IkReal x1118=((sj5)*(x1103));
IkReal x1119=((x1113)+(x1112));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1108)))+(((IkReal(-1.00000000000000))*(x1105)*(x1106)))+(x1118)+(((cj7)*(x1110)))+(((IkReal(-1.00000000000000))*(x1116))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x1106)*(x1108)))+(x1119)+(((sj7)*(x1110))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1105)*(x1114)))+(x1119)+(((r12)*(x1109)))+(((IkReal(-1.00000000000000))*(x1105)*(x1117)))+(((sj7)*(x1107)))+(((cj7)*(sj3)*(x1111)))+(((cj7)*(x1115))));
evalcond[3]=((((sj7)*(x1115)))+(((IkReal(-1.00000000000000))*(x1108)*(x1117)))+(((IkReal(-1.00000000000000))*(x1108)*(x1114)))+(x1116)+(((IkReal(-1.00000000000000))*(x1118)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1105)))+(((IkReal(-1.00000000000000))*(x1105)*(x1107)))+(((x1109)*(x1111))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1120=((cj8)*(r20));
IkReal x1121=((IkReal(1.00000000000000))*(sj5));
IkReal x1122=((cj7)*(r22));
IkReal x1123=((cj5)*(cj7));
IkReal x1124=((cj5)*(sj7));
IkReal x1125=((r21)*(sj8));
if( IKabs(((gconst35)*(((((cj5)*(x1122)))+(((IkReal(-1.00000000000000))*(cj7)*(x1120)*(x1121)))+(((IkReal(-1.00000000000000))*(x1120)*(x1124)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1121)))+(((x1124)*(x1125)))+(((cj7)*(sj5)*(x1125))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(sj7)*(x1120)*(x1121)))+(((r22)*(x1124)))+(((IkReal(-1.00000000000000))*(x1123)*(x1125)))+(((x1120)*(x1123)))+(((sj5)*(x1122)))+(((sj5)*(sj7)*(x1125))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst35)*(((((cj5)*(x1122)))+(((IkReal(-1.00000000000000))*(cj7)*(x1120)*(x1121)))+(((IkReal(-1.00000000000000))*(x1120)*(x1124)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1121)))+(((x1124)*(x1125)))+(((cj7)*(sj5)*(x1125)))))), ((gconst35)*(((((IkReal(-1.00000000000000))*(sj7)*(x1120)*(x1121)))+(((r22)*(x1124)))+(((IkReal(-1.00000000000000))*(x1123)*(x1125)))+(((x1120)*(x1123)))+(((sj5)*(x1122)))+(((sj5)*(sj7)*(x1125)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1126=IKsin(j4);
IkReal x1127=IKcos(j4);
IkReal x1128=((IkReal(1.00000000000000))*(cj7));
IkReal x1129=((cj8)*(r20));
IkReal x1130=((cj3)*(r02));
IkReal x1131=((IkReal(1.00000000000000))*(sj7));
IkReal x1132=((sj3)*(sj7));
IkReal x1133=((r21)*(sj8));
IkReal x1134=((cj8)*(r10));
IkReal x1135=((cj5)*(x1126));
IkReal x1136=((sj5)*(x1127));
IkReal x1137=((r11)*(sj3)*(sj8));
IkReal x1138=((cj3)*(cj8)*(r00));
IkReal x1139=((cj5)*(x1127));
IkReal x1140=((cj3)*(r01)*(sj8));
IkReal x1141=((sj5)*(x1126));
IkReal x1142=((x1136)+(x1135));
evalcond[0]=((x1141)+(((IkReal(-1.00000000000000))*(x1139)))+(((IkReal(-1.00000000000000))*(r22)*(x1131)))+(((cj7)*(x1133)))+(((IkReal(-1.00000000000000))*(x1128)*(x1129))));
evalcond[1]=((((cj7)*(r22)))+(x1142)+(((IkReal(-1.00000000000000))*(x1129)*(x1131)))+(((sj7)*(x1133))));
evalcond[2]=((((sj7)*(x1130)))+(((IkReal(-1.00000000000000))*(x1128)*(x1140)))+(x1142)+(((r12)*(x1132)))+(((cj7)*(sj3)*(x1134)))+(((cj7)*(x1138)))+(((IkReal(-1.00000000000000))*(x1128)*(x1137))));
evalcond[3]=((x1139)+(((IkReal(-1.00000000000000))*(x1128)*(x1130)))+(((IkReal(-1.00000000000000))*(x1131)*(x1137)))+(((IkReal(-1.00000000000000))*(x1131)*(x1140)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1128)))+(((sj7)*(x1138)))+(((IkReal(-1.00000000000000))*(x1141)))+(((x1132)*(x1134))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1143=((sj5)*(sj7));
IkReal x1144=((r21)*(sj8));
IkReal x1145=((cj7)*(sj5));
IkReal x1146=((cj8)*(r20));
IkReal x1147=((cj5)*(cj7));
IkReal x1148=((cj5)*(sj7));
if( IKabs(((gconst34)*(((((IkReal(-1.00000000000000))*(x1146)*(x1148)))+(((x1144)*(x1145)))+(((IkReal(-1.00000000000000))*(x1145)*(x1146)))+(((IkReal(-1.00000000000000))*(r22)*(x1143)))+(((r22)*(x1147)))+(((x1144)*(x1148))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*(((((r22)*(x1148)))+(((x1143)*(x1144)))+(((IkReal(-1.00000000000000))*(x1143)*(x1146)))+(((IkReal(-1.00000000000000))*(x1144)*(x1147)))+(((r22)*(x1145)))+(((x1146)*(x1147))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst34)*(((((IkReal(-1.00000000000000))*(x1146)*(x1148)))+(((x1144)*(x1145)))+(((IkReal(-1.00000000000000))*(x1145)*(x1146)))+(((IkReal(-1.00000000000000))*(r22)*(x1143)))+(((r22)*(x1147)))+(((x1144)*(x1148)))))), ((gconst34)*(((((r22)*(x1148)))+(((x1143)*(x1144)))+(((IkReal(-1.00000000000000))*(x1143)*(x1146)))+(((IkReal(-1.00000000000000))*(x1144)*(x1147)))+(((r22)*(x1145)))+(((x1146)*(x1147)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1149=IKsin(j4);
IkReal x1150=IKcos(j4);
IkReal x1151=((r21)*(sj8));
IkReal x1152=((IkReal(1.00000000000000))*(cj8)*(r20));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj5)*(x1150)))+(((sj5)*(x1149)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x1151)))+(((IkReal(-1.00000000000000))*(cj7)*(x1152))));
evalcond[1]=((((cj7)*(r22)))+(((cj5)*(x1149)))+(((sj5)*(x1150)))+(((sj7)*(x1151)))+(((IkReal(-1.00000000000000))*(sj7)*(x1152))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst37;
IkReal x1153=(cj8)*(cj8);
IkReal x1154=(sj8)*(sj8);
IkReal x1155=((IkReal(2.00000000000000))*(cj8)*(sj8));
gconst37=IKsign(((((x1153)*((r01)*(r01))))+(((x1153)*((r11)*(r11))))+(((r00)*(r01)*(x1155)))+(((x1154)*((r00)*(r00))))+(((r10)*(r11)*(x1155)))+(((x1154)*((r10)*(r10))))));
IkReal x1156=(cj8)*(cj8);
IkReal x1157=(sj8)*(sj8);
IkReal x1158=((IkReal(2.00000000000000))*(cj8)*(sj8));
dummyeval[0]=((((r00)*(r01)*(x1158)))+(((r10)*(r11)*(x1158)))+(((x1156)*((r11)*(r11))))+(((x1157)*((r10)*(r10))))+(((x1156)*((r01)*(r01))))+(((x1157)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst38;
IkReal x1159=(cj8)*(cj8);
IkReal x1160=(sj8)*(sj8);
IkReal x1161=((r00)*(r11));
IkReal x1162=((r02)*(sj7));
IkReal x1163=((cj7)*(x1159));
IkReal x1164=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1165=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1166=((cj7)*(x1160));
gconst38=IKsign(((((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1164)))+(((x1161)*(x1166)))+(((r10)*(sj8)*(x1162)))+(((x1161)*(x1163)))+(((cj8)*(r11)*(x1162)))+(((IkReal(-1.00000000000000))*(x1165)*(x1166)))+(((IkReal(-1.00000000000000))*(x1163)*(x1165)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1164)))));
IkReal x1167=(cj8)*(cj8);
IkReal x1168=(sj8)*(sj8);
IkReal x1169=((r00)*(r11));
IkReal x1170=((r02)*(sj7));
IkReal x1171=((cj7)*(x1167));
IkReal x1172=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1173=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1174=((cj7)*(x1168));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1171)*(x1173)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1172)))+(((r10)*(sj8)*(x1170)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1172)))+(((x1169)*(x1171)))+(((cj8)*(r11)*(x1170)))+(((x1169)*(x1174)))+(((IkReal(-1.00000000000000))*(x1173)*(x1174))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1175=((cj7)*(cj8));
IkReal x1176=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst38)*(((((r10)*(x1175)))+(((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x1176))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*(((((IkReal(-1.00000000000000))*(r01)*(x1176)))+(((r00)*(x1175)))+(((r02)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst38)*(((((r10)*(x1175)))+(((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x1176)))))), ((gconst38)*(((((IkReal(-1.00000000000000))*(r01)*(x1176)))+(((r00)*(x1175)))+(((r02)*(sj7)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1177=IKsin(j3);
IkReal x1178=IKcos(j3);
IkReal x1179=((r01)*(sj8));
IkReal x1180=((cj8)*(r00));
IkReal x1181=((r00)*(sj8));
IkReal x1182=((cj8)*(r11));
IkReal x1183=((r11)*(sj8));
IkReal x1184=((r10)*(sj8));
IkReal x1185=((cj8)*(r10));
IkReal x1186=((cj7)*(x1177));
IkReal x1187=((sj7)*(x1178));
IkReal x1188=((IkReal(1.00000000000000))*(x1177));
IkReal x1189=((IkReal(1.00000000000000))*(x1178));
IkReal x1190=((cj8)*(x1177));
IkReal x1191=((IkReal(1.00000000000000))*(x1183));
IkReal x1192=((sj7)*(x1177));
IkReal x1193=((cj7)*(x1178));
evalcond[0]=((IkReal(1.00000000000000))+(((r01)*(x1190)))+(((x1177)*(x1181)))+(((IkReal(-1.00000000000000))*(x1184)*(x1189)))+(((IkReal(-1.00000000000000))*(x1182)*(x1189))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1189)))+(((IkReal(-1.00000000000000))*(x1181)*(x1189)))+(((IkReal(-1.00000000000000))*(x1184)*(x1188)))+(((IkReal(-1.00000000000000))*(x1182)*(x1188))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1180)*(x1186)))+(((x1179)*(x1186)))+(((x1185)*(x1193)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1188)))+(((r12)*(x1187)))+(((IkReal(-1.00000000000000))*(cj7)*(x1183)*(x1189))));
evalcond[3]=((((x1179)*(x1192)))+(((x1185)*(x1187)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1189)))+(((r02)*(x1186)))+(((IkReal(-1.00000000000000))*(x1187)*(x1191)))+(((IkReal(-1.00000000000000))*(sj7)*(x1180)*(x1188))));
evalcond[4]=((((cj5)*(sj4)))+(((x1180)*(x1193)))+(((r12)*(x1192)))+(((x1185)*(x1186)))+(((IkReal(-1.00000000000000))*(x1186)*(x1191)))+(((IkReal(-1.00000000000000))*(cj7)*(x1179)*(x1189)))+(((cj4)*(sj5)))+(((r02)*(x1187))));
evalcond[5]=((((x1180)*(x1187)))+(((IkReal(-1.00000000000000))*(r12)*(x1186)))+(((IkReal(-1.00000000000000))*(sj7)*(x1183)*(x1188)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1189)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5)))+(((x1185)*(x1192)))+(((IkReal(-1.00000000000000))*(x1179)*(x1187)))+(((cj4)*(cj5))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst37)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst37)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst37)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst37)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1194=IKsin(j3);
IkReal x1195=IKcos(j3);
IkReal x1196=((r01)*(sj8));
IkReal x1197=((cj8)*(r00));
IkReal x1198=((r00)*(sj8));
IkReal x1199=((cj8)*(r11));
IkReal x1200=((r11)*(sj8));
IkReal x1201=((r10)*(sj8));
IkReal x1202=((cj8)*(r10));
IkReal x1203=((cj7)*(x1194));
IkReal x1204=((sj7)*(x1195));
IkReal x1205=((IkReal(1.00000000000000))*(x1194));
IkReal x1206=((IkReal(1.00000000000000))*(x1195));
IkReal x1207=((cj8)*(x1194));
IkReal x1208=((IkReal(1.00000000000000))*(x1200));
IkReal x1209=((sj7)*(x1194));
IkReal x1210=((cj7)*(x1195));
evalcond[0]=((IkReal(1.00000000000000))+(((x1194)*(x1198)))+(((IkReal(-1.00000000000000))*(x1201)*(x1206)))+(((r01)*(x1207)))+(((IkReal(-1.00000000000000))*(x1199)*(x1206))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1201)*(x1205)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1206)))+(((IkReal(-1.00000000000000))*(x1199)*(x1205)))+(((IkReal(-1.00000000000000))*(x1198)*(x1206))));
evalcond[2]=((((x1202)*(x1210)))+(((r12)*(x1204)))+(((x1196)*(x1203)))+(((IkReal(-1.00000000000000))*(x1197)*(x1203)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1205)))+(((IkReal(-1.00000000000000))*(cj7)*(x1200)*(x1206))));
evalcond[3]=((((x1202)*(x1204)))+(((IkReal(-1.00000000000000))*(sj7)*(x1197)*(x1205)))+(((x1196)*(x1209)))+(((IkReal(-1.00000000000000))*(x1204)*(x1208)))+(((r02)*(x1203)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1206))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1203)*(x1208)))+(((IkReal(-1.00000000000000))*(cj7)*(x1196)*(x1206)))+(((cj5)*(sj4)))+(((r12)*(x1209)))+(((r02)*(x1204)))+(((x1202)*(x1203)))+(((cj4)*(sj5)))+(((x1197)*(x1210))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x1200)*(x1205)))+(((x1197)*(x1204)))+(((IkReal(-1.00000000000000))*(x1196)*(x1204)))+(((IkReal(-1.00000000000000))*(r12)*(x1203)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1206)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5)))+(((cj4)*(cj5)))+(((x1202)*(x1209))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst32)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst32)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst32)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst32)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1211=IKsin(j3);
IkReal x1212=IKcos(j3);
IkReal x1213=((IkReal(1.00000000000000))*(sj8));
IkReal x1214=((IkReal(1.00000000000000))*(cj8));
IkReal x1215=((r01)*(sj8));
IkReal x1216=((cj8)*(r10));
IkReal x1217=((sj7)*(x1212));
IkReal x1218=((cj7)*(x1211));
IkReal x1219=((r00)*(x1211));
IkReal x1220=((sj7)*(x1211));
IkReal x1221=((cj7)*(x1212));
evalcond[0]=((IkReal(1.00000000000000))+(((sj8)*(x1219)))+(((cj8)*(r01)*(x1211)))+(((IkReal(-1.00000000000000))*(r11)*(x1212)*(x1214)))+(((IkReal(-1.00000000000000))*(r10)*(x1212)*(x1213))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x1211)*(x1213)))+(((IkReal(-1.00000000000000))*(r00)*(x1212)*(x1213)))+(((IkReal(-1.00000000000000))*(r11)*(x1211)*(x1214)))+(((IkReal(-1.00000000000000))*(r01)*(x1212)*(x1214))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(x1213)*(x1221)))+(((x1215)*(x1218)))+(((IkReal(-1.00000000000000))*(r02)*(x1220)))+(((r12)*(x1217)))+(((x1216)*(x1221)))+(((IkReal(-1.00000000000000))*(r00)*(x1214)*(x1218))));
evalcond[3]=((((x1215)*(x1220)))+(((r02)*(x1218)))+(((IkReal(-1.00000000000000))*(r11)*(x1213)*(x1217)))+(((IkReal(-1.00000000000000))*(r12)*(x1221)))+(((IkReal(-1.00000000000000))*(sj7)*(x1214)*(x1219)))+(((x1216)*(x1217))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst36;
gconst36=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1222=((cj3)*(cj5));
IkReal x1223=((r02)*(sj7));
IkReal x1224=((cj8)*(r00));
IkReal x1225=((r22)*(sj7));
IkReal x1226=((cj5)*(sj3));
IkReal x1227=((cj7)*(cj8));
IkReal x1228=((IkReal(1.00000000000000))*(sj5));
IkReal x1229=((r12)*(sj7));
IkReal x1230=((sj3)*(sj5));
IkReal x1231=((cj3)*(cj7)*(sj5));
IkReal x1232=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(r01)*(x1222)*(x1232)))+(((IkReal(-1.00000000000000))*(r11)*(x1226)*(x1232)))+(((cj7)*(x1222)*(x1224)))+(((x1226)*(x1229)))+(((IkReal(-1.00000000000000))*(x1225)*(x1228)))+(((x1222)*(x1223)))+(((IkReal(-1.00000000000000))*(r20)*(x1227)*(x1228)))+(((r10)*(x1226)*(x1227)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1232)))+(((x1224)*(x1231)))+(((r10)*(x1227)*(x1230)))+(((cj5)*(r20)*(x1227)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1228)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1228)))+(((cj3)*(sj5)*(x1223)))+(((x1229)*(x1230)))+(((cj5)*(x1225))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst36)*(((((IkReal(-1.00000000000000))*(r01)*(x1222)*(x1232)))+(((IkReal(-1.00000000000000))*(r11)*(x1226)*(x1232)))+(((cj7)*(x1222)*(x1224)))+(((x1226)*(x1229)))+(((IkReal(-1.00000000000000))*(x1225)*(x1228)))+(((x1222)*(x1223)))+(((IkReal(-1.00000000000000))*(r20)*(x1227)*(x1228)))+(((r10)*(x1226)*(x1227)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst36)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1232)))+(((x1224)*(x1231)))+(((r10)*(x1227)*(x1230)))+(((cj5)*(r20)*(x1227)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1228)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1228)))+(((cj3)*(sj5)*(x1223)))+(((x1229)*(x1230)))+(((cj5)*(x1225)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1233=IKsin(j4);
IkReal x1234=IKcos(j4);
IkReal x1235=((IkReal(1.00000000000000))*(cj7));
IkReal x1236=((cj8)*(r20));
IkReal x1237=((cj3)*(r02));
IkReal x1238=((IkReal(1.00000000000000))*(sj7));
IkReal x1239=((sj3)*(sj7));
IkReal x1240=((r21)*(sj8));
IkReal x1241=((cj8)*(r10));
IkReal x1242=((cj5)*(x1233));
IkReal x1243=((sj5)*(x1234));
IkReal x1244=((r11)*(sj3)*(sj8));
IkReal x1245=((cj3)*(cj8)*(r00));
IkReal x1246=((cj5)*(x1234));
IkReal x1247=((cj3)*(r01)*(sj8));
IkReal x1248=((sj5)*(x1233));
IkReal x1249=((x1243)+(x1242));
evalcond[0]=((x1248)+(((IkReal(-1.00000000000000))*(x1246)))+(((cj7)*(x1240)))+(((IkReal(-1.00000000000000))*(x1235)*(x1236)))+(((IkReal(-1.00000000000000))*(r22)*(x1238))));
evalcond[1]=((((sj7)*(x1240)))+(((IkReal(-1.00000000000000))*(x1236)*(x1238)))+(((cj7)*(r22)))+(x1249));
evalcond[2]=((((r12)*(x1239)))+(x1249)+(((cj7)*(x1245)))+(((sj7)*(x1237)))+(((IkReal(-1.00000000000000))*(x1235)*(x1247)))+(((IkReal(-1.00000000000000))*(x1235)*(x1244)))+(((cj7)*(sj3)*(x1241))));
evalcond[3]=((((x1239)*(x1241)))+(((IkReal(-1.00000000000000))*(x1235)*(x1237)))+(x1246)+(((sj7)*(x1245)))+(((IkReal(-1.00000000000000))*(x1238)*(x1244)))+(((IkReal(-1.00000000000000))*(x1248)))+(((IkReal(-1.00000000000000))*(x1238)*(x1247)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1235))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1250=((cj8)*(r20));
IkReal x1251=((IkReal(1.00000000000000))*(sj5));
IkReal x1252=((cj7)*(r22));
IkReal x1253=((cj5)*(cj7));
IkReal x1254=((cj5)*(sj7));
IkReal x1255=((r21)*(sj8));
if( IKabs(((gconst35)*(((((x1254)*(x1255)))+(((IkReal(-1.00000000000000))*(x1250)*(x1254)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1251)))+(((cj5)*(x1252)))+(((IkReal(-1.00000000000000))*(cj7)*(x1250)*(x1251)))+(((cj7)*(sj5)*(x1255))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((x1250)*(x1253)))+(((sj5)*(sj7)*(x1255)))+(((r22)*(x1254)))+(((IkReal(-1.00000000000000))*(sj7)*(x1250)*(x1251)))+(((IkReal(-1.00000000000000))*(x1253)*(x1255)))+(((sj5)*(x1252))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst35)*(((((x1254)*(x1255)))+(((IkReal(-1.00000000000000))*(x1250)*(x1254)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1251)))+(((cj5)*(x1252)))+(((IkReal(-1.00000000000000))*(cj7)*(x1250)*(x1251)))+(((cj7)*(sj5)*(x1255)))))), ((gconst35)*(((((x1250)*(x1253)))+(((sj5)*(sj7)*(x1255)))+(((r22)*(x1254)))+(((IkReal(-1.00000000000000))*(sj7)*(x1250)*(x1251)))+(((IkReal(-1.00000000000000))*(x1253)*(x1255)))+(((sj5)*(x1252)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1256=IKsin(j4);
IkReal x1257=IKcos(j4);
IkReal x1258=((IkReal(1.00000000000000))*(cj7));
IkReal x1259=((cj8)*(r20));
IkReal x1260=((cj3)*(r02));
IkReal x1261=((IkReal(1.00000000000000))*(sj7));
IkReal x1262=((sj3)*(sj7));
IkReal x1263=((r21)*(sj8));
IkReal x1264=((cj8)*(r10));
IkReal x1265=((cj5)*(x1256));
IkReal x1266=((sj5)*(x1257));
IkReal x1267=((r11)*(sj3)*(sj8));
IkReal x1268=((cj3)*(cj8)*(r00));
IkReal x1269=((cj5)*(x1257));
IkReal x1270=((cj3)*(r01)*(sj8));
IkReal x1271=((sj5)*(x1256));
IkReal x1272=((x1266)+(x1265));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1269)))+(((IkReal(-1.00000000000000))*(r22)*(x1261)))+(x1271)+(((IkReal(-1.00000000000000))*(x1258)*(x1259)))+(((cj7)*(x1263))));
evalcond[1]=((((cj7)*(r22)))+(x1272)+(((sj7)*(x1263)))+(((IkReal(-1.00000000000000))*(x1259)*(x1261))));
evalcond[2]=((((r12)*(x1262)))+(((IkReal(-1.00000000000000))*(x1258)*(x1267)))+(((cj7)*(sj3)*(x1264)))+(x1272)+(((cj7)*(x1268)))+(((sj7)*(x1260)))+(((IkReal(-1.00000000000000))*(x1258)*(x1270))));
evalcond[3]=((((x1262)*(x1264)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1258)))+(((IkReal(-1.00000000000000))*(x1271)))+(((IkReal(-1.00000000000000))*(x1261)*(x1270)))+(((IkReal(-1.00000000000000))*(x1258)*(x1260)))+(((IkReal(-1.00000000000000))*(x1261)*(x1267)))+(x1269)+(((sj7)*(x1268))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1273=((IkReal(1.00000000000000))*(sj7));
IkReal x1274=((npy)*(sj8));
IkReal x1275=((cj8)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x1275)))+(((IkReal(-1.00000000000000))*(npz)*(x1273)))+(((cj7)*(x1274)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(-0.0200000000000000))+(((cj7)*(npz)))+(((sj7)*(x1274)))+(((IkReal(0.0800000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x1273)*(x1275))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
IkReal x1276=(cj8)*(cj8);
IkReal x1277=(sj8)*(sj8);
IkReal x1278=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1279=((IkReal(1.00000000000000))*(x1276));
IkReal x1280=((IkReal(1.00000000000000))*(x1277));
gconst39=IKsign(((((IkReal(-1.00000000000000))*(x1280)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1278)))+(((IkReal(-1.00000000000000))*(x1279)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1278)))+(((IkReal(-1.00000000000000))*(x1279)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1280)*((r00)*(r00))))));
IkReal x1281=(cj8)*(cj8);
IkReal x1282=(sj8)*(sj8);
IkReal x1283=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1284=((IkReal(1.00000000000000))*(x1281));
IkReal x1285=((IkReal(1.00000000000000))*(x1282));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1284)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1285)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1284)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1285)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1283)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1283))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst41;
gconst41=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst40;
IkReal x1286=(sj8)*(sj8);
IkReal x1287=(cj8)*(cj8);
IkReal x1288=((sj7)*(sj8));
IkReal x1289=((IkReal(1.00000000000000))*(r02));
IkReal x1290=((r01)*(r10));
IkReal x1291=((cj8)*(sj7));
IkReal x1292=((cj7)*(x1286));
IkReal x1293=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1294=((cj7)*(x1287));
gconst40=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x1288)*(x1289)))+(((IkReal(-1.00000000000000))*(x1293)*(x1294)))+(((IkReal(-1.00000000000000))*(r11)*(x1289)*(x1291)))+(((IkReal(-1.00000000000000))*(x1292)*(x1293)))+(((r00)*(r12)*(x1288)))+(((r01)*(r12)*(x1291)))+(((x1290)*(x1294)))+(((x1290)*(x1292)))));
IkReal x1295=(sj8)*(sj8);
IkReal x1296=(cj8)*(cj8);
IkReal x1297=((sj7)*(sj8));
IkReal x1298=((IkReal(1.00000000000000))*(r02));
IkReal x1299=((r01)*(r10));
IkReal x1300=((cj8)*(sj7));
IkReal x1301=((cj7)*(x1295));
IkReal x1302=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1303=((cj7)*(x1296));
dummyeval[0]=((((r00)*(r12)*(x1297)))+(((x1299)*(x1301)))+(((r01)*(r12)*(x1300)))+(((IkReal(-1.00000000000000))*(x1302)*(x1303)))+(((IkReal(-1.00000000000000))*(r11)*(x1298)*(x1300)))+(((x1299)*(x1303)))+(((IkReal(-1.00000000000000))*(r10)*(x1297)*(x1298)))+(((IkReal(-1.00000000000000))*(x1301)*(x1302))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1304=((cj7)*(cj8));
IkReal x1305=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst40)*(((((r10)*(x1304)))+(((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x1305))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*(((((r02)*(sj7)))+(((r00)*(x1304)))+(((IkReal(-1.00000000000000))*(r01)*(x1305))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst40)*(((((r10)*(x1304)))+(((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x1305)))))), ((gconst40)*(((((r02)*(sj7)))+(((r00)*(x1304)))+(((IkReal(-1.00000000000000))*(r01)*(x1305)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1306=IKsin(j3);
IkReal x1307=IKcos(j3);
IkReal x1308=((IkReal(1.00000000000000))*(sj8));
IkReal x1309=((IkReal(1.00000000000000))*(cj8));
IkReal x1310=((r01)*(sj8));
IkReal x1311=((cj8)*(r10));
IkReal x1312=((sj7)*(x1307));
IkReal x1313=((cj7)*(x1306));
IkReal x1314=((r00)*(x1306));
IkReal x1315=((sj7)*(x1306));
IkReal x1316=((cj7)*(x1307));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1307)*(x1308)))+(((sj8)*(x1314)))+(((cj8)*(r01)*(x1306)))+(((IkReal(-1.00000000000000))*(r11)*(x1307)*(x1309))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x1306)*(x1309)))+(((IkReal(-1.00000000000000))*(r10)*(x1306)*(x1308)))+(((IkReal(-1.00000000000000))*(r00)*(x1307)*(x1308)))+(((IkReal(-1.00000000000000))*(r01)*(x1307)*(x1309))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x1315)))+(((r12)*(x1312)))+(((x1310)*(x1313)))+(((IkReal(-1.00000000000000))*(r00)*(x1309)*(x1313)))+(((x1311)*(x1316)))+(((IkReal(-1.00000000000000))*(r11)*(x1308)*(x1316))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x1308)*(x1312)))+(((x1310)*(x1315)))+(((IkReal(-1.00000000000000))*(sj7)*(x1309)*(x1314)))+(((IkReal(-1.00000000000000))*(r12)*(x1316)))+(((x1311)*(x1312)))+(((r02)*(x1313))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1317=((cj3)*(cj5));
IkReal x1318=((r02)*(sj7));
IkReal x1319=((cj8)*(r00));
IkReal x1320=((r22)*(sj7));
IkReal x1321=((cj5)*(sj3));
IkReal x1322=((cj7)*(cj8));
IkReal x1323=((IkReal(1.00000000000000))*(sj5));
IkReal x1324=((r12)*(sj7));
IkReal x1325=((sj3)*(sj5));
IkReal x1326=((cj3)*(cj7)*(sj5));
IkReal x1327=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst43)*(((((x1321)*(x1324)))+(((cj7)*(x1317)*(x1319)))+(((IkReal(-1.00000000000000))*(r20)*(x1322)*(x1323)))+(((IkReal(-1.00000000000000))*(r11)*(x1321)*(x1327)))+(((IkReal(-1.00000000000000))*(r01)*(x1317)*(x1327)))+(((r10)*(x1321)*(x1322)))+(((x1317)*(x1318)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(x1320)*(x1323))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((cj5)*(x1320)))+(((r10)*(x1322)*(x1325)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1327)))+(((cj3)*(sj5)*(x1318)))+(((x1324)*(x1325)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1323)))+(((cj5)*(r20)*(x1322)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1323)))+(((x1319)*(x1326))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst43)*(((((x1321)*(x1324)))+(((cj7)*(x1317)*(x1319)))+(((IkReal(-1.00000000000000))*(r20)*(x1322)*(x1323)))+(((IkReal(-1.00000000000000))*(r11)*(x1321)*(x1327)))+(((IkReal(-1.00000000000000))*(r01)*(x1317)*(x1327)))+(((r10)*(x1321)*(x1322)))+(((x1317)*(x1318)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(x1320)*(x1323)))))), ((gconst43)*(((((cj5)*(x1320)))+(((r10)*(x1322)*(x1325)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1327)))+(((cj3)*(sj5)*(x1318)))+(((x1324)*(x1325)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1323)))+(((cj5)*(r20)*(x1322)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1323)))+(((x1319)*(x1326)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1328=IKcos(j4);
IkReal x1329=IKsin(j4);
IkReal x1330=((IkReal(1.00000000000000))*(cj7));
IkReal x1331=((cj8)*(r20));
IkReal x1332=((cj3)*(r02));
IkReal x1333=((IkReal(1.00000000000000))*(sj7));
IkReal x1334=((sj3)*(sj7));
IkReal x1335=((r21)*(sj8));
IkReal x1336=((IkReal(1.00000000000000))*(cj5));
IkReal x1337=((cj8)*(r10));
IkReal x1338=((sj5)*(x1329));
IkReal x1339=((sj5)*(x1328));
IkReal x1340=((r11)*(sj3)*(sj8));
IkReal x1341=((cj3)*(cj8)*(r00));
IkReal x1342=((cj3)*(r01)*(sj8));
IkReal x1343=((x1328)*(x1336));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1333)))+(((cj7)*(x1335)))+(x1338)+(((IkReal(-1.00000000000000))*(x1330)*(x1331)))+(((IkReal(-1.00000000000000))*(x1343))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x1331)*(x1333)))+(((IkReal(-1.00000000000000))*(x1339)))+(((IkReal(-1.00000000000000))*(x1329)*(x1336)))+(((sj7)*(x1335))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1330)*(x1342)))+(((r12)*(x1334)))+(((cj7)*(sj3)*(x1337)))+(((IkReal(-1.00000000000000))*(x1330)*(x1340)))+(((cj5)*(x1329)))+(x1339)+(((sj7)*(x1332)))+(((cj7)*(x1341))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1330)))+(((IkReal(-1.00000000000000))*(x1333)*(x1342)))+(((sj7)*(x1341)))+(((x1334)*(x1337)))+(x1338)+(((IkReal(-1.00000000000000))*(x1333)*(x1340)))+(((IkReal(-1.00000000000000))*(x1343)))+(((IkReal(-1.00000000000000))*(x1330)*(x1332))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1344=((cj7)*(sj5));
IkReal x1345=((r21)*(sj8));
IkReal x1346=((cj5)*(cj7));
IkReal x1347=((cj8)*(r20));
IkReal x1348=((sj5)*(sj7));
IkReal x1349=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst42)*(((((r22)*(x1348)))+(((IkReal(-1.00000000000000))*(x1347)*(x1349)))+(((x1344)*(x1347)))+(((r22)*(x1346)))+(((cj5)*(sj7)*(x1345)))+(((IkReal(-1.00000000000000))*(x1344)*(x1345))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(r22)*(x1349)))+(((r22)*(x1344)))+(((x1345)*(x1346)))+(((x1345)*(x1348)))+(((IkReal(-1.00000000000000))*(x1346)*(x1347)))+(((IkReal(-1.00000000000000))*(x1347)*(x1348))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst42)*(((((r22)*(x1348)))+(((IkReal(-1.00000000000000))*(x1347)*(x1349)))+(((x1344)*(x1347)))+(((r22)*(x1346)))+(((cj5)*(sj7)*(x1345)))+(((IkReal(-1.00000000000000))*(x1344)*(x1345)))))), ((gconst42)*(((((IkReal(-1.00000000000000))*(r22)*(x1349)))+(((r22)*(x1344)))+(((x1345)*(x1346)))+(((x1345)*(x1348)))+(((IkReal(-1.00000000000000))*(x1346)*(x1347)))+(((IkReal(-1.00000000000000))*(x1347)*(x1348)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1350=IKcos(j4);
IkReal x1351=IKsin(j4);
IkReal x1352=((IkReal(1.00000000000000))*(cj7));
IkReal x1353=((cj8)*(r20));
IkReal x1354=((cj3)*(r02));
IkReal x1355=((IkReal(1.00000000000000))*(sj7));
IkReal x1356=((sj3)*(sj7));
IkReal x1357=((r21)*(sj8));
IkReal x1358=((IkReal(1.00000000000000))*(cj5));
IkReal x1359=((cj8)*(r10));
IkReal x1360=((sj5)*(x1351));
IkReal x1361=((sj5)*(x1350));
IkReal x1362=((r11)*(sj3)*(sj8));
IkReal x1363=((cj3)*(cj8)*(r00));
IkReal x1364=((cj3)*(r01)*(sj8));
IkReal x1365=((x1350)*(x1358));
evalcond[0]=((x1360)+(((cj7)*(x1357)))+(((IkReal(-1.00000000000000))*(x1365)))+(((IkReal(-1.00000000000000))*(x1352)*(x1353)))+(((IkReal(-1.00000000000000))*(r22)*(x1355))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1353)*(x1355)))+(((IkReal(-1.00000000000000))*(x1351)*(x1358)))+(((cj7)*(r22)))+(((sj7)*(x1357)))+(((IkReal(-1.00000000000000))*(x1361))));
evalcond[2]=((x1361)+(((IkReal(-1.00000000000000))*(x1352)*(x1362)))+(((cj7)*(x1363)))+(((cj7)*(sj3)*(x1359)))+(((IkReal(-1.00000000000000))*(x1352)*(x1364)))+(((sj7)*(x1354)))+(((r12)*(x1356)))+(((cj5)*(x1351))));
evalcond[3]=((x1360)+(((IkReal(-1.00000000000000))*(x1355)*(x1362)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1352)))+(((IkReal(-1.00000000000000))*(x1355)*(x1364)))+(((IkReal(-1.00000000000000))*(x1365)))+(((IkReal(-1.00000000000000))*(x1352)*(x1354)))+(((x1356)*(x1359)))+(((sj7)*(x1363))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1366=((cj7)*(sj5));
IkReal x1367=((r21)*(sj8));
IkReal x1368=((cj5)*(cj7));
IkReal x1369=((cj8)*(r20));
IkReal x1370=((IkReal(1.00000000000000))*(sj7));
IkReal x1371=((sj5)*(sj7));
IkReal x1372=((IkReal(1.00000000000000))*(cj5)*(x1369));
if( IKabs(((gconst41)*(((((r22)*(x1371)))+(((IkReal(-1.00000000000000))*(x1366)*(x1367)))+(((r22)*(x1368)))+(((cj5)*(sj7)*(x1367)))+(((IkReal(-1.00000000000000))*(cj5)*(x1369)*(x1370)))+(((x1366)*(x1369))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*(((((r22)*(x1366)))+(((IkReal(-1.00000000000000))*(x1368)*(x1369)))+(((IkReal(-1.00000000000000))*(sj5)*(x1369)*(x1370)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)*(x1370)))+(((x1367)*(x1368)))+(((x1367)*(x1371))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst41)*(((((r22)*(x1371)))+(((IkReal(-1.00000000000000))*(x1366)*(x1367)))+(((r22)*(x1368)))+(((cj5)*(sj7)*(x1367)))+(((IkReal(-1.00000000000000))*(cj5)*(x1369)*(x1370)))+(((x1366)*(x1369)))))), ((gconst41)*(((((r22)*(x1366)))+(((IkReal(-1.00000000000000))*(x1368)*(x1369)))+(((IkReal(-1.00000000000000))*(sj5)*(x1369)*(x1370)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)*(x1370)))+(((x1367)*(x1368)))+(((x1367)*(x1371)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1373=IKcos(j4);
IkReal x1374=IKsin(j4);
IkReal x1375=((IkReal(1.00000000000000))*(cj5));
IkReal x1376=((r21)*(sj8));
IkReal x1377=((IkReal(1.00000000000000))*(cj8)*(r20));
evalcond[0]=((((cj7)*(x1376)))+(((IkReal(-1.00000000000000))*(x1373)*(x1375)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x1377)))+(((sj5)*(x1374))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x1374)*(x1375)))+(((IkReal(-1.00000000000000))*(sj7)*(x1377)))+(((sj7)*(x1376)))+(((IkReal(-1.00000000000000))*(sj5)*(x1373))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst44;
IkReal x1378=(cj8)*(cj8);
IkReal x1379=(sj8)*(sj8);
IkReal x1380=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1381=((IkReal(1.00000000000000))*(x1378));
IkReal x1382=((IkReal(1.00000000000000))*(x1379));
gconst44=IKsign(((((IkReal(-1.00000000000000))*(x1382)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1382)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1380)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1380)))+(((IkReal(-1.00000000000000))*(x1381)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1381)*((r11)*(r11))))));
IkReal x1383=(cj8)*(cj8);
IkReal x1384=(sj8)*(sj8);
IkReal x1385=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1386=((IkReal(1.00000000000000))*(x1383));
IkReal x1387=((IkReal(1.00000000000000))*(x1384));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r01)*(x1385)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1385)))+(((IkReal(-1.00000000000000))*(x1387)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1387)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1386)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1386)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst45;
IkReal x1388=(sj8)*(sj8);
IkReal x1389=(cj8)*(cj8);
IkReal x1390=((sj7)*(sj8));
IkReal x1391=((IkReal(1.00000000000000))*(r02));
IkReal x1392=((r01)*(r10));
IkReal x1393=((cj8)*(sj7));
IkReal x1394=((cj7)*(x1388));
IkReal x1395=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1396=((cj7)*(x1389));
gconst45=IKsign(((((IkReal(-1.00000000000000))*(r11)*(x1391)*(x1393)))+(((IkReal(-1.00000000000000))*(x1394)*(x1395)))+(((x1392)*(x1396)))+(((r00)*(r12)*(x1390)))+(((x1392)*(x1394)))+(((IkReal(-1.00000000000000))*(x1395)*(x1396)))+(((r01)*(r12)*(x1393)))+(((IkReal(-1.00000000000000))*(r10)*(x1390)*(x1391)))));
IkReal x1397=(sj8)*(sj8);
IkReal x1398=(cj8)*(cj8);
IkReal x1399=((sj7)*(sj8));
IkReal x1400=((IkReal(1.00000000000000))*(r02));
IkReal x1401=((r01)*(r10));
IkReal x1402=((cj8)*(sj7));
IkReal x1403=((cj7)*(x1397));
IkReal x1404=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1405=((cj7)*(x1398));
dummyeval[0]=((((x1401)*(x1405)))+(((IkReal(-1.00000000000000))*(r11)*(x1400)*(x1402)))+(((IkReal(-1.00000000000000))*(r10)*(x1399)*(x1400)))+(((r00)*(r12)*(x1399)))+(((x1401)*(x1403)))+(((r01)*(r12)*(x1402)))+(((IkReal(-1.00000000000000))*(x1404)*(x1405)))+(((IkReal(-1.00000000000000))*(x1403)*(x1404))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1406=((cj7)*(cj8));
IkReal x1407=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst45)*(((((r10)*(x1406)))+(((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x1407))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst45)*(((((r00)*(x1406)))+(((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x1407))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst45)*(((((r10)*(x1406)))+(((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x1407)))))), ((gconst45)*(((((r00)*(x1406)))+(((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x1407)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1408=IKsin(j3);
IkReal x1409=IKcos(j3);
IkReal x1410=((r01)*(sj8));
IkReal x1411=((cj8)*(r00));
IkReal x1412=((r00)*(sj8));
IkReal x1413=((cj8)*(r11));
IkReal x1414=((r11)*(sj8));
IkReal x1415=((r10)*(sj8));
IkReal x1416=((cj8)*(r10));
IkReal x1417=((cj7)*(x1408));
IkReal x1418=((sj7)*(x1409));
IkReal x1419=((IkReal(1.00000000000000))*(x1408));
IkReal x1420=((IkReal(1.00000000000000))*(x1409));
IkReal x1421=((cj8)*(x1408));
IkReal x1422=((IkReal(1.00000000000000))*(x1414));
IkReal x1423=((sj7)*(x1408));
IkReal x1424=((cj7)*(x1409));
evalcond[0]=((IkReal(-1.00000000000000))+(((r01)*(x1421)))+(((x1408)*(x1412)))+(((IkReal(-1.00000000000000))*(x1415)*(x1420)))+(((IkReal(-1.00000000000000))*(x1413)*(x1420))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1413)*(x1419)))+(((IkReal(-1.00000000000000))*(x1412)*(x1420)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1420)))+(((IkReal(-1.00000000000000))*(x1415)*(x1419))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1419)))+(((x1410)*(x1417)))+(((x1416)*(x1424)))+(((IkReal(-1.00000000000000))*(x1411)*(x1417)))+(((r12)*(x1418)))+(((IkReal(-1.00000000000000))*(cj7)*(x1414)*(x1420))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1420)))+(((r02)*(x1417)))+(((x1416)*(x1418)))+(((IkReal(-1.00000000000000))*(x1418)*(x1422)))+(((x1410)*(x1423)))+(((IkReal(-1.00000000000000))*(sj7)*(x1411)*(x1419))));
evalcond[4]=((((r02)*(x1418)))+(((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(cj7)*(x1410)*(x1420)))+(((x1416)*(x1417)))+(((IkReal(-1.00000000000000))*(x1417)*(x1422)))+(((x1411)*(x1424)))+(((cj4)*(sj5)))+(((r12)*(x1423))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(x1417)))+(((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(x1410)*(x1418)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((x1416)*(x1423)))+(((IkReal(-1.00000000000000))*(sj7)*(x1414)*(x1419)))+(((x1411)*(x1418)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1420))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst44)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst44)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst44)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst44)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1425=IKsin(j3);
IkReal x1426=IKcos(j3);
IkReal x1427=((r01)*(sj8));
IkReal x1428=((cj8)*(r00));
IkReal x1429=((r00)*(sj8));
IkReal x1430=((cj8)*(r11));
IkReal x1431=((r11)*(sj8));
IkReal x1432=((r10)*(sj8));
IkReal x1433=((cj8)*(r10));
IkReal x1434=((cj7)*(x1425));
IkReal x1435=((sj7)*(x1426));
IkReal x1436=((IkReal(1.00000000000000))*(x1425));
IkReal x1437=((IkReal(1.00000000000000))*(x1426));
IkReal x1438=((cj8)*(x1425));
IkReal x1439=((IkReal(1.00000000000000))*(x1431));
IkReal x1440=((sj7)*(x1425));
IkReal x1441=((cj7)*(x1426));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1430)*(x1437)))+(((IkReal(-1.00000000000000))*(x1432)*(x1437)))+(((x1425)*(x1429)))+(((r01)*(x1438))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1429)*(x1437)))+(((IkReal(-1.00000000000000))*(x1432)*(x1436)))+(((IkReal(-1.00000000000000))*(x1430)*(x1436)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1437))));
evalcond[2]=((((x1433)*(x1441)))+(((IkReal(-1.00000000000000))*(x1428)*(x1434)))+(((r12)*(x1435)))+(((IkReal(-1.00000000000000))*(cj7)*(x1431)*(x1437)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1436)))+(((x1427)*(x1434))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj7)*(x1428)*(x1436)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1437)))+(((x1427)*(x1440)))+(((r02)*(x1434)))+(((x1433)*(x1435)))+(((IkReal(-1.00000000000000))*(x1435)*(x1439))));
evalcond[4]=((((r12)*(x1440)))+(((IkReal(-1.00000000000000))*(x1434)*(x1439)))+(((cj5)*(sj4)))+(((r02)*(x1435)))+(((x1428)*(x1441)))+(((IkReal(-1.00000000000000))*(cj7)*(x1427)*(x1437)))+(((cj4)*(sj5)))+(((x1433)*(x1434))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(x1434)))+(((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((x1428)*(x1435)))+(((IkReal(-1.00000000000000))*(x1427)*(x1435)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1437)))+(((x1433)*(x1440)))+(((IkReal(-1.00000000000000))*(sj7)*(x1431)*(x1436))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst39)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst39)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1442=IKsin(j3);
IkReal x1443=IKcos(j3);
IkReal x1444=((IkReal(1.00000000000000))*(sj8));
IkReal x1445=((IkReal(1.00000000000000))*(cj8));
IkReal x1446=((r01)*(sj8));
IkReal x1447=((cj8)*(r10));
IkReal x1448=((sj7)*(x1443));
IkReal x1449=((cj7)*(x1442));
IkReal x1450=((r00)*(x1442));
IkReal x1451=((sj7)*(x1442));
IkReal x1452=((cj7)*(x1443));
evalcond[0]=((IkReal(-1.00000000000000))+(((cj8)*(r01)*(x1442)))+(((IkReal(-1.00000000000000))*(r10)*(x1443)*(x1444)))+(((sj8)*(x1450)))+(((IkReal(-1.00000000000000))*(r11)*(x1443)*(x1445))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1443)*(x1445)))+(((IkReal(-1.00000000000000))*(r11)*(x1442)*(x1445)))+(((IkReal(-1.00000000000000))*(r10)*(x1442)*(x1444)))+(((IkReal(-1.00000000000000))*(r00)*(x1443)*(x1444))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x1451)))+(((IkReal(-1.00000000000000))*(r11)*(x1444)*(x1452)))+(((IkReal(-1.00000000000000))*(r00)*(x1445)*(x1449)))+(((r12)*(x1448)))+(((x1447)*(x1452)))+(((x1446)*(x1449))));
evalcond[3]=((((x1447)*(x1448)))+(((r02)*(x1449)))+(((IkReal(-1.00000000000000))*(sj7)*(x1445)*(x1450)))+(((IkReal(-1.00000000000000))*(r11)*(x1444)*(x1448)))+(((x1446)*(x1451)))+(((IkReal(-1.00000000000000))*(r12)*(x1452))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1453=((cj3)*(cj5));
IkReal x1454=((r02)*(sj7));
IkReal x1455=((cj8)*(r00));
IkReal x1456=((r22)*(sj7));
IkReal x1457=((cj5)*(sj3));
IkReal x1458=((cj7)*(cj8));
IkReal x1459=((IkReal(1.00000000000000))*(sj5));
IkReal x1460=((r12)*(sj7));
IkReal x1461=((sj3)*(sj5));
IkReal x1462=((cj3)*(cj7)*(sj5));
IkReal x1463=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst43)*(((((x1453)*(x1454)))+(((x1457)*(x1460)))+(((r10)*(x1457)*(x1458)))+(((IkReal(-1.00000000000000))*(r20)*(x1458)*(x1459)))+(((IkReal(-1.00000000000000))*(x1456)*(x1459)))+(((IkReal(-1.00000000000000))*(r11)*(x1457)*(x1463)))+(((cj7)*(x1453)*(x1455)))+(((IkReal(-1.00000000000000))*(r01)*(x1453)*(x1463)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((cj5)*(r20)*(x1458)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1463)))+(((x1460)*(x1461)))+(((x1455)*(x1462)))+(((cj3)*(sj5)*(x1454)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1459)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1459)))+(((cj5)*(x1456)))+(((r10)*(x1458)*(x1461))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst43)*(((((x1453)*(x1454)))+(((x1457)*(x1460)))+(((r10)*(x1457)*(x1458)))+(((IkReal(-1.00000000000000))*(r20)*(x1458)*(x1459)))+(((IkReal(-1.00000000000000))*(x1456)*(x1459)))+(((IkReal(-1.00000000000000))*(r11)*(x1457)*(x1463)))+(((cj7)*(x1453)*(x1455)))+(((IkReal(-1.00000000000000))*(r01)*(x1453)*(x1463)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst43)*(((((cj5)*(r20)*(x1458)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1463)))+(((x1460)*(x1461)))+(((x1455)*(x1462)))+(((cj3)*(sj5)*(x1454)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1459)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1459)))+(((cj5)*(x1456)))+(((r10)*(x1458)*(x1461)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1464=IKcos(j4);
IkReal x1465=IKsin(j4);
IkReal x1466=((IkReal(1.00000000000000))*(cj7));
IkReal x1467=((cj8)*(r20));
IkReal x1468=((cj3)*(r02));
IkReal x1469=((IkReal(1.00000000000000))*(sj7));
IkReal x1470=((sj3)*(sj7));
IkReal x1471=((r21)*(sj8));
IkReal x1472=((IkReal(1.00000000000000))*(cj5));
IkReal x1473=((cj8)*(r10));
IkReal x1474=((sj5)*(x1465));
IkReal x1475=((sj5)*(x1464));
IkReal x1476=((r11)*(sj3)*(sj8));
IkReal x1477=((cj3)*(cj8)*(r00));
IkReal x1478=((cj3)*(r01)*(sj8));
IkReal x1479=((x1464)*(x1472));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1466)*(x1467)))+(((cj7)*(x1471)))+(((IkReal(-1.00000000000000))*(x1479)))+(((IkReal(-1.00000000000000))*(r22)*(x1469)))+(x1474));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x1467)*(x1469)))+(((IkReal(-1.00000000000000))*(x1465)*(x1472)))+(((sj7)*(x1471)))+(((IkReal(-1.00000000000000))*(x1475))));
evalcond[2]=((((sj7)*(x1468)))+(((IkReal(-1.00000000000000))*(x1466)*(x1476)))+(((cj5)*(x1465)))+(((IkReal(-1.00000000000000))*(x1466)*(x1478)))+(((r12)*(x1470)))+(((cj7)*(x1477)))+(((cj7)*(sj3)*(x1473)))+(x1475));
evalcond[3]=((((x1470)*(x1473)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1466)))+(((IkReal(-1.00000000000000))*(x1469)*(x1478)))+(((IkReal(-1.00000000000000))*(x1479)))+(((IkReal(-1.00000000000000))*(x1466)*(x1468)))+(((IkReal(-1.00000000000000))*(x1469)*(x1476)))+(((sj7)*(x1477)))+(x1474));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1480=((cj7)*(sj5));
IkReal x1481=((r21)*(sj8));
IkReal x1482=((cj5)*(cj7));
IkReal x1483=((cj8)*(r20));
IkReal x1484=((sj5)*(sj7));
IkReal x1485=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(x1480)*(x1481)))+(((r22)*(x1484)))+(((r22)*(x1482)))+(((x1480)*(x1483)))+(((IkReal(-1.00000000000000))*(x1483)*(x1485)))+(((cj5)*(sj7)*(x1481))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(x1482)*(x1483)))+(((IkReal(-1.00000000000000))*(r22)*(x1485)))+(((x1481)*(x1482)))+(((r22)*(x1480)))+(((IkReal(-1.00000000000000))*(x1483)*(x1484)))+(((x1481)*(x1484))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst42)*(((((IkReal(-1.00000000000000))*(x1480)*(x1481)))+(((r22)*(x1484)))+(((r22)*(x1482)))+(((x1480)*(x1483)))+(((IkReal(-1.00000000000000))*(x1483)*(x1485)))+(((cj5)*(sj7)*(x1481)))))), ((gconst42)*(((((IkReal(-1.00000000000000))*(x1482)*(x1483)))+(((IkReal(-1.00000000000000))*(r22)*(x1485)))+(((x1481)*(x1482)))+(((r22)*(x1480)))+(((IkReal(-1.00000000000000))*(x1483)*(x1484)))+(((x1481)*(x1484)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1486=IKcos(j4);
IkReal x1487=IKsin(j4);
IkReal x1488=((IkReal(1.00000000000000))*(cj7));
IkReal x1489=((cj8)*(r20));
IkReal x1490=((cj3)*(r02));
IkReal x1491=((IkReal(1.00000000000000))*(sj7));
IkReal x1492=((sj3)*(sj7));
IkReal x1493=((r21)*(sj8));
IkReal x1494=((IkReal(1.00000000000000))*(cj5));
IkReal x1495=((cj8)*(r10));
IkReal x1496=((sj5)*(x1487));
IkReal x1497=((sj5)*(x1486));
IkReal x1498=((r11)*(sj3)*(sj8));
IkReal x1499=((cj3)*(cj8)*(r00));
IkReal x1500=((cj3)*(r01)*(sj8));
IkReal x1501=((x1486)*(x1494));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1491)))+(((IkReal(-1.00000000000000))*(x1488)*(x1489)))+(((IkReal(-1.00000000000000))*(x1501)))+(x1496)+(((cj7)*(x1493))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x1487)*(x1494)))+(((sj7)*(x1493)))+(((IkReal(-1.00000000000000))*(x1489)*(x1491)))+(((IkReal(-1.00000000000000))*(x1497))));
evalcond[2]=((((sj7)*(x1490)))+(((r12)*(x1492)))+(((IkReal(-1.00000000000000))*(x1488)*(x1498)))+(((cj5)*(x1487)))+(((IkReal(-1.00000000000000))*(x1488)*(x1500)))+(x1497)+(((cj7)*(sj3)*(x1495)))+(((cj7)*(x1499))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1491)*(x1498)))+(((IkReal(-1.00000000000000))*(x1501)))+(((IkReal(-1.00000000000000))*(x1488)*(x1490)))+(((IkReal(-1.00000000000000))*(x1491)*(x1500)))+(x1496)+(((x1492)*(x1495)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1488)))+(((sj7)*(x1499))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1502=((cj6)*(cj7));
IkReal x1503=((IkReal(1.00000000000000))*(sj8));
IkReal x1504=((cj6)*(sj7));
if( IKabs(((gconst2)*(((((r12)*(x1504)))+(((cj8)*(r10)*(x1502)))+(((IkReal(-1.00000000000000))*(r11)*(x1502)*(x1503))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((cj8)*(r00)*(x1502)))+(((IkReal(-1.00000000000000))*(r01)*(x1502)*(x1503)))+(((r02)*(x1504))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst2)*(((((r12)*(x1504)))+(((cj8)*(r10)*(x1502)))+(((IkReal(-1.00000000000000))*(r11)*(x1502)*(x1503)))))), ((gconst2)*(((((cj8)*(r00)*(x1502)))+(((IkReal(-1.00000000000000))*(r01)*(x1502)*(x1503)))+(((r02)*(x1504)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x1505=IKsin(j3);
IkReal x1506=IKcos(j3);
IkReal x1507=((IkReal(1.00000000000000))*(r11));
IkReal x1508=((r01)*(sj8));
IkReal x1509=((cj8)*(r10));
IkReal x1510=((IkReal(1.00000000000000))*(sj7));
IkReal x1511=((sj7)*(x1506));
IkReal x1512=((cj7)*(x1505));
IkReal x1513=((r00)*(x1505));
IkReal x1514=((cj7)*(x1506));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj8)*(x1506)*(x1507)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x1506)))+(((sj8)*(x1513)))+(cj6)+(((cj8)*(r01)*(x1505))));
evalcond[1]=((((r12)*(x1511)))+(((IkReal(-1.00000000000000))*(cj8)*(r00)*(x1512)))+(((IkReal(-1.00000000000000))*(r02)*(x1505)*(x1510)))+(((x1509)*(x1514)))+(((x1508)*(x1512)))+(((IkReal(-1.00000000000000))*(sj8)*(x1507)*(x1514))));
evalcond[2]=((((sj7)*(x1505)*(x1508)))+(((r02)*(x1512)))+(((IkReal(-1.00000000000000))*(cj8)*(x1510)*(x1513)))+(sj6)+(((IkReal(-1.00000000000000))*(r12)*(x1514)))+(((x1509)*(x1511)))+(((IkReal(-1.00000000000000))*(sj8)*(x1507)*(x1511))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5))))));
dummyeval[0]=((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1515=((IkReal(1.00000000000000))*(sj7));
IkReal x1516=((IkReal(1.00000000000000))*(cj3));
IkReal x1517=((cj7)*(r02));
IkReal x1518=((cj3)*(sj7));
IkReal x1519=((cj8)*(r00));
IkReal x1520=((cj8)*(npx));
IkReal x1521=((r01)*(sj3));
IkReal x1522=((cj7)*(sj8));
IkReal x1523=((r11)*(sj8));
IkReal x1524=((IkReal(1.00000000000000))*(cj7));
IkReal x1525=((sj7)*(sj8));
IkReal x1526=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.230000000000000))+(((npy)*(x1522)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x1520)*(x1524)))+(((IkReal(-1.00000000000000))*(npz)*(x1515)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x1516)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x1516)))+(((cj8)*(x1521))));
evalcond[4]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x1515)))+(((r21)*(x1525))));
evalcond[5]=((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x1515)*(x1520)))+(((cj7)*(npz)))+(((npy)*(x1525)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(x1516)*(x1522)))+(((cj3)*(cj7)*(x1526)))+(((x1521)*(x1522)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x1515)))+(((IkReal(-1.00000000000000))*(sj3)*(x1519)*(x1524)))+(((r12)*(x1518))));
evalcond[7]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj3)*(x1515)*(x1523)))+(((x1521)*(x1525)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1516)))+(((sj3)*(x1517)))+(((x1518)*(x1526)))+(((IkReal(-1.00000000000000))*(sj3)*(x1515)*(x1519))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x1515)))+(((IkReal(-1.00000000000000))*(x1516)*(x1517)))+(((x1518)*(x1519)))+(((sj3)*(sj7)*(x1526)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1524)))+(((IkReal(-1.00000000000000))*(sj3)*(x1515)*(x1523))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1527=((cj8)*(sj5));
IkReal x1528=((cj3)*(r01));
IkReal x1529=((IkReal(1.00000000000000))*(cj5));
IkReal x1530=((r11)*(sj3));
IkReal x1531=((sj5)*(sj8));
IkReal x1532=((r10)*(sj3));
IkReal x1533=((cj3)*(r00)*(sj8));
if( IKabs(((gconst9)*(((((x1531)*(x1532)))+(((x1527)*(x1528)))+(((cj3)*(r00)*(x1531)))+(((cj5)*(cj8)*(r21)))+(((x1527)*(x1530)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(cj8)*(x1528)*(x1529)))+(((r20)*(x1531)))+(((r21)*(x1527)))+(((IkReal(-1.00000000000000))*(cj8)*(x1529)*(x1530)))+(((IkReal(-1.00000000000000))*(sj8)*(x1529)*(x1532)))+(((IkReal(-1.00000000000000))*(x1529)*(x1533))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst9)*(((((x1531)*(x1532)))+(((x1527)*(x1528)))+(((cj3)*(r00)*(x1531)))+(((cj5)*(cj8)*(r21)))+(((x1527)*(x1530)))+(((cj5)*(r20)*(sj8)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(cj8)*(x1528)*(x1529)))+(((r20)*(x1531)))+(((r21)*(x1527)))+(((IkReal(-1.00000000000000))*(cj8)*(x1529)*(x1530)))+(((IkReal(-1.00000000000000))*(sj8)*(x1529)*(x1532)))+(((IkReal(-1.00000000000000))*(x1529)*(x1533)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1534=IKsin(j4);
IkReal x1535=IKcos(j4);
IkReal x1536=((IkReal(1.00000000000000))*(cj8));
IkReal x1537=((cj3)*(r01));
IkReal x1538=((cj3)*(r00));
IkReal x1539=((cj7)*(cj8));
IkReal x1540=((IkReal(1.00000000000000))*(cj5));
IkReal x1541=((IkReal(1.00000000000000))*(sj8));
IkReal x1542=((r11)*(sj3));
IkReal x1543=((r10)*(sj3));
IkReal x1544=((sj5)*(x1534));
IkReal x1545=((sj5)*(x1535));
IkReal x1546=((x1535)*(x1540));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x1534)*(x1540)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x1545))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1546)))+(((cj7)*(r21)*(sj8)))+(x1544)+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1536))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1546)))+(x1544)+(((IkReal(-1.00000000000000))*(x1541)*(x1543)))+(((IkReal(-1.00000000000000))*(x1536)*(x1537)))+(((IkReal(-1.00000000000000))*(x1536)*(x1542)))+(((IkReal(-1.00000000000000))*(x1538)*(x1541))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj7)*(x1541)*(x1542)))+(((cj3)*(r02)*(sj7)))+(((cj5)*(x1534)))+(x1545)+(((r12)*(sj3)*(sj7)))+(((x1538)*(x1539)))+(((IkReal(-1.00000000000000))*(cj7)*(x1537)*(x1541)))+(((x1539)*(x1543))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1547=((cj8)*(sj5));
IkReal x1548=((cj7)*(r20));
IkReal x1549=((IkReal(1.00000000000000))*(cj5));
IkReal x1550=((r22)*(sj7));
IkReal x1551=((r20)*(sj8));
IkReal x1552=((cj7)*(r21)*(sj8));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(sj5)*(x1552)))+(((cj5)*(cj8)*(r21)))+(((sj5)*(x1550)))+(((x1547)*(x1548)))+(((cj5)*(x1551))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(cj8)*(x1548)*(x1549)))+(((r21)*(x1547)))+(((sj5)*(x1551)))+(((cj5)*(x1552)))+(((IkReal(-1.00000000000000))*(x1549)*(x1550))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(sj5)*(x1552)))+(((cj5)*(cj8)*(r21)))+(((sj5)*(x1550)))+(((x1547)*(x1548)))+(((cj5)*(x1551)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(cj8)*(x1548)*(x1549)))+(((r21)*(x1547)))+(((sj5)*(x1551)))+(((cj5)*(x1552)))+(((IkReal(-1.00000000000000))*(x1549)*(x1550)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1553=IKsin(j4);
IkReal x1554=IKcos(j4);
IkReal x1555=((IkReal(1.00000000000000))*(cj8));
IkReal x1556=((cj3)*(r01));
IkReal x1557=((cj3)*(r00));
IkReal x1558=((cj7)*(cj8));
IkReal x1559=((IkReal(1.00000000000000))*(cj5));
IkReal x1560=((IkReal(1.00000000000000))*(sj8));
IkReal x1561=((r11)*(sj3));
IkReal x1562=((r10)*(sj3));
IkReal x1563=((sj5)*(x1553));
IkReal x1564=((sj5)*(x1554));
IkReal x1565=((x1554)*(x1559));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x1564)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x1553)*(x1559))));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1555)))+(x1563)+(((IkReal(-1.00000000000000))*(x1565))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1560)*(x1562)))+(((IkReal(-1.00000000000000))*(x1555)*(x1556)))+(((IkReal(-1.00000000000000))*(x1557)*(x1560)))+(x1563)+(((IkReal(-1.00000000000000))*(x1555)*(x1561)))+(((IkReal(-1.00000000000000))*(x1565))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((cj5)*(x1553)))+(((IkReal(-1.00000000000000))*(cj7)*(x1556)*(x1560)))+(((x1558)*(x1562)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x1560)*(x1561)))+(x1564)+(((x1557)*(x1558))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1566=((IkReal(1.00000000000000))*(sj7));
IkReal x1567=((IkReal(1.00000000000000))*(cj3));
IkReal x1568=((cj7)*(r02));
IkReal x1569=((cj3)*(sj7));
IkReal x1570=((cj8)*(r00));
IkReal x1571=((cj8)*(npx));
IkReal x1572=((r01)*(sj3));
IkReal x1573=((cj7)*(sj8));
IkReal x1574=((r11)*(sj8));
IkReal x1575=((IkReal(1.00000000000000))*(cj7));
IkReal x1576=((sj7)*(sj8));
IkReal x1577=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0200000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.230000000000000))+(((npy)*(x1573)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x1571)*(x1575)))+(((IkReal(-1.00000000000000))*(npz)*(x1566)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x1567)))+(((cj8)*(x1572)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x1567))));
evalcond[4]=((((cj7)*(r22)))+(((r21)*(x1576)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x1566))));
evalcond[5]=((IkReal(-0.0800000000000000))+(((cj7)*(npz)))+(((IkReal(0.0800000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x1566)*(x1571)))+(((npy)*(x1576))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r02)*(sj3)*(x1566)))+(((IkReal(-1.00000000000000))*(r11)*(x1567)*(x1573)))+(((x1572)*(x1573)))+(((IkReal(-1.00000000000000))*(sj3)*(x1570)*(x1575)))+(((cj3)*(cj7)*(x1577)))+(((r12)*(x1569))));
evalcond[7]=((IkReal(-1.00000000000000))+(((sj3)*(x1568)))+(((x1569)*(x1577)))+(((x1572)*(x1576)))+(((IkReal(-1.00000000000000))*(cj3)*(x1566)*(x1574)))+(((IkReal(-1.00000000000000))*(sj3)*(x1566)*(x1570)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1567))));
evalcond[8]=((((sj3)*(sj7)*(x1577)))+(((x1569)*(x1570)))+(((IkReal(-1.00000000000000))*(sj3)*(x1566)*(x1574)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x1566)))+(((IkReal(-1.00000000000000))*(x1567)*(x1568)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1575))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1578=((IkReal(1.00000000000000))*(sj5));
IkReal x1579=((r20)*(sj8));
IkReal x1580=((cj5)*(cj8));
IkReal x1581=((r11)*(sj3));
IkReal x1582=((cj3)*(r01));
IkReal x1583=((cj3)*(r00)*(sj8));
IkReal x1584=((r10)*(sj3)*(sj8));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(x1578)*(x1583)))+(((IkReal(-1.00000000000000))*(cj8)*(x1578)*(x1582)))+(((IkReal(-1.00000000000000))*(cj8)*(x1578)*(x1581)))+(((IkReal(-1.00000000000000))*(cj5)*(x1579)))+(((IkReal(-1.00000000000000))*(x1578)*(x1584)))+(((IkReal(-1.00000000000000))*(r21)*(x1580))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj5)*(x1584)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x1578)))+(((x1580)*(x1582)))+(((x1580)*(x1581)))+(((IkReal(-1.00000000000000))*(x1578)*(x1579)))+(((cj5)*(x1583))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(x1578)*(x1583)))+(((IkReal(-1.00000000000000))*(cj8)*(x1578)*(x1582)))+(((IkReal(-1.00000000000000))*(cj8)*(x1578)*(x1581)))+(((IkReal(-1.00000000000000))*(cj5)*(x1579)))+(((IkReal(-1.00000000000000))*(x1578)*(x1584)))+(((IkReal(-1.00000000000000))*(r21)*(x1580)))))), ((gconst11)*(((((cj5)*(x1584)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x1578)))+(((x1580)*(x1582)))+(((x1580)*(x1581)))+(((IkReal(-1.00000000000000))*(x1578)*(x1579)))+(((cj5)*(x1583)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1585=IKsin(j4);
IkReal x1586=IKcos(j4);
IkReal x1587=((IkReal(1.00000000000000))*(cj8));
IkReal x1588=((cj3)*(r01));
IkReal x1589=((cj3)*(r00));
IkReal x1590=((cj7)*(cj8));
IkReal x1591=((r11)*(sj3));
IkReal x1592=((IkReal(1.00000000000000))*(sj8));
IkReal x1593=((r10)*(sj3));
IkReal x1594=((cj5)*(x1585));
IkReal x1595=((sj5)*(x1586));
IkReal x1596=((cj5)*(x1586));
IkReal x1597=((sj5)*(x1585));
IkReal x1598=((x1595)+(x1594));
evalcond[0]=((((cj8)*(r21)))+(x1598)+(((r20)*(sj8))));
evalcond[1]=((x1597)+(((IkReal(-1.00000000000000))*(x1596)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1587))));
evalcond[2]=((x1596)+(((IkReal(-1.00000000000000))*(x1589)*(x1592)))+(((IkReal(-1.00000000000000))*(x1597)))+(((IkReal(-1.00000000000000))*(x1587)*(x1591)))+(((IkReal(-1.00000000000000))*(x1587)*(x1588)))+(((IkReal(-1.00000000000000))*(x1592)*(x1593))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(x1598)+(((x1590)*(x1593)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x1591)*(x1592)))+(((IkReal(-1.00000000000000))*(cj7)*(x1588)*(x1592)))+(((x1589)*(x1590))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1599=((r22)*(sj7));
IkReal x1600=((IkReal(1.00000000000000))*(cj7));
IkReal x1601=((cj5)*(r21));
IkReal x1602=((cj8)*(sj5));
IkReal x1603=((sj5)*(sj8));
IkReal x1604=((cj5)*(r20));
if( IKabs(((gconst10)*(((((cj8)*(x1601)))+(((IkReal(-1.00000000000000))*(r20)*(x1600)*(x1602)))+(((cj7)*(r21)*(x1603)))+(((IkReal(-1.00000000000000))*(sj5)*(x1599)))+(((sj8)*(x1604))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(sj8)*(x1600)*(x1601)))+(((cj5)*(x1599)))+(((cj7)*(cj8)*(x1604)))+(((r21)*(x1602)))+(((r20)*(x1603))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst10)*(((((cj8)*(x1601)))+(((IkReal(-1.00000000000000))*(r20)*(x1600)*(x1602)))+(((cj7)*(r21)*(x1603)))+(((IkReal(-1.00000000000000))*(sj5)*(x1599)))+(((sj8)*(x1604)))))), ((gconst10)*(((((IkReal(-1.00000000000000))*(sj8)*(x1600)*(x1601)))+(((cj5)*(x1599)))+(((cj7)*(cj8)*(x1604)))+(((r21)*(x1602)))+(((r20)*(x1603)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1605=IKsin(j4);
IkReal x1606=IKcos(j4);
IkReal x1607=((IkReal(1.00000000000000))*(cj8));
IkReal x1608=((cj3)*(r01));
IkReal x1609=((cj3)*(r00));
IkReal x1610=((cj7)*(cj8));
IkReal x1611=((r11)*(sj3));
IkReal x1612=((IkReal(1.00000000000000))*(sj8));
IkReal x1613=((r10)*(sj3));
IkReal x1614=((cj5)*(x1605));
IkReal x1615=((sj5)*(x1606));
IkReal x1616=((cj5)*(x1606));
IkReal x1617=((sj5)*(x1605));
IkReal x1618=((x1614)+(x1615));
evalcond[0]=((((cj8)*(r21)))+(x1618)+(((r20)*(sj8))));
evalcond[1]=((x1617)+(((IkReal(-1.00000000000000))*(x1616)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1607))));
evalcond[2]=((x1616)+(((IkReal(-1.00000000000000))*(x1607)*(x1608)))+(((IkReal(-1.00000000000000))*(x1607)*(x1611)))+(((IkReal(-1.00000000000000))*(x1609)*(x1612)))+(((IkReal(-1.00000000000000))*(x1612)*(x1613)))+(((IkReal(-1.00000000000000))*(x1617))));
evalcond[3]=((x1618)+(((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x1608)*(x1612)))+(((IkReal(-1.00000000000000))*(cj7)*(x1611)*(x1612)))+(((r12)*(sj3)*(sj7)))+(((x1610)*(x1613)))+(((x1609)*(x1610))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1619=((cj3)*(cj8));
IkReal x1620=((IkReal(1.00000000000000))*(sj7));
IkReal x1621=((cj8)*(npx));
IkReal x1622=((r01)*(sj3));
IkReal x1623=((npy)*(sj8));
IkReal x1624=((r02)*(sj3));
IkReal x1625=((IkReal(1.00000000000000))*(r11));
IkReal x1626=((cj3)*(r12));
IkReal x1627=((IkReal(1.00000000000000))*(cj7));
IkReal x1628=((sj3)*(sj8));
IkReal x1629=((IkReal(1.00000000000000))*(cj3)*(sj8));
IkReal x1630=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.230000000000000))+(((cj7)*(x1623)))+(((IkReal(-1.00000000000000))*(npz)*(x1620)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x1621)*(x1627))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1629)))+(((IkReal(-1.00000000000000))*(x1619)*(x1625)))+(((cj8)*(x1622)))+(((r00)*(x1628))));
evalcond[5]=((IkReal(0.0200000000000000))+(((cj7)*(npz)))+(((IkReal(-0.250000000000000))*(sj5)))+(((sj7)*(x1623)))+(((IkReal(0.0800000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x1620)*(x1621))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r10)*(x1628)))+(((IkReal(-1.00000000000000))*(r01)*(x1619)))+(((IkReal(-1.00000000000000))*(cj8)*(sj3)*(x1625)))+(((IkReal(-1.00000000000000))*(r00)*(x1629))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x1625)))+(((IkReal(-1.00000000000000))*(x1620)*(x1624)))+(((cj7)*(r10)*(x1619)))+(((IkReal(-1.00000000000000))*(x1627)*(x1630)))+(((cj7)*(sj8)*(x1622)))+(((sj7)*(x1626))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x1620)))+(((cj7)*(x1624)))+(((sj7)*(sj8)*(x1622)))+(((IkReal(-1.00000000000000))*(x1620)*(x1630)))+(((r10)*(sj7)*(x1619)))+(((IkReal(-1.00000000000000))*(x1626)*(x1627))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1631=((cj3)*(cj5));
IkReal x1632=((r02)*(sj7));
IkReal x1633=((cj8)*(r00));
IkReal x1634=((r22)*(sj7));
IkReal x1635=((cj5)*(sj3));
IkReal x1636=((cj7)*(cj8));
IkReal x1637=((IkReal(1.00000000000000))*(sj5));
IkReal x1638=((r12)*(sj7));
IkReal x1639=((sj3)*(sj5));
IkReal x1640=((cj3)*(cj7)*(sj5));
IkReal x1641=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst13)*(((((x1631)*(x1632)))+(((cj7)*(x1631)*(x1633)))+(((IkReal(-1.00000000000000))*(r01)*(x1631)*(x1641)))+(((IkReal(-1.00000000000000))*(x1634)*(x1637)))+(((x1635)*(x1638)))+(((IkReal(-1.00000000000000))*(r11)*(x1635)*(x1641)))+(((IkReal(-1.00000000000000))*(r20)*(x1636)*(x1637)))+(((r10)*(x1635)*(x1636)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1641)))+(((x1638)*(x1639)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1637)))+(((r10)*(x1636)*(x1639)))+(((cj5)*(r20)*(x1636)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1637)))+(((x1633)*(x1640)))+(((cj5)*(x1634)))+(((cj3)*(sj5)*(x1632))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst13)*(((((x1631)*(x1632)))+(((cj7)*(x1631)*(x1633)))+(((IkReal(-1.00000000000000))*(r01)*(x1631)*(x1641)))+(((IkReal(-1.00000000000000))*(x1634)*(x1637)))+(((x1635)*(x1638)))+(((IkReal(-1.00000000000000))*(r11)*(x1635)*(x1641)))+(((IkReal(-1.00000000000000))*(r20)*(x1636)*(x1637)))+(((r10)*(x1635)*(x1636)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst13)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1641)))+(((x1638)*(x1639)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1637)))+(((r10)*(x1636)*(x1639)))+(((cj5)*(r20)*(x1636)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1637)))+(((x1633)*(x1640)))+(((cj5)*(x1634)))+(((cj3)*(sj5)*(x1632)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1642=IKsin(j4);
IkReal x1643=IKcos(j4);
IkReal x1644=((IkReal(1.00000000000000))*(cj7));
IkReal x1645=((cj8)*(r20));
IkReal x1646=((cj3)*(r02));
IkReal x1647=((IkReal(1.00000000000000))*(sj7));
IkReal x1648=((sj3)*(sj7));
IkReal x1649=((r21)*(sj8));
IkReal x1650=((cj8)*(r10));
IkReal x1651=((cj5)*(x1642));
IkReal x1652=((sj5)*(x1643));
IkReal x1653=((r11)*(sj3)*(sj8));
IkReal x1654=((cj3)*(cj8)*(r00));
IkReal x1655=((cj5)*(x1643));
IkReal x1656=((cj3)*(r01)*(sj8));
IkReal x1657=((sj5)*(x1642));
IkReal x1658=((x1652)+(x1651));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1647)))+(((IkReal(-1.00000000000000))*(x1655)))+(((cj7)*(x1649)))+(((IkReal(-1.00000000000000))*(x1644)*(x1645)))+(x1657));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x1645)*(x1647)))+(x1658)+(((sj7)*(x1649))));
evalcond[2]=((((r12)*(x1648)))+(((sj7)*(x1646)))+(((IkReal(-1.00000000000000))*(x1644)*(x1656)))+(((cj7)*(sj3)*(x1650)))+(((cj7)*(x1654)))+(((IkReal(-1.00000000000000))*(x1644)*(x1653)))+(x1658));
evalcond[3]=((((sj7)*(x1654)))+(((IkReal(-1.00000000000000))*(x1644)*(x1646)))+(((IkReal(-1.00000000000000))*(x1647)*(x1653)))+(((x1648)*(x1650)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1644)))+(((IkReal(-1.00000000000000))*(x1657)))+(((IkReal(-1.00000000000000))*(x1647)*(x1656)))+(x1655));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1659=((r21)*(sj8));
IkReal x1660=((sj5)*(sj7));
IkReal x1661=((cj7)*(sj5));
IkReal x1662=((cj5)*(cj7));
IkReal x1663=((cj8)*(r20));
IkReal x1664=((cj5)*(sj7));
if( IKabs(((gconst12)*(((((r22)*(x1662)))+(((IkReal(-1.00000000000000))*(x1663)*(x1664)))+(((x1659)*(x1664)))+(((x1659)*(x1661)))+(((IkReal(-1.00000000000000))*(r22)*(x1660)))+(((IkReal(-1.00000000000000))*(x1661)*(x1663))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((x1662)*(x1663)))+(((IkReal(-1.00000000000000))*(x1659)*(x1662)))+(((r22)*(x1664)))+(((IkReal(-1.00000000000000))*(x1660)*(x1663)))+(((x1659)*(x1660)))+(((r22)*(x1661))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst12)*(((((r22)*(x1662)))+(((IkReal(-1.00000000000000))*(x1663)*(x1664)))+(((x1659)*(x1664)))+(((x1659)*(x1661)))+(((IkReal(-1.00000000000000))*(r22)*(x1660)))+(((IkReal(-1.00000000000000))*(x1661)*(x1663)))))), ((gconst12)*(((((x1662)*(x1663)))+(((IkReal(-1.00000000000000))*(x1659)*(x1662)))+(((r22)*(x1664)))+(((IkReal(-1.00000000000000))*(x1660)*(x1663)))+(((x1659)*(x1660)))+(((r22)*(x1661)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1665=IKsin(j4);
IkReal x1666=IKcos(j4);
IkReal x1667=((IkReal(1.00000000000000))*(cj7));
IkReal x1668=((cj8)*(r20));
IkReal x1669=((cj3)*(r02));
IkReal x1670=((IkReal(1.00000000000000))*(sj7));
IkReal x1671=((sj3)*(sj7));
IkReal x1672=((r21)*(sj8));
IkReal x1673=((cj8)*(r10));
IkReal x1674=((cj5)*(x1665));
IkReal x1675=((sj5)*(x1666));
IkReal x1676=((r11)*(sj3)*(sj8));
IkReal x1677=((cj3)*(cj8)*(r00));
IkReal x1678=((cj5)*(x1666));
IkReal x1679=((cj3)*(r01)*(sj8));
IkReal x1680=((sj5)*(x1665));
IkReal x1681=((x1674)+(x1675));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1670)))+(((IkReal(-1.00000000000000))*(x1678)))+(((IkReal(-1.00000000000000))*(x1667)*(x1668)))+(((cj7)*(x1672)))+(x1680));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1668)*(x1670)))+(((cj7)*(r22)))+(((sj7)*(x1672)))+(x1681));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1667)*(x1676)))+(((IkReal(-1.00000000000000))*(x1667)*(x1679)))+(((cj7)*(x1677)))+(((sj7)*(x1669)))+(((cj7)*(sj3)*(x1673)))+(((r12)*(x1671)))+(x1681));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1667)*(x1669)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1667)))+(((IkReal(-1.00000000000000))*(x1680)))+(x1678)+(((x1671)*(x1673)))+(((sj7)*(x1677)))+(((IkReal(-1.00000000000000))*(x1670)*(x1679)))+(((IkReal(-1.00000000000000))*(x1670)*(x1676))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1682=((cj3)*(cj8));
IkReal x1683=((IkReal(1.00000000000000))*(sj7));
IkReal x1684=((cj8)*(npx));
IkReal x1685=((r01)*(sj3));
IkReal x1686=((npy)*(sj8));
IkReal x1687=((r02)*(sj3));
IkReal x1688=((IkReal(1.00000000000000))*(r11));
IkReal x1689=((cj3)*(r12));
IkReal x1690=((IkReal(1.00000000000000))*(cj7));
IkReal x1691=((sj3)*(sj8));
IkReal x1692=((IkReal(1.00000000000000))*(cj3)*(sj8));
IkReal x1693=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.230000000000000))+(((cj7)*(x1686)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x1684)*(x1690)))+(((IkReal(-1.00000000000000))*(npz)*(x1683)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1682)*(x1688)))+(((r00)*(x1691)))+(((cj8)*(x1685)))+(((IkReal(-1.00000000000000))*(r10)*(x1692))));
evalcond[5]=((IkReal(-0.0200000000000000))+(((cj7)*(npz)))+(((sj7)*(x1686)))+(((IkReal(-1.00000000000000))*(x1683)*(x1684)))+(((IkReal(0.0800000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r01)*(x1682)))+(((IkReal(-1.00000000000000))*(r10)*(x1691)))+(((IkReal(-1.00000000000000))*(cj8)*(sj3)*(x1688)))+(((IkReal(-1.00000000000000))*(r00)*(x1692))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1690)*(x1693)))+(((cj7)*(r10)*(x1682)))+(((cj7)*(sj8)*(x1685)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x1688)))+(((IkReal(-1.00000000000000))*(x1683)*(x1687)))+(((sj7)*(x1689))));
evalcond[8]=((((sj7)*(sj8)*(x1685)))+(((IkReal(-1.00000000000000))*(x1689)*(x1690)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x1683)))+(((cj7)*(x1687)))+(((r10)*(sj7)*(x1682)))+(((IkReal(-1.00000000000000))*(x1683)*(x1693))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1694=((cj3)*(cj5));
IkReal x1695=((r02)*(sj7));
IkReal x1696=((cj7)*(cj8));
IkReal x1697=((cj3)*(sj5));
IkReal x1698=((r22)*(sj7));
IkReal x1699=((cj5)*(sj3));
IkReal x1700=((IkReal(1.00000000000000))*(sj5));
IkReal x1701=((r12)*(sj7));
IkReal x1702=((sj3)*(sj5));
IkReal x1703=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(r11)*(x1699)*(x1703)))+(((r00)*(x1694)*(x1696)))+(((r10)*(x1696)*(x1699)))+(((x1699)*(x1701)))+(((x1694)*(x1695)))+(((IkReal(-1.00000000000000))*(r01)*(x1694)*(x1703)))+(((IkReal(-1.00000000000000))*(x1698)*(x1700)))+(((IkReal(-1.00000000000000))*(r20)*(x1696)*(x1700)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((x1701)*(x1702)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1700)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1703)))+(((IkReal(-1.00000000000000))*(r01)*(x1697)*(x1703)))+(((cj5)*(x1698)))+(((x1695)*(x1697)))+(((r10)*(x1696)*(x1702)))+(((cj5)*(r20)*(x1696)))+(((r00)*(x1696)*(x1697))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(r11)*(x1699)*(x1703)))+(((r00)*(x1694)*(x1696)))+(((r10)*(x1696)*(x1699)))+(((x1699)*(x1701)))+(((x1694)*(x1695)))+(((IkReal(-1.00000000000000))*(r01)*(x1694)*(x1703)))+(((IkReal(-1.00000000000000))*(x1698)*(x1700)))+(((IkReal(-1.00000000000000))*(r20)*(x1696)*(x1700)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst15)*(((((x1701)*(x1702)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1700)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1703)))+(((IkReal(-1.00000000000000))*(r01)*(x1697)*(x1703)))+(((cj5)*(x1698)))+(((x1695)*(x1697)))+(((r10)*(x1696)*(x1702)))+(((cj5)*(r20)*(x1696)))+(((r00)*(x1696)*(x1697)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1704=IKcos(j4);
IkReal x1705=IKsin(j4);
IkReal x1706=((IkReal(1.00000000000000))*(cj7));
IkReal x1707=((cj8)*(r20));
IkReal x1708=((cj3)*(r02));
IkReal x1709=((IkReal(1.00000000000000))*(sj7));
IkReal x1710=((sj3)*(sj7));
IkReal x1711=((r21)*(sj8));
IkReal x1712=((IkReal(1.00000000000000))*(cj5));
IkReal x1713=((cj8)*(r10));
IkReal x1714=((sj5)*(x1705));
IkReal x1715=((sj5)*(x1704));
IkReal x1716=((r11)*(sj3)*(sj8));
IkReal x1717=((cj3)*(cj8)*(r00));
IkReal x1718=((cj3)*(r01)*(sj8));
IkReal x1719=((x1704)*(x1712));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1709)))+(x1714)+(((IkReal(-1.00000000000000))*(x1719)))+(((cj7)*(x1711)))+(((IkReal(-1.00000000000000))*(x1706)*(x1707))));
evalcond[1]=((((cj7)*(r22)))+(((sj7)*(x1711)))+(((IkReal(-1.00000000000000))*(x1715)))+(((IkReal(-1.00000000000000))*(x1705)*(x1712)))+(((IkReal(-1.00000000000000))*(x1707)*(x1709))));
evalcond[2]=((x1715)+(((r12)*(x1710)))+(((IkReal(-1.00000000000000))*(x1706)*(x1716)))+(((cj7)*(sj3)*(x1713)))+(((cj5)*(x1705)))+(((IkReal(-1.00000000000000))*(x1706)*(x1718)))+(((cj7)*(x1717)))+(((sj7)*(x1708))));
evalcond[3]=((x1714)+(((IkReal(-1.00000000000000))*(x1706)*(x1708)))+(((IkReal(-1.00000000000000))*(x1719)))+(((IkReal(-1.00000000000000))*(x1709)*(x1716)))+(((sj7)*(x1717)))+(((x1710)*(x1713)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1706)))+(((IkReal(-1.00000000000000))*(x1709)*(x1718))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1720=((IkReal(1.00000000000000))*(sj5));
IkReal x1721=((cj7)*(sj5));
IkReal x1722=((cj8)*(r20));
IkReal x1723=((cj5)*(cj7));
IkReal x1724=((sj5)*(sj7));
IkReal x1725=((r21)*(sj8));
IkReal x1726=((cj7)*(x1725));
IkReal x1727=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(x1720)*(x1726)))+(((cj5)*(sj7)*(x1725)))+(((r22)*(x1723)))+(((IkReal(-1.00000000000000))*(x1722)*(x1727)))+(((x1721)*(x1722)))+(((r22)*(x1724))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((r22)*(x1721)))+(((x1723)*(x1725)))+(((x1724)*(x1725)))+(((IkReal(-1.00000000000000))*(x1722)*(x1723)))+(((IkReal(-1.00000000000000))*(r22)*(x1727)))+(((IkReal(-1.00000000000000))*(sj7)*(x1720)*(x1722))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst14)*(((((IkReal(-1.00000000000000))*(x1720)*(x1726)))+(((cj5)*(sj7)*(x1725)))+(((r22)*(x1723)))+(((IkReal(-1.00000000000000))*(x1722)*(x1727)))+(((x1721)*(x1722)))+(((r22)*(x1724)))))), ((gconst14)*(((((r22)*(x1721)))+(((x1723)*(x1725)))+(((x1724)*(x1725)))+(((IkReal(-1.00000000000000))*(x1722)*(x1723)))+(((IkReal(-1.00000000000000))*(r22)*(x1727)))+(((IkReal(-1.00000000000000))*(sj7)*(x1720)*(x1722)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1728=IKcos(j4);
IkReal x1729=IKsin(j4);
IkReal x1730=((IkReal(1.00000000000000))*(cj7));
IkReal x1731=((cj8)*(r20));
IkReal x1732=((cj3)*(r02));
IkReal x1733=((IkReal(1.00000000000000))*(sj7));
IkReal x1734=((sj3)*(sj7));
IkReal x1735=((r21)*(sj8));
IkReal x1736=((IkReal(1.00000000000000))*(cj5));
IkReal x1737=((cj8)*(r10));
IkReal x1738=((sj5)*(x1729));
IkReal x1739=((sj5)*(x1728));
IkReal x1740=((r11)*(sj3)*(sj8));
IkReal x1741=((cj3)*(cj8)*(r00));
IkReal x1742=((cj3)*(r01)*(sj8));
IkReal x1743=((x1728)*(x1736));
evalcond[0]=((((cj7)*(x1735)))+(((IkReal(-1.00000000000000))*(r22)*(x1733)))+(((IkReal(-1.00000000000000))*(x1730)*(x1731)))+(x1738)+(((IkReal(-1.00000000000000))*(x1743))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1731)*(x1733)))+(((cj7)*(r22)))+(((sj7)*(x1735)))+(((IkReal(-1.00000000000000))*(x1739)))+(((IkReal(-1.00000000000000))*(x1729)*(x1736))));
evalcond[2]=((((cj5)*(x1729)))+(((cj7)*(x1741)))+(((IkReal(-1.00000000000000))*(x1730)*(x1742)))+(((r12)*(x1734)))+(((IkReal(-1.00000000000000))*(x1730)*(x1740)))+(x1739)+(((sj7)*(x1732)))+(((cj7)*(sj3)*(x1737))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1733)*(x1740)))+(((IkReal(-1.00000000000000))*(x1733)*(x1742)))+(((sj7)*(x1741)))+(((IkReal(-1.00000000000000))*(x1730)*(x1732)))+(((x1734)*(x1737)))+(x1738)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1730)))+(((IkReal(-1.00000000000000))*(x1743))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1744=((r21)*(sj8));
IkReal x1745=((IkReal(1.00000000000000))*(r22));
IkReal x1746=((cj5)*(sj7));
IkReal x1747=((cj6)*(cj7));
IkReal x1748=((sj5)*(sj7));
IkReal x1749=((cj5)*(cj8)*(r20));
IkReal x1750=((IkReal(1.00000000000000))*(x1747));
IkReal x1751=((cj8)*(r20)*(sj5));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x1744)*(x1746)))+(((IkReal(-1.00000000000000))*(sj5)*(x1744)*(x1750)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x1745)))+(((cj6)*(r22)*(x1748)))+(((cj8)*(r20)*(x1746)))+(((x1747)*(x1751))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((cj5)*(x1744)*(x1747)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x1745)))+(((IkReal(-1.00000000000000))*(x1749)*(x1750)))+(((IkReal(-1.00000000000000))*(cj6)*(x1745)*(x1746)))+(((cj8)*(r20)*(x1748)))+(((IkReal(-1.00000000000000))*(x1744)*(x1748))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(x1744)*(x1746)))+(((IkReal(-1.00000000000000))*(sj5)*(x1744)*(x1750)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x1745)))+(((cj6)*(r22)*(x1748)))+(((cj8)*(r20)*(x1746)))+(((x1747)*(x1751)))))), ((gconst7)*(((((cj5)*(x1744)*(x1747)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x1745)))+(((IkReal(-1.00000000000000))*(x1749)*(x1750)))+(((IkReal(-1.00000000000000))*(cj6)*(x1745)*(x1746)))+(((cj8)*(r20)*(x1748)))+(((IkReal(-1.00000000000000))*(x1744)*(x1748)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1752=IKsin(j4);
IkReal x1753=IKcos(j4);
IkReal x1754=((IkReal(1.00000000000000))*(cj8));
IkReal x1755=((cj3)*(r01));
IkReal x1756=((IkReal(1.00000000000000))*(sj8));
IkReal x1757=((r11)*(sj3));
IkReal x1758=((cj3)*(r00));
IkReal x1759=((IkReal(1.00000000000000))*(sj6));
IkReal x1760=((IkReal(1.00000000000000))*(cj7));
IkReal x1761=((cj3)*(r02));
IkReal x1762=((cj8)*(sj7));
IkReal x1763=((r12)*(sj3));
IkReal x1764=((cj7)*(cj8));
IkReal x1765=((r21)*(sj8));
IkReal x1766=((r10)*(sj3));
IkReal x1767=((sj5)*(x1753));
IkReal x1768=((cj5)*(x1753));
IkReal x1769=((sj5)*(x1752));
IkReal x1770=((cj5)*(x1752));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x1759)*(x1770)))+(((IkReal(-1.00000000000000))*(x1759)*(x1767))));
evalcond[1]=((x1769)+(((cj7)*(x1765)))+(((IkReal(-1.00000000000000))*(x1768)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1754))));
evalcond[2]=((((cj6)*(x1770)))+(((cj6)*(x1767)))+(((cj7)*(r22)))+(((sj7)*(x1765)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1754))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1756)*(x1758)))+(((IkReal(-1.00000000000000))*(x1754)*(x1755)))+(((sj6)*(x1769)))+(((IkReal(-1.00000000000000))*(x1759)*(x1768)))+(((IkReal(-1.00000000000000))*(x1754)*(x1757)))+(((IkReal(-1.00000000000000))*(x1756)*(x1766))));
evalcond[4]=((x1767)+(((IkReal(-1.00000000000000))*(cj7)*(x1756)*(x1757)))+(((x1758)*(x1764)))+(((IkReal(-1.00000000000000))*(cj7)*(x1755)*(x1756)))+(((x1764)*(x1766)))+(((sj7)*(x1763)))+(x1770)+(((sj7)*(x1761))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1760)*(x1763)))+(((IkReal(-1.00000000000000))*(x1760)*(x1761)))+(((x1758)*(x1762)))+(((cj6)*(x1768)))+(((x1762)*(x1766)))+(((IkReal(-1.00000000000000))*(sj7)*(x1756)*(x1757)))+(((IkReal(-1.00000000000000))*(sj7)*(x1755)*(x1756)))+(((IkReal(-1.00000000000000))*(cj6)*(x1769))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1771=((sj5)*(sj6));
IkReal x1772=((r22)*(sj7));
IkReal x1773=((r20)*(sj8));
IkReal x1774=((cj8)*(r21));
IkReal x1775=((cj5)*(sj6));
IkReal x1776=((cj7)*(cj8)*(r20));
IkReal x1777=((cj7)*(r21)*(sj8));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x1771)*(x1777)))+(((x1771)*(x1776)))+(((x1771)*(x1772)))+(((cj5)*(x1773)))+(((cj5)*(x1774))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((sj5)*(x1773)))+(((IkReal(-1.00000000000000))*(x1775)*(x1776)))+(((x1775)*(x1777)))+(((IkReal(-1.00000000000000))*(x1772)*(x1775)))+(((sj5)*(x1774))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(x1771)*(x1777)))+(((x1771)*(x1776)))+(((x1771)*(x1772)))+(((cj5)*(x1773)))+(((cj5)*(x1774)))))), ((gconst6)*(((((sj5)*(x1773)))+(((IkReal(-1.00000000000000))*(x1775)*(x1776)))+(((x1775)*(x1777)))+(((IkReal(-1.00000000000000))*(x1772)*(x1775)))+(((sj5)*(x1774)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1778=IKsin(j4);
IkReal x1779=IKcos(j4);
IkReal x1780=((IkReal(1.00000000000000))*(cj8));
IkReal x1781=((cj3)*(r01));
IkReal x1782=((IkReal(1.00000000000000))*(sj8));
IkReal x1783=((r11)*(sj3));
IkReal x1784=((cj3)*(r00));
IkReal x1785=((IkReal(1.00000000000000))*(sj6));
IkReal x1786=((IkReal(1.00000000000000))*(cj7));
IkReal x1787=((cj3)*(r02));
IkReal x1788=((cj8)*(sj7));
IkReal x1789=((r12)*(sj3));
IkReal x1790=((cj7)*(cj8));
IkReal x1791=((r21)*(sj8));
IkReal x1792=((r10)*(sj3));
IkReal x1793=((sj5)*(x1779));
IkReal x1794=((cj5)*(x1779));
IkReal x1795=((sj5)*(x1778));
IkReal x1796=((cj5)*(x1778));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x1785)*(x1796)))+(((IkReal(-1.00000000000000))*(x1785)*(x1793))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1780)))+(((cj7)*(x1791)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1794)))+(x1795));
evalcond[2]=((((cj7)*(r22)))+(((cj6)*(x1793)))+(((sj7)*(x1791)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1780)))+(((cj6)*(x1796))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1782)*(x1784)))+(((IkReal(-1.00000000000000))*(x1780)*(x1783)))+(((sj6)*(x1795)))+(((IkReal(-1.00000000000000))*(x1780)*(x1781)))+(((IkReal(-1.00000000000000))*(x1782)*(x1792)))+(((IkReal(-1.00000000000000))*(x1785)*(x1794))));
evalcond[4]=((((x1790)*(x1792)))+(((x1784)*(x1790)))+(((IkReal(-1.00000000000000))*(cj7)*(x1782)*(x1783)))+(((sj7)*(x1789)))+(x1793)+(x1796)+(((sj7)*(x1787)))+(((IkReal(-1.00000000000000))*(cj7)*(x1781)*(x1782))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj6)*(x1795)))+(((x1784)*(x1788)))+(((IkReal(-1.00000000000000))*(sj7)*(x1781)*(x1782)))+(((x1788)*(x1792)))+(((IkReal(-1.00000000000000))*(sj7)*(x1782)*(x1783)))+(((cj6)*(x1794)))+(((IkReal(-1.00000000000000))*(x1786)*(x1787)))+(((IkReal(-1.00000000000000))*(x1786)*(x1789))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1797=((r21)*(sj8));
IkReal x1798=((IkReal(1.00000000000000))*(r22));
IkReal x1799=((cj5)*(sj7));
IkReal x1800=((cj6)*(cj7));
IkReal x1801=((sj5)*(sj7));
IkReal x1802=((cj5)*(cj8)*(r20));
IkReal x1803=((IkReal(1.00000000000000))*(x1800));
IkReal x1804=((cj8)*(r20)*(sj5));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x1798)))+(((cj8)*(r20)*(x1799)))+(((IkReal(-1.00000000000000))*(x1797)*(x1799)))+(((x1800)*(x1804)))+(((IkReal(-1.00000000000000))*(sj5)*(x1797)*(x1803)))+(((cj6)*(r22)*(x1801))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x1798)))+(((IkReal(-1.00000000000000))*(x1797)*(x1801)))+(((cj8)*(r20)*(x1801)))+(((IkReal(-1.00000000000000))*(x1802)*(x1803)))+(((cj5)*(x1797)*(x1800)))+(((IkReal(-1.00000000000000))*(cj6)*(x1798)*(x1799))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x1798)))+(((cj8)*(r20)*(x1799)))+(((IkReal(-1.00000000000000))*(x1797)*(x1799)))+(((x1800)*(x1804)))+(((IkReal(-1.00000000000000))*(sj5)*(x1797)*(x1803)))+(((cj6)*(r22)*(x1801)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x1798)))+(((IkReal(-1.00000000000000))*(x1797)*(x1801)))+(((cj8)*(r20)*(x1801)))+(((IkReal(-1.00000000000000))*(x1802)*(x1803)))+(((cj5)*(x1797)*(x1800)))+(((IkReal(-1.00000000000000))*(cj6)*(x1798)*(x1799)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1805=IKsin(j4);
IkReal x1806=IKcos(j4);
IkReal x1807=((r21)*(sj8));
IkReal x1808=((IkReal(1.00000000000000))*(sj6));
IkReal x1809=((IkReal(1.00000000000000))*(cj8)*(r20));
IkReal x1810=((sj5)*(x1806));
IkReal x1811=((cj5)*(x1805));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x1808)*(x1811)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x1808)*(x1810))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x1809)))+(((cj7)*(x1807)))+(((sj5)*(x1805)))+(((IkReal(-1.00000000000000))*(cj5)*(x1806))));
evalcond[2]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(sj7)*(x1809)))+(((cj6)*(x1810)))+(((cj6)*(x1811)))+(((sj7)*(x1807))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x1812=(cj8)*(cj8);
IkReal x1813=(sj8)*(sj8);
IkReal x1814=((r00)*(r11));
IkReal x1815=((r02)*(sj7));
IkReal x1816=((cj7)*(x1812));
IkReal x1817=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1818=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1819=((cj7)*(x1813));
gconst16=IKsign(((((r10)*(sj8)*(x1815)))+(((x1814)*(x1816)))+(((IkReal(-1.00000000000000))*(x1818)*(x1819)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1817)))+(((IkReal(-1.00000000000000))*(x1816)*(x1818)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1817)))+(((x1814)*(x1819)))+(((cj8)*(r11)*(x1815)))));
IkReal x1820=(cj8)*(cj8);
IkReal x1821=(sj8)*(sj8);
IkReal x1822=((r00)*(r11));
IkReal x1823=((r02)*(sj7));
IkReal x1824=((cj7)*(x1820));
IkReal x1825=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1826=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1827=((cj7)*(x1821));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1824)*(x1826)))+(((x1822)*(x1827)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1825)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1825)))+(((x1822)*(x1824)))+(((r10)*(sj8)*(x1823)))+(((cj8)*(r11)*(x1823)))+(((IkReal(-1.00000000000000))*(x1826)*(x1827))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
IkReal x1828=(sj8)*(sj8);
IkReal x1829=(cj8)*(cj8);
IkReal x1830=((IkReal(1.00000000000000))*(r10));
IkReal x1831=((cj7)*(sj8));
IkReal x1832=((r00)*(r11));
IkReal x1833=((cj7)*(cj8));
IkReal x1834=((sj7)*(x1828));
IkReal x1835=((sj7)*(x1829));
gconst17=IKsign(((((r00)*(r12)*(x1831)))+(((r01)*(r12)*(x1833)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1833)))+(((x1832)*(x1834)))+(((IkReal(-1.00000000000000))*(r01)*(x1830)*(x1834)))+(((IkReal(-1.00000000000000))*(r01)*(x1830)*(x1835)))+(((x1832)*(x1835)))+(((IkReal(-1.00000000000000))*(r02)*(x1830)*(x1831)))));
IkReal x1836=(sj8)*(sj8);
IkReal x1837=(cj8)*(cj8);
IkReal x1838=((IkReal(1.00000000000000))*(r10));
IkReal x1839=((cj7)*(sj8));
IkReal x1840=((r00)*(r11));
IkReal x1841=((cj7)*(cj8));
IkReal x1842=((sj7)*(x1836));
IkReal x1843=((sj7)*(x1837));
dummyeval[0]=((((x1840)*(x1843)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1841)))+(((IkReal(-1.00000000000000))*(r01)*(x1838)*(x1842)))+(((IkReal(-1.00000000000000))*(r02)*(x1838)*(x1839)))+(((x1840)*(x1842)))+(((r00)*(r12)*(x1839)))+(((r01)*(r12)*(x1841)))+(((IkReal(-1.00000000000000))*(r01)*(x1838)*(x1843))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1844=((cj6)*(sj7));
IkReal x1845=((IkReal(1.00000000000000))*(sj8));
IkReal x1846=((cj8)*(sj6));
IkReal x1847=((sj6)*(sj8));
IkReal x1848=((IkReal(1.00000000000000))*(cj6)*(cj7));
if( IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(r11)*(x1844)*(x1845)))+(((r11)*(x1846)))+(((IkReal(-1.00000000000000))*(r12)*(x1848)))+(((r10)*(x1847)))+(((cj8)*(r10)*(x1844))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((r00)*(x1847)))+(((r01)*(x1846)))+(((IkReal(-1.00000000000000))*(r01)*(x1844)*(x1845)))+(((IkReal(-1.00000000000000))*(r02)*(x1848)))+(((cj8)*(r00)*(x1844))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst17)*(((((IkReal(-1.00000000000000))*(r11)*(x1844)*(x1845)))+(((r11)*(x1846)))+(((IkReal(-1.00000000000000))*(r12)*(x1848)))+(((r10)*(x1847)))+(((cj8)*(r10)*(x1844)))))), ((gconst17)*(((((r00)*(x1847)))+(((r01)*(x1846)))+(((IkReal(-1.00000000000000))*(r01)*(x1844)*(x1845)))+(((IkReal(-1.00000000000000))*(r02)*(x1848)))+(((cj8)*(r00)*(x1844)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1849=IKsin(j3);
IkReal x1850=IKcos(j3);
IkReal x1851=((cj4)*(cj5));
IkReal x1852=((r01)*(sj8));
IkReal x1853=((cj8)*(r00));
IkReal x1854=((r00)*(sj8));
IkReal x1855=((cj8)*(r11));
IkReal x1856=((r11)*(sj8));
IkReal x1857=((sj4)*(sj5));
IkReal x1858=((r10)*(sj8));
IkReal x1859=((cj8)*(r10));
IkReal x1860=((cj7)*(x1849));
IkReal x1861=((sj7)*(x1850));
IkReal x1862=((IkReal(1.00000000000000))*(x1849));
IkReal x1863=((IkReal(1.00000000000000))*(x1850));
IkReal x1864=((cj8)*(x1849));
IkReal x1865=((IkReal(1.00000000000000))*(x1856));
IkReal x1866=((sj7)*(x1849));
IkReal x1867=((cj7)*(x1850));
evalcond[0]=((((x1849)*(x1854)))+(((r01)*(x1864)))+(((IkReal(-1.00000000000000))*(x1858)*(x1863)))+(cj6)+(((IkReal(-1.00000000000000))*(x1855)*(x1863))));
evalcond[1]=((((sj6)*(x1857)))+(((IkReal(-1.00000000000000))*(x1858)*(x1862)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1863)))+(((IkReal(-1.00000000000000))*(sj6)*(x1851)))+(((IkReal(-1.00000000000000))*(x1854)*(x1863)))+(((IkReal(-1.00000000000000))*(x1855)*(x1862))));
evalcond[2]=((((r12)*(x1861)))+(((IkReal(-1.00000000000000))*(cj7)*(x1856)*(x1863)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1862)))+(((IkReal(-1.00000000000000))*(x1853)*(x1860)))+(((x1852)*(x1860)))+(((x1859)*(x1867))));
evalcond[3]=((((x1852)*(x1866)))+(((IkReal(-1.00000000000000))*(x1861)*(x1865)))+(sj6)+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1863)))+(((r02)*(x1860)))+(((IkReal(-1.00000000000000))*(sj7)*(x1853)*(x1862)))+(((x1859)*(x1861))));
evalcond[4]=((((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(cj7)*(x1852)*(x1863)))+(((x1853)*(x1867)))+(((r12)*(x1866)))+(((cj4)*(sj5)))+(((r02)*(x1861)))+(((IkReal(-1.00000000000000))*(x1860)*(x1865)))+(((x1859)*(x1860))));
evalcond[5]=((((cj6)*(x1851)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1863)))+(((x1853)*(x1861)))+(((x1859)*(x1866)))+(((IkReal(-1.00000000000000))*(x1852)*(x1861)))+(((IkReal(-1.00000000000000))*(r12)*(x1860)))+(((IkReal(-1.00000000000000))*(cj6)*(x1857)))+(((IkReal(-1.00000000000000))*(sj7)*(x1856)*(x1862))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1868=((cj6)*(cj7));
IkReal x1869=((IkReal(1.00000000000000))*(sj8));
IkReal x1870=((cj6)*(sj7));
if( IKabs(((gconst16)*(((((cj8)*(r10)*(x1868)))+(((r12)*(x1870)))+(((IkReal(-1.00000000000000))*(r11)*(x1868)*(x1869))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((cj8)*(r00)*(x1868)))+(((IkReal(-1.00000000000000))*(r01)*(x1868)*(x1869)))+(((r02)*(x1870))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst16)*(((((cj8)*(r10)*(x1868)))+(((r12)*(x1870)))+(((IkReal(-1.00000000000000))*(r11)*(x1868)*(x1869)))))), ((gconst16)*(((((cj8)*(r00)*(x1868)))+(((IkReal(-1.00000000000000))*(r01)*(x1868)*(x1869)))+(((r02)*(x1870)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1871=IKsin(j3);
IkReal x1872=IKcos(j3);
IkReal x1873=((cj4)*(cj5));
IkReal x1874=((r01)*(sj8));
IkReal x1875=((cj8)*(r00));
IkReal x1876=((r00)*(sj8));
IkReal x1877=((cj8)*(r11));
IkReal x1878=((r11)*(sj8));
IkReal x1879=((sj4)*(sj5));
IkReal x1880=((r10)*(sj8));
IkReal x1881=((cj8)*(r10));
IkReal x1882=((cj7)*(x1871));
IkReal x1883=((sj7)*(x1872));
IkReal x1884=((IkReal(1.00000000000000))*(x1871));
IkReal x1885=((IkReal(1.00000000000000))*(x1872));
IkReal x1886=((cj8)*(x1871));
IkReal x1887=((IkReal(1.00000000000000))*(x1878));
IkReal x1888=((sj7)*(x1871));
IkReal x1889=((cj7)*(x1872));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1877)*(x1885)))+(((x1871)*(x1876)))+(((r01)*(x1886)))+(cj6)+(((IkReal(-1.00000000000000))*(x1880)*(x1885))));
evalcond[1]=((((sj6)*(x1879)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1885)))+(((IkReal(-1.00000000000000))*(x1876)*(x1885)))+(((IkReal(-1.00000000000000))*(x1880)*(x1884)))+(((IkReal(-1.00000000000000))*(sj6)*(x1873)))+(((IkReal(-1.00000000000000))*(x1877)*(x1884))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1884)))+(((r12)*(x1883)))+(((x1874)*(x1882)))+(((IkReal(-1.00000000000000))*(cj7)*(x1878)*(x1885)))+(((IkReal(-1.00000000000000))*(x1875)*(x1882)))+(((x1881)*(x1889))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj7)*(x1875)*(x1884)))+(sj6)+(((IkReal(-1.00000000000000))*(x1883)*(x1887)))+(((x1881)*(x1883)))+(((x1874)*(x1888)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1885)))+(((r02)*(x1882))));
evalcond[4]=((((r12)*(x1888)))+(((cj5)*(sj4)))+(((x1881)*(x1882)))+(((IkReal(-1.00000000000000))*(cj7)*(x1874)*(x1885)))+(((IkReal(-1.00000000000000))*(x1882)*(x1887)))+(((cj4)*(sj5)))+(((x1875)*(x1889)))+(((r02)*(x1883))));
evalcond[5]=((((x1875)*(x1883)))+(((IkReal(-1.00000000000000))*(sj7)*(x1878)*(x1884)))+(((x1881)*(x1888)))+(((IkReal(-1.00000000000000))*(r12)*(x1882)))+(((IkReal(-1.00000000000000))*(x1874)*(x1883)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1885)))+(((IkReal(-1.00000000000000))*(cj6)*(x1879)))+(((cj6)*(x1873))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1890=((sj5)*(sj6));
IkReal x1891=((r22)*(sj7));
IkReal x1892=((r20)*(sj8));
IkReal x1893=((cj8)*(r21));
IkReal x1894=((cj5)*(sj6));
IkReal x1895=((cj7)*(cj8)*(r20));
IkReal x1896=((cj7)*(r21)*(sj8));
if( IKabs(((gconst4)*(((((cj5)*(x1892)))+(((x1890)*(x1891)))+(((x1890)*(x1895)))+(((IkReal(-1.00000000000000))*(x1890)*(x1896)))+(((cj5)*(x1893))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1894)*(x1895)))+(((sj5)*(x1892)))+(((sj5)*(x1893)))+(((IkReal(-1.00000000000000))*(x1891)*(x1894)))+(((x1894)*(x1896))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((cj5)*(x1892)))+(((x1890)*(x1891)))+(((x1890)*(x1895)))+(((IkReal(-1.00000000000000))*(x1890)*(x1896)))+(((cj5)*(x1893)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(x1894)*(x1895)))+(((sj5)*(x1892)))+(((sj5)*(x1893)))+(((IkReal(-1.00000000000000))*(x1891)*(x1894)))+(((x1894)*(x1896)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1897=IKsin(j4);
IkReal x1898=IKcos(j4);
IkReal x1899=((r21)*(sj8));
IkReal x1900=((IkReal(1.00000000000000))*(sj6));
IkReal x1901=((IkReal(1.00000000000000))*(cj8)*(r20));
IkReal x1902=((sj5)*(x1898));
IkReal x1903=((cj5)*(x1897));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x1900)*(x1902)))+(((IkReal(-1.00000000000000))*(x1900)*(x1903)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj5)*(x1898)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x1899)))+(((sj5)*(x1897)))+(((IkReal(-1.00000000000000))*(cj7)*(x1901))));
evalcond[2]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(sj7)*(x1901)))+(((sj7)*(x1899)))+(((cj6)*(x1903)))+(((cj6)*(x1902))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x1904=(cj8)*(cj8);
IkReal x1905=(sj8)*(sj8);
IkReal x1906=((r00)*(r11));
IkReal x1907=((r02)*(sj7));
IkReal x1908=((cj7)*(x1904));
IkReal x1909=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1910=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1911=((cj7)*(x1905));
gconst16=IKsign(((((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1909)))+(((IkReal(-1.00000000000000))*(x1910)*(x1911)))+(((r10)*(sj8)*(x1907)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1909)))+(((IkReal(-1.00000000000000))*(x1908)*(x1910)))+(((x1906)*(x1908)))+(((x1906)*(x1911)))+(((cj8)*(r11)*(x1907)))));
IkReal x1912=(cj8)*(cj8);
IkReal x1913=(sj8)*(sj8);
IkReal x1914=((r00)*(r11));
IkReal x1915=((r02)*(sj7));
IkReal x1916=((cj7)*(x1912));
IkReal x1917=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1918=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1919=((cj7)*(x1913));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1917)))+(((r10)*(sj8)*(x1915)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1917)))+(((x1914)*(x1919)))+(((IkReal(-1.00000000000000))*(x1918)*(x1919)))+(((IkReal(-1.00000000000000))*(x1916)*(x1918)))+(((cj8)*(r11)*(x1915)))+(((x1914)*(x1916))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
IkReal x1920=(sj8)*(sj8);
IkReal x1921=(cj8)*(cj8);
IkReal x1922=((IkReal(1.00000000000000))*(r10));
IkReal x1923=((cj7)*(sj8));
IkReal x1924=((r00)*(r11));
IkReal x1925=((cj7)*(cj8));
IkReal x1926=((sj7)*(x1920));
IkReal x1927=((sj7)*(x1921));
gconst17=IKsign(((((x1924)*(x1927)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1925)))+(((IkReal(-1.00000000000000))*(r01)*(x1922)*(x1927)))+(((x1924)*(x1926)))+(((IkReal(-1.00000000000000))*(r02)*(x1922)*(x1923)))+(((IkReal(-1.00000000000000))*(r01)*(x1922)*(x1926)))+(((r01)*(r12)*(x1925)))+(((r00)*(r12)*(x1923)))));
IkReal x1928=(sj8)*(sj8);
IkReal x1929=(cj8)*(cj8);
IkReal x1930=((IkReal(1.00000000000000))*(r10));
IkReal x1931=((cj7)*(sj8));
IkReal x1932=((r00)*(r11));
IkReal x1933=((cj7)*(cj8));
IkReal x1934=((sj7)*(x1928));
IkReal x1935=((sj7)*(x1929));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(x1930)*(x1931)))+(((x1932)*(x1934)))+(((r00)*(r12)*(x1931)))+(((IkReal(-1.00000000000000))*(r01)*(x1930)*(x1934)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1933)))+(((r01)*(r12)*(x1933)))+(((IkReal(-1.00000000000000))*(r01)*(x1930)*(x1935)))+(((x1932)*(x1935))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1936=((cj6)*(sj7));
IkReal x1937=((IkReal(1.00000000000000))*(sj8));
IkReal x1938=((cj8)*(sj6));
IkReal x1939=((sj6)*(sj8));
IkReal x1940=((IkReal(1.00000000000000))*(cj6)*(cj7));
if( IKabs(((gconst17)*(((((r11)*(x1938)))+(((cj8)*(r10)*(x1936)))+(((IkReal(-1.00000000000000))*(r11)*(x1936)*(x1937)))+(((r10)*(x1939)))+(((IkReal(-1.00000000000000))*(r12)*(x1940))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(r02)*(x1940)))+(((r00)*(x1939)))+(((IkReal(-1.00000000000000))*(r01)*(x1936)*(x1937)))+(((r01)*(x1938)))+(((cj8)*(r00)*(x1936))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst17)*(((((r11)*(x1938)))+(((cj8)*(r10)*(x1936)))+(((IkReal(-1.00000000000000))*(r11)*(x1936)*(x1937)))+(((r10)*(x1939)))+(((IkReal(-1.00000000000000))*(r12)*(x1940)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(r02)*(x1940)))+(((r00)*(x1939)))+(((IkReal(-1.00000000000000))*(r01)*(x1936)*(x1937)))+(((r01)*(x1938)))+(((cj8)*(r00)*(x1936)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1941=IKsin(j3);
IkReal x1942=IKcos(j3);
IkReal x1943=((cj4)*(cj5));
IkReal x1944=((r01)*(sj8));
IkReal x1945=((cj8)*(r00));
IkReal x1946=((r00)*(sj8));
IkReal x1947=((cj8)*(r11));
IkReal x1948=((r11)*(sj8));
IkReal x1949=((sj4)*(sj5));
IkReal x1950=((r10)*(sj8));
IkReal x1951=((cj8)*(r10));
IkReal x1952=((cj7)*(x1941));
IkReal x1953=((sj7)*(x1942));
IkReal x1954=((IkReal(1.00000000000000))*(x1941));
IkReal x1955=((IkReal(1.00000000000000))*(x1942));
IkReal x1956=((cj8)*(x1941));
IkReal x1957=((IkReal(1.00000000000000))*(x1948));
IkReal x1958=((sj7)*(x1941));
IkReal x1959=((cj7)*(x1942));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1947)*(x1955)))+(((IkReal(-1.00000000000000))*(x1950)*(x1955)))+(cj6)+(((x1941)*(x1946)))+(((r01)*(x1956))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj6)*(x1943)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1955)))+(((IkReal(-1.00000000000000))*(x1950)*(x1954)))+(((IkReal(-1.00000000000000))*(x1947)*(x1954)))+(((IkReal(-1.00000000000000))*(x1946)*(x1955)))+(((sj6)*(x1949))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1945)*(x1952)))+(((r12)*(x1953)))+(((IkReal(-1.00000000000000))*(cj7)*(x1948)*(x1955)))+(((x1944)*(x1952)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1954)))+(((x1951)*(x1959))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj7)*(x1945)*(x1954)))+(sj6)+(((IkReal(-1.00000000000000))*(x1953)*(x1957)))+(((r02)*(x1952)))+(((x1944)*(x1958)))+(((x1951)*(x1953)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1955))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj7)*(x1944)*(x1955)))+(((cj5)*(sj4)))+(((x1945)*(x1959)))+(((x1951)*(x1952)))+(((r02)*(x1953)))+(((r12)*(x1958)))+(((cj4)*(sj5)))+(((IkReal(-1.00000000000000))*(x1952)*(x1957))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x1948)*(x1954)))+(((cj6)*(x1943)))+(((IkReal(-1.00000000000000))*(x1944)*(x1953)))+(((IkReal(-1.00000000000000))*(cj6)*(x1949)))+(((x1951)*(x1958)))+(((x1945)*(x1953)))+(((IkReal(-1.00000000000000))*(r12)*(x1952)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1955))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1960=((cj6)*(cj7));
IkReal x1961=((IkReal(1.00000000000000))*(sj8));
IkReal x1962=((cj6)*(sj7));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(r11)*(x1960)*(x1961)))+(((r12)*(x1962)))+(((cj8)*(r10)*(x1960))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((cj8)*(r00)*(x1960)))+(((IkReal(-1.00000000000000))*(r01)*(x1960)*(x1961)))+(((r02)*(x1962))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(r11)*(x1960)*(x1961)))+(((r12)*(x1962)))+(((cj8)*(r10)*(x1960)))))), ((gconst16)*(((((cj8)*(r00)*(x1960)))+(((IkReal(-1.00000000000000))*(r01)*(x1960)*(x1961)))+(((r02)*(x1962)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1963=IKsin(j3);
IkReal x1964=IKcos(j3);
IkReal x1965=((cj4)*(cj5));
IkReal x1966=((r01)*(sj8));
IkReal x1967=((cj8)*(r00));
IkReal x1968=((r00)*(sj8));
IkReal x1969=((cj8)*(r11));
IkReal x1970=((r11)*(sj8));
IkReal x1971=((sj4)*(sj5));
IkReal x1972=((r10)*(sj8));
IkReal x1973=((cj8)*(r10));
IkReal x1974=((cj7)*(x1963));
IkReal x1975=((sj7)*(x1964));
IkReal x1976=((IkReal(1.00000000000000))*(x1963));
IkReal x1977=((IkReal(1.00000000000000))*(x1964));
IkReal x1978=((cj8)*(x1963));
IkReal x1979=((IkReal(1.00000000000000))*(x1970));
IkReal x1980=((sj7)*(x1963));
IkReal x1981=((cj7)*(x1964));
evalcond[0]=((((x1963)*(x1968)))+(((IkReal(-1.00000000000000))*(x1969)*(x1977)))+(((IkReal(-1.00000000000000))*(x1972)*(x1977)))+(((r01)*(x1978)))+(cj6));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj6)*(x1965)))+(((IkReal(-1.00000000000000))*(x1972)*(x1976)))+(((sj6)*(x1971)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1977)))+(((IkReal(-1.00000000000000))*(x1969)*(x1976)))+(((IkReal(-1.00000000000000))*(x1968)*(x1977))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1976)))+(((IkReal(-1.00000000000000))*(x1967)*(x1974)))+(((x1973)*(x1981)))+(((IkReal(-1.00000000000000))*(cj7)*(x1970)*(x1977)))+(((r12)*(x1975)))+(((x1966)*(x1974))));
evalcond[3]=((((x1973)*(x1975)))+(((IkReal(-1.00000000000000))*(x1975)*(x1979)))+(sj6)+(((x1966)*(x1980)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1977)))+(((IkReal(-1.00000000000000))*(sj7)*(x1967)*(x1976)))+(((r02)*(x1974))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj7)*(x1966)*(x1977)))+(((IkReal(-1.00000000000000))*(x1974)*(x1979)))+(((r02)*(x1975)))+(((cj5)*(sj4)))+(((r12)*(x1980)))+(((x1973)*(x1974)))+(((x1967)*(x1981)))+(((cj4)*(sj5))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1966)*(x1975)))+(((IkReal(-1.00000000000000))*(cj6)*(x1971)))+(((x1967)*(x1975)))+(((x1973)*(x1980)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1977)))+(((IkReal(-1.00000000000000))*(r12)*(x1974)))+(((cj6)*(x1965)))+(((IkReal(-1.00000000000000))*(sj7)*(x1970)*(x1976))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1982=((cj6)*(sj7));
IkReal x1983=((IkReal(1.00000000000000))*(sj8));
IkReal x1984=((cj8)*(sj6));
IkReal x1985=((sj6)*(sj8));
IkReal x1986=((IkReal(1.00000000000000))*(cj6)*(cj7));
if( IKabs(((gconst1)*(((((r10)*(x1985)))+(((r11)*(x1984)))+(((IkReal(-1.00000000000000))*(r11)*(x1982)*(x1983)))+(((cj8)*(r10)*(x1982)))+(((IkReal(-1.00000000000000))*(r12)*(x1986))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r01)*(x1982)*(x1983)))+(((IkReal(-1.00000000000000))*(r02)*(x1986)))+(((cj8)*(r00)*(x1982)))+(((r01)*(x1984)))+(((r00)*(x1985))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst1)*(((((r10)*(x1985)))+(((r11)*(x1984)))+(((IkReal(-1.00000000000000))*(r11)*(x1982)*(x1983)))+(((cj8)*(r10)*(x1982)))+(((IkReal(-1.00000000000000))*(r12)*(x1986)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(r01)*(x1982)*(x1983)))+(((IkReal(-1.00000000000000))*(r02)*(x1986)))+(((cj8)*(r00)*(x1982)))+(((r01)*(x1984)))+(((r00)*(x1985)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x1987=IKsin(j3);
IkReal x1988=IKcos(j3);
IkReal x1989=((IkReal(1.00000000000000))*(r11));
IkReal x1990=((r01)*(sj8));
IkReal x1991=((cj8)*(r10));
IkReal x1992=((IkReal(1.00000000000000))*(sj7));
IkReal x1993=((sj7)*(x1988));
IkReal x1994=((cj7)*(x1987));
IkReal x1995=((r00)*(x1987));
IkReal x1996=((cj7)*(x1988));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(sj8)*(x1988)))+(((IkReal(-1.00000000000000))*(cj8)*(x1988)*(x1989)))+(((sj8)*(x1995)))+(cj6)+(((cj8)*(r01)*(x1987))));
evalcond[1]=((((x1991)*(x1996)))+(((IkReal(-1.00000000000000))*(cj8)*(r00)*(x1994)))+(((IkReal(-1.00000000000000))*(r02)*(x1987)*(x1992)))+(((x1990)*(x1994)))+(((IkReal(-1.00000000000000))*(sj8)*(x1989)*(x1996)))+(((r12)*(x1993))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj8)*(x1989)*(x1993)))+(((sj7)*(x1987)*(x1990)))+(sj6)+(((x1991)*(x1993)))+(((IkReal(-1.00000000000000))*(cj8)*(x1992)*(x1995)))+(((r02)*(x1994)))+(((IkReal(-1.00000000000000))*(r12)*(x1996))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=sj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1997=((IkReal(1.00000000000000))*(cj3));
IkReal x1998=((cj7)*(r02));
IkReal x1999=((cj8)*(sj7));
IkReal x2000=((r01)*(sj3));
IkReal x2001=((IkReal(1.00000000000000))*(sj3));
IkReal x2002=((sj7)*(sj8));
IkReal x2003=((cj7)*(r12));
IkReal x2004=((cj7)*(cj8));
IkReal x2005=((cj3)*(r10));
IkReal x2006=((cj7)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((r00)*(sj3)*(sj8)))+(((cj8)*(x2000)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x1997)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x1997))));
evalcond[2]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x1999)))+(((r21)*(x2002))));
evalcond[3]=((IkReal(0.0800000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(npx)*(x1999)))+(((npy)*(x2002)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2001)))+(((cj3)*(r12)*(sj7)))+(((x2000)*(x2006)))+(((IkReal(-1.00000000000000))*(r00)*(x2001)*(x2004)))+(((IkReal(-1.00000000000000))*(r11)*(x1997)*(x2006)))+(((x2004)*(x2005))));
evalcond[5]=((IkReal(1.00000000000000))+(((x2000)*(x2002)))+(((IkReal(-1.00000000000000))*(r00)*(x1999)*(x2001)))+(((IkReal(-1.00000000000000))*(x1997)*(x2003)))+(((IkReal(-1.00000000000000))*(r11)*(x1997)*(x2002)))+(((x1999)*(x2005)))+(((sj3)*(x1998))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2001)*(x2003)))+(((r10)*(sj3)*(x1999)))+(((cj3)*(r00)*(x1999)))+(((IkReal(-1.00000000000000))*(r11)*(x2001)*(x2002)))+(((IkReal(-1.00000000000000))*(x1997)*(x1998)))+(((IkReal(-1.00000000000000))*(r01)*(x1997)*(x2002))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2007=((IkReal(4.00000000000000))*(npx));
IkReal x2008=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(cj8)*(x2008)))+(((IkReal(-1.00000000000000))*(sj8)*(x2007))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2008)))+(((cj7)*(cj8)*(x2007))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(cj8)*(x2008)))+(((IkReal(-1.00000000000000))*(sj8)*(x2007)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2008)))+(((cj7)*(cj8)*(x2007)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(cj8)*(x2008)))+(((IkReal(-1.00000000000000))*(sj8)*(x2007)))), ((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2008)))+(((cj7)*(cj8)*(x2007)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0200000000000000))+(((IkReal(0.250000000000000))*(IKsin(j5))))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(0.0800000000000000))*(cj7)))+(((cj7)*(npy)*(sj8)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(npx)))+(((IkReal(-1.00000000000000))*(npz)*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst57;
gconst57=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2009=((cj8)*(sj5));
IkReal x2010=((cj3)*(r01));
IkReal x2011=((IkReal(1.00000000000000))*(cj5));
IkReal x2012=((r11)*(sj3));
IkReal x2013=((sj5)*(sj8));
IkReal x2014=((r10)*(sj3));
IkReal x2015=((cj3)*(r00)*(sj8));
if( IKabs(((gconst57)*(((((x2009)*(x2012)))+(((cj5)*(cj8)*(r21)))+(((cj3)*(r00)*(x2013)))+(((x2009)*(x2010)))+(((x2013)*(x2014)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst57)*(((((r21)*(x2009)))+(((r20)*(x2013)))+(((IkReal(-1.00000000000000))*(cj8)*(x2010)*(x2011)))+(((IkReal(-1.00000000000000))*(x2011)*(x2015)))+(((IkReal(-1.00000000000000))*(cj8)*(x2011)*(x2012)))+(((IkReal(-1.00000000000000))*(sj8)*(x2011)*(x2014))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst57)*(((((x2009)*(x2012)))+(((cj5)*(cj8)*(r21)))+(((cj3)*(r00)*(x2013)))+(((x2009)*(x2010)))+(((x2013)*(x2014)))+(((cj5)*(r20)*(sj8)))))), ((gconst57)*(((((r21)*(x2009)))+(((r20)*(x2013)))+(((IkReal(-1.00000000000000))*(cj8)*(x2010)*(x2011)))+(((IkReal(-1.00000000000000))*(x2011)*(x2015)))+(((IkReal(-1.00000000000000))*(cj8)*(x2011)*(x2012)))+(((IkReal(-1.00000000000000))*(sj8)*(x2011)*(x2014)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2016=IKsin(j4);
IkReal x2017=IKcos(j4);
IkReal x2018=((IkReal(1.00000000000000))*(cj8));
IkReal x2019=((cj3)*(r01));
IkReal x2020=((cj3)*(r00));
IkReal x2021=((cj7)*(cj8));
IkReal x2022=((IkReal(1.00000000000000))*(cj5));
IkReal x2023=((IkReal(1.00000000000000))*(sj8));
IkReal x2024=((r11)*(sj3));
IkReal x2025=((r10)*(sj3));
IkReal x2026=((sj5)*(x2016));
IkReal x2027=((sj5)*(x2017));
IkReal x2028=((x2017)*(x2022));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2027)))+(((IkReal(-1.00000000000000))*(x2016)*(x2022))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2018)))+(x2026)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2028))));
evalcond[2]=((x2026)+(((IkReal(-1.00000000000000))*(x2018)*(x2024)))+(((IkReal(-1.00000000000000))*(x2020)*(x2023)))+(((IkReal(-1.00000000000000))*(x2018)*(x2019)))+(((IkReal(-1.00000000000000))*(x2023)*(x2025)))+(((IkReal(-1.00000000000000))*(x2028))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2019)*(x2023)))+(((cj5)*(x2016)))+(x2027)+(((r12)*(sj3)*(sj7)))+(((x2020)*(x2021)))+(((IkReal(-1.00000000000000))*(cj7)*(x2023)*(x2024)))+(((x2021)*(x2025))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2029=((sj5)*(sj8));
IkReal x2030=((IkReal(1.00000000000000))*(cj7));
IkReal x2031=((cj8)*(sj5));
IkReal x2032=((r22)*(sj7));
IkReal x2033=((cj5)*(cj8));
IkReal x2034=((cj5)*(sj8));
if( IKabs(((gconst56)*(((((IkReal(-1.00000000000000))*(r21)*(x2029)*(x2030)))+(((r21)*(x2033)))+(((cj7)*(r20)*(x2031)))+(((sj5)*(x2032)))+(((r20)*(x2034))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((r21)*(x2031)))+(((IkReal(-1.00000000000000))*(r20)*(x2030)*(x2033)))+(((cj7)*(r21)*(x2034)))+(((IkReal(-1.00000000000000))*(cj5)*(x2032)))+(((r20)*(x2029))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst56)*(((((IkReal(-1.00000000000000))*(r21)*(x2029)*(x2030)))+(((r21)*(x2033)))+(((cj7)*(r20)*(x2031)))+(((sj5)*(x2032)))+(((r20)*(x2034)))))), ((gconst56)*(((((r21)*(x2031)))+(((IkReal(-1.00000000000000))*(r20)*(x2030)*(x2033)))+(((cj7)*(r21)*(x2034)))+(((IkReal(-1.00000000000000))*(cj5)*(x2032)))+(((r20)*(x2029)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2035=IKsin(j4);
IkReal x2036=IKcos(j4);
IkReal x2037=((IkReal(1.00000000000000))*(cj8));
IkReal x2038=((cj3)*(r01));
IkReal x2039=((cj3)*(r00));
IkReal x2040=((cj7)*(cj8));
IkReal x2041=((IkReal(1.00000000000000))*(cj5));
IkReal x2042=((IkReal(1.00000000000000))*(sj8));
IkReal x2043=((r11)*(sj3));
IkReal x2044=((r10)*(sj3));
IkReal x2045=((sj5)*(x2035));
IkReal x2046=((sj5)*(x2036));
IkReal x2047=((x2036)*(x2041));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2035)*(x2041)))+(((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2046))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2037)))+(((IkReal(-1.00000000000000))*(x2047)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2045));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2047)))+(((IkReal(-1.00000000000000))*(x2037)*(x2038)))+(x2045)+(((IkReal(-1.00000000000000))*(x2039)*(x2042)))+(((IkReal(-1.00000000000000))*(x2037)*(x2043)))+(((IkReal(-1.00000000000000))*(x2042)*(x2044))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x2040)*(x2044)))+(((cj5)*(x2035)))+(((IkReal(-1.00000000000000))*(cj7)*(x2042)*(x2043)))+(((r12)*(sj3)*(sj7)))+(((x2039)*(x2040)))+(x2046)+(((IkReal(-1.00000000000000))*(cj7)*(x2038)*(x2042))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2048=((IkReal(1.00000000000000))*(cj3));
IkReal x2049=((cj7)*(r02));
IkReal x2050=((cj8)*(sj7));
IkReal x2051=((r01)*(sj3));
IkReal x2052=((IkReal(1.00000000000000))*(sj3));
IkReal x2053=((sj7)*(sj8));
IkReal x2054=((cj7)*(r12));
IkReal x2055=((cj7)*(cj8));
IkReal x2056=((cj3)*(r10));
IkReal x2057=((cj7)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2048)))+(((r00)*(sj3)*(sj8)))+(((cj8)*(x2051)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2048))));
evalcond[2]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x2050)))+(((r21)*(x2053))));
evalcond[3]=((IkReal(-0.0800000000000000))+(((npy)*(x2053)))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(npx)*(x2050)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[4]=((((cj3)*(r12)*(sj7)))+(((x2055)*(x2056)))+(((IkReal(-1.00000000000000))*(r11)*(x2048)*(x2057)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2052)))+(((x2051)*(x2057)))+(((IkReal(-1.00000000000000))*(r00)*(x2052)*(x2055))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x2048)*(x2053)))+(((IkReal(-1.00000000000000))*(x2048)*(x2054)))+(((x2050)*(x2056)))+(((IkReal(-1.00000000000000))*(r00)*(x2050)*(x2052)))+(((x2051)*(x2053)))+(((sj3)*(x2049))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r01)*(x2048)*(x2053)))+(((cj3)*(r00)*(x2050)))+(((r10)*(sj3)*(x2050)))+(((IkReal(-1.00000000000000))*(x2052)*(x2054)))+(((IkReal(-1.00000000000000))*(x2048)*(x2049)))+(((IkReal(-1.00000000000000))*(r11)*(x2052)*(x2053))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2058=((IkReal(4.00000000000000))*(npx));
IkReal x2059=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.0800000000000000))+(((sj8)*(x2058)))+(((cj8)*(x2059))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2058)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2059)))+(((IkReal(-0.320000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((sj8)*(x2058)))+(((cj8)*(x2059)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2058)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2059)))+(((IkReal(-0.320000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.0800000000000000))+(((sj8)*(x2058)))+(((cj8)*(x2059)))), ((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2058)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2059)))+(((IkReal(-0.320000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0200000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(IKsin(j5)))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(0.0800000000000000))*(cj7)))+(((cj7)*(npy)*(sj8)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(npx)))+(((IkReal(-1.00000000000000))*(npz)*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst58;
gconst58=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2060=((IkReal(1.00000000000000))*(sj5));
IkReal x2061=((r20)*(sj8));
IkReal x2062=((cj5)*(cj8));
IkReal x2063=((r11)*(sj3));
IkReal x2064=((cj3)*(r01));
IkReal x2065=((cj3)*(r00)*(sj8));
IkReal x2066=((r10)*(sj3)*(sj8));
if( IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(cj8)*(x2060)*(x2064)))+(((IkReal(-1.00000000000000))*(x2060)*(x2066)))+(((IkReal(-1.00000000000000))*(cj8)*(x2060)*(x2063)))+(((IkReal(-1.00000000000000))*(r21)*(x2062)))+(((IkReal(-1.00000000000000))*(cj5)*(x2061)))+(((IkReal(-1.00000000000000))*(x2060)*(x2065))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(((((cj5)*(x2066)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2060)))+(((x2062)*(x2064)))+(((IkReal(-1.00000000000000))*(x2060)*(x2061)))+(((cj5)*(x2065)))+(((x2062)*(x2063))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst59)*(((((IkReal(-1.00000000000000))*(cj8)*(x2060)*(x2064)))+(((IkReal(-1.00000000000000))*(x2060)*(x2066)))+(((IkReal(-1.00000000000000))*(cj8)*(x2060)*(x2063)))+(((IkReal(-1.00000000000000))*(r21)*(x2062)))+(((IkReal(-1.00000000000000))*(cj5)*(x2061)))+(((IkReal(-1.00000000000000))*(x2060)*(x2065)))))), ((gconst59)*(((((cj5)*(x2066)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2060)))+(((x2062)*(x2064)))+(((IkReal(-1.00000000000000))*(x2060)*(x2061)))+(((cj5)*(x2065)))+(((x2062)*(x2063)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2067=IKsin(j4);
IkReal x2068=IKcos(j4);
IkReal x2069=((IkReal(1.00000000000000))*(cj8));
IkReal x2070=((cj3)*(r01));
IkReal x2071=((cj3)*(r00));
IkReal x2072=((cj7)*(cj8));
IkReal x2073=((r11)*(sj3));
IkReal x2074=((IkReal(1.00000000000000))*(sj8));
IkReal x2075=((r10)*(sj3));
IkReal x2076=((cj5)*(x2067));
IkReal x2077=((sj5)*(x2068));
IkReal x2078=((cj5)*(x2068));
IkReal x2079=((sj5)*(x2067));
IkReal x2080=((x2077)+(x2076));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x2080));
evalcond[1]=((x2079)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2078)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2069))));
evalcond[2]=((x2078)+(((IkReal(-1.00000000000000))*(x2079)))+(((IkReal(-1.00000000000000))*(x2069)*(x2070)))+(((IkReal(-1.00000000000000))*(x2069)*(x2073)))+(((IkReal(-1.00000000000000))*(x2071)*(x2074)))+(((IkReal(-1.00000000000000))*(x2074)*(x2075))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x2072)*(x2075)))+(((r12)*(sj3)*(sj7)))+(x2080)+(((x2071)*(x2072)))+(((IkReal(-1.00000000000000))*(cj7)*(x2073)*(x2074)))+(((IkReal(-1.00000000000000))*(cj7)*(x2070)*(x2074))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2081=((r20)*(sj5));
IkReal x2082=((r22)*(sj7));
IkReal x2083=((cj8)*(r21));
IkReal x2084=((cj7)*(cj8));
IkReal x2085=((cj5)*(r20));
IkReal x2086=((cj7)*(r21)*(sj8));
if( IKabs(((gconst58)*(((((IkReal(-1.00000000000000))*(sj5)*(x2082)))+(((sj5)*(x2086)))+(((sj8)*(x2085)))+(((IkReal(-1.00000000000000))*(x2081)*(x2084)))+(((cj5)*(x2083))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst58)*(((((sj5)*(x2083)))+(((x2084)*(x2085)))+(((sj8)*(x2081)))+(((IkReal(-1.00000000000000))*(cj5)*(x2086)))+(((cj5)*(x2082))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst58)*(((((IkReal(-1.00000000000000))*(sj5)*(x2082)))+(((sj5)*(x2086)))+(((sj8)*(x2085)))+(((IkReal(-1.00000000000000))*(x2081)*(x2084)))+(((cj5)*(x2083)))))), ((gconst58)*(((((sj5)*(x2083)))+(((x2084)*(x2085)))+(((sj8)*(x2081)))+(((IkReal(-1.00000000000000))*(cj5)*(x2086)))+(((cj5)*(x2082)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2087=IKsin(j4);
IkReal x2088=IKcos(j4);
IkReal x2089=((IkReal(1.00000000000000))*(cj8));
IkReal x2090=((cj3)*(r01));
IkReal x2091=((cj3)*(r00));
IkReal x2092=((cj7)*(cj8));
IkReal x2093=((r11)*(sj3));
IkReal x2094=((IkReal(1.00000000000000))*(sj8));
IkReal x2095=((r10)*(sj3));
IkReal x2096=((cj5)*(x2087));
IkReal x2097=((sj5)*(x2088));
IkReal x2098=((cj5)*(x2088));
IkReal x2099=((sj5)*(x2087));
IkReal x2100=((x2097)+(x2096));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x2100));
evalcond[1]=((x2099)+(((IkReal(-1.00000000000000))*(x2098)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2089))));
evalcond[2]=((x2098)+(((IkReal(-1.00000000000000))*(x2089)*(x2093)))+(((IkReal(-1.00000000000000))*(x2094)*(x2095)))+(((IkReal(-1.00000000000000))*(x2091)*(x2094)))+(((IkReal(-1.00000000000000))*(x2089)*(x2090)))+(((IkReal(-1.00000000000000))*(x2099))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x2092)*(x2095)))+(((IkReal(-1.00000000000000))*(cj7)*(x2093)*(x2094)))+(((r12)*(sj3)*(sj7)))+(((x2091)*(x2092)))+(((IkReal(-1.00000000000000))*(cj7)*(x2090)*(x2094)))+(x2100));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2101=((cj3)*(cj8));
IkReal x2102=((r01)*(sj3));
IkReal x2103=((r02)*(sj3));
IkReal x2104=((IkReal(1.00000000000000))*(sj7));
IkReal x2105=((IkReal(1.00000000000000))*(r11));
IkReal x2106=((cj3)*(r12));
IkReal x2107=((IkReal(1.00000000000000))*(cj7));
IkReal x2108=((cj8)*(sj3));
IkReal x2109=((sj3)*(sj8));
IkReal x2110=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(1.00000000000000))+(((cj8)*(x2102)))+(((IkReal(-1.00000000000000))*(x2101)*(x2105)))+(((r00)*(x2109)))+(((IkReal(-1.00000000000000))*(r10)*(x2110))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x2110)))+(((IkReal(-1.00000000000000))*(r10)*(x2109)))+(((IkReal(-1.00000000000000))*(r01)*(x2101)))+(((IkReal(-1.00000000000000))*(x2105)*(x2108))));
evalcond[5]=((((cj7)*(sj8)*(x2102)))+(((sj7)*(x2106)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2105)))+(((IkReal(-1.00000000000000))*(x2103)*(x2104)))+(((IkReal(-1.00000000000000))*(r00)*(x2107)*(x2108)))+(((cj7)*(r10)*(x2101))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2104)))+(((IkReal(-1.00000000000000))*(x2106)*(x2107)))+(((IkReal(-1.00000000000000))*(r00)*(x2104)*(x2108)))+(((cj7)*(x2103)))+(((r10)*(sj7)*(x2101)))+(((sj7)*(sj8)*(x2102))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2111=((IkReal(4.00000000000000))*(sj7));
IkReal x2112=((npy)*(sj8));
IkReal x2113=((IkReal(4.00000000000000))*(cj7));
IkReal x2114=((cj8)*(npx));
if( IKabs(((IkReal(0.0800000000000000))+(((x2111)*(x2112)))+(((npz)*(x2113)))+(((IkReal(-1.00000000000000))*(x2111)*(x2114)))+(((IkReal(0.320000000000000))*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj7)))+(((x2113)*(x2114)))+(((npz)*(x2111)))+(((IkReal(-1.00000000000000))*(x2112)*(x2113))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((x2111)*(x2112)))+(((npz)*(x2113)))+(((IkReal(-1.00000000000000))*(x2111)*(x2114)))+(((IkReal(0.320000000000000))*(sj7)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj7)))+(((x2113)*(x2114)))+(((npz)*(x2111)))+(((IkReal(-1.00000000000000))*(x2112)*(x2113)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.0800000000000000))+(((x2111)*(x2112)))+(((npz)*(x2113)))+(((IkReal(-1.00000000000000))*(x2111)*(x2114)))+(((IkReal(0.320000000000000))*(sj7)))), ((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj7)))+(((x2113)*(x2114)))+(((npz)*(x2111)))+(((IkReal(-1.00000000000000))*(x2112)*(x2113)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2115=((IkReal(1.00000000000000))*(sj7));
IkReal x2116=((npy)*(sj8));
IkReal x2117=((cj8)*(npx));
evalcond[0]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj7)*(x2117)))+(((IkReal(0.0800000000000000))*(cj7)))+(((cj7)*(x2116)))+(((IkReal(-1.00000000000000))*(npz)*(x2115))));
evalcond[1]=((IkReal(0.0200000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x2115)*(x2117)))+(((sj7)*(x2116)))+(((IkReal(0.0800000000000000))*(sj7)))+(((IkReal(-0.250000000000000))*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst60;
gconst60=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2118=((r22)*(sj7));
IkReal x2119=((cj8)*(r10));
IkReal x2120=((cj3)*(r00));
IkReal x2121=((IkReal(1.00000000000000))*(sj5));
IkReal x2122=((cj7)*(sj5));
IkReal x2123=((r21)*(sj8));
IkReal x2124=((cj3)*(r02)*(sj7));
IkReal x2125=((cj5)*(cj7)*(sj3));
IkReal x2126=((IkReal(1.00000000000000))*(r11)*(sj8));
IkReal x2127=((cj5)*(cj7)*(cj8));
IkReal x2128=((r12)*(sj3)*(sj7));
IkReal x2129=((IkReal(1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8));
if( IKabs(((gconst61)*(((((cj5)*(x2124)))+(((x2119)*(x2125)))+(((x2120)*(x2127)))+(((x2122)*(x2123)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(r20)*(x2121)))+(((cj5)*(x2128)))+(((IkReal(-1.00000000000000))*(x2118)*(x2121)))+(((IkReal(-1.00000000000000))*(x2125)*(x2126)))+(((IkReal(-1.00000000000000))*(cj5)*(x2129))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst61)*(((((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2121)))+(((cj8)*(x2120)*(x2122)))+(((r20)*(x2127)))+(((cj5)*(x2118)))+(((sj3)*(x2119)*(x2122)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2121)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2123)))+(((sj5)*(x2128)))+(((sj5)*(x2124))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst61)*(((((cj5)*(x2124)))+(((x2119)*(x2125)))+(((x2120)*(x2127)))+(((x2122)*(x2123)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(r20)*(x2121)))+(((cj5)*(x2128)))+(((IkReal(-1.00000000000000))*(x2118)*(x2121)))+(((IkReal(-1.00000000000000))*(x2125)*(x2126)))+(((IkReal(-1.00000000000000))*(cj5)*(x2129)))))), ((gconst61)*(((((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2121)))+(((cj8)*(x2120)*(x2122)))+(((r20)*(x2127)))+(((cj5)*(x2118)))+(((sj3)*(x2119)*(x2122)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2121)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2123)))+(((sj5)*(x2128)))+(((sj5)*(x2124)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2130=IKsin(j4);
IkReal x2131=IKcos(j4);
IkReal x2132=((IkReal(1.00000000000000))*(cj7));
IkReal x2133=((cj8)*(r20));
IkReal x2134=((cj3)*(r02));
IkReal x2135=((IkReal(1.00000000000000))*(sj7));
IkReal x2136=((sj3)*(sj7));
IkReal x2137=((r21)*(sj8));
IkReal x2138=((cj8)*(r10));
IkReal x2139=((cj5)*(x2130));
IkReal x2140=((sj5)*(x2131));
IkReal x2141=((r11)*(sj3)*(sj8));
IkReal x2142=((cj3)*(cj8)*(r00));
IkReal x2143=((cj5)*(x2131));
IkReal x2144=((cj3)*(r01)*(sj8));
IkReal x2145=((sj5)*(x2130));
IkReal x2146=((x2139)+(x2140));
evalcond[0]=((((cj7)*(x2137)))+(((IkReal(-1.00000000000000))*(x2143)))+(((IkReal(-1.00000000000000))*(r22)*(x2135)))+(x2145)+(((IkReal(-1.00000000000000))*(x2132)*(x2133))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2133)*(x2135)))+(((sj7)*(x2137)))+(x2146));
evalcond[2]=((((cj7)*(sj3)*(x2138)))+(((IkReal(-1.00000000000000))*(x2132)*(x2141)))+(((r12)*(x2136)))+(x2146)+(((sj7)*(x2134)))+(((cj7)*(x2142)))+(((IkReal(-1.00000000000000))*(x2132)*(x2144))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2135)*(x2141)))+(((x2136)*(x2138)))+(((sj7)*(x2142)))+(x2143)+(((IkReal(-1.00000000000000))*(x2135)*(x2144)))+(((IkReal(-1.00000000000000))*(x2132)*(x2134)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2132)))+(((IkReal(-1.00000000000000))*(x2145))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2147=((cj7)*(sj5));
IkReal x2148=((cj8)*(r20));
IkReal x2149=((cj5)*(cj7));
IkReal x2150=((IkReal(1.00000000000000))*(sj7));
IkReal x2151=((r21)*(sj8));
IkReal x2152=((sj7)*(x2151));
if( IKabs(((gconst60)*(((((cj5)*(x2152)))+(((IkReal(-1.00000000000000))*(cj5)*(x2148)*(x2150)))+(((r22)*(x2149)))+(((IkReal(-1.00000000000000))*(x2147)*(x2148)))+(((x2147)*(x2151)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2150))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((IkReal(-1.00000000000000))*(x2149)*(x2151)))+(((IkReal(-1.00000000000000))*(sj5)*(x2148)*(x2150)))+(((r22)*(x2147)))+(((sj5)*(x2152)))+(((cj5)*(r22)*(sj7)))+(((x2148)*(x2149))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst60)*(((((cj5)*(x2152)))+(((IkReal(-1.00000000000000))*(cj5)*(x2148)*(x2150)))+(((r22)*(x2149)))+(((IkReal(-1.00000000000000))*(x2147)*(x2148)))+(((x2147)*(x2151)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2150)))))), ((gconst60)*(((((IkReal(-1.00000000000000))*(x2149)*(x2151)))+(((IkReal(-1.00000000000000))*(sj5)*(x2148)*(x2150)))+(((r22)*(x2147)))+(((sj5)*(x2152)))+(((cj5)*(r22)*(sj7)))+(((x2148)*(x2149)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2153=IKsin(j4);
IkReal x2154=IKcos(j4);
IkReal x2155=((IkReal(1.00000000000000))*(cj7));
IkReal x2156=((cj8)*(r20));
IkReal x2157=((cj3)*(r02));
IkReal x2158=((IkReal(1.00000000000000))*(sj7));
IkReal x2159=((sj3)*(sj7));
IkReal x2160=((r21)*(sj8));
IkReal x2161=((cj8)*(r10));
IkReal x2162=((cj5)*(x2153));
IkReal x2163=((sj5)*(x2154));
IkReal x2164=((r11)*(sj3)*(sj8));
IkReal x2165=((cj3)*(cj8)*(r00));
IkReal x2166=((cj5)*(x2154));
IkReal x2167=((cj3)*(r01)*(sj8));
IkReal x2168=((sj5)*(x2153));
IkReal x2169=((x2163)+(x2162));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2155)*(x2156)))+(((IkReal(-1.00000000000000))*(x2166)))+(((cj7)*(x2160)))+(x2168)+(((IkReal(-1.00000000000000))*(r22)*(x2158))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2156)*(x2158)))+(((cj7)*(r22)))+(x2169)+(((sj7)*(x2160))));
evalcond[2]=((((r12)*(x2159)))+(((cj7)*(x2165)))+(((IkReal(-1.00000000000000))*(x2155)*(x2167)))+(((cj7)*(sj3)*(x2161)))+(x2169)+(((IkReal(-1.00000000000000))*(x2155)*(x2164)))+(((sj7)*(x2157))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2168)))+(((IkReal(-1.00000000000000))*(x2155)*(x2157)))+(((sj7)*(x2165)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2155)))+(x2166)+(((x2159)*(x2161)))+(((IkReal(-1.00000000000000))*(x2158)*(x2164)))+(((IkReal(-1.00000000000000))*(x2158)*(x2167))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2170=((cj3)*(cj8));
IkReal x2171=((r01)*(sj3));
IkReal x2172=((r02)*(sj3));
IkReal x2173=((IkReal(1.00000000000000))*(sj7));
IkReal x2174=((IkReal(1.00000000000000))*(r11));
IkReal x2175=((cj3)*(r12));
IkReal x2176=((IkReal(1.00000000000000))*(cj7));
IkReal x2177=((cj8)*(sj3));
IkReal x2178=((sj3)*(sj8));
IkReal x2179=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(-1.00000000000000))+(((r00)*(x2178)))+(((cj8)*(x2171)))+(((IkReal(-1.00000000000000))*(r10)*(x2179)))+(((IkReal(-1.00000000000000))*(x2170)*(x2174))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x2178)))+(((IkReal(-1.00000000000000))*(r01)*(x2170)))+(((IkReal(-1.00000000000000))*(x2174)*(x2177)))+(((IkReal(-1.00000000000000))*(r00)*(x2179))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2174)))+(((IkReal(-1.00000000000000))*(x2172)*(x2173)))+(((IkReal(-1.00000000000000))*(r00)*(x2176)*(x2177)))+(((cj7)*(sj8)*(x2171)))+(((cj7)*(r10)*(x2170)))+(((sj7)*(x2175))));
evalcond[6]=((((r10)*(sj7)*(x2170)))+(((sj7)*(sj8)*(x2171)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2173)))+(((IkReal(-1.00000000000000))*(r00)*(x2173)*(x2177)))+(((IkReal(-1.00000000000000))*(x2175)*(x2176)))+(((cj7)*(x2172))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2180=((IkReal(4.00000000000000))*(sj7));
IkReal x2181=((npy)*(sj8));
IkReal x2182=((IkReal(4.00000000000000))*(cj7));
IkReal x2183=((cj8)*(npx));
if( IKabs(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x2180)*(x2181)))+(((x2180)*(x2183)))+(((IkReal(-1.00000000000000))*(npz)*(x2182)))+(((IkReal(-0.320000000000000))*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x2181)*(x2182)))+(((x2182)*(x2183)))+(((npz)*(x2180))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x2180)*(x2181)))+(((x2180)*(x2183)))+(((IkReal(-1.00000000000000))*(npz)*(x2182)))+(((IkReal(-0.320000000000000))*(sj7)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x2181)*(x2182)))+(((x2182)*(x2183)))+(((npz)*(x2180)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x2180)*(x2181)))+(((x2180)*(x2183)))+(((IkReal(-1.00000000000000))*(npz)*(x2182)))+(((IkReal(-0.320000000000000))*(sj7)))), ((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x2181)*(x2182)))+(((x2182)*(x2183)))+(((npz)*(x2180)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2184=((IkReal(1.00000000000000))*(sj7));
IkReal x2185=((npy)*(sj8));
IkReal x2186=((cj8)*(npx));
evalcond[0]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x2184)))+(((IkReal(-1.00000000000000))*(cj7)*(x2186)))+(((cj7)*(x2185))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((cj7)*(npz)))+(((IkReal(0.250000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(x2184)*(x2186)))+(((sj7)*(x2185)))+(((IkReal(0.0800000000000000))*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst63;
gconst63=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2187=((cj3)*(cj5));
IkReal x2188=((r02)*(sj7));
IkReal x2189=((cj8)*(r00));
IkReal x2190=((r22)*(sj7));
IkReal x2191=((cj5)*(sj3));
IkReal x2192=((cj7)*(cj8));
IkReal x2193=((IkReal(1.00000000000000))*(sj5));
IkReal x2194=((r12)*(sj7));
IkReal x2195=((sj3)*(sj5));
IkReal x2196=((cj3)*(cj7)*(sj5));
IkReal x2197=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst63)*(((((cj7)*(x2187)*(x2189)))+(((IkReal(-1.00000000000000))*(r11)*(x2191)*(x2197)))+(((x2187)*(x2188)))+(((IkReal(-1.00000000000000))*(r01)*(x2187)*(x2197)))+(((IkReal(-1.00000000000000))*(x2190)*(x2193)))+(((r10)*(x2191)*(x2192)))+(((x2191)*(x2194)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r20)*(x2192)*(x2193))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2197)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2193)))+(((cj5)*(r20)*(x2192)))+(((cj5)*(x2190)))+(((cj3)*(sj5)*(x2188)))+(((r10)*(x2192)*(x2195)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2193)))+(((x2189)*(x2196)))+(((x2194)*(x2195))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst63)*(((((cj7)*(x2187)*(x2189)))+(((IkReal(-1.00000000000000))*(r11)*(x2191)*(x2197)))+(((x2187)*(x2188)))+(((IkReal(-1.00000000000000))*(r01)*(x2187)*(x2197)))+(((IkReal(-1.00000000000000))*(x2190)*(x2193)))+(((r10)*(x2191)*(x2192)))+(((x2191)*(x2194)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r20)*(x2192)*(x2193)))))), ((gconst63)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2197)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2193)))+(((cj5)*(r20)*(x2192)))+(((cj5)*(x2190)))+(((cj3)*(sj5)*(x2188)))+(((r10)*(x2192)*(x2195)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2193)))+(((x2189)*(x2196)))+(((x2194)*(x2195)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2198=IKcos(j4);
IkReal x2199=IKsin(j4);
IkReal x2200=((IkReal(1.00000000000000))*(cj7));
IkReal x2201=((cj8)*(r20));
IkReal x2202=((cj3)*(r02));
IkReal x2203=((IkReal(1.00000000000000))*(sj7));
IkReal x2204=((sj3)*(sj7));
IkReal x2205=((r21)*(sj8));
IkReal x2206=((IkReal(1.00000000000000))*(cj5));
IkReal x2207=((cj8)*(r10));
IkReal x2208=((sj5)*(x2199));
IkReal x2209=((sj5)*(x2198));
IkReal x2210=((r11)*(sj3)*(sj8));
IkReal x2211=((cj3)*(cj8)*(r00));
IkReal x2212=((cj3)*(r01)*(sj8));
IkReal x2213=((x2198)*(x2206));
evalcond[0]=((((cj7)*(x2205)))+(((IkReal(-1.00000000000000))*(r22)*(x2203)))+(((IkReal(-1.00000000000000))*(x2213)))+(x2208)+(((IkReal(-1.00000000000000))*(x2200)*(x2201))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2209)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2201)*(x2203)))+(((sj7)*(x2205)))+(((IkReal(-1.00000000000000))*(x2199)*(x2206))));
evalcond[2]=((((cj5)*(x2199)))+(((IkReal(-1.00000000000000))*(x2200)*(x2210)))+(x2209)+(((sj7)*(x2202)))+(((cj7)*(x2211)))+(((IkReal(-1.00000000000000))*(x2200)*(x2212)))+(((cj7)*(sj3)*(x2207)))+(((r12)*(x2204))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2203)*(x2212)))+(((IkReal(-1.00000000000000))*(x2213)))+(x2208)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2200)))+(((x2204)*(x2207)))+(((IkReal(-1.00000000000000))*(x2203)*(x2210)))+(((sj7)*(x2211)))+(((IkReal(-1.00000000000000))*(x2200)*(x2202))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2214=((cj7)*(sj5));
IkReal x2215=((r21)*(sj8));
IkReal x2216=((cj5)*(cj7));
IkReal x2217=((cj8)*(r20));
IkReal x2218=((sj5)*(sj7));
IkReal x2219=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst62)*(((((r22)*(x2216)))+(((IkReal(-1.00000000000000))*(x2214)*(x2215)))+(((IkReal(-1.00000000000000))*(x2217)*(x2219)))+(((r22)*(x2218)))+(((x2214)*(x2217)))+(((cj5)*(sj7)*(x2215))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*(((((IkReal(-1.00000000000000))*(r22)*(x2219)))+(((x2215)*(x2218)))+(((IkReal(-1.00000000000000))*(x2216)*(x2217)))+(((x2215)*(x2216)))+(((IkReal(-1.00000000000000))*(x2217)*(x2218)))+(((r22)*(x2214))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst62)*(((((r22)*(x2216)))+(((IkReal(-1.00000000000000))*(x2214)*(x2215)))+(((IkReal(-1.00000000000000))*(x2217)*(x2219)))+(((r22)*(x2218)))+(((x2214)*(x2217)))+(((cj5)*(sj7)*(x2215)))))), ((gconst62)*(((((IkReal(-1.00000000000000))*(r22)*(x2219)))+(((x2215)*(x2218)))+(((IkReal(-1.00000000000000))*(x2216)*(x2217)))+(((x2215)*(x2216)))+(((IkReal(-1.00000000000000))*(x2217)*(x2218)))+(((r22)*(x2214)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2220=IKcos(j4);
IkReal x2221=IKsin(j4);
IkReal x2222=((IkReal(1.00000000000000))*(cj7));
IkReal x2223=((cj8)*(r20));
IkReal x2224=((cj3)*(r02));
IkReal x2225=((IkReal(1.00000000000000))*(sj7));
IkReal x2226=((sj3)*(sj7));
IkReal x2227=((r21)*(sj8));
IkReal x2228=((IkReal(1.00000000000000))*(cj5));
IkReal x2229=((cj8)*(r10));
IkReal x2230=((sj5)*(x2221));
IkReal x2231=((sj5)*(x2220));
IkReal x2232=((r11)*(sj3)*(sj8));
IkReal x2233=((cj3)*(cj8)*(r00));
IkReal x2234=((cj3)*(r01)*(sj8));
IkReal x2235=((x2220)*(x2228));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2225)))+(((IkReal(-1.00000000000000))*(x2235)))+(((IkReal(-1.00000000000000))*(x2222)*(x2223)))+(x2230)+(((cj7)*(x2227))));
evalcond[1]=((((sj7)*(x2227)))+(((IkReal(-1.00000000000000))*(x2231)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2223)*(x2225)))+(((IkReal(-1.00000000000000))*(x2221)*(x2228))));
evalcond[2]=((((sj7)*(x2224)))+(((IkReal(-1.00000000000000))*(x2222)*(x2234)))+(((r12)*(x2226)))+(((cj5)*(x2221)))+(((cj7)*(x2233)))+(((IkReal(-1.00000000000000))*(x2222)*(x2232)))+(((cj7)*(sj3)*(x2229)))+(x2231));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2222)*(x2224)))+(((sj7)*(x2233)))+(((IkReal(-1.00000000000000))*(x2225)*(x2232)))+(((x2226)*(x2229)))+(((IkReal(-1.00000000000000))*(x2235)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2222)))+(x2230)+(((IkReal(-1.00000000000000))*(x2225)*(x2234))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2236=((IkReal(4.00000000000000))*(sj7));
IkReal x2237=((npy)*(sj8));
IkReal x2238=((IkReal(4.00000000000000))*(cj7));
IkReal x2239=((cj8)*(npx));
if( IKabs(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(sj6)))+(((IkReal(0.0800000000000000))*(cj6)))+(((npz)*(x2238)))+(((IkReal(-1.00000000000000))*(x2236)*(x2239)))+(((IkReal(0.320000000000000))*(sj7)))+(((x2236)*(x2237))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((npz)*(x2236)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x2237)*(x2238)))+(((x2238)*(x2239))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(sj6)))+(((IkReal(0.0800000000000000))*(cj6)))+(((npz)*(x2238)))+(((IkReal(-1.00000000000000))*(x2236)*(x2239)))+(((IkReal(0.320000000000000))*(sj7)))+(((x2236)*(x2237)))))))+IKsqr(((IkReal(-0.920000000000000))+(((npz)*(x2236)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x2237)*(x2238)))+(((x2238)*(x2239)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(sj6)))+(((IkReal(0.0800000000000000))*(cj6)))+(((npz)*(x2238)))+(((IkReal(-1.00000000000000))*(x2236)*(x2239)))+(((IkReal(0.320000000000000))*(sj7)))+(((x2236)*(x2237)))))), ((IkReal(-0.920000000000000))+(((npz)*(x2236)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x2237)*(x2238)))+(((x2238)*(x2239)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2240=IKsin(j5);
IkReal x2241=((IkReal(1.00000000000000))*(sj7));
IkReal x2242=((npy)*(sj8));
IkReal x2243=((cj8)*(npx));
IkReal x2244=((IkReal(0.250000000000000))*(x2240));
evalcond[0]=((((IkReal(0.0800000000000000))*(cj6)))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((sj6)*(x2244)))+(((IkReal(-0.0200000000000000))*(sj6))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x2241)))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((cj7)*(x2242)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2243))));
evalcond[2]=((((sj7)*(x2242)))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x2241)*(x2243)))+(((IkReal(0.0800000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(x2244)))+(((IkReal(0.0200000000000000))*(cj6)))+(((IkReal(0.0800000000000000))*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5))))));
dummyeval[0]=((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2245=((IkReal(1.00000000000000))*(sj7));
IkReal x2246=((IkReal(1.00000000000000))*(cj3));
IkReal x2247=((cj7)*(r02));
IkReal x2248=((cj3)*(sj7));
IkReal x2249=((cj8)*(r00));
IkReal x2250=((cj8)*(npx));
IkReal x2251=((r01)*(sj3));
IkReal x2252=((cj7)*(sj8));
IkReal x2253=((r11)*(sj8));
IkReal x2254=((IkReal(1.00000000000000))*(cj7));
IkReal x2255=((sj7)*(sj8));
IkReal x2256=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(x2250)*(x2254)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x2245)))+(((npy)*(x2252)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2246)))+(((r00)*(sj3)*(sj8)))+(((cj8)*(x2251)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2246))));
evalcond[4]=((((cj7)*(r22)))+(((r21)*(x2255)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x2245))));
evalcond[5]=((IkReal(0.0800000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x2245)*(x2250)))+(((npy)*(x2255)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[6]=((((x2251)*(x2252)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x2245)))+(((r12)*(x2248)))+(((IkReal(-1.00000000000000))*(r11)*(x2246)*(x2252)))+(((cj3)*(cj7)*(x2256)))+(((IkReal(-1.00000000000000))*(sj3)*(x2249)*(x2254))));
evalcond[7]=((IkReal(1.00000000000000))+(((sj3)*(x2247)))+(((IkReal(-1.00000000000000))*(sj3)*(x2245)*(x2249)))+(((IkReal(-1.00000000000000))*(cj3)*(x2245)*(x2253)))+(((x2248)*(x2256)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2246)))+(((x2251)*(x2255))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2254)))+(((x2248)*(x2249)))+(((IkReal(-1.00000000000000))*(x2246)*(x2247)))+(((sj3)*(sj7)*(x2256)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x2245)))+(((IkReal(-1.00000000000000))*(sj3)*(x2245)*(x2253))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2257=((cj8)*(sj5));
IkReal x2258=((cj3)*(r01));
IkReal x2259=((IkReal(1.00000000000000))*(cj5));
IkReal x2260=((r11)*(sj3));
IkReal x2261=((sj5)*(sj8));
IkReal x2262=((r10)*(sj3));
IkReal x2263=((cj3)*(r00)*(sj8));
if( IKabs(((gconst49)*(((((cj5)*(cj8)*(r21)))+(((x2257)*(x2260)))+(((x2257)*(x2258)))+(((cj3)*(r00)*(x2261)))+(((x2261)*(x2262)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((r21)*(x2257)))+(((IkReal(-1.00000000000000))*(cj8)*(x2259)*(x2260)))+(((IkReal(-1.00000000000000))*(x2259)*(x2263)))+(((IkReal(-1.00000000000000))*(sj8)*(x2259)*(x2262)))+(((IkReal(-1.00000000000000))*(cj8)*(x2258)*(x2259)))+(((r20)*(x2261))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst49)*(((((cj5)*(cj8)*(r21)))+(((x2257)*(x2260)))+(((x2257)*(x2258)))+(((cj3)*(r00)*(x2261)))+(((x2261)*(x2262)))+(((cj5)*(r20)*(sj8)))))), ((gconst49)*(((((r21)*(x2257)))+(((IkReal(-1.00000000000000))*(cj8)*(x2259)*(x2260)))+(((IkReal(-1.00000000000000))*(x2259)*(x2263)))+(((IkReal(-1.00000000000000))*(sj8)*(x2259)*(x2262)))+(((IkReal(-1.00000000000000))*(cj8)*(x2258)*(x2259)))+(((r20)*(x2261)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2264=IKsin(j4);
IkReal x2265=IKcos(j4);
IkReal x2266=((IkReal(1.00000000000000))*(cj8));
IkReal x2267=((cj3)*(r01));
IkReal x2268=((cj3)*(r00));
IkReal x2269=((cj7)*(cj8));
IkReal x2270=((IkReal(1.00000000000000))*(cj5));
IkReal x2271=((IkReal(1.00000000000000))*(sj8));
IkReal x2272=((r11)*(sj3));
IkReal x2273=((r10)*(sj3));
IkReal x2274=((sj5)*(x2264));
IkReal x2275=((sj5)*(x2265));
IkReal x2276=((x2265)*(x2270));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2264)*(x2270)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2275))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2276)))+(((cj7)*(r21)*(sj8)))+(x2274)+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2266))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2268)*(x2271)))+(((IkReal(-1.00000000000000))*(x2276)))+(((IkReal(-1.00000000000000))*(x2266)*(x2272)))+(x2274)+(((IkReal(-1.00000000000000))*(x2271)*(x2273)))+(((IkReal(-1.00000000000000))*(x2266)*(x2267))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x2269)*(x2273)))+(((IkReal(-1.00000000000000))*(cj7)*(x2267)*(x2271)))+(x2275)+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2271)*(x2272)))+(((x2268)*(x2269)))+(((cj5)*(x2264))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2277=((IkReal(1.00000000000000))*(cj5));
IkReal x2278=((r22)*(sj7));
IkReal x2279=((cj8)*(sj5));
IkReal x2280=((cj7)*(r20));
IkReal x2281=((r20)*(sj8));
IkReal x2282=((cj7)*(r21)*(sj8));
if( IKabs(((gconst48)*(((((sj5)*(x2278)))+(((cj5)*(x2281)))+(((cj5)*(cj8)*(r21)))+(((IkReal(-1.00000000000000))*(sj5)*(x2282)))+(((x2279)*(x2280))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((cj5)*(x2282)))+(((IkReal(-1.00000000000000))*(x2277)*(x2278)))+(((IkReal(-1.00000000000000))*(cj8)*(x2277)*(x2280)))+(((r21)*(x2279)))+(((sj5)*(x2281))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst48)*(((((sj5)*(x2278)))+(((cj5)*(x2281)))+(((cj5)*(cj8)*(r21)))+(((IkReal(-1.00000000000000))*(sj5)*(x2282)))+(((x2279)*(x2280)))))), ((gconst48)*(((((cj5)*(x2282)))+(((IkReal(-1.00000000000000))*(x2277)*(x2278)))+(((IkReal(-1.00000000000000))*(cj8)*(x2277)*(x2280)))+(((r21)*(x2279)))+(((sj5)*(x2281)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2283=IKsin(j4);
IkReal x2284=IKcos(j4);
IkReal x2285=((IkReal(1.00000000000000))*(cj8));
IkReal x2286=((cj3)*(r01));
IkReal x2287=((cj3)*(r00));
IkReal x2288=((cj7)*(cj8));
IkReal x2289=((IkReal(1.00000000000000))*(cj5));
IkReal x2290=((IkReal(1.00000000000000))*(sj8));
IkReal x2291=((r11)*(sj3));
IkReal x2292=((r10)*(sj3));
IkReal x2293=((sj5)*(x2283));
IkReal x2294=((sj5)*(x2284));
IkReal x2295=((x2284)*(x2289));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2294)))+(((IkReal(-1.00000000000000))*(x2283)*(x2289))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2295)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2293)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2285))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2295)))+(((IkReal(-1.00000000000000))*(x2285)*(x2286)))+(((IkReal(-1.00000000000000))*(x2290)*(x2292)))+(x2293)+(((IkReal(-1.00000000000000))*(x2287)*(x2290)))+(((IkReal(-1.00000000000000))*(x2285)*(x2291))));
evalcond[3]=((((x2287)*(x2288)))+(((cj3)*(r02)*(sj7)))+(((r12)*(sj3)*(sj7)))+(((cj5)*(x2283)))+(((IkReal(-1.00000000000000))*(cj7)*(x2290)*(x2291)))+(x2294)+(((x2288)*(x2292)))+(((IkReal(-1.00000000000000))*(cj7)*(x2286)*(x2290))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2296=((IkReal(1.00000000000000))*(sj7));
IkReal x2297=((IkReal(1.00000000000000))*(cj3));
IkReal x2298=((cj7)*(r02));
IkReal x2299=((cj3)*(sj7));
IkReal x2300=((cj8)*(r00));
IkReal x2301=((cj8)*(npx));
IkReal x2302=((r01)*(sj3));
IkReal x2303=((cj7)*(sj8));
IkReal x2304=((r11)*(sj8));
IkReal x2305=((IkReal(1.00000000000000))*(cj7));
IkReal x2306=((sj7)*(sj8));
IkReal x2307=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0200000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(x2301)*(x2305)))+(((IkReal(0.0800000000000000))*(cj7)))+(((npy)*(x2303)))+(((IkReal(-1.00000000000000))*(npz)*(x2296)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2297)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2297)))+(((cj8)*(x2302))));
evalcond[4]=((((cj7)*(r22)))+(((r21)*(x2306)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x2296))));
evalcond[5]=((IkReal(-0.0800000000000000))+(((cj7)*(npz)))+(((npy)*(x2306)))+(((IkReal(-1.00000000000000))*(x2296)*(x2301)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[6]=((((x2302)*(x2303)))+(((IkReal(-1.00000000000000))*(r11)*(x2297)*(x2303)))+(((IkReal(-1.00000000000000))*(sj3)*(x2300)*(x2305)))+(((cj3)*(cj7)*(x2307)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x2296)))+(((r12)*(x2299))));
evalcond[7]=((IkReal(-1.00000000000000))+(((x2302)*(x2306)))+(((IkReal(-1.00000000000000))*(cj3)*(x2296)*(x2304)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2297)))+(((IkReal(-1.00000000000000))*(sj3)*(x2296)*(x2300)))+(((x2299)*(x2307)))+(((sj3)*(x2298))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2305)))+(((IkReal(-1.00000000000000))*(sj3)*(x2296)*(x2304)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x2296)))+(((x2299)*(x2300)))+(((IkReal(-1.00000000000000))*(x2297)*(x2298)))+(((sj3)*(sj7)*(x2307))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2308=((IkReal(1.00000000000000))*(sj5));
IkReal x2309=((r20)*(sj8));
IkReal x2310=((cj5)*(cj8));
IkReal x2311=((r11)*(sj3));
IkReal x2312=((cj3)*(r01));
IkReal x2313=((cj3)*(r00)*(sj8));
IkReal x2314=((r10)*(sj3)*(sj8));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(x2308)*(x2312)))+(((IkReal(-1.00000000000000))*(x2308)*(x2314)))+(((IkReal(-1.00000000000000))*(x2308)*(x2313)))+(((IkReal(-1.00000000000000))*(r21)*(x2310)))+(((IkReal(-1.00000000000000))*(cj8)*(x2308)*(x2311)))+(((IkReal(-1.00000000000000))*(cj5)*(x2309))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((cj5)*(x2313)))+(((cj5)*(x2314)))+(((x2310)*(x2312)))+(((x2310)*(x2311)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2308)))+(((IkReal(-1.00000000000000))*(x2308)*(x2309))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(x2308)*(x2312)))+(((IkReal(-1.00000000000000))*(x2308)*(x2314)))+(((IkReal(-1.00000000000000))*(x2308)*(x2313)))+(((IkReal(-1.00000000000000))*(r21)*(x2310)))+(((IkReal(-1.00000000000000))*(cj8)*(x2308)*(x2311)))+(((IkReal(-1.00000000000000))*(cj5)*(x2309)))))), ((gconst51)*(((((cj5)*(x2313)))+(((cj5)*(x2314)))+(((x2310)*(x2312)))+(((x2310)*(x2311)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2308)))+(((IkReal(-1.00000000000000))*(x2308)*(x2309)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2315=IKsin(j4);
IkReal x2316=IKcos(j4);
IkReal x2317=((IkReal(1.00000000000000))*(cj8));
IkReal x2318=((cj3)*(r01));
IkReal x2319=((cj3)*(r00));
IkReal x2320=((cj7)*(cj8));
IkReal x2321=((r11)*(sj3));
IkReal x2322=((IkReal(1.00000000000000))*(sj8));
IkReal x2323=((r10)*(sj3));
IkReal x2324=((cj5)*(x2315));
IkReal x2325=((sj5)*(x2316));
IkReal x2326=((cj5)*(x2316));
IkReal x2327=((sj5)*(x2315));
IkReal x2328=((x2325)+(x2324));
evalcond[0]=((x2328)+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x2327)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2317)))+(((IkReal(-1.00000000000000))*(x2326))));
evalcond[2]=((x2326)+(((IkReal(-1.00000000000000))*(x2327)))+(((IkReal(-1.00000000000000))*(x2317)*(x2318)))+(((IkReal(-1.00000000000000))*(x2319)*(x2322)))+(((IkReal(-1.00000000000000))*(x2322)*(x2323)))+(((IkReal(-1.00000000000000))*(x2317)*(x2321))));
evalcond[3]=((x2328)+(((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2321)*(x2322)))+(((r12)*(sj3)*(sj7)))+(((x2319)*(x2320)))+(((x2320)*(x2323)))+(((IkReal(-1.00000000000000))*(cj7)*(x2318)*(x2322))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2329=((r22)*(sj7));
IkReal x2330=((cj8)*(sj5));
IkReal x2331=((sj5)*(sj8));
IkReal x2332=((cj7)*(r20));
IkReal x2333=((cj5)*(cj8));
IkReal x2334=((cj7)*(r21));
IkReal x2335=((cj5)*(sj8));
if( IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(sj5)*(x2329)))+(((x2331)*(x2334)))+(((IkReal(-1.00000000000000))*(x2330)*(x2332)))+(((r20)*(x2335)))+(((r21)*(x2333))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((r20)*(x2331)))+(((cj5)*(x2329)))+(((IkReal(-1.00000000000000))*(x2334)*(x2335)))+(((x2332)*(x2333)))+(((r21)*(x2330))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst50)*(((((IkReal(-1.00000000000000))*(sj5)*(x2329)))+(((x2331)*(x2334)))+(((IkReal(-1.00000000000000))*(x2330)*(x2332)))+(((r20)*(x2335)))+(((r21)*(x2333)))))), ((gconst50)*(((((r20)*(x2331)))+(((cj5)*(x2329)))+(((IkReal(-1.00000000000000))*(x2334)*(x2335)))+(((x2332)*(x2333)))+(((r21)*(x2330)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2336=IKsin(j4);
IkReal x2337=IKcos(j4);
IkReal x2338=((IkReal(1.00000000000000))*(cj8));
IkReal x2339=((cj3)*(r01));
IkReal x2340=((cj3)*(r00));
IkReal x2341=((cj7)*(cj8));
IkReal x2342=((r11)*(sj3));
IkReal x2343=((IkReal(1.00000000000000))*(sj8));
IkReal x2344=((r10)*(sj3));
IkReal x2345=((cj5)*(x2336));
IkReal x2346=((sj5)*(x2337));
IkReal x2347=((cj5)*(x2337));
IkReal x2348=((sj5)*(x2336));
IkReal x2349=((x2345)+(x2346));
evalcond[0]=((((cj8)*(r21)))+(x2349)+(((r20)*(sj8))));
evalcond[1]=((x2348)+(((IkReal(-1.00000000000000))*(x2347)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2338))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2348)))+(x2347)+(((IkReal(-1.00000000000000))*(x2338)*(x2342)))+(((IkReal(-1.00000000000000))*(x2340)*(x2343)))+(((IkReal(-1.00000000000000))*(x2338)*(x2339)))+(((IkReal(-1.00000000000000))*(x2343)*(x2344))));
evalcond[3]=((((x2340)*(x2341)))+(((x2341)*(x2344)))+(((cj3)*(r02)*(sj7)))+(x2349)+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2342)*(x2343)))+(((IkReal(-1.00000000000000))*(cj7)*(x2339)*(x2343))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2350=((cj3)*(cj8));
IkReal x2351=((IkReal(1.00000000000000))*(sj7));
IkReal x2352=((cj8)*(npx));
IkReal x2353=((r01)*(sj3));
IkReal x2354=((npy)*(sj8));
IkReal x2355=((r02)*(sj3));
IkReal x2356=((IkReal(1.00000000000000))*(r11));
IkReal x2357=((cj3)*(r12));
IkReal x2358=((IkReal(1.00000000000000))*(cj7));
IkReal x2359=((sj3)*(sj8));
IkReal x2360=((IkReal(1.00000000000000))*(cj3)*(sj8));
IkReal x2361=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(x2352)*(x2358)))+(((cj7)*(x2354)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(npz)*(x2351))));
evalcond[4]=((IkReal(1.00000000000000))+(((cj8)*(x2353)))+(((IkReal(-1.00000000000000))*(x2350)*(x2356)))+(((r00)*(x2359)))+(((IkReal(-1.00000000000000))*(r10)*(x2360))));
evalcond[5]=((IkReal(0.0200000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x2351)*(x2352)))+(((sj7)*(x2354)))+(((IkReal(-0.250000000000000))*(sj5)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj8)*(sj3)*(x2356)))+(((IkReal(-1.00000000000000))*(r01)*(x2350)))+(((IkReal(-1.00000000000000))*(r00)*(x2360)))+(((IkReal(-1.00000000000000))*(r10)*(x2359))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x2358)*(x2361)))+(((cj7)*(r10)*(x2350)))+(((sj7)*(x2357)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2356)))+(((cj7)*(sj8)*(x2353)))+(((IkReal(-1.00000000000000))*(x2351)*(x2355))));
evalcond[8]=((((cj7)*(x2355)))+(((IkReal(-1.00000000000000))*(x2351)*(x2361)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2351)))+(((sj7)*(sj8)*(x2353)))+(((r10)*(sj7)*(x2350)))+(((IkReal(-1.00000000000000))*(x2357)*(x2358))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2362=((cj3)*(cj5));
IkReal x2363=((r02)*(sj7));
IkReal x2364=((cj8)*(r00));
IkReal x2365=((cj5)*(sj3));
IkReal x2366=((cj7)*(cj8));
IkReal x2367=((sj5)*(sj7));
IkReal x2368=((sj3)*(sj5));
IkReal x2369=((cj3)*(cj7)*(sj5));
IkReal x2370=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(x2362)*(x2370)))+(((x2362)*(x2363)))+(((cj7)*(x2362)*(x2364)))+(((IkReal(-1.00000000000000))*(r11)*(x2365)*(x2370)))+(((r10)*(x2365)*(x2366)))+(((r12)*(sj7)*(x2365)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2366)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(x2367))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2369)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2370)))+(((r12)*(sj3)*(x2367)))+(((r10)*(x2366)*(x2368)))+(((cj3)*(sj5)*(x2363)))+(((IkReal(-1.00000000000000))*(r11)*(x2368)*(x2370)))+(((cj5)*(r20)*(x2366)))+(((cj5)*(r22)*(sj7)))+(((x2364)*(x2369))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(x2362)*(x2370)))+(((x2362)*(x2363)))+(((cj7)*(x2362)*(x2364)))+(((IkReal(-1.00000000000000))*(r11)*(x2365)*(x2370)))+(((r10)*(x2365)*(x2366)))+(((r12)*(sj7)*(x2365)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2366)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(x2367)))))), ((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2369)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2370)))+(((r12)*(sj3)*(x2367)))+(((r10)*(x2366)*(x2368)))+(((cj3)*(sj5)*(x2363)))+(((IkReal(-1.00000000000000))*(r11)*(x2368)*(x2370)))+(((cj5)*(r20)*(x2366)))+(((cj5)*(r22)*(sj7)))+(((x2364)*(x2369)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2371=IKsin(j4);
IkReal x2372=IKcos(j4);
IkReal x2373=((IkReal(1.00000000000000))*(cj7));
IkReal x2374=((cj8)*(r20));
IkReal x2375=((cj3)*(r02));
IkReal x2376=((IkReal(1.00000000000000))*(sj7));
IkReal x2377=((sj3)*(sj7));
IkReal x2378=((r21)*(sj8));
IkReal x2379=((cj8)*(r10));
IkReal x2380=((cj5)*(x2371));
IkReal x2381=((sj5)*(x2372));
IkReal x2382=((r11)*(sj3)*(sj8));
IkReal x2383=((cj3)*(cj8)*(r00));
IkReal x2384=((cj5)*(x2372));
IkReal x2385=((cj3)*(r01)*(sj8));
IkReal x2386=((sj5)*(x2371));
IkReal x2387=((x2381)+(x2380));
evalcond[0]=((x2386)+(((cj7)*(x2378)))+(((IkReal(-1.00000000000000))*(r22)*(x2376)))+(((IkReal(-1.00000000000000))*(x2384)))+(((IkReal(-1.00000000000000))*(x2373)*(x2374))));
evalcond[1]=((x2387)+(((cj7)*(r22)))+(((sj7)*(x2378)))+(((IkReal(-1.00000000000000))*(x2374)*(x2376))));
evalcond[2]=((x2387)+(((r12)*(x2377)))+(((sj7)*(x2375)))+(((cj7)*(sj3)*(x2379)))+(((IkReal(-1.00000000000000))*(x2373)*(x2385)))+(((IkReal(-1.00000000000000))*(x2373)*(x2382)))+(((cj7)*(x2383))));
evalcond[3]=((x2384)+(((x2377)*(x2379)))+(((sj7)*(x2383)))+(((IkReal(-1.00000000000000))*(x2376)*(x2385)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2373)))+(((IkReal(-1.00000000000000))*(x2373)*(x2375)))+(((IkReal(-1.00000000000000))*(x2376)*(x2382)))+(((IkReal(-1.00000000000000))*(x2386))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2388=((sj5)*(sj7));
IkReal x2389=((r21)*(sj8));
IkReal x2390=((cj7)*(sj5));
IkReal x2391=((cj8)*(r20));
IkReal x2392=((cj5)*(cj7));
IkReal x2393=((cj5)*(sj7));
if( IKabs(((gconst52)*(((((x2389)*(x2390)))+(((r22)*(x2392)))+(((IkReal(-1.00000000000000))*(x2390)*(x2391)))+(((IkReal(-1.00000000000000))*(r22)*(x2388)))+(((x2389)*(x2393)))+(((IkReal(-1.00000000000000))*(x2391)*(x2393))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((x2391)*(x2392)))+(((IkReal(-1.00000000000000))*(x2389)*(x2392)))+(((r22)*(x2390)))+(((x2388)*(x2389)))+(((r22)*(x2393)))+(((IkReal(-1.00000000000000))*(x2388)*(x2391))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst52)*(((((x2389)*(x2390)))+(((r22)*(x2392)))+(((IkReal(-1.00000000000000))*(x2390)*(x2391)))+(((IkReal(-1.00000000000000))*(r22)*(x2388)))+(((x2389)*(x2393)))+(((IkReal(-1.00000000000000))*(x2391)*(x2393)))))), ((gconst52)*(((((x2391)*(x2392)))+(((IkReal(-1.00000000000000))*(x2389)*(x2392)))+(((r22)*(x2390)))+(((x2388)*(x2389)))+(((r22)*(x2393)))+(((IkReal(-1.00000000000000))*(x2388)*(x2391)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2394=IKsin(j4);
IkReal x2395=IKcos(j4);
IkReal x2396=((IkReal(1.00000000000000))*(cj7));
IkReal x2397=((cj8)*(r20));
IkReal x2398=((cj3)*(r02));
IkReal x2399=((IkReal(1.00000000000000))*(sj7));
IkReal x2400=((sj3)*(sj7));
IkReal x2401=((r21)*(sj8));
IkReal x2402=((cj8)*(r10));
IkReal x2403=((cj5)*(x2394));
IkReal x2404=((sj5)*(x2395));
IkReal x2405=((r11)*(sj3)*(sj8));
IkReal x2406=((cj3)*(cj8)*(r00));
IkReal x2407=((cj5)*(x2395));
IkReal x2408=((cj3)*(r01)*(sj8));
IkReal x2409=((sj5)*(x2394));
IkReal x2410=((x2404)+(x2403));
evalcond[0]=((((cj7)*(x2401)))+(((IkReal(-1.00000000000000))*(r22)*(x2399)))+(((IkReal(-1.00000000000000))*(x2396)*(x2397)))+(x2409)+(((IkReal(-1.00000000000000))*(x2407))));
evalcond[1]=((((cj7)*(r22)))+(x2410)+(((IkReal(-1.00000000000000))*(x2397)*(x2399)))+(((sj7)*(x2401))));
evalcond[2]=((((cj7)*(x2406)))+(((cj7)*(sj3)*(x2402)))+(x2410)+(((sj7)*(x2398)))+(((IkReal(-1.00000000000000))*(x2396)*(x2405)))+(((r12)*(x2400)))+(((IkReal(-1.00000000000000))*(x2396)*(x2408))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2396)))+(((sj7)*(x2406)))+(((x2400)*(x2402)))+(((IkReal(-1.00000000000000))*(x2409)))+(x2407)+(((IkReal(-1.00000000000000))*(x2396)*(x2398)))+(((IkReal(-1.00000000000000))*(x2399)*(x2408)))+(((IkReal(-1.00000000000000))*(x2399)*(x2405))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2411=((cj3)*(cj8));
IkReal x2412=((IkReal(1.00000000000000))*(sj7));
IkReal x2413=((cj8)*(npx));
IkReal x2414=((r01)*(sj3));
IkReal x2415=((npy)*(sj8));
IkReal x2416=((r02)*(sj3));
IkReal x2417=((IkReal(1.00000000000000))*(r11));
IkReal x2418=((cj3)*(r12));
IkReal x2419=((IkReal(1.00000000000000))*(cj7));
IkReal x2420=((sj3)*(sj8));
IkReal x2421=((IkReal(1.00000000000000))*(cj3)*(sj8));
IkReal x2422=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x2412)))+(((cj7)*(x2415)))+(((IkReal(-1.00000000000000))*(x2413)*(x2419)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(-1.00000000000000))+(((r00)*(x2420)))+(((cj8)*(x2414)))+(((IkReal(-1.00000000000000))*(r10)*(x2421)))+(((IkReal(-1.00000000000000))*(x2411)*(x2417))));
evalcond[5]=((IkReal(-0.0200000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x2412)*(x2413)))+(((sj7)*(x2415)))+(((IkReal(0.0800000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj8)*(sj3)*(x2417)))+(((IkReal(-1.00000000000000))*(r01)*(x2411)))+(((IkReal(-1.00000000000000))*(r00)*(x2421)))+(((IkReal(-1.00000000000000))*(r10)*(x2420))));
evalcond[7]=((((sj7)*(x2418)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2417)))+(((cj7)*(sj8)*(x2414)))+(((cj7)*(r10)*(x2411)))+(((IkReal(-1.00000000000000))*(x2419)*(x2422)))+(((IkReal(-1.00000000000000))*(x2412)*(x2416))));
evalcond[8]=((((sj7)*(sj8)*(x2414)))+(((r10)*(sj7)*(x2411)))+(((IkReal(-1.00000000000000))*(x2418)*(x2419)))+(((IkReal(-1.00000000000000))*(x2412)*(x2422)))+(((cj7)*(x2416)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2412))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2423=((cj3)*(cj5));
IkReal x2424=((r02)*(sj7));
IkReal x2425=((cj8)*(r00));
IkReal x2426=((cj5)*(sj3));
IkReal x2427=((cj7)*(cj8));
IkReal x2428=((sj5)*(sj7));
IkReal x2429=((sj3)*(sj5));
IkReal x2430=((cj3)*(cj7)*(sj5));
IkReal x2431=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst55)*(((((r10)*(x2426)*(x2427)))+(((cj7)*(x2423)*(x2425)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2427)))+(((IkReal(-1.00000000000000))*(r01)*(x2423)*(x2431)))+(((x2423)*(x2424)))+(((IkReal(-1.00000000000000))*(r22)*(x2428)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r11)*(x2426)*(x2431)))+(((r12)*(sj7)*(x2426))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((x2425)*(x2430)))+(((IkReal(-1.00000000000000))*(r11)*(x2429)*(x2431)))+(((r12)*(sj3)*(x2428)))+(((cj3)*(sj5)*(x2424)))+(((r10)*(x2427)*(x2429)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2431)))+(((cj5)*(r20)*(x2427)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2430))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst55)*(((((r10)*(x2426)*(x2427)))+(((cj7)*(x2423)*(x2425)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2427)))+(((IkReal(-1.00000000000000))*(r01)*(x2423)*(x2431)))+(((x2423)*(x2424)))+(((IkReal(-1.00000000000000))*(r22)*(x2428)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r11)*(x2426)*(x2431)))+(((r12)*(sj7)*(x2426)))))), ((gconst55)*(((((x2425)*(x2430)))+(((IkReal(-1.00000000000000))*(r11)*(x2429)*(x2431)))+(((r12)*(sj3)*(x2428)))+(((cj3)*(sj5)*(x2424)))+(((r10)*(x2427)*(x2429)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2431)))+(((cj5)*(r20)*(x2427)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2430)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2432=IKcos(j4);
IkReal x2433=IKsin(j4);
IkReal x2434=((IkReal(1.00000000000000))*(cj7));
IkReal x2435=((cj8)*(r20));
IkReal x2436=((cj3)*(r02));
IkReal x2437=((IkReal(1.00000000000000))*(sj7));
IkReal x2438=((sj3)*(sj7));
IkReal x2439=((r21)*(sj8));
IkReal x2440=((IkReal(1.00000000000000))*(cj5));
IkReal x2441=((cj8)*(r10));
IkReal x2442=((sj5)*(x2433));
IkReal x2443=((sj5)*(x2432));
IkReal x2444=((r11)*(sj3)*(sj8));
IkReal x2445=((cj3)*(cj8)*(r00));
IkReal x2446=((cj3)*(r01)*(sj8));
IkReal x2447=((x2432)*(x2440));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2437)))+(((IkReal(-1.00000000000000))*(x2447)))+(x2442)+(((IkReal(-1.00000000000000))*(x2434)*(x2435)))+(((cj7)*(x2439))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2435)*(x2437)))+(((cj7)*(r22)))+(((sj7)*(x2439)))+(((IkReal(-1.00000000000000))*(x2443)))+(((IkReal(-1.00000000000000))*(x2433)*(x2440))));
evalcond[2]=((((cj7)*(sj3)*(x2441)))+(((sj7)*(x2436)))+(((r12)*(x2438)))+(((cj7)*(x2445)))+(((cj5)*(x2433)))+(((IkReal(-1.00000000000000))*(x2434)*(x2444)))+(x2443)+(((IkReal(-1.00000000000000))*(x2434)*(x2446))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2434)))+(((x2438)*(x2441)))+(((IkReal(-1.00000000000000))*(x2447)))+(((IkReal(-1.00000000000000))*(x2434)*(x2436)))+(x2442)+(((sj7)*(x2445)))+(((IkReal(-1.00000000000000))*(x2437)*(x2444)))+(((IkReal(-1.00000000000000))*(x2437)*(x2446))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2448=((cj7)*(sj5));
IkReal x2449=((r21)*(sj8));
IkReal x2450=((cj5)*(cj7));
IkReal x2451=((cj8)*(r20));
IkReal x2452=((sj5)*(sj7));
IkReal x2453=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(x2451)*(x2453)))+(((IkReal(-1.00000000000000))*(x2448)*(x2449)))+(((r22)*(x2450)))+(((x2448)*(x2451)))+(((r22)*(x2452)))+(((cj5)*(sj7)*(x2449))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((r22)*(x2448)))+(((x2449)*(x2450)))+(((IkReal(-1.00000000000000))*(x2451)*(x2452)))+(((IkReal(-1.00000000000000))*(x2450)*(x2451)))+(((IkReal(-1.00000000000000))*(r22)*(x2453)))+(((x2449)*(x2452))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst54)*(((((IkReal(-1.00000000000000))*(x2451)*(x2453)))+(((IkReal(-1.00000000000000))*(x2448)*(x2449)))+(((r22)*(x2450)))+(((x2448)*(x2451)))+(((r22)*(x2452)))+(((cj5)*(sj7)*(x2449)))))), ((gconst54)*(((((r22)*(x2448)))+(((x2449)*(x2450)))+(((IkReal(-1.00000000000000))*(x2451)*(x2452)))+(((IkReal(-1.00000000000000))*(x2450)*(x2451)))+(((IkReal(-1.00000000000000))*(r22)*(x2453)))+(((x2449)*(x2452)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2454=IKcos(j4);
IkReal x2455=IKsin(j4);
IkReal x2456=((IkReal(1.00000000000000))*(cj7));
IkReal x2457=((cj8)*(r20));
IkReal x2458=((cj3)*(r02));
IkReal x2459=((IkReal(1.00000000000000))*(sj7));
IkReal x2460=((sj3)*(sj7));
IkReal x2461=((r21)*(sj8));
IkReal x2462=((IkReal(1.00000000000000))*(cj5));
IkReal x2463=((cj8)*(r10));
IkReal x2464=((sj5)*(x2455));
IkReal x2465=((sj5)*(x2454));
IkReal x2466=((r11)*(sj3)*(sj8));
IkReal x2467=((cj3)*(cj8)*(r00));
IkReal x2468=((cj3)*(r01)*(sj8));
IkReal x2469=((x2454)*(x2462));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2456)*(x2457)))+(x2464)+(((cj7)*(x2461)))+(((IkReal(-1.00000000000000))*(r22)*(x2459)))+(((IkReal(-1.00000000000000))*(x2469))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2465)))+(((sj7)*(x2461)))+(((IkReal(-1.00000000000000))*(x2457)*(x2459)))+(((IkReal(-1.00000000000000))*(x2455)*(x2462))));
evalcond[2]=((((r12)*(x2460)))+(((cj7)*(sj3)*(x2463)))+(((IkReal(-1.00000000000000))*(x2456)*(x2466)))+(x2465)+(((IkReal(-1.00000000000000))*(x2456)*(x2468)))+(((cj7)*(x2467)))+(((sj7)*(x2458)))+(((cj5)*(x2455))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2459)*(x2466)))+(x2464)+(((IkReal(-1.00000000000000))*(x2459)*(x2468)))+(((IkReal(-1.00000000000000))*(x2456)*(x2458)))+(((x2460)*(x2463)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2456)))+(((sj7)*(x2467)))+(((IkReal(-1.00000000000000))*(x2469))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2470=((r21)*(sj8));
IkReal x2471=((IkReal(1.00000000000000))*(r22));
IkReal x2472=((cj5)*(sj7));
IkReal x2473=((cj6)*(cj7));
IkReal x2474=((sj5)*(sj7));
IkReal x2475=((cj5)*(cj8)*(r20));
IkReal x2476=((IkReal(1.00000000000000))*(x2473));
IkReal x2477=((cj8)*(r20)*(sj5));
if( IKabs(((gconst47)*(((((x2473)*(x2477)))+(((cj8)*(r20)*(x2472)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2471)))+(((IkReal(-1.00000000000000))*(sj5)*(x2470)*(x2476)))+(((IkReal(-1.00000000000000))*(x2470)*(x2472)))+(((cj6)*(r22)*(x2474))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((cj8)*(r20)*(x2474)))+(((IkReal(-1.00000000000000))*(x2475)*(x2476)))+(((IkReal(-1.00000000000000))*(x2470)*(x2474)))+(((cj5)*(x2470)*(x2473)))+(((IkReal(-1.00000000000000))*(cj6)*(x2471)*(x2472)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x2471))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst47)*(((((x2473)*(x2477)))+(((cj8)*(r20)*(x2472)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2471)))+(((IkReal(-1.00000000000000))*(sj5)*(x2470)*(x2476)))+(((IkReal(-1.00000000000000))*(x2470)*(x2472)))+(((cj6)*(r22)*(x2474)))))), ((gconst47)*(((((cj8)*(r20)*(x2474)))+(((IkReal(-1.00000000000000))*(x2475)*(x2476)))+(((IkReal(-1.00000000000000))*(x2470)*(x2474)))+(((cj5)*(x2470)*(x2473)))+(((IkReal(-1.00000000000000))*(cj6)*(x2471)*(x2472)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x2471)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2478=IKsin(j4);
IkReal x2479=IKcos(j4);
IkReal x2480=((IkReal(1.00000000000000))*(cj8));
IkReal x2481=((cj3)*(r01));
IkReal x2482=((IkReal(1.00000000000000))*(sj8));
IkReal x2483=((r11)*(sj3));
IkReal x2484=((cj3)*(r00));
IkReal x2485=((IkReal(1.00000000000000))*(sj6));
IkReal x2486=((IkReal(1.00000000000000))*(cj7));
IkReal x2487=((cj3)*(r02));
IkReal x2488=((cj8)*(sj7));
IkReal x2489=((r12)*(sj3));
IkReal x2490=((cj7)*(cj8));
IkReal x2491=((r21)*(sj8));
IkReal x2492=((r10)*(sj3));
IkReal x2493=((sj5)*(x2479));
IkReal x2494=((cj5)*(x2479));
IkReal x2495=((sj5)*(x2478));
IkReal x2496=((cj5)*(x2478));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2485)*(x2493)))+(((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2485)*(x2496))));
evalcond[1]=((((cj7)*(x2491)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2480)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2495)+(((IkReal(-1.00000000000000))*(x2494))));
evalcond[2]=((((cj7)*(r22)))+(((cj6)*(x2496)))+(((sj7)*(x2491)))+(((cj6)*(x2493)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x2480))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2485)*(x2494)))+(((IkReal(-1.00000000000000))*(x2482)*(x2492)))+(((sj6)*(x2495)))+(((IkReal(-1.00000000000000))*(x2480)*(x2483)))+(((IkReal(-1.00000000000000))*(x2482)*(x2484)))+(((IkReal(-1.00000000000000))*(x2480)*(x2481))));
evalcond[4]=((((sj7)*(x2487)))+(((IkReal(-1.00000000000000))*(cj7)*(x2481)*(x2482)))+(((x2490)*(x2492)))+(x2493)+(x2496)+(((sj7)*(x2489)))+(((IkReal(-1.00000000000000))*(cj7)*(x2482)*(x2483)))+(((x2484)*(x2490))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2486)*(x2489)))+(((IkReal(-1.00000000000000))*(sj7)*(x2481)*(x2482)))+(((IkReal(-1.00000000000000))*(x2486)*(x2487)))+(((x2484)*(x2488)))+(((IkReal(-1.00000000000000))*(cj6)*(x2495)))+(((x2488)*(x2492)))+(((IkReal(-1.00000000000000))*(sj7)*(x2482)*(x2483)))+(((cj6)*(x2494))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2497=((sj5)*(sj6));
IkReal x2498=((r22)*(sj7));
IkReal x2499=((r20)*(sj8));
IkReal x2500=((cj8)*(r21));
IkReal x2501=((cj5)*(sj6));
IkReal x2502=((cj7)*(cj8)*(r20));
IkReal x2503=((cj7)*(r21)*(sj8));
if( IKabs(((gconst46)*(((((x2497)*(x2498)))+(((IkReal(-1.00000000000000))*(x2497)*(x2503)))+(((cj5)*(x2499)))+(((cj5)*(x2500)))+(((x2497)*(x2502))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((x2501)*(x2503)))+(((sj5)*(x2499)))+(((IkReal(-1.00000000000000))*(x2498)*(x2501)))+(((sj5)*(x2500)))+(((IkReal(-1.00000000000000))*(x2501)*(x2502))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst46)*(((((x2497)*(x2498)))+(((IkReal(-1.00000000000000))*(x2497)*(x2503)))+(((cj5)*(x2499)))+(((cj5)*(x2500)))+(((x2497)*(x2502)))))), ((gconst46)*(((((x2501)*(x2503)))+(((sj5)*(x2499)))+(((IkReal(-1.00000000000000))*(x2498)*(x2501)))+(((sj5)*(x2500)))+(((IkReal(-1.00000000000000))*(x2501)*(x2502)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2504=IKsin(j4);
IkReal x2505=IKcos(j4);
IkReal x2506=((IkReal(1.00000000000000))*(cj8));
IkReal x2507=((cj3)*(r01));
IkReal x2508=((IkReal(1.00000000000000))*(sj8));
IkReal x2509=((r11)*(sj3));
IkReal x2510=((cj3)*(r00));
IkReal x2511=((IkReal(1.00000000000000))*(sj6));
IkReal x2512=((IkReal(1.00000000000000))*(cj7));
IkReal x2513=((cj3)*(r02));
IkReal x2514=((cj8)*(sj7));
IkReal x2515=((r12)*(sj3));
IkReal x2516=((cj7)*(cj8));
IkReal x2517=((r21)*(sj8));
IkReal x2518=((r10)*(sj3));
IkReal x2519=((sj5)*(x2505));
IkReal x2520=((cj5)*(x2505));
IkReal x2521=((sj5)*(x2504));
IkReal x2522=((cj5)*(x2504));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2511)*(x2519)))+(((IkReal(-1.00000000000000))*(x2511)*(x2522)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2520)))+(x2521)+(((cj7)*(x2517)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2506))));
evalcond[2]=((((cj6)*(x2522)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x2506)))+(((sj7)*(x2517)))+(((cj6)*(x2519))));
evalcond[3]=((((sj6)*(x2521)))+(((IkReal(-1.00000000000000))*(x2506)*(x2507)))+(((IkReal(-1.00000000000000))*(x2506)*(x2509)))+(((IkReal(-1.00000000000000))*(x2508)*(x2510)))+(((IkReal(-1.00000000000000))*(x2511)*(x2520)))+(((IkReal(-1.00000000000000))*(x2508)*(x2518))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj7)*(x2507)*(x2508)))+(((x2510)*(x2516)))+(((x2516)*(x2518)))+(((IkReal(-1.00000000000000))*(cj7)*(x2508)*(x2509)))+(((sj7)*(x2515)))+(x2522)+(x2519)+(((sj7)*(x2513))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2512)*(x2515)))+(((cj6)*(x2520)))+(((x2514)*(x2518)))+(((IkReal(-1.00000000000000))*(x2512)*(x2513)))+(((IkReal(-1.00000000000000))*(cj6)*(x2521)))+(((IkReal(-1.00000000000000))*(sj7)*(x2507)*(x2508)))+(((IkReal(-1.00000000000000))*(sj7)*(x2508)*(x2509)))+(((x2510)*(x2514))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2523=((IkReal(4.00000000000000))*(npx));
IkReal x2524=((IkReal(4.00000000000000))*(npy));
if( IKabs(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.0800000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(sj8)*(x2523)))+(((IkReal(-1.00000000000000))*(cj8)*(x2524)))+(((IkReal(-0.320000000000000))*(cj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2523)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2524))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.0800000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(sj8)*(x2523)))+(((IkReal(-1.00000000000000))*(cj8)*(x2524)))+(((IkReal(-0.320000000000000))*(cj6)))))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2523)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2524)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(0.0800000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(sj8)*(x2523)))+(((IkReal(-1.00000000000000))*(cj8)*(x2524)))+(((IkReal(-0.320000000000000))*(cj6)))))), ((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2523)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2524)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2525=IKsin(j5);
IkReal x2526=((IkReal(1.00000000000000))*(sj7));
IkReal x2527=((npy)*(sj8));
IkReal x2528=((cj8)*(npx));
IkReal x2529=((IkReal(0.250000000000000))*(x2525));
evalcond[0]=((((sj6)*(x2529)))+(((IkReal(0.0800000000000000))*(cj6)))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.0200000000000000))*(sj6))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x2528)))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(0.0800000000000000))*(cj7)))+(((cj7)*(x2527)))+(((IkReal(-1.00000000000000))*(npz)*(x2526))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2526)*(x2528)))+(((cj7)*(npz)))+(((sj7)*(x2527)))+(((IkReal(0.0800000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(x2529)))+(((IkReal(0.0200000000000000))*(cj6)))+(((IkReal(0.0800000000000000))*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5))))));
dummyeval[0]=((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2530=((IkReal(1.00000000000000))*(sj7));
IkReal x2531=((IkReal(1.00000000000000))*(cj3));
IkReal x2532=((cj7)*(r02));
IkReal x2533=((cj3)*(sj7));
IkReal x2534=((cj8)*(r00));
IkReal x2535=((cj8)*(npx));
IkReal x2536=((r01)*(sj3));
IkReal x2537=((cj7)*(sj8));
IkReal x2538=((r11)*(sj8));
IkReal x2539=((IkReal(1.00000000000000))*(cj7));
IkReal x2540=((sj7)*(sj8));
IkReal x2541=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.230000000000000))+(((npy)*(x2537)))+(((IkReal(-1.00000000000000))*(npz)*(x2530)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x2535)*(x2539)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2531)))+(((cj8)*(x2536)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2531))));
evalcond[4]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x2530)))+(((r21)*(x2540))));
evalcond[5]=((IkReal(0.0800000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x2530)*(x2535)))+(((npy)*(x2540)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[6]=((((cj3)*(cj7)*(x2541)))+(((IkReal(-1.00000000000000))*(sj3)*(x2534)*(x2539)))+(((IkReal(-1.00000000000000))*(r11)*(x2531)*(x2537)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x2530)))+(((x2536)*(x2537)))+(((r12)*(x2533))));
evalcond[7]=((IkReal(1.00000000000000))+(((sj3)*(x2532)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2531)))+(((x2533)*(x2541)))+(((x2536)*(x2540)))+(((IkReal(-1.00000000000000))*(sj3)*(x2530)*(x2534)))+(((IkReal(-1.00000000000000))*(cj3)*(x2530)*(x2538))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2539)))+(((sj3)*(sj7)*(x2541)))+(((x2533)*(x2534)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x2530)))+(((IkReal(-1.00000000000000))*(sj3)*(x2530)*(x2538)))+(((IkReal(-1.00000000000000))*(x2531)*(x2532))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2542=((cj8)*(sj5));
IkReal x2543=((cj3)*(r01));
IkReal x2544=((IkReal(1.00000000000000))*(cj5));
IkReal x2545=((r11)*(sj3));
IkReal x2546=((sj5)*(sj8));
IkReal x2547=((r10)*(sj3));
IkReal x2548=((cj3)*(r00)*(sj8));
if( IKabs(((gconst49)*(((((x2546)*(x2547)))+(((cj3)*(r00)*(x2546)))+(((x2542)*(x2543)))+(((cj5)*(cj8)*(r21)))+(((x2542)*(x2545)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(cj8)*(x2544)*(x2545)))+(((r20)*(x2546)))+(((IkReal(-1.00000000000000))*(cj8)*(x2543)*(x2544)))+(((IkReal(-1.00000000000000))*(sj8)*(x2544)*(x2547)))+(((IkReal(-1.00000000000000))*(x2544)*(x2548)))+(((r21)*(x2542))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst49)*(((((x2546)*(x2547)))+(((cj3)*(r00)*(x2546)))+(((x2542)*(x2543)))+(((cj5)*(cj8)*(r21)))+(((x2542)*(x2545)))+(((cj5)*(r20)*(sj8)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(cj8)*(x2544)*(x2545)))+(((r20)*(x2546)))+(((IkReal(-1.00000000000000))*(cj8)*(x2543)*(x2544)))+(((IkReal(-1.00000000000000))*(sj8)*(x2544)*(x2547)))+(((IkReal(-1.00000000000000))*(x2544)*(x2548)))+(((r21)*(x2542)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2549=IKsin(j4);
IkReal x2550=IKcos(j4);
IkReal x2551=((IkReal(1.00000000000000))*(cj8));
IkReal x2552=((cj3)*(r01));
IkReal x2553=((cj3)*(r00));
IkReal x2554=((cj7)*(cj8));
IkReal x2555=((IkReal(1.00000000000000))*(cj5));
IkReal x2556=((IkReal(1.00000000000000))*(sj8));
IkReal x2557=((r11)*(sj3));
IkReal x2558=((r10)*(sj3));
IkReal x2559=((sj5)*(x2549));
IkReal x2560=((sj5)*(x2550));
IkReal x2561=((x2550)*(x2555));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2549)*(x2555)))+(((IkReal(-1.00000000000000))*(x2560))));
evalcond[1]=((x2559)+(((IkReal(-1.00000000000000))*(x2561)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2551)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2556)*(x2558)))+(x2559)+(((IkReal(-1.00000000000000))*(x2561)))+(((IkReal(-1.00000000000000))*(x2551)*(x2557)))+(((IkReal(-1.00000000000000))*(x2551)*(x2552)))+(((IkReal(-1.00000000000000))*(x2553)*(x2556))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x2553)*(x2554)))+(((x2554)*(x2558)))+(((r12)*(sj3)*(sj7)))+(x2560)+(((IkReal(-1.00000000000000))*(cj7)*(x2552)*(x2556)))+(((cj5)*(x2549)))+(((IkReal(-1.00000000000000))*(cj7)*(x2556)*(x2557))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2562=((IkReal(1.00000000000000))*(cj5));
IkReal x2563=((r22)*(sj7));
IkReal x2564=((cj8)*(sj5));
IkReal x2565=((cj7)*(r20));
IkReal x2566=((r20)*(sj8));
IkReal x2567=((cj7)*(r21)*(sj8));
if( IKabs(((gconst48)*(((((x2564)*(x2565)))+(((IkReal(-1.00000000000000))*(sj5)*(x2567)))+(((cj5)*(cj8)*(r21)))+(((sj5)*(x2563)))+(((cj5)*(x2566))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((IkReal(-1.00000000000000))*(cj8)*(x2562)*(x2565)))+(((cj5)*(x2567)))+(((sj5)*(x2566)))+(((IkReal(-1.00000000000000))*(x2562)*(x2563)))+(((r21)*(x2564))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst48)*(((((x2564)*(x2565)))+(((IkReal(-1.00000000000000))*(sj5)*(x2567)))+(((cj5)*(cj8)*(r21)))+(((sj5)*(x2563)))+(((cj5)*(x2566)))))), ((gconst48)*(((((IkReal(-1.00000000000000))*(cj8)*(x2562)*(x2565)))+(((cj5)*(x2567)))+(((sj5)*(x2566)))+(((IkReal(-1.00000000000000))*(x2562)*(x2563)))+(((r21)*(x2564)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2568=IKsin(j4);
IkReal x2569=IKcos(j4);
IkReal x2570=((IkReal(1.00000000000000))*(cj8));
IkReal x2571=((cj3)*(r01));
IkReal x2572=((cj3)*(r00));
IkReal x2573=((cj7)*(cj8));
IkReal x2574=((IkReal(1.00000000000000))*(cj5));
IkReal x2575=((IkReal(1.00000000000000))*(sj8));
IkReal x2576=((r11)*(sj3));
IkReal x2577=((r10)*(sj3));
IkReal x2578=((sj5)*(x2568));
IkReal x2579=((sj5)*(x2569));
IkReal x2580=((x2569)*(x2574));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2579)))+(((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2568)*(x2574))));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2580)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2570)))+(x2578));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2570)*(x2576)))+(((IkReal(-1.00000000000000))*(x2580)))+(((IkReal(-1.00000000000000))*(x2572)*(x2575)))+(((IkReal(-1.00000000000000))*(x2575)*(x2577)))+(((IkReal(-1.00000000000000))*(x2570)*(x2571)))+(x2578));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x2572)*(x2573)))+(((IkReal(-1.00000000000000))*(cj7)*(x2571)*(x2575)))+(((r12)*(sj3)*(sj7)))+(((x2573)*(x2577)))+(((cj5)*(x2568)))+(x2579)+(((IkReal(-1.00000000000000))*(cj7)*(x2575)*(x2576))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2581=((IkReal(1.00000000000000))*(sj7));
IkReal x2582=((IkReal(1.00000000000000))*(cj3));
IkReal x2583=((cj7)*(r02));
IkReal x2584=((cj3)*(sj7));
IkReal x2585=((cj8)*(r00));
IkReal x2586=((cj8)*(npx));
IkReal x2587=((r01)*(sj3));
IkReal x2588=((cj7)*(sj8));
IkReal x2589=((r11)*(sj8));
IkReal x2590=((IkReal(1.00000000000000))*(cj7));
IkReal x2591=((sj7)*(sj8));
IkReal x2592=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0200000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(x2586)*(x2590)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x2581)))+(((npy)*(x2588)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2582)))+(((cj8)*(x2587)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2582))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj8)*(r20)*(x2581)))+(((r21)*(x2591)))+(((cj7)*(r22))));
evalcond[5]=((IkReal(-0.0800000000000000))+(((IkReal(-1.00000000000000))*(x2581)*(x2586)))+(((cj7)*(npz)))+(((npy)*(x2591)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[6]=((((r12)*(x2584)))+(((IkReal(-1.00000000000000))*(r11)*(x2582)*(x2588)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x2581)))+(((IkReal(-1.00000000000000))*(sj3)*(x2585)*(x2590)))+(((cj3)*(cj7)*(x2592)))+(((x2587)*(x2588))));
evalcond[7]=((IkReal(-1.00000000000000))+(((x2587)*(x2591)))+(((x2584)*(x2592)))+(((sj3)*(x2583)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2582)))+(((IkReal(-1.00000000000000))*(cj3)*(x2581)*(x2589)))+(((IkReal(-1.00000000000000))*(sj3)*(x2581)*(x2585))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x2581)))+(((sj3)*(sj7)*(x2592)))+(((IkReal(-1.00000000000000))*(x2582)*(x2583)))+(((x2584)*(x2585)))+(((IkReal(-1.00000000000000))*(sj3)*(x2581)*(x2589)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2590))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2593=((IkReal(1.00000000000000))*(sj5));
IkReal x2594=((r20)*(sj8));
IkReal x2595=((cj5)*(cj8));
IkReal x2596=((r11)*(sj3));
IkReal x2597=((cj3)*(r01));
IkReal x2598=((cj3)*(r00)*(sj8));
IkReal x2599=((r10)*(sj3)*(sj8));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(x2593)*(x2597)))+(((IkReal(-1.00000000000000))*(r21)*(x2595)))+(((IkReal(-1.00000000000000))*(cj5)*(x2594)))+(((IkReal(-1.00000000000000))*(cj8)*(x2593)*(x2596)))+(((IkReal(-1.00000000000000))*(x2593)*(x2598)))+(((IkReal(-1.00000000000000))*(x2593)*(x2599))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2593)))+(((x2595)*(x2597)))+(((cj5)*(x2599)))+(((cj5)*(x2598)))+(((x2595)*(x2596)))+(((IkReal(-1.00000000000000))*(x2593)*(x2594))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(x2593)*(x2597)))+(((IkReal(-1.00000000000000))*(r21)*(x2595)))+(((IkReal(-1.00000000000000))*(cj5)*(x2594)))+(((IkReal(-1.00000000000000))*(cj8)*(x2593)*(x2596)))+(((IkReal(-1.00000000000000))*(x2593)*(x2598)))+(((IkReal(-1.00000000000000))*(x2593)*(x2599)))))), ((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2593)))+(((x2595)*(x2597)))+(((cj5)*(x2599)))+(((cj5)*(x2598)))+(((x2595)*(x2596)))+(((IkReal(-1.00000000000000))*(x2593)*(x2594)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2600=IKsin(j4);
IkReal x2601=IKcos(j4);
IkReal x2602=((IkReal(1.00000000000000))*(cj8));
IkReal x2603=((cj3)*(r01));
IkReal x2604=((cj3)*(r00));
IkReal x2605=((cj7)*(cj8));
IkReal x2606=((r11)*(sj3));
IkReal x2607=((IkReal(1.00000000000000))*(sj8));
IkReal x2608=((r10)*(sj3));
IkReal x2609=((cj5)*(x2600));
IkReal x2610=((sj5)*(x2601));
IkReal x2611=((cj5)*(x2601));
IkReal x2612=((sj5)*(x2600));
IkReal x2613=((x2609)+(x2610));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x2613));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2602)))+(x2612)+(((IkReal(-1.00000000000000))*(x2611))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2602)*(x2603)))+(((IkReal(-1.00000000000000))*(x2607)*(x2608)))+(((IkReal(-1.00000000000000))*(x2602)*(x2606)))+(x2611)+(((IkReal(-1.00000000000000))*(x2612)))+(((IkReal(-1.00000000000000))*(x2604)*(x2607))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2603)*(x2607)))+(((x2604)*(x2605)))+(((r12)*(sj3)*(sj7)))+(x2613)+(((IkReal(-1.00000000000000))*(cj7)*(x2606)*(x2607)))+(((x2605)*(x2608))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2614=((r22)*(sj7));
IkReal x2615=((cj8)*(sj5));
IkReal x2616=((sj5)*(sj8));
IkReal x2617=((cj7)*(r20));
IkReal x2618=((cj5)*(cj8));
IkReal x2619=((cj7)*(r21));
IkReal x2620=((cj5)*(sj8));
if( IKabs(((gconst50)*(((((r21)*(x2618)))+(((IkReal(-1.00000000000000))*(sj5)*(x2614)))+(((r20)*(x2620)))+(((IkReal(-1.00000000000000))*(x2615)*(x2617)))+(((x2616)*(x2619))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((r20)*(x2616)))+(((IkReal(-1.00000000000000))*(x2619)*(x2620)))+(((r21)*(x2615)))+(((cj5)*(x2614)))+(((x2617)*(x2618))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst50)*(((((r21)*(x2618)))+(((IkReal(-1.00000000000000))*(sj5)*(x2614)))+(((r20)*(x2620)))+(((IkReal(-1.00000000000000))*(x2615)*(x2617)))+(((x2616)*(x2619)))))), ((gconst50)*(((((r20)*(x2616)))+(((IkReal(-1.00000000000000))*(x2619)*(x2620)))+(((r21)*(x2615)))+(((cj5)*(x2614)))+(((x2617)*(x2618)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2621=IKsin(j4);
IkReal x2622=IKcos(j4);
IkReal x2623=((IkReal(1.00000000000000))*(cj8));
IkReal x2624=((cj3)*(r01));
IkReal x2625=((cj3)*(r00));
IkReal x2626=((cj7)*(cj8));
IkReal x2627=((r11)*(sj3));
IkReal x2628=((IkReal(1.00000000000000))*(sj8));
IkReal x2629=((r10)*(sj3));
IkReal x2630=((cj5)*(x2621));
IkReal x2631=((sj5)*(x2622));
IkReal x2632=((cj5)*(x2622));
IkReal x2633=((sj5)*(x2621));
IkReal x2634=((x2631)+(x2630));
evalcond[0]=((((cj8)*(r21)))+(x2634)+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2623)))+(x2633)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2632))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2623)*(x2627)))+(x2632)+(((IkReal(-1.00000000000000))*(x2633)))+(((IkReal(-1.00000000000000))*(x2625)*(x2628)))+(((IkReal(-1.00000000000000))*(x2623)*(x2624)))+(((IkReal(-1.00000000000000))*(x2628)*(x2629))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(x2634)+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2627)*(x2628)))+(((x2625)*(x2626)))+(((x2626)*(x2629)))+(((IkReal(-1.00000000000000))*(cj7)*(x2624)*(x2628))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2635=((cj3)*(cj8));
IkReal x2636=((IkReal(1.00000000000000))*(sj7));
IkReal x2637=((cj8)*(npx));
IkReal x2638=((r01)*(sj3));
IkReal x2639=((npy)*(sj8));
IkReal x2640=((r02)*(sj3));
IkReal x2641=((IkReal(1.00000000000000))*(r11));
IkReal x2642=((cj3)*(r12));
IkReal x2643=((IkReal(1.00000000000000))*(cj7));
IkReal x2644=((sj3)*(sj8));
IkReal x2645=((IkReal(1.00000000000000))*(cj3)*(sj8));
IkReal x2646=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x2636)))+(((IkReal(0.0800000000000000))*(cj7)))+(((cj7)*(x2639)))+(((IkReal(-1.00000000000000))*(x2637)*(x2643)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x2645)))+(((IkReal(-1.00000000000000))*(x2635)*(x2641)))+(((cj8)*(x2638)))+(((r00)*(x2644))));
evalcond[5]=((IkReal(0.0200000000000000))+(((cj7)*(npz)))+(((sj7)*(x2639)))+(((IkReal(-0.250000000000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x2636)*(x2637)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x2645)))+(((IkReal(-1.00000000000000))*(r01)*(x2635)))+(((IkReal(-1.00000000000000))*(r10)*(x2644)))+(((IkReal(-1.00000000000000))*(cj8)*(sj3)*(x2641))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x2636)*(x2640)))+(((cj7)*(r10)*(x2635)))+(((sj7)*(x2642)))+(((cj7)*(sj8)*(x2638)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2641)))+(((IkReal(-1.00000000000000))*(x2643)*(x2646))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2636)))+(((cj7)*(x2640)))+(((r10)*(sj7)*(x2635)))+(((IkReal(-1.00000000000000))*(x2642)*(x2643)))+(((sj7)*(sj8)*(x2638)))+(((IkReal(-1.00000000000000))*(x2636)*(x2646))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2647=((cj3)*(cj5));
IkReal x2648=((r02)*(sj7));
IkReal x2649=((cj8)*(r00));
IkReal x2650=((cj5)*(sj3));
IkReal x2651=((cj7)*(cj8));
IkReal x2652=((sj5)*(sj7));
IkReal x2653=((sj3)*(sj5));
IkReal x2654=((cj3)*(cj7)*(sj5));
IkReal x2655=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2651)))+(((IkReal(-1.00000000000000))*(r11)*(x2650)*(x2655)))+(((cj7)*(x2647)*(x2649)))+(((x2647)*(x2648)))+(((IkReal(-1.00000000000000))*(r01)*(x2647)*(x2655)))+(((IkReal(-1.00000000000000))*(r22)*(x2652)))+(((r10)*(x2650)*(x2651)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((r12)*(sj7)*(x2650))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((cj3)*(sj5)*(x2648)))+(((r12)*(sj3)*(x2652)))+(((IkReal(-1.00000000000000))*(r11)*(x2653)*(x2655)))+(((x2649)*(x2654)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2654)))+(((cj5)*(r20)*(x2651)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2655)))+(((r10)*(x2651)*(x2653))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst53)*(((((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2651)))+(((IkReal(-1.00000000000000))*(r11)*(x2650)*(x2655)))+(((cj7)*(x2647)*(x2649)))+(((x2647)*(x2648)))+(((IkReal(-1.00000000000000))*(r01)*(x2647)*(x2655)))+(((IkReal(-1.00000000000000))*(r22)*(x2652)))+(((r10)*(x2650)*(x2651)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((r12)*(sj7)*(x2650)))))), ((gconst53)*(((((cj3)*(sj5)*(x2648)))+(((r12)*(sj3)*(x2652)))+(((IkReal(-1.00000000000000))*(r11)*(x2653)*(x2655)))+(((x2649)*(x2654)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2654)))+(((cj5)*(r20)*(x2651)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2655)))+(((r10)*(x2651)*(x2653)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2656=IKsin(j4);
IkReal x2657=IKcos(j4);
IkReal x2658=((IkReal(1.00000000000000))*(cj7));
IkReal x2659=((cj8)*(r20));
IkReal x2660=((cj3)*(r02));
IkReal x2661=((IkReal(1.00000000000000))*(sj7));
IkReal x2662=((sj3)*(sj7));
IkReal x2663=((r21)*(sj8));
IkReal x2664=((cj8)*(r10));
IkReal x2665=((cj5)*(x2656));
IkReal x2666=((sj5)*(x2657));
IkReal x2667=((r11)*(sj3)*(sj8));
IkReal x2668=((cj3)*(cj8)*(r00));
IkReal x2669=((cj5)*(x2657));
IkReal x2670=((cj3)*(r01)*(sj8));
IkReal x2671=((sj5)*(x2656));
IkReal x2672=((x2666)+(x2665));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2669)))+(x2671)+(((IkReal(-1.00000000000000))*(r22)*(x2661)))+(((cj7)*(x2663)))+(((IkReal(-1.00000000000000))*(x2658)*(x2659))));
evalcond[1]=((((cj7)*(r22)))+(x2672)+(((sj7)*(x2663)))+(((IkReal(-1.00000000000000))*(x2659)*(x2661))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2658)*(x2670)))+(((r12)*(x2662)))+(((sj7)*(x2660)))+(((cj7)*(sj3)*(x2664)))+(((IkReal(-1.00000000000000))*(x2658)*(x2667)))+(x2672)+(((cj7)*(x2668))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2658)))+(((IkReal(-1.00000000000000))*(x2661)*(x2670)))+(x2669)+(((IkReal(-1.00000000000000))*(x2671)))+(((sj7)*(x2668)))+(((IkReal(-1.00000000000000))*(x2658)*(x2660)))+(((IkReal(-1.00000000000000))*(x2661)*(x2667)))+(((x2662)*(x2664))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2673=((sj5)*(sj7));
IkReal x2674=((r21)*(sj8));
IkReal x2675=((cj7)*(sj5));
IkReal x2676=((cj8)*(r20));
IkReal x2677=((cj5)*(cj7));
IkReal x2678=((cj5)*(sj7));
if( IKabs(((gconst52)*(((((x2674)*(x2675)))+(((IkReal(-1.00000000000000))*(x2675)*(x2676)))+(((x2674)*(x2678)))+(((IkReal(-1.00000000000000))*(x2676)*(x2678)))+(((r22)*(x2677)))+(((IkReal(-1.00000000000000))*(r22)*(x2673))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(x2673)*(x2676)))+(((x2676)*(x2677)))+(((IkReal(-1.00000000000000))*(x2674)*(x2677)))+(((x2673)*(x2674)))+(((r22)*(x2678)))+(((r22)*(x2675))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst52)*(((((x2674)*(x2675)))+(((IkReal(-1.00000000000000))*(x2675)*(x2676)))+(((x2674)*(x2678)))+(((IkReal(-1.00000000000000))*(x2676)*(x2678)))+(((r22)*(x2677)))+(((IkReal(-1.00000000000000))*(r22)*(x2673)))))), ((gconst52)*(((((IkReal(-1.00000000000000))*(x2673)*(x2676)))+(((x2676)*(x2677)))+(((IkReal(-1.00000000000000))*(x2674)*(x2677)))+(((x2673)*(x2674)))+(((r22)*(x2678)))+(((r22)*(x2675)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2679=IKsin(j4);
IkReal x2680=IKcos(j4);
IkReal x2681=((IkReal(1.00000000000000))*(cj7));
IkReal x2682=((cj8)*(r20));
IkReal x2683=((cj3)*(r02));
IkReal x2684=((IkReal(1.00000000000000))*(sj7));
IkReal x2685=((sj3)*(sj7));
IkReal x2686=((r21)*(sj8));
IkReal x2687=((cj8)*(r10));
IkReal x2688=((cj5)*(x2679));
IkReal x2689=((sj5)*(x2680));
IkReal x2690=((r11)*(sj3)*(sj8));
IkReal x2691=((cj3)*(cj8)*(r00));
IkReal x2692=((cj5)*(x2680));
IkReal x2693=((cj3)*(r01)*(sj8));
IkReal x2694=((sj5)*(x2679));
IkReal x2695=((x2688)+(x2689));
evalcond[0]=((x2694)+(((IkReal(-1.00000000000000))*(x2681)*(x2682)))+(((cj7)*(x2686)))+(((IkReal(-1.00000000000000))*(r22)*(x2684)))+(((IkReal(-1.00000000000000))*(x2692))));
evalcond[1]=((x2695)+(((cj7)*(r22)))+(((sj7)*(x2686)))+(((IkReal(-1.00000000000000))*(x2682)*(x2684))));
evalcond[2]=((x2695)+(((IkReal(-1.00000000000000))*(x2681)*(x2690)))+(((r12)*(x2685)))+(((cj7)*(sj3)*(x2687)))+(((sj7)*(x2683)))+(((cj7)*(x2691)))+(((IkReal(-1.00000000000000))*(x2681)*(x2693))));
evalcond[3]=((x2692)+(((IkReal(-1.00000000000000))*(x2694)))+(((x2685)*(x2687)))+(((IkReal(-1.00000000000000))*(x2684)*(x2693)))+(((IkReal(-1.00000000000000))*(x2684)*(x2690)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2681)))+(((IkReal(-1.00000000000000))*(x2681)*(x2683)))+(((sj7)*(x2691))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2696=((cj3)*(cj8));
IkReal x2697=((IkReal(1.00000000000000))*(sj7));
IkReal x2698=((cj8)*(npx));
IkReal x2699=((r01)*(sj3));
IkReal x2700=((npy)*(sj8));
IkReal x2701=((r02)*(sj3));
IkReal x2702=((IkReal(1.00000000000000))*(r11));
IkReal x2703=((cj3)*(r12));
IkReal x2704=((IkReal(1.00000000000000))*(cj7));
IkReal x2705=((sj3)*(sj8));
IkReal x2706=((IkReal(1.00000000000000))*(cj3)*(sj8));
IkReal x2707=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x2697)))+(((IkReal(-1.00000000000000))*(x2698)*(x2704)))+(((IkReal(0.0800000000000000))*(cj7)))+(((cj7)*(x2700)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2696)*(x2702)))+(((cj8)*(x2699)))+(((IkReal(-1.00000000000000))*(r10)*(x2706)))+(((r00)*(x2705))));
evalcond[5]=((IkReal(-0.0200000000000000))+(((sj7)*(x2700)))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x2697)*(x2698)))+(((IkReal(0.0800000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x2706)))+(((IkReal(-1.00000000000000))*(r10)*(x2705)))+(((IkReal(-1.00000000000000))*(r01)*(x2696)))+(((IkReal(-1.00000000000000))*(cj8)*(sj3)*(x2702))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2702)))+(((sj7)*(x2703)))+(((cj7)*(sj8)*(x2699)))+(((cj7)*(r10)*(x2696)))+(((IkReal(-1.00000000000000))*(x2704)*(x2707)))+(((IkReal(-1.00000000000000))*(x2697)*(x2701))));
evalcond[8]=((((cj7)*(x2701)))+(((sj7)*(sj8)*(x2699)))+(((IkReal(-1.00000000000000))*(x2703)*(x2704)))+(((r10)*(sj7)*(x2696)))+(((IkReal(-1.00000000000000))*(x2697)*(x2707)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2697))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2708=((cj3)*(cj5));
IkReal x2709=((r02)*(sj7));
IkReal x2710=((cj8)*(r00));
IkReal x2711=((cj5)*(sj3));
IkReal x2712=((cj7)*(cj8));
IkReal x2713=((sj5)*(sj7));
IkReal x2714=((sj3)*(sj5));
IkReal x2715=((cj3)*(cj7)*(sj5));
IkReal x2716=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst55)*(((((r12)*(sj7)*(x2711)))+(((x2708)*(x2709)))+(((cj7)*(x2708)*(x2710)))+(((r10)*(x2711)*(x2712)))+(((IkReal(-1.00000000000000))*(r01)*(x2708)*(x2716)))+(((IkReal(-1.00000000000000))*(r22)*(x2713)))+(((IkReal(-1.00000000000000))*(r11)*(x2711)*(x2716)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2712)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2716)))+(((r12)*(sj3)*(x2713)))+(((r10)*(x2712)*(x2714)))+(((cj3)*(sj5)*(x2709)))+(((cj5)*(r20)*(x2712)))+(((x2710)*(x2715)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x2714)*(x2716)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2715))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst55)*(((((r12)*(sj7)*(x2711)))+(((x2708)*(x2709)))+(((cj7)*(x2708)*(x2710)))+(((r10)*(x2711)*(x2712)))+(((IkReal(-1.00000000000000))*(r01)*(x2708)*(x2716)))+(((IkReal(-1.00000000000000))*(r22)*(x2713)))+(((IkReal(-1.00000000000000))*(r11)*(x2711)*(x2716)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2712)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst55)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2716)))+(((r12)*(sj3)*(x2713)))+(((r10)*(x2712)*(x2714)))+(((cj3)*(sj5)*(x2709)))+(((cj5)*(r20)*(x2712)))+(((x2710)*(x2715)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x2714)*(x2716)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2715)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2717=IKcos(j4);
IkReal x2718=IKsin(j4);
IkReal x2719=((IkReal(1.00000000000000))*(cj7));
IkReal x2720=((cj8)*(r20));
IkReal x2721=((cj3)*(r02));
IkReal x2722=((IkReal(1.00000000000000))*(sj7));
IkReal x2723=((sj3)*(sj7));
IkReal x2724=((r21)*(sj8));
IkReal x2725=((IkReal(1.00000000000000))*(cj5));
IkReal x2726=((cj8)*(r10));
IkReal x2727=((sj5)*(x2718));
IkReal x2728=((sj5)*(x2717));
IkReal x2729=((r11)*(sj3)*(sj8));
IkReal x2730=((cj3)*(cj8)*(r00));
IkReal x2731=((cj3)*(r01)*(sj8));
IkReal x2732=((x2717)*(x2725));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2719)*(x2720)))+(x2727)+(((IkReal(-1.00000000000000))*(r22)*(x2722)))+(((IkReal(-1.00000000000000))*(x2732)))+(((cj7)*(x2724))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2728)))+(((IkReal(-1.00000000000000))*(x2720)*(x2722)))+(((IkReal(-1.00000000000000))*(x2718)*(x2725)))+(((sj7)*(x2724))));
evalcond[2]=((((cj5)*(x2718)))+(x2728)+(((IkReal(-1.00000000000000))*(x2719)*(x2731)))+(((r12)*(x2723)))+(((cj7)*(x2730)))+(((cj7)*(sj3)*(x2726)))+(((sj7)*(x2721)))+(((IkReal(-1.00000000000000))*(x2719)*(x2729))));
evalcond[3]=((((x2723)*(x2726)))+(((IkReal(-1.00000000000000))*(x2722)*(x2729)))+(x2727)+(((IkReal(-1.00000000000000))*(x2722)*(x2731)))+(((IkReal(-1.00000000000000))*(x2732)))+(((sj7)*(x2730)))+(((IkReal(-1.00000000000000))*(x2719)*(x2721)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2719))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2733=((cj7)*(sj5));
IkReal x2734=((r21)*(sj8));
IkReal x2735=((cj5)*(cj7));
IkReal x2736=((cj8)*(r20));
IkReal x2737=((sj5)*(sj7));
IkReal x2738=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst54)*(((((r22)*(x2737)))+(((r22)*(x2735)))+(((x2733)*(x2736)))+(((cj5)*(sj7)*(x2734)))+(((IkReal(-1.00000000000000))*(x2736)*(x2738)))+(((IkReal(-1.00000000000000))*(x2733)*(x2734))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((x2734)*(x2735)))+(((x2734)*(x2737)))+(((IkReal(-1.00000000000000))*(x2735)*(x2736)))+(((r22)*(x2733)))+(((IkReal(-1.00000000000000))*(x2736)*(x2737)))+(((IkReal(-1.00000000000000))*(r22)*(x2738))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst54)*(((((r22)*(x2737)))+(((r22)*(x2735)))+(((x2733)*(x2736)))+(((cj5)*(sj7)*(x2734)))+(((IkReal(-1.00000000000000))*(x2736)*(x2738)))+(((IkReal(-1.00000000000000))*(x2733)*(x2734)))))), ((gconst54)*(((((x2734)*(x2735)))+(((x2734)*(x2737)))+(((IkReal(-1.00000000000000))*(x2735)*(x2736)))+(((r22)*(x2733)))+(((IkReal(-1.00000000000000))*(x2736)*(x2737)))+(((IkReal(-1.00000000000000))*(r22)*(x2738)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2739=IKcos(j4);
IkReal x2740=IKsin(j4);
IkReal x2741=((IkReal(1.00000000000000))*(cj7));
IkReal x2742=((cj8)*(r20));
IkReal x2743=((cj3)*(r02));
IkReal x2744=((IkReal(1.00000000000000))*(sj7));
IkReal x2745=((sj3)*(sj7));
IkReal x2746=((r21)*(sj8));
IkReal x2747=((IkReal(1.00000000000000))*(cj5));
IkReal x2748=((cj8)*(r10));
IkReal x2749=((sj5)*(x2740));
IkReal x2750=((sj5)*(x2739));
IkReal x2751=((r11)*(sj3)*(sj8));
IkReal x2752=((cj3)*(cj8)*(r00));
IkReal x2753=((cj3)*(r01)*(sj8));
IkReal x2754=((x2739)*(x2747));
evalcond[0]=((((cj7)*(x2746)))+(((IkReal(-1.00000000000000))*(x2741)*(x2742)))+(((IkReal(-1.00000000000000))*(x2754)))+(((IkReal(-1.00000000000000))*(r22)*(x2744)))+(x2749));
evalcond[1]=((((cj7)*(r22)))+(((sj7)*(x2746)))+(((IkReal(-1.00000000000000))*(x2750)))+(((IkReal(-1.00000000000000))*(x2740)*(x2747)))+(((IkReal(-1.00000000000000))*(x2742)*(x2744))));
evalcond[2]=((x2750)+(((cj7)*(sj3)*(x2748)))+(((IkReal(-1.00000000000000))*(x2741)*(x2751)))+(((sj7)*(x2743)))+(((cj7)*(x2752)))+(((cj5)*(x2740)))+(((IkReal(-1.00000000000000))*(x2741)*(x2753)))+(((r12)*(x2745))));
evalcond[3]=((((x2745)*(x2748)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2741)))+(((IkReal(-1.00000000000000))*(x2754)))+(((IkReal(-1.00000000000000))*(x2744)*(x2753)))+(((sj7)*(x2752)))+(((IkReal(-1.00000000000000))*(x2744)*(x2751)))+(x2749)+(((IkReal(-1.00000000000000))*(x2741)*(x2743))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2755=((r21)*(sj8));
IkReal x2756=((IkReal(1.00000000000000))*(r22));
IkReal x2757=((cj5)*(sj7));
IkReal x2758=((cj6)*(cj7));
IkReal x2759=((sj5)*(sj7));
IkReal x2760=((cj5)*(cj8)*(r20));
IkReal x2761=((IkReal(1.00000000000000))*(x2758));
IkReal x2762=((cj8)*(r20)*(sj5));
if( IKabs(((gconst47)*(((((cj8)*(r20)*(x2757)))+(((cj6)*(r22)*(x2759)))+(((x2758)*(x2762)))+(((IkReal(-1.00000000000000))*(sj5)*(x2755)*(x2761)))+(((IkReal(-1.00000000000000))*(x2755)*(x2757)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2756))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(cj6)*(x2756)*(x2757)))+(((cj5)*(x2755)*(x2758)))+(((IkReal(-1.00000000000000))*(x2760)*(x2761)))+(((IkReal(-1.00000000000000))*(x2755)*(x2759)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x2756)))+(((cj8)*(r20)*(x2759))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst47)*(((((cj8)*(r20)*(x2757)))+(((cj6)*(r22)*(x2759)))+(((x2758)*(x2762)))+(((IkReal(-1.00000000000000))*(sj5)*(x2755)*(x2761)))+(((IkReal(-1.00000000000000))*(x2755)*(x2757)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2756)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(cj6)*(x2756)*(x2757)))+(((cj5)*(x2755)*(x2758)))+(((IkReal(-1.00000000000000))*(x2760)*(x2761)))+(((IkReal(-1.00000000000000))*(x2755)*(x2759)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x2756)))+(((cj8)*(r20)*(x2759)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2763=IKsin(j4);
IkReal x2764=IKcos(j4);
IkReal x2765=((IkReal(1.00000000000000))*(cj8));
IkReal x2766=((cj3)*(r01));
IkReal x2767=((IkReal(1.00000000000000))*(sj8));
IkReal x2768=((r11)*(sj3));
IkReal x2769=((cj3)*(r00));
IkReal x2770=((IkReal(1.00000000000000))*(sj6));
IkReal x2771=((IkReal(1.00000000000000))*(cj7));
IkReal x2772=((cj3)*(r02));
IkReal x2773=((cj8)*(sj7));
IkReal x2774=((r12)*(sj3));
IkReal x2775=((cj7)*(cj8));
IkReal x2776=((r21)*(sj8));
IkReal x2777=((r10)*(sj3));
IkReal x2778=((sj5)*(x2764));
IkReal x2779=((cj5)*(x2764));
IkReal x2780=((sj5)*(x2763));
IkReal x2781=((cj5)*(x2763));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2770)*(x2778)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2770)*(x2781))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x2776)))+(((IkReal(-1.00000000000000))*(x2779)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2765)))+(x2780));
evalcond[2]=((((sj7)*(x2776)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x2765)))+(((cj6)*(x2778)))+(((cj6)*(x2781))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2770)*(x2779)))+(((IkReal(-1.00000000000000))*(x2767)*(x2777)))+(((IkReal(-1.00000000000000))*(x2765)*(x2768)))+(((IkReal(-1.00000000000000))*(x2765)*(x2766)))+(((IkReal(-1.00000000000000))*(x2767)*(x2769)))+(((sj6)*(x2780))));
evalcond[4]=((((x2775)*(x2777)))+(((x2769)*(x2775)))+(x2778)+(((sj7)*(x2774)))+(((IkReal(-1.00000000000000))*(cj7)*(x2767)*(x2768)))+(x2781)+(((IkReal(-1.00000000000000))*(cj7)*(x2766)*(x2767)))+(((sj7)*(x2772))));
evalcond[5]=((((x2769)*(x2773)))+(((IkReal(-1.00000000000000))*(cj6)*(x2780)))+(((cj6)*(x2779)))+(((IkReal(-1.00000000000000))*(sj7)*(x2766)*(x2767)))+(((x2773)*(x2777)))+(((IkReal(-1.00000000000000))*(x2771)*(x2772)))+(((IkReal(-1.00000000000000))*(sj7)*(x2767)*(x2768)))+(((IkReal(-1.00000000000000))*(x2771)*(x2774))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2782=((sj5)*(sj6));
IkReal x2783=((r22)*(sj7));
IkReal x2784=((r20)*(sj8));
IkReal x2785=((cj8)*(r21));
IkReal x2786=((cj5)*(sj6));
IkReal x2787=((cj7)*(cj8)*(r20));
IkReal x2788=((cj7)*(r21)*(sj8));
if( IKabs(((gconst46)*(((((cj5)*(x2785)))+(((cj5)*(x2784)))+(((x2782)*(x2787)))+(((x2782)*(x2783)))+(((IkReal(-1.00000000000000))*(x2782)*(x2788))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(x2783)*(x2786)))+(((IkReal(-1.00000000000000))*(x2786)*(x2787)))+(((sj5)*(x2784)))+(((sj5)*(x2785)))+(((x2786)*(x2788))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst46)*(((((cj5)*(x2785)))+(((cj5)*(x2784)))+(((x2782)*(x2787)))+(((x2782)*(x2783)))+(((IkReal(-1.00000000000000))*(x2782)*(x2788)))))), ((gconst46)*(((((IkReal(-1.00000000000000))*(x2783)*(x2786)))+(((IkReal(-1.00000000000000))*(x2786)*(x2787)))+(((sj5)*(x2784)))+(((sj5)*(x2785)))+(((x2786)*(x2788)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2789=IKsin(j4);
IkReal x2790=IKcos(j4);
IkReal x2791=((IkReal(1.00000000000000))*(cj8));
IkReal x2792=((cj3)*(r01));
IkReal x2793=((IkReal(1.00000000000000))*(sj8));
IkReal x2794=((r11)*(sj3));
IkReal x2795=((cj3)*(r00));
IkReal x2796=((IkReal(1.00000000000000))*(sj6));
IkReal x2797=((IkReal(1.00000000000000))*(cj7));
IkReal x2798=((cj3)*(r02));
IkReal x2799=((cj8)*(sj7));
IkReal x2800=((r12)*(sj3));
IkReal x2801=((cj7)*(cj8));
IkReal x2802=((r21)*(sj8));
IkReal x2803=((r10)*(sj3));
IkReal x2804=((sj5)*(x2790));
IkReal x2805=((cj5)*(x2790));
IkReal x2806=((sj5)*(x2789));
IkReal x2807=((cj5)*(x2789));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2796)*(x2807)))+(((IkReal(-1.00000000000000))*(x2796)*(x2804))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2806)+(((cj7)*(x2802)))+(((IkReal(-1.00000000000000))*(x2805)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2791))));
evalcond[2]=((((cj7)*(r22)))+(((cj6)*(x2807)))+(((sj7)*(x2802)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x2791)))+(((cj6)*(x2804))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2796)*(x2805)))+(((IkReal(-1.00000000000000))*(x2791)*(x2794)))+(((sj6)*(x2806)))+(((IkReal(-1.00000000000000))*(x2793)*(x2795)))+(((IkReal(-1.00000000000000))*(x2791)*(x2792)))+(((IkReal(-1.00000000000000))*(x2793)*(x2803))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj7)*(x2792)*(x2793)))+(((sj7)*(x2798)))+(((sj7)*(x2800)))+(((x2795)*(x2801)))+(x2807)+(x2804)+(((x2801)*(x2803)))+(((IkReal(-1.00000000000000))*(cj7)*(x2793)*(x2794))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x2792)*(x2793)))+(((IkReal(-1.00000000000000))*(sj7)*(x2793)*(x2794)))+(((IkReal(-1.00000000000000))*(x2797)*(x2798)))+(((IkReal(-1.00000000000000))*(cj6)*(x2806)))+(((IkReal(-1.00000000000000))*(x2797)*(x2800)))+(((x2799)*(x2803)))+(((x2795)*(x2799)))+(((cj6)*(x2805))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2808=((cj6)*(sj7));
IkReal x2809=((cj6)*(cj7));
IkReal x2810=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst0)*(((((r12)*(x2808)))+(((IkReal(-1.00000000000000))*(r11)*(x2809)*(x2810)))+(((cj8)*(r10)*(x2809))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r02)*(x2808)))+(((IkReal(-1.00000000000000))*(r01)*(x2809)*(x2810)))+(((cj8)*(r00)*(x2809))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst0)*(((((r12)*(x2808)))+(((IkReal(-1.00000000000000))*(r11)*(x2809)*(x2810)))+(((cj8)*(r10)*(x2809)))))), ((gconst0)*(((((r02)*(x2808)))+(((IkReal(-1.00000000000000))*(r01)*(x2809)*(x2810)))+(((cj8)*(r00)*(x2809)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x2811=IKsin(j3);
IkReal x2812=IKcos(j3);
IkReal x2813=((IkReal(1.00000000000000))*(r11));
IkReal x2814=((r01)*(sj8));
IkReal x2815=((cj8)*(r10));
IkReal x2816=((IkReal(1.00000000000000))*(sj7));
IkReal x2817=((sj7)*(x2812));
IkReal x2818=((cj7)*(x2811));
IkReal x2819=((r00)*(x2811));
IkReal x2820=((cj7)*(x2812));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj8)*(x2812)*(x2813)))+(((sj8)*(x2819)))+(((cj8)*(r01)*(x2811)))+(cj6)+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2812))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r00)*(x2818)))+(((IkReal(-1.00000000000000))*(r02)*(x2811)*(x2816)))+(((x2815)*(x2820)))+(((IkReal(-1.00000000000000))*(sj8)*(x2813)*(x2820)))+(((r12)*(x2817)))+(((x2814)*(x2818))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj8)*(x2813)*(x2817)))+(((sj7)*(x2811)*(x2814)))+(((r02)*(x2818)))+(sj6)+(((IkReal(-1.00000000000000))*(cj8)*(x2816)*(x2819)))+(((IkReal(-1.00000000000000))*(r12)*(x2820)))+(((x2815)*(x2817))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=sj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2821=((IkReal(1.00000000000000))*(cj3));
IkReal x2822=((cj7)*(r02));
IkReal x2823=((cj8)*(sj7));
IkReal x2824=((r01)*(sj3));
IkReal x2825=((IkReal(1.00000000000000))*(sj3));
IkReal x2826=((sj7)*(sj8));
IkReal x2827=((cj7)*(r12));
IkReal x2828=((cj7)*(cj8));
IkReal x2829=((cj3)*(r10));
IkReal x2830=((cj7)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((cj8)*(x2824)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2821)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2821))));
evalcond[2]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x2823)))+(((r21)*(x2826))));
evalcond[3]=((IkReal(0.0800000000000000))+(((npy)*(x2826)))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(npx)*(x2823)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x2825)*(x2828)))+(((IkReal(-1.00000000000000))*(r11)*(x2821)*(x2830)))+(((cj3)*(r12)*(sj7)))+(((x2824)*(x2830)))+(((x2828)*(x2829)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2825))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x2821)*(x2826)))+(((sj3)*(x2822)))+(((IkReal(-1.00000000000000))*(r00)*(x2823)*(x2825)))+(((x2823)*(x2829)))+(((IkReal(-1.00000000000000))*(x2821)*(x2827)))+(((x2824)*(x2826))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2821)*(x2822)))+(((cj3)*(r00)*(x2823)))+(((IkReal(-1.00000000000000))*(r11)*(x2825)*(x2826)))+(((IkReal(-1.00000000000000))*(x2825)*(x2827)))+(((r10)*(sj3)*(x2823)))+(((IkReal(-1.00000000000000))*(r01)*(x2821)*(x2826))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2831=((IkReal(4.00000000000000))*(npx));
IkReal x2832=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(sj8)*(x2831)))+(((IkReal(-1.00000000000000))*(cj8)*(x2832))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2831)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2832))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(sj8)*(x2831)))+(((IkReal(-1.00000000000000))*(cj8)*(x2832)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2831)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2832)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(sj8)*(x2831)))+(((IkReal(-1.00000000000000))*(cj8)*(x2832)))), ((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2831)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2832)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0200000000000000))+(((IkReal(0.250000000000000))*(IKsin(j5))))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(0.0800000000000000))*(cj7)))+(((cj7)*(npy)*(sj8)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(npx)))+(((IkReal(-1.00000000000000))*(npz)*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst57;
gconst57=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2833=((cj8)*(sj5));
IkReal x2834=((cj3)*(r01));
IkReal x2835=((IkReal(1.00000000000000))*(cj5));
IkReal x2836=((r11)*(sj3));
IkReal x2837=((sj5)*(sj8));
IkReal x2838=((r10)*(sj3));
IkReal x2839=((cj3)*(r00)*(sj8));
if( IKabs(((gconst57)*(((((x2833)*(x2834)))+(((cj5)*(cj8)*(r21)))+(((x2833)*(x2836)))+(((x2837)*(x2838)))+(((cj3)*(r00)*(x2837)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst57)*(((((IkReal(-1.00000000000000))*(x2835)*(x2839)))+(((IkReal(-1.00000000000000))*(sj8)*(x2835)*(x2838)))+(((IkReal(-1.00000000000000))*(cj8)*(x2834)*(x2835)))+(((r20)*(x2837)))+(((IkReal(-1.00000000000000))*(cj8)*(x2835)*(x2836)))+(((r21)*(x2833))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst57)*(((((x2833)*(x2834)))+(((cj5)*(cj8)*(r21)))+(((x2833)*(x2836)))+(((x2837)*(x2838)))+(((cj3)*(r00)*(x2837)))+(((cj5)*(r20)*(sj8)))))), ((gconst57)*(((((IkReal(-1.00000000000000))*(x2835)*(x2839)))+(((IkReal(-1.00000000000000))*(sj8)*(x2835)*(x2838)))+(((IkReal(-1.00000000000000))*(cj8)*(x2834)*(x2835)))+(((r20)*(x2837)))+(((IkReal(-1.00000000000000))*(cj8)*(x2835)*(x2836)))+(((r21)*(x2833)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2840=IKsin(j4);
IkReal x2841=IKcos(j4);
IkReal x2842=((IkReal(1.00000000000000))*(cj8));
IkReal x2843=((cj3)*(r01));
IkReal x2844=((cj3)*(r00));
IkReal x2845=((cj7)*(cj8));
IkReal x2846=((IkReal(1.00000000000000))*(cj5));
IkReal x2847=((IkReal(1.00000000000000))*(sj8));
IkReal x2848=((r11)*(sj3));
IkReal x2849=((r10)*(sj3));
IkReal x2850=((sj5)*(x2840));
IkReal x2851=((sj5)*(x2841));
IkReal x2852=((x2841)*(x2846));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2851)))+(((IkReal(-1.00000000000000))*(x2840)*(x2846))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2852)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2850)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2842))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2844)*(x2847)))+(((IkReal(-1.00000000000000))*(x2852)))+(((IkReal(-1.00000000000000))*(x2842)*(x2843)))+(x2850)+(((IkReal(-1.00000000000000))*(x2842)*(x2848)))+(((IkReal(-1.00000000000000))*(x2847)*(x2849))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj7)*(x2847)*(x2848)))+(((cj3)*(r02)*(sj7)))+(((cj5)*(x2840)))+(((r12)*(sj3)*(sj7)))+(x2851)+(((x2844)*(x2845)))+(((x2845)*(x2849)))+(((IkReal(-1.00000000000000))*(cj7)*(x2843)*(x2847))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2853=((sj5)*(sj8));
IkReal x2854=((IkReal(1.00000000000000))*(cj7));
IkReal x2855=((cj8)*(sj5));
IkReal x2856=((r22)*(sj7));
IkReal x2857=((cj5)*(cj8));
IkReal x2858=((cj5)*(sj8));
if( IKabs(((gconst56)*(((((sj5)*(x2856)))+(((r21)*(x2857)))+(((r20)*(x2858)))+(((IkReal(-1.00000000000000))*(r21)*(x2853)*(x2854)))+(((cj7)*(r20)*(x2855))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((r20)*(x2853)))+(((IkReal(-1.00000000000000))*(r20)*(x2854)*(x2857)))+(((IkReal(-1.00000000000000))*(cj5)*(x2856)))+(((r21)*(x2855)))+(((cj7)*(r21)*(x2858))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst56)*(((((sj5)*(x2856)))+(((r21)*(x2857)))+(((r20)*(x2858)))+(((IkReal(-1.00000000000000))*(r21)*(x2853)*(x2854)))+(((cj7)*(r20)*(x2855)))))), ((gconst56)*(((((r20)*(x2853)))+(((IkReal(-1.00000000000000))*(r20)*(x2854)*(x2857)))+(((IkReal(-1.00000000000000))*(cj5)*(x2856)))+(((r21)*(x2855)))+(((cj7)*(r21)*(x2858)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2859=IKsin(j4);
IkReal x2860=IKcos(j4);
IkReal x2861=((IkReal(1.00000000000000))*(cj8));
IkReal x2862=((cj3)*(r01));
IkReal x2863=((cj3)*(r00));
IkReal x2864=((cj7)*(cj8));
IkReal x2865=((IkReal(1.00000000000000))*(cj5));
IkReal x2866=((IkReal(1.00000000000000))*(sj8));
IkReal x2867=((r11)*(sj3));
IkReal x2868=((r10)*(sj3));
IkReal x2869=((sj5)*(x2859));
IkReal x2870=((sj5)*(x2860));
IkReal x2871=((x2860)*(x2865));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2870)))+(((IkReal(-1.00000000000000))*(x2859)*(x2865))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2871)))+(x2869)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2861))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2861)*(x2862)))+(((IkReal(-1.00000000000000))*(x2866)*(x2868)))+(((IkReal(-1.00000000000000))*(x2871)))+(((IkReal(-1.00000000000000))*(x2863)*(x2866)))+(x2869)+(((IkReal(-1.00000000000000))*(x2861)*(x2867))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(x2870)+(((cj5)*(x2859)))+(((x2864)*(x2868)))+(((IkReal(-1.00000000000000))*(cj7)*(x2866)*(x2867)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2862)*(x2866)))+(((x2863)*(x2864))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2872=((IkReal(1.00000000000000))*(cj3));
IkReal x2873=((cj7)*(r02));
IkReal x2874=((cj8)*(sj7));
IkReal x2875=((r01)*(sj3));
IkReal x2876=((IkReal(1.00000000000000))*(sj3));
IkReal x2877=((sj7)*(sj8));
IkReal x2878=((cj7)*(r12));
IkReal x2879=((cj7)*(cj8));
IkReal x2880=((cj3)*(r10));
IkReal x2881=((cj7)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2872)))+(((cj8)*(x2875)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2872))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x2874)))+(((cj7)*(r22)))+(((r21)*(x2877))));
evalcond[3]=((IkReal(-0.0800000000000000))+(((cj7)*(npz)))+(((npy)*(x2877)))+(((IkReal(-1.00000000000000))*(npx)*(x2874)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[4]=((((x2879)*(x2880)))+(((cj3)*(r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x2872)*(x2881)))+(((x2875)*(x2881)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2876)))+(((IkReal(-1.00000000000000))*(r00)*(x2876)*(x2879))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2872)*(x2878)))+(((IkReal(-1.00000000000000))*(r00)*(x2874)*(x2876)))+(((x2875)*(x2877)))+(((IkReal(-1.00000000000000))*(r11)*(x2872)*(x2877)))+(((sj3)*(x2873)))+(((x2874)*(x2880))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(x2876)*(x2877)))+(((cj3)*(r00)*(x2874)))+(((IkReal(-1.00000000000000))*(x2876)*(x2878)))+(((IkReal(-1.00000000000000))*(x2872)*(x2873)))+(((r10)*(sj3)*(x2874)))+(((IkReal(-1.00000000000000))*(r01)*(x2872)*(x2877))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2882=((IkReal(4.00000000000000))*(npx));
IkReal x2883=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.0800000000000000))+(((sj8)*(x2882)))+(((cj8)*(x2883))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2883)))+(((IkReal(-0.320000000000000))*(cj7)))+(((cj7)*(cj8)*(x2882))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((sj8)*(x2882)))+(((cj8)*(x2883)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2883)))+(((IkReal(-0.320000000000000))*(cj7)))+(((cj7)*(cj8)*(x2882)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.0800000000000000))+(((sj8)*(x2882)))+(((cj8)*(x2883)))), ((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2883)))+(((IkReal(-0.320000000000000))*(cj7)))+(((cj7)*(cj8)*(x2882)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0200000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(IKsin(j5)))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(0.0800000000000000))*(cj7)))+(((cj7)*(npy)*(sj8)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(npx)))+(((IkReal(-1.00000000000000))*(npz)*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst58;
gconst58=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2884=((IkReal(1.00000000000000))*(sj5));
IkReal x2885=((r20)*(sj8));
IkReal x2886=((cj5)*(cj8));
IkReal x2887=((r11)*(sj3));
IkReal x2888=((cj3)*(r01));
IkReal x2889=((cj3)*(r00)*(sj8));
IkReal x2890=((r10)*(sj3)*(sj8));
if( IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(x2884)*(x2889)))+(((IkReal(-1.00000000000000))*(cj8)*(x2884)*(x2888)))+(((IkReal(-1.00000000000000))*(r21)*(x2886)))+(((IkReal(-1.00000000000000))*(x2884)*(x2890)))+(((IkReal(-1.00000000000000))*(cj5)*(x2885)))+(((IkReal(-1.00000000000000))*(cj8)*(x2884)*(x2887))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(((((cj5)*(x2890)))+(((x2886)*(x2887)))+(((x2886)*(x2888)))+(((IkReal(-1.00000000000000))*(x2884)*(x2885)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2884)))+(((cj5)*(x2889))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst59)*(((((IkReal(-1.00000000000000))*(x2884)*(x2889)))+(((IkReal(-1.00000000000000))*(cj8)*(x2884)*(x2888)))+(((IkReal(-1.00000000000000))*(r21)*(x2886)))+(((IkReal(-1.00000000000000))*(x2884)*(x2890)))+(((IkReal(-1.00000000000000))*(cj5)*(x2885)))+(((IkReal(-1.00000000000000))*(cj8)*(x2884)*(x2887)))))), ((gconst59)*(((((cj5)*(x2890)))+(((x2886)*(x2887)))+(((x2886)*(x2888)))+(((IkReal(-1.00000000000000))*(x2884)*(x2885)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2884)))+(((cj5)*(x2889)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2891=IKsin(j4);
IkReal x2892=IKcos(j4);
IkReal x2893=((IkReal(1.00000000000000))*(cj8));
IkReal x2894=((cj3)*(r01));
IkReal x2895=((cj3)*(r00));
IkReal x2896=((cj7)*(cj8));
IkReal x2897=((r11)*(sj3));
IkReal x2898=((IkReal(1.00000000000000))*(sj8));
IkReal x2899=((r10)*(sj3));
IkReal x2900=((cj5)*(x2891));
IkReal x2901=((sj5)*(x2892));
IkReal x2902=((cj5)*(x2892));
IkReal x2903=((sj5)*(x2891));
IkReal x2904=((x2901)+(x2900));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x2904));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2893)))+(x2903)+(((IkReal(-1.00000000000000))*(x2902))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2903)))+(((IkReal(-1.00000000000000))*(x2895)*(x2898)))+(((IkReal(-1.00000000000000))*(x2893)*(x2897)))+(x2902)+(((IkReal(-1.00000000000000))*(x2893)*(x2894)))+(((IkReal(-1.00000000000000))*(x2898)*(x2899))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x2896)*(x2899)))+(((x2895)*(x2896)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2894)*(x2898)))+(x2904)+(((IkReal(-1.00000000000000))*(cj7)*(x2897)*(x2898))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2905=((r20)*(sj5));
IkReal x2906=((r22)*(sj7));
IkReal x2907=((cj8)*(r21));
IkReal x2908=((cj7)*(cj8));
IkReal x2909=((cj5)*(r20));
IkReal x2910=((cj7)*(r21)*(sj8));
if( IKabs(((gconst58)*(((((IkReal(-1.00000000000000))*(x2905)*(x2908)))+(((IkReal(-1.00000000000000))*(sj5)*(x2906)))+(((cj5)*(x2907)))+(((sj8)*(x2909)))+(((sj5)*(x2910))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst58)*(((((IkReal(-1.00000000000000))*(cj5)*(x2910)))+(((x2908)*(x2909)))+(((sj5)*(x2907)))+(((cj5)*(x2906)))+(((sj8)*(x2905))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst58)*(((((IkReal(-1.00000000000000))*(x2905)*(x2908)))+(((IkReal(-1.00000000000000))*(sj5)*(x2906)))+(((cj5)*(x2907)))+(((sj8)*(x2909)))+(((sj5)*(x2910)))))), ((gconst58)*(((((IkReal(-1.00000000000000))*(cj5)*(x2910)))+(((x2908)*(x2909)))+(((sj5)*(x2907)))+(((cj5)*(x2906)))+(((sj8)*(x2905)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2911=IKsin(j4);
IkReal x2912=IKcos(j4);
IkReal x2913=((IkReal(1.00000000000000))*(cj8));
IkReal x2914=((cj3)*(r01));
IkReal x2915=((cj3)*(r00));
IkReal x2916=((cj7)*(cj8));
IkReal x2917=((r11)*(sj3));
IkReal x2918=((IkReal(1.00000000000000))*(sj8));
IkReal x2919=((r10)*(sj3));
IkReal x2920=((cj5)*(x2911));
IkReal x2921=((sj5)*(x2912));
IkReal x2922=((cj5)*(x2912));
IkReal x2923=((sj5)*(x2911));
IkReal x2924=((x2921)+(x2920));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x2924));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2923)+(((IkReal(-1.00000000000000))*(x2922)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2913))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2923)))+(((IkReal(-1.00000000000000))*(x2915)*(x2918)))+(((IkReal(-1.00000000000000))*(x2913)*(x2917)))+(((IkReal(-1.00000000000000))*(x2918)*(x2919)))+(x2922)+(((IkReal(-1.00000000000000))*(x2913)*(x2914))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2917)*(x2918)))+(((IkReal(-1.00000000000000))*(cj7)*(x2914)*(x2918)))+(((x2915)*(x2916)))+(((r12)*(sj3)*(sj7)))+(x2924)+(((x2916)*(x2919))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2925=((cj3)*(cj8));
IkReal x2926=((r01)*(sj3));
IkReal x2927=((r02)*(sj3));
IkReal x2928=((IkReal(1.00000000000000))*(sj7));
IkReal x2929=((IkReal(1.00000000000000))*(r11));
IkReal x2930=((cj3)*(r12));
IkReal x2931=((IkReal(1.00000000000000))*(cj7));
IkReal x2932=((cj8)*(sj3));
IkReal x2933=((sj3)*(sj8));
IkReal x2934=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x2934)))+(((r00)*(x2933)))+(((IkReal(-1.00000000000000))*(x2925)*(x2929)))+(((cj8)*(x2926))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x2934)))+(((IkReal(-1.00000000000000))*(r10)*(x2933)))+(((IkReal(-1.00000000000000))*(x2929)*(x2932)))+(((IkReal(-1.00000000000000))*(r01)*(x2925))));
evalcond[5]=((((cj7)*(sj8)*(x2926)))+(((IkReal(-1.00000000000000))*(x2927)*(x2928)))+(((sj7)*(x2930)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2929)))+(((IkReal(-1.00000000000000))*(r00)*(x2931)*(x2932)))+(((cj7)*(r10)*(x2925))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2928)))+(((IkReal(-1.00000000000000))*(r00)*(x2928)*(x2932)))+(((sj7)*(sj8)*(x2926)))+(((IkReal(-1.00000000000000))*(x2930)*(x2931)))+(((r10)*(sj7)*(x2925)))+(((cj7)*(x2927))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2935=((IkReal(4.00000000000000))*(sj7));
IkReal x2936=((npy)*(sj8));
IkReal x2937=((IkReal(4.00000000000000))*(cj7));
IkReal x2938=((cj8)*(npx));
if( IKabs(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x2935)*(x2938)))+(((npz)*(x2937)))+(((x2935)*(x2936)))+(((IkReal(0.320000000000000))*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj7)))+(((x2937)*(x2938)))+(((npz)*(x2935)))+(((IkReal(-1.00000000000000))*(x2936)*(x2937))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x2935)*(x2938)))+(((npz)*(x2937)))+(((x2935)*(x2936)))+(((IkReal(0.320000000000000))*(sj7)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj7)))+(((x2937)*(x2938)))+(((npz)*(x2935)))+(((IkReal(-1.00000000000000))*(x2936)*(x2937)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x2935)*(x2938)))+(((npz)*(x2937)))+(((x2935)*(x2936)))+(((IkReal(0.320000000000000))*(sj7)))), ((IkReal(-0.920000000000000))+(((IkReal(-0.320000000000000))*(cj7)))+(((x2937)*(x2938)))+(((npz)*(x2935)))+(((IkReal(-1.00000000000000))*(x2936)*(x2937)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2939=((IkReal(1.00000000000000))*(sj7));
IkReal x2940=((npy)*(sj8));
IkReal x2941=((cj8)*(npx));
evalcond[0]=((IkReal(0.230000000000000))+(((cj7)*(x2940)))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj7)*(x2941)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x2939))));
evalcond[1]=((IkReal(0.0200000000000000))+(((cj7)*(npz)))+(((sj7)*(x2940)))+(((IkReal(-1.00000000000000))*(x2939)*(x2941)))+(((IkReal(0.0800000000000000))*(sj7)))+(((IkReal(-0.250000000000000))*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst60;
gconst60=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2942=((r22)*(sj7));
IkReal x2943=((cj8)*(r10));
IkReal x2944=((cj3)*(r00));
IkReal x2945=((IkReal(1.00000000000000))*(sj5));
IkReal x2946=((cj7)*(sj5));
IkReal x2947=((r21)*(sj8));
IkReal x2948=((cj3)*(r02)*(sj7));
IkReal x2949=((cj5)*(cj7)*(sj3));
IkReal x2950=((IkReal(1.00000000000000))*(r11)*(sj8));
IkReal x2951=((cj5)*(cj7)*(cj8));
IkReal x2952=((r12)*(sj3)*(sj7));
IkReal x2953=((IkReal(1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8));
if( IKabs(((gconst61)*(((((cj5)*(x2948)))+(((x2946)*(x2947)))+(((x2943)*(x2949)))+(((x2944)*(x2951)))+(((cj5)*(x2952)))+(((IkReal(-1.00000000000000))*(x2942)*(x2945)))+(((IkReal(-1.00000000000000))*(x2949)*(x2950)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(r20)*(x2945)))+(((IkReal(-1.00000000000000))*(cj5)*(x2953))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst61)*(((((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2947)))+(((sj5)*(x2952)))+(((sj5)*(x2948)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2945)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2945)))+(((cj8)*(x2944)*(x2946)))+(((r20)*(x2951)))+(((cj5)*(x2942)))+(((sj3)*(x2943)*(x2946))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst61)*(((((cj5)*(x2948)))+(((x2946)*(x2947)))+(((x2943)*(x2949)))+(((x2944)*(x2951)))+(((cj5)*(x2952)))+(((IkReal(-1.00000000000000))*(x2942)*(x2945)))+(((IkReal(-1.00000000000000))*(x2949)*(x2950)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(r20)*(x2945)))+(((IkReal(-1.00000000000000))*(cj5)*(x2953)))))), ((gconst61)*(((((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2947)))+(((sj5)*(x2952)))+(((sj5)*(x2948)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2945)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2945)))+(((cj8)*(x2944)*(x2946)))+(((r20)*(x2951)))+(((cj5)*(x2942)))+(((sj3)*(x2943)*(x2946)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2954=IKsin(j4);
IkReal x2955=IKcos(j4);
IkReal x2956=((IkReal(1.00000000000000))*(cj7));
IkReal x2957=((cj8)*(r20));
IkReal x2958=((cj3)*(r02));
IkReal x2959=((IkReal(1.00000000000000))*(sj7));
IkReal x2960=((sj3)*(sj7));
IkReal x2961=((r21)*(sj8));
IkReal x2962=((cj8)*(r10));
IkReal x2963=((cj5)*(x2954));
IkReal x2964=((sj5)*(x2955));
IkReal x2965=((r11)*(sj3)*(sj8));
IkReal x2966=((cj3)*(cj8)*(r00));
IkReal x2967=((cj5)*(x2955));
IkReal x2968=((cj3)*(r01)*(sj8));
IkReal x2969=((sj5)*(x2954));
IkReal x2970=((x2964)+(x2963));
evalcond[0]=((((cj7)*(x2961)))+(((IkReal(-1.00000000000000))*(r22)*(x2959)))+(((IkReal(-1.00000000000000))*(x2967)))+(x2969)+(((IkReal(-1.00000000000000))*(x2956)*(x2957))));
evalcond[1]=((((cj7)*(r22)))+(((sj7)*(x2961)))+(x2970)+(((IkReal(-1.00000000000000))*(x2957)*(x2959))));
evalcond[2]=((((r12)*(x2960)))+(((IkReal(-1.00000000000000))*(x2956)*(x2965)))+(((cj7)*(sj3)*(x2962)))+(((sj7)*(x2958)))+(((cj7)*(x2966)))+(((IkReal(-1.00000000000000))*(x2956)*(x2968)))+(x2970));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2959)*(x2965)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2956)))+(((IkReal(-1.00000000000000))*(x2956)*(x2958)))+(((IkReal(-1.00000000000000))*(x2969)))+(((sj7)*(x2966)))+(x2967)+(((IkReal(-1.00000000000000))*(x2959)*(x2968)))+(((x2960)*(x2962))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2971=((cj7)*(sj5));
IkReal x2972=((cj8)*(r20));
IkReal x2973=((cj5)*(cj7));
IkReal x2974=((IkReal(1.00000000000000))*(sj7));
IkReal x2975=((r21)*(sj8));
IkReal x2976=((sj7)*(x2975));
if( IKabs(((gconst60)*(((((r22)*(x2973)))+(((IkReal(-1.00000000000000))*(x2971)*(x2972)))+(((IkReal(-1.00000000000000))*(cj5)*(x2972)*(x2974)))+(((cj5)*(x2976)))+(((x2971)*(x2975)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2974))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((r22)*(x2971)))+(((IkReal(-1.00000000000000))*(x2973)*(x2975)))+(((IkReal(-1.00000000000000))*(sj5)*(x2972)*(x2974)))+(((cj5)*(r22)*(sj7)))+(((x2972)*(x2973)))+(((sj5)*(x2976))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst60)*(((((r22)*(x2973)))+(((IkReal(-1.00000000000000))*(x2971)*(x2972)))+(((IkReal(-1.00000000000000))*(cj5)*(x2972)*(x2974)))+(((cj5)*(x2976)))+(((x2971)*(x2975)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2974)))))), ((gconst60)*(((((r22)*(x2971)))+(((IkReal(-1.00000000000000))*(x2973)*(x2975)))+(((IkReal(-1.00000000000000))*(sj5)*(x2972)*(x2974)))+(((cj5)*(r22)*(sj7)))+(((x2972)*(x2973)))+(((sj5)*(x2976)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2977=IKsin(j4);
IkReal x2978=IKcos(j4);
IkReal x2979=((IkReal(1.00000000000000))*(cj7));
IkReal x2980=((cj8)*(r20));
IkReal x2981=((cj3)*(r02));
IkReal x2982=((IkReal(1.00000000000000))*(sj7));
IkReal x2983=((sj3)*(sj7));
IkReal x2984=((r21)*(sj8));
IkReal x2985=((cj8)*(r10));
IkReal x2986=((cj5)*(x2977));
IkReal x2987=((sj5)*(x2978));
IkReal x2988=((r11)*(sj3)*(sj8));
IkReal x2989=((cj3)*(cj8)*(r00));
IkReal x2990=((cj5)*(x2978));
IkReal x2991=((cj3)*(r01)*(sj8));
IkReal x2992=((sj5)*(x2977));
IkReal x2993=((x2987)+(x2986));
evalcond[0]=((((cj7)*(x2984)))+(x2992)+(((IkReal(-1.00000000000000))*(x2990)))+(((IkReal(-1.00000000000000))*(r22)*(x2982)))+(((IkReal(-1.00000000000000))*(x2979)*(x2980))));
evalcond[1]=((((cj7)*(r22)))+(x2993)+(((IkReal(-1.00000000000000))*(x2980)*(x2982)))+(((sj7)*(x2984))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2979)*(x2988)))+(x2993)+(((IkReal(-1.00000000000000))*(x2979)*(x2991)))+(((r12)*(x2983)))+(((cj7)*(x2989)))+(((cj7)*(sj3)*(x2985)))+(((sj7)*(x2981))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2982)*(x2991)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2979)))+(((IkReal(-1.00000000000000))*(x2982)*(x2988)))+(x2990)+(((IkReal(-1.00000000000000))*(x2992)))+(((sj7)*(x2989)))+(((x2983)*(x2985)))+(((IkReal(-1.00000000000000))*(x2979)*(x2981))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2994=((cj3)*(cj8));
IkReal x2995=((r01)*(sj3));
IkReal x2996=((r02)*(sj3));
IkReal x2997=((IkReal(1.00000000000000))*(sj7));
IkReal x2998=((IkReal(1.00000000000000))*(r11));
IkReal x2999=((cj3)*(r12));
IkReal x3000=((IkReal(1.00000000000000))*(cj7));
IkReal x3001=((cj8)*(sj3));
IkReal x3002=((sj3)*(sj8));
IkReal x3003=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(-1.00000000000000))+(((cj8)*(x2995)))+(((IkReal(-1.00000000000000))*(r10)*(x3003)))+(((IkReal(-1.00000000000000))*(x2994)*(x2998)))+(((r00)*(x3002))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x3003)))+(((IkReal(-1.00000000000000))*(r01)*(x2994)))+(((IkReal(-1.00000000000000))*(x2998)*(x3001)))+(((IkReal(-1.00000000000000))*(r10)*(x3002))));
evalcond[5]=((((cj7)*(r10)*(x2994)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2998)))+(((sj7)*(x2999)))+(((IkReal(-1.00000000000000))*(r00)*(x3000)*(x3001)))+(((cj7)*(sj8)*(x2995)))+(((IkReal(-1.00000000000000))*(x2996)*(x2997))));
evalcond[6]=((((r10)*(sj7)*(x2994)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2997)))+(((IkReal(-1.00000000000000))*(r00)*(x2997)*(x3001)))+(((cj7)*(x2996)))+(((IkReal(-1.00000000000000))*(x2999)*(x3000)))+(((sj7)*(sj8)*(x2995))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3004=((IkReal(4.00000000000000))*(sj7));
IkReal x3005=((npy)*(sj8));
IkReal x3006=((IkReal(4.00000000000000))*(cj7));
IkReal x3007=((cj8)*(npx));
if( IKabs(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x3004)*(x3005)))+(((IkReal(-1.00000000000000))*(npz)*(x3006)))+(((x3004)*(x3007)))+(((IkReal(-0.320000000000000))*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(-1.00000000000000))*(x3005)*(x3006)))+(((x3006)*(x3007)))+(((IkReal(-0.320000000000000))*(cj7)))+(((npz)*(x3004))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x3004)*(x3005)))+(((IkReal(-1.00000000000000))*(npz)*(x3006)))+(((x3004)*(x3007)))+(((IkReal(-0.320000000000000))*(sj7)))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(-1.00000000000000))*(x3005)*(x3006)))+(((x3006)*(x3007)))+(((IkReal(-0.320000000000000))*(cj7)))+(((npz)*(x3004)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x3004)*(x3005)))+(((IkReal(-1.00000000000000))*(npz)*(x3006)))+(((x3004)*(x3007)))+(((IkReal(-0.320000000000000))*(sj7)))), ((IkReal(-0.920000000000000))+(((IkReal(-1.00000000000000))*(x3005)*(x3006)))+(((x3006)*(x3007)))+(((IkReal(-0.320000000000000))*(cj7)))+(((npz)*(x3004)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x3008=((IkReal(1.00000000000000))*(sj7));
IkReal x3009=((npy)*(sj8));
IkReal x3010=((cj8)*(npx));
evalcond[0]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x3010)))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((cj7)*(x3009)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x3008))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((cj7)*(npz)))+(((IkReal(0.250000000000000))*(IKsin(j5))))+(((sj7)*(x3009)))+(((IkReal(0.0800000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x3008)*(x3010))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst63;
gconst63=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3011=((cj3)*(cj5));
IkReal x3012=((r02)*(sj7));
IkReal x3013=((cj8)*(r00));
IkReal x3014=((r22)*(sj7));
IkReal x3015=((cj5)*(sj3));
IkReal x3016=((cj7)*(cj8));
IkReal x3017=((IkReal(1.00000000000000))*(sj5));
IkReal x3018=((r12)*(sj7));
IkReal x3019=((sj3)*(sj5));
IkReal x3020=((cj3)*(cj7)*(sj5));
IkReal x3021=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst63)*(((((IkReal(-1.00000000000000))*(r01)*(x3011)*(x3021)))+(((IkReal(-1.00000000000000))*(r11)*(x3015)*(x3021)))+(((IkReal(-1.00000000000000))*(x3014)*(x3017)))+(((x3011)*(x3012)))+(((x3015)*(x3018)))+(((r10)*(x3015)*(x3016)))+(((IkReal(-1.00000000000000))*(r20)*(x3016)*(x3017)))+(((cj7)*(x3011)*(x3013)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3021)))+(((x3018)*(x3019)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x3017)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x3017)))+(((x3013)*(x3020)))+(((cj5)*(x3014)))+(((cj3)*(sj5)*(x3012)))+(((r10)*(x3016)*(x3019)))+(((cj5)*(r20)*(x3016))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst63)*(((((IkReal(-1.00000000000000))*(r01)*(x3011)*(x3021)))+(((IkReal(-1.00000000000000))*(r11)*(x3015)*(x3021)))+(((IkReal(-1.00000000000000))*(x3014)*(x3017)))+(((x3011)*(x3012)))+(((x3015)*(x3018)))+(((r10)*(x3015)*(x3016)))+(((IkReal(-1.00000000000000))*(r20)*(x3016)*(x3017)))+(((cj7)*(x3011)*(x3013)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst63)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3021)))+(((x3018)*(x3019)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x3017)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x3017)))+(((x3013)*(x3020)))+(((cj5)*(x3014)))+(((cj3)*(sj5)*(x3012)))+(((r10)*(x3016)*(x3019)))+(((cj5)*(r20)*(x3016)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3022=IKcos(j4);
IkReal x3023=IKsin(j4);
IkReal x3024=((IkReal(1.00000000000000))*(cj7));
IkReal x3025=((cj8)*(r20));
IkReal x3026=((cj3)*(r02));
IkReal x3027=((IkReal(1.00000000000000))*(sj7));
IkReal x3028=((sj3)*(sj7));
IkReal x3029=((r21)*(sj8));
IkReal x3030=((IkReal(1.00000000000000))*(cj5));
IkReal x3031=((cj8)*(r10));
IkReal x3032=((sj5)*(x3023));
IkReal x3033=((sj5)*(x3022));
IkReal x3034=((r11)*(sj3)*(sj8));
IkReal x3035=((cj3)*(cj8)*(r00));
IkReal x3036=((cj3)*(r01)*(sj8));
IkReal x3037=((x3022)*(x3030));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3037)))+(((cj7)*(x3029)))+(x3032)+(((IkReal(-1.00000000000000))*(r22)*(x3027)))+(((IkReal(-1.00000000000000))*(x3024)*(x3025))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x3023)*(x3030)))+(((IkReal(-1.00000000000000))*(x3033)))+(((sj7)*(x3029)))+(((IkReal(-1.00000000000000))*(x3025)*(x3027))));
evalcond[2]=((((cj5)*(x3023)))+(((sj7)*(x3026)))+(((r12)*(x3028)))+(((cj7)*(sj3)*(x3031)))+(x3033)+(((IkReal(-1.00000000000000))*(x3024)*(x3036)))+(((IkReal(-1.00000000000000))*(x3024)*(x3034)))+(((cj7)*(x3035))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3037)))+(((x3028)*(x3031)))+(((IkReal(-1.00000000000000))*(x3027)*(x3034)))+(((IkReal(-1.00000000000000))*(x3027)*(x3036)))+(((IkReal(-1.00000000000000))*(x3024)*(x3026)))+(x3032)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3024)))+(((sj7)*(x3035))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3038=((cj7)*(sj5));
IkReal x3039=((r21)*(sj8));
IkReal x3040=((cj5)*(cj7));
IkReal x3041=((cj8)*(r20));
IkReal x3042=((sj5)*(sj7));
IkReal x3043=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst62)*(((((cj5)*(sj7)*(x3039)))+(((IkReal(-1.00000000000000))*(x3038)*(x3039)))+(((r22)*(x3040)))+(((IkReal(-1.00000000000000))*(x3041)*(x3043)))+(((r22)*(x3042)))+(((x3038)*(x3041))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*(((((IkReal(-1.00000000000000))*(x3041)*(x3042)))+(((x3039)*(x3042)))+(((r22)*(x3038)))+(((x3039)*(x3040)))+(((IkReal(-1.00000000000000))*(x3040)*(x3041)))+(((IkReal(-1.00000000000000))*(r22)*(x3043))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst62)*(((((cj5)*(sj7)*(x3039)))+(((IkReal(-1.00000000000000))*(x3038)*(x3039)))+(((r22)*(x3040)))+(((IkReal(-1.00000000000000))*(x3041)*(x3043)))+(((r22)*(x3042)))+(((x3038)*(x3041)))))), ((gconst62)*(((((IkReal(-1.00000000000000))*(x3041)*(x3042)))+(((x3039)*(x3042)))+(((r22)*(x3038)))+(((x3039)*(x3040)))+(((IkReal(-1.00000000000000))*(x3040)*(x3041)))+(((IkReal(-1.00000000000000))*(r22)*(x3043)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3044=IKcos(j4);
IkReal x3045=IKsin(j4);
IkReal x3046=((IkReal(1.00000000000000))*(cj7));
IkReal x3047=((cj8)*(r20));
IkReal x3048=((cj3)*(r02));
IkReal x3049=((IkReal(1.00000000000000))*(sj7));
IkReal x3050=((sj3)*(sj7));
IkReal x3051=((r21)*(sj8));
IkReal x3052=((IkReal(1.00000000000000))*(cj5));
IkReal x3053=((cj8)*(r10));
IkReal x3054=((sj5)*(x3045));
IkReal x3055=((sj5)*(x3044));
IkReal x3056=((r11)*(sj3)*(sj8));
IkReal x3057=((cj3)*(cj8)*(r00));
IkReal x3058=((cj3)*(r01)*(sj8));
IkReal x3059=((x3044)*(x3052));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x3049)))+(((IkReal(-1.00000000000000))*(x3059)))+(((IkReal(-1.00000000000000))*(x3046)*(x3047)))+(x3054)+(((cj7)*(x3051))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3045)*(x3052)))+(((cj7)*(r22)))+(((sj7)*(x3051)))+(((IkReal(-1.00000000000000))*(x3047)*(x3049)))+(((IkReal(-1.00000000000000))*(x3055))));
evalcond[2]=((((r12)*(x3050)))+(((cj7)*(sj3)*(x3053)))+(((IkReal(-1.00000000000000))*(x3046)*(x3056)))+(((cj5)*(x3045)))+(x3055)+(((sj7)*(x3048)))+(((IkReal(-1.00000000000000))*(x3046)*(x3058)))+(((cj7)*(x3057))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3046)*(x3048)))+(((IkReal(-1.00000000000000))*(x3049)*(x3058)))+(((sj7)*(x3057)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3046)))+(((IkReal(-1.00000000000000))*(x3059)))+(((IkReal(-1.00000000000000))*(x3049)*(x3056)))+(((x3050)*(x3053)))+(x3054));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3060=((IkReal(4.00000000000000))*(sj7));
IkReal x3061=((npy)*(sj8));
IkReal x3062=((IkReal(4.00000000000000))*(cj7));
IkReal x3063=((cj8)*(npx));
if( IKabs(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(sj6)))+(((IkReal(0.0800000000000000))*(cj6)))+(((x3060)*(x3061)))+(((npz)*(x3062)))+(((IkReal(0.320000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x3060)*(x3063))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((npz)*(x3060)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x3061)*(x3062)))+(((x3062)*(x3063))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(sj6)))+(((IkReal(0.0800000000000000))*(cj6)))+(((x3060)*(x3061)))+(((npz)*(x3062)))+(((IkReal(0.320000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x3060)*(x3063)))))))+IKsqr(((IkReal(-0.920000000000000))+(((npz)*(x3060)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x3061)*(x3062)))+(((x3062)*(x3063)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(0.320000000000000))*(sj6)))+(((IkReal(0.0800000000000000))*(cj6)))+(((x3060)*(x3061)))+(((npz)*(x3062)))+(((IkReal(0.320000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x3060)*(x3063)))))), ((IkReal(-0.920000000000000))+(((npz)*(x3060)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x3061)*(x3062)))+(((x3062)*(x3063)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x3064=IKsin(j5);
IkReal x3065=((IkReal(1.00000000000000))*(sj7));
IkReal x3066=((npy)*(sj8));
IkReal x3067=((cj8)*(npx));
IkReal x3068=((IkReal(0.250000000000000))*(x3064));
evalcond[0]=((((IkReal(0.0800000000000000))*(cj6)))+(((npx)*(sj8)))+(((sj6)*(x3068)))+(((cj8)*(npy)))+(((IkReal(-0.0200000000000000))*(sj6))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x3067)))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(npz)*(x3065)))+(((cj7)*(x3066)))+(((IkReal(0.0800000000000000))*(cj7))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3065)*(x3067)))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(cj6)*(x3068)))+(((IkReal(0.0800000000000000))*(sj6)))+(((IkReal(0.0200000000000000))*(cj6)))+(((IkReal(0.0800000000000000))*(sj7)))+(((sj7)*(x3066))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5))))));
dummyeval[0]=((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3069=((IkReal(1.00000000000000))*(sj7));
IkReal x3070=((IkReal(1.00000000000000))*(cj3));
IkReal x3071=((cj7)*(r02));
IkReal x3072=((cj3)*(sj7));
IkReal x3073=((cj8)*(r00));
IkReal x3074=((cj8)*(npx));
IkReal x3075=((r01)*(sj3));
IkReal x3076=((cj7)*(sj8));
IkReal x3077=((r11)*(sj8));
IkReal x3078=((IkReal(1.00000000000000))*(cj7));
IkReal x3079=((sj7)*(sj8));
IkReal x3080=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x3069)))+(((IkReal(-1.00000000000000))*(x3074)*(x3078)))+(((npy)*(x3076)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x3070)))+(((r00)*(sj3)*(sj8)))+(((cj8)*(x3075)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x3070))));
evalcond[4]=((((cj7)*(r22)))+(((r21)*(x3079)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x3069))));
evalcond[5]=((IkReal(0.0800000000000000))+(((cj7)*(npz)))+(((npy)*(x3079)))+(((IkReal(-1.00000000000000))*(x3069)*(x3074)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[6]=((((x3075)*(x3076)))+(((cj3)*(cj7)*(x3080)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x3069)))+(((r12)*(x3072)))+(((IkReal(-1.00000000000000))*(r11)*(x3070)*(x3076)))+(((IkReal(-1.00000000000000))*(sj3)*(x3073)*(x3078))));
evalcond[7]=((IkReal(1.00000000000000))+(((x3075)*(x3079)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3070)))+(((x3072)*(x3080)))+(((IkReal(-1.00000000000000))*(cj3)*(x3069)*(x3077)))+(((sj3)*(x3071)))+(((IkReal(-1.00000000000000))*(sj3)*(x3069)*(x3073))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj3)*(x3069)*(x3077)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3078)))+(((x3072)*(x3073)))+(((IkReal(-1.00000000000000))*(x3070)*(x3071)))+(((sj3)*(sj7)*(x3080)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x3069))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3081=((cj8)*(sj5));
IkReal x3082=((cj3)*(r01));
IkReal x3083=((IkReal(1.00000000000000))*(cj5));
IkReal x3084=((r11)*(sj3));
IkReal x3085=((sj5)*(sj8));
IkReal x3086=((r10)*(sj3));
IkReal x3087=((cj3)*(r00)*(sj8));
if( IKabs(((gconst49)*(((((x3081)*(x3082)))+(((cj3)*(r00)*(x3085)))+(((cj5)*(cj8)*(r21)))+(((x3085)*(x3086)))+(((x3081)*(x3084)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((r20)*(x3085)))+(((IkReal(-1.00000000000000))*(x3083)*(x3087)))+(((IkReal(-1.00000000000000))*(cj8)*(x3083)*(x3084)))+(((IkReal(-1.00000000000000))*(sj8)*(x3083)*(x3086)))+(((r21)*(x3081)))+(((IkReal(-1.00000000000000))*(cj8)*(x3082)*(x3083))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst49)*(((((x3081)*(x3082)))+(((cj3)*(r00)*(x3085)))+(((cj5)*(cj8)*(r21)))+(((x3085)*(x3086)))+(((x3081)*(x3084)))+(((cj5)*(r20)*(sj8)))))), ((gconst49)*(((((r20)*(x3085)))+(((IkReal(-1.00000000000000))*(x3083)*(x3087)))+(((IkReal(-1.00000000000000))*(cj8)*(x3083)*(x3084)))+(((IkReal(-1.00000000000000))*(sj8)*(x3083)*(x3086)))+(((r21)*(x3081)))+(((IkReal(-1.00000000000000))*(cj8)*(x3082)*(x3083)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3088=IKsin(j4);
IkReal x3089=IKcos(j4);
IkReal x3090=((IkReal(1.00000000000000))*(cj8));
IkReal x3091=((cj3)*(r01));
IkReal x3092=((cj3)*(r00));
IkReal x3093=((cj7)*(cj8));
IkReal x3094=((IkReal(1.00000000000000))*(cj5));
IkReal x3095=((IkReal(1.00000000000000))*(sj8));
IkReal x3096=((r11)*(sj3));
IkReal x3097=((r10)*(sj3));
IkReal x3098=((sj5)*(x3088));
IkReal x3099=((sj5)*(x3089));
IkReal x3100=((x3089)*(x3094));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x3088)*(x3094)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x3099))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3100)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3090)))+(x3098));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3100)))+(((IkReal(-1.00000000000000))*(x3095)*(x3097)))+(((IkReal(-1.00000000000000))*(x3090)*(x3091)))+(x3098)+(((IkReal(-1.00000000000000))*(x3090)*(x3096)))+(((IkReal(-1.00000000000000))*(x3092)*(x3095))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3095)*(x3096)))+(((cj5)*(x3088)))+(((x3093)*(x3097)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3091)*(x3095)))+(x3099)+(((x3092)*(x3093))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3101=((IkReal(1.00000000000000))*(cj5));
IkReal x3102=((r22)*(sj7));
IkReal x3103=((cj8)*(sj5));
IkReal x3104=((cj7)*(r20));
IkReal x3105=((r20)*(sj8));
IkReal x3106=((cj7)*(r21)*(sj8));
if( IKabs(((gconst48)*(((((sj5)*(x3102)))+(((IkReal(-1.00000000000000))*(sj5)*(x3106)))+(((cj5)*(cj8)*(r21)))+(((cj5)*(x3105)))+(((x3103)*(x3104))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((r21)*(x3103)))+(((IkReal(-1.00000000000000))*(x3101)*(x3102)))+(((sj5)*(x3105)))+(((cj5)*(x3106)))+(((IkReal(-1.00000000000000))*(cj8)*(x3101)*(x3104))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst48)*(((((sj5)*(x3102)))+(((IkReal(-1.00000000000000))*(sj5)*(x3106)))+(((cj5)*(cj8)*(r21)))+(((cj5)*(x3105)))+(((x3103)*(x3104)))))), ((gconst48)*(((((r21)*(x3103)))+(((IkReal(-1.00000000000000))*(x3101)*(x3102)))+(((sj5)*(x3105)))+(((cj5)*(x3106)))+(((IkReal(-1.00000000000000))*(cj8)*(x3101)*(x3104)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3107=IKsin(j4);
IkReal x3108=IKcos(j4);
IkReal x3109=((IkReal(1.00000000000000))*(cj8));
IkReal x3110=((cj3)*(r01));
IkReal x3111=((cj3)*(r00));
IkReal x3112=((cj7)*(cj8));
IkReal x3113=((IkReal(1.00000000000000))*(cj5));
IkReal x3114=((IkReal(1.00000000000000))*(sj8));
IkReal x3115=((r11)*(sj3));
IkReal x3116=((r10)*(sj3));
IkReal x3117=((sj5)*(x3107));
IkReal x3118=((sj5)*(x3108));
IkReal x3119=((x3108)*(x3113));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3107)*(x3113)))+(((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x3118))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3119)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3109)))+(x3117)+(((IkReal(-1.00000000000000))*(r22)*(sj7))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3109)*(x3110)))+(((IkReal(-1.00000000000000))*(x3119)))+(x3117)+(((IkReal(-1.00000000000000))*(x3109)*(x3115)))+(((IkReal(-1.00000000000000))*(x3114)*(x3116)))+(((IkReal(-1.00000000000000))*(x3111)*(x3114))));
evalcond[3]=((((cj5)*(x3107)))+(((cj3)*(r02)*(sj7)))+(x3118)+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3114)*(x3115)))+(((x3112)*(x3116)))+(((IkReal(-1.00000000000000))*(cj7)*(x3110)*(x3114)))+(((x3111)*(x3112))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3120=((IkReal(1.00000000000000))*(sj7));
IkReal x3121=((IkReal(1.00000000000000))*(cj3));
IkReal x3122=((cj7)*(r02));
IkReal x3123=((cj3)*(sj7));
IkReal x3124=((cj8)*(r00));
IkReal x3125=((cj8)*(npx));
IkReal x3126=((r01)*(sj3));
IkReal x3127=((cj7)*(sj8));
IkReal x3128=((r11)*(sj8));
IkReal x3129=((IkReal(1.00000000000000))*(cj7));
IkReal x3130=((sj7)*(sj8));
IkReal x3131=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0200000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3120)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x3125)*(x3129)))+(((npy)*(x3127)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x3121)))+(((cj8)*(x3126)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x3121))));
evalcond[4]=((((r21)*(x3130)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x3120))));
evalcond[5]=((IkReal(-0.0800000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x3120)*(x3125)))+(((npy)*(x3130)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(x3121)*(x3127)))+(((cj3)*(cj7)*(x3131)))+(((IkReal(-1.00000000000000))*(sj3)*(x3124)*(x3129)))+(((r12)*(x3123)))+(((x3126)*(x3127)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x3120))));
evalcond[7]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj3)*(x3120)*(x3124)))+(((x3123)*(x3131)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3121)))+(((sj3)*(x3122)))+(((x3126)*(x3130)))+(((IkReal(-1.00000000000000))*(cj3)*(x3120)*(x3128))));
evalcond[8]=((((x3123)*(x3124)))+(((IkReal(-1.00000000000000))*(x3121)*(x3122)))+(((sj3)*(sj7)*(x3131)))+(((IkReal(-1.00000000000000))*(sj3)*(x3120)*(x3128)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x3120)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3129))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3132=((IkReal(1.00000000000000))*(sj5));
IkReal x3133=((r20)*(sj8));
IkReal x3134=((cj5)*(cj8));
IkReal x3135=((r11)*(sj3));
IkReal x3136=((cj3)*(r01));
IkReal x3137=((cj3)*(r00)*(sj8));
IkReal x3138=((r10)*(sj3)*(sj8));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(cj5)*(x3133)))+(((IkReal(-1.00000000000000))*(cj8)*(x3132)*(x3135)))+(((IkReal(-1.00000000000000))*(x3132)*(x3137)))+(((IkReal(-1.00000000000000))*(r21)*(x3134)))+(((IkReal(-1.00000000000000))*(x3132)*(x3138)))+(((IkReal(-1.00000000000000))*(cj8)*(x3132)*(x3136))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x3132)*(x3133)))+(((x3134)*(x3136)))+(((x3134)*(x3135)))+(((cj5)*(x3138)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x3132)))+(((cj5)*(x3137))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(cj5)*(x3133)))+(((IkReal(-1.00000000000000))*(cj8)*(x3132)*(x3135)))+(((IkReal(-1.00000000000000))*(x3132)*(x3137)))+(((IkReal(-1.00000000000000))*(r21)*(x3134)))+(((IkReal(-1.00000000000000))*(x3132)*(x3138)))+(((IkReal(-1.00000000000000))*(cj8)*(x3132)*(x3136)))))), ((gconst51)*(((((IkReal(-1.00000000000000))*(x3132)*(x3133)))+(((x3134)*(x3136)))+(((x3134)*(x3135)))+(((cj5)*(x3138)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x3132)))+(((cj5)*(x3137)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3139=IKsin(j4);
IkReal x3140=IKcos(j4);
IkReal x3141=((IkReal(1.00000000000000))*(cj8));
IkReal x3142=((cj3)*(r01));
IkReal x3143=((cj3)*(r00));
IkReal x3144=((cj7)*(cj8));
IkReal x3145=((r11)*(sj3));
IkReal x3146=((IkReal(1.00000000000000))*(sj8));
IkReal x3147=((r10)*(sj3));
IkReal x3148=((cj5)*(x3139));
IkReal x3149=((sj5)*(x3140));
IkReal x3150=((cj5)*(x3140));
IkReal x3151=((sj5)*(x3139));
IkReal x3152=((x3148)+(x3149));
evalcond[0]=((x3152)+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x3151)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3141)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x3150))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3141)*(x3142)))+(x3150)+(((IkReal(-1.00000000000000))*(x3143)*(x3146)))+(((IkReal(-1.00000000000000))*(x3141)*(x3145)))+(((IkReal(-1.00000000000000))*(x3151)))+(((IkReal(-1.00000000000000))*(x3146)*(x3147))));
evalcond[3]=((x3152)+(((cj3)*(r02)*(sj7)))+(((r12)*(sj3)*(sj7)))+(((x3143)*(x3144)))+(((IkReal(-1.00000000000000))*(cj7)*(x3142)*(x3146)))+(((x3144)*(x3147)))+(((IkReal(-1.00000000000000))*(cj7)*(x3145)*(x3146))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3153=((r22)*(sj7));
IkReal x3154=((cj8)*(sj5));
IkReal x3155=((sj5)*(sj8));
IkReal x3156=((cj7)*(r20));
IkReal x3157=((cj5)*(cj8));
IkReal x3158=((cj7)*(r21));
IkReal x3159=((cj5)*(sj8));
if( IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(sj5)*(x3153)))+(((r21)*(x3157)))+(((IkReal(-1.00000000000000))*(x3154)*(x3156)))+(((r20)*(x3159)))+(((x3155)*(x3158))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((r20)*(x3155)))+(((r21)*(x3154)))+(((x3156)*(x3157)))+(((cj5)*(x3153)))+(((IkReal(-1.00000000000000))*(x3158)*(x3159))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst50)*(((((IkReal(-1.00000000000000))*(sj5)*(x3153)))+(((r21)*(x3157)))+(((IkReal(-1.00000000000000))*(x3154)*(x3156)))+(((r20)*(x3159)))+(((x3155)*(x3158)))))), ((gconst50)*(((((r20)*(x3155)))+(((r21)*(x3154)))+(((x3156)*(x3157)))+(((cj5)*(x3153)))+(((IkReal(-1.00000000000000))*(x3158)*(x3159)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3160=IKsin(j4);
IkReal x3161=IKcos(j4);
IkReal x3162=((IkReal(1.00000000000000))*(cj8));
IkReal x3163=((cj3)*(r01));
IkReal x3164=((cj3)*(r00));
IkReal x3165=((cj7)*(cj8));
IkReal x3166=((r11)*(sj3));
IkReal x3167=((IkReal(1.00000000000000))*(sj8));
IkReal x3168=((r10)*(sj3));
IkReal x3169=((cj5)*(x3160));
IkReal x3170=((sj5)*(x3161));
IkReal x3171=((cj5)*(x3161));
IkReal x3172=((sj5)*(x3160));
IkReal x3173=((x3170)+(x3169));
evalcond[0]=((((cj8)*(r21)))+(x3173)+(((r20)*(sj8))));
evalcond[1]=((x3172)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3162)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x3171))));
evalcond[2]=((x3171)+(((IkReal(-1.00000000000000))*(x3167)*(x3168)))+(((IkReal(-1.00000000000000))*(x3162)*(x3163)))+(((IkReal(-1.00000000000000))*(x3172)))+(((IkReal(-1.00000000000000))*(x3162)*(x3166)))+(((IkReal(-1.00000000000000))*(x3164)*(x3167))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3166)*(x3167)))+(x3173)+(((x3164)*(x3165)))+(((r12)*(sj3)*(sj7)))+(((x3165)*(x3168)))+(((IkReal(-1.00000000000000))*(cj7)*(x3163)*(x3167))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3174=((cj3)*(cj8));
IkReal x3175=((IkReal(1.00000000000000))*(sj7));
IkReal x3176=((cj8)*(npx));
IkReal x3177=((r01)*(sj3));
IkReal x3178=((npy)*(sj8));
IkReal x3179=((r02)*(sj3));
IkReal x3180=((IkReal(1.00000000000000))*(r11));
IkReal x3181=((cj3)*(r12));
IkReal x3182=((IkReal(1.00000000000000))*(cj7));
IkReal x3183=((sj3)*(sj8));
IkReal x3184=((IkReal(1.00000000000000))*(cj3)*(sj8));
IkReal x3185=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(x3176)*(x3182)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x3175)))+(((cj7)*(x3178)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x3184)))+(((cj8)*(x3177)))+(((IkReal(-1.00000000000000))*(x3174)*(x3180)))+(((r00)*(x3183))));
evalcond[5]=((IkReal(0.0200000000000000))+(((IkReal(-1.00000000000000))*(x3175)*(x3176)))+(((cj7)*(npz)))+(((sj7)*(x3178)))+(((IkReal(-0.250000000000000))*(sj5)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r01)*(x3174)))+(((IkReal(-1.00000000000000))*(cj8)*(sj3)*(x3180)))+(((IkReal(-1.00000000000000))*(r10)*(x3183)))+(((IkReal(-1.00000000000000))*(r00)*(x3184))));
evalcond[7]=((((cj7)*(r10)*(x3174)))+(((cj7)*(sj8)*(x3177)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x3180)))+(((IkReal(-1.00000000000000))*(x3182)*(x3185)))+(((IkReal(-1.00000000000000))*(x3175)*(x3179)))+(((sj7)*(x3181))));
evalcond[8]=((((sj7)*(sj8)*(x3177)))+(((IkReal(-1.00000000000000))*(x3181)*(x3182)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x3175)))+(((r10)*(sj7)*(x3174)))+(((cj7)*(x3179)))+(((IkReal(-1.00000000000000))*(x3175)*(x3185))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3186=((cj3)*(cj5));
IkReal x3187=((r02)*(sj7));
IkReal x3188=((cj8)*(r00));
IkReal x3189=((cj5)*(sj3));
IkReal x3190=((cj7)*(cj8));
IkReal x3191=((sj5)*(sj7));
IkReal x3192=((sj3)*(sj5));
IkReal x3193=((cj3)*(cj7)*(sj5));
IkReal x3194=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst53)*(((((r12)*(sj7)*(x3189)))+(((IkReal(-1.00000000000000))*(r11)*(x3189)*(x3194)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3190)))+(((IkReal(-1.00000000000000))*(r22)*(x3191)))+(((IkReal(-1.00000000000000))*(r01)*(x3186)*(x3194)))+(((x3186)*(x3187)))+(((cj7)*(x3186)*(x3188)))+(((r10)*(x3189)*(x3190)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((r10)*(x3190)*(x3192)))+(((IkReal(-1.00000000000000))*(r11)*(x3192)*(x3194)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3193)))+(((cj5)*(r20)*(x3190)))+(((x3188)*(x3193)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3194)))+(((r12)*(sj3)*(x3191)))+(((cj3)*(sj5)*(x3187))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst53)*(((((r12)*(sj7)*(x3189)))+(((IkReal(-1.00000000000000))*(r11)*(x3189)*(x3194)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3190)))+(((IkReal(-1.00000000000000))*(r22)*(x3191)))+(((IkReal(-1.00000000000000))*(r01)*(x3186)*(x3194)))+(((x3186)*(x3187)))+(((cj7)*(x3186)*(x3188)))+(((r10)*(x3189)*(x3190)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst53)*(((((r10)*(x3190)*(x3192)))+(((IkReal(-1.00000000000000))*(r11)*(x3192)*(x3194)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3193)))+(((cj5)*(r20)*(x3190)))+(((x3188)*(x3193)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3194)))+(((r12)*(sj3)*(x3191)))+(((cj3)*(sj5)*(x3187)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3195=IKsin(j4);
IkReal x3196=IKcos(j4);
IkReal x3197=((IkReal(1.00000000000000))*(cj7));
IkReal x3198=((cj8)*(r20));
IkReal x3199=((cj3)*(r02));
IkReal x3200=((IkReal(1.00000000000000))*(sj7));
IkReal x3201=((sj3)*(sj7));
IkReal x3202=((r21)*(sj8));
IkReal x3203=((cj8)*(r10));
IkReal x3204=((cj5)*(x3195));
IkReal x3205=((sj5)*(x3196));
IkReal x3206=((r11)*(sj3)*(sj8));
IkReal x3207=((cj3)*(cj8)*(r00));
IkReal x3208=((cj5)*(x3196));
IkReal x3209=((cj3)*(r01)*(sj8));
IkReal x3210=((sj5)*(x3195));
IkReal x3211=((x3205)+(x3204));
evalcond[0]=((x3210)+(((cj7)*(x3202)))+(((IkReal(-1.00000000000000))*(x3208)))+(((IkReal(-1.00000000000000))*(x3197)*(x3198)))+(((IkReal(-1.00000000000000))*(r22)*(x3200))));
evalcond[1]=((x3211)+(((cj7)*(r22)))+(((sj7)*(x3202)))+(((IkReal(-1.00000000000000))*(x3198)*(x3200))));
evalcond[2]=((x3211)+(((cj7)*(sj3)*(x3203)))+(((IkReal(-1.00000000000000))*(x3197)*(x3206)))+(((cj7)*(x3207)))+(((IkReal(-1.00000000000000))*(x3197)*(x3209)))+(((r12)*(x3201)))+(((sj7)*(x3199))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3210)))+(((x3201)*(x3203)))+(((sj7)*(x3207)))+(((IkReal(-1.00000000000000))*(x3197)*(x3199)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3197)))+(x3208)+(((IkReal(-1.00000000000000))*(x3200)*(x3206)))+(((IkReal(-1.00000000000000))*(x3200)*(x3209))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3212=((sj5)*(sj7));
IkReal x3213=((r21)*(sj8));
IkReal x3214=((cj7)*(sj5));
IkReal x3215=((cj8)*(r20));
IkReal x3216=((cj5)*(cj7));
IkReal x3217=((cj5)*(sj7));
if( IKabs(((gconst52)*(((((r22)*(x3216)))+(((x3213)*(x3214)))+(((IkReal(-1.00000000000000))*(x3214)*(x3215)))+(((IkReal(-1.00000000000000))*(x3215)*(x3217)))+(((x3213)*(x3217)))+(((IkReal(-1.00000000000000))*(r22)*(x3212))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((r22)*(x3217)))+(((x3212)*(x3213)))+(((IkReal(-1.00000000000000))*(x3212)*(x3215)))+(((x3215)*(x3216)))+(((r22)*(x3214)))+(((IkReal(-1.00000000000000))*(x3213)*(x3216))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst52)*(((((r22)*(x3216)))+(((x3213)*(x3214)))+(((IkReal(-1.00000000000000))*(x3214)*(x3215)))+(((IkReal(-1.00000000000000))*(x3215)*(x3217)))+(((x3213)*(x3217)))+(((IkReal(-1.00000000000000))*(r22)*(x3212)))))), ((gconst52)*(((((r22)*(x3217)))+(((x3212)*(x3213)))+(((IkReal(-1.00000000000000))*(x3212)*(x3215)))+(((x3215)*(x3216)))+(((r22)*(x3214)))+(((IkReal(-1.00000000000000))*(x3213)*(x3216)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3218=IKsin(j4);
IkReal x3219=IKcos(j4);
IkReal x3220=((IkReal(1.00000000000000))*(cj7));
IkReal x3221=((cj8)*(r20));
IkReal x3222=((cj3)*(r02));
IkReal x3223=((IkReal(1.00000000000000))*(sj7));
IkReal x3224=((sj3)*(sj7));
IkReal x3225=((r21)*(sj8));
IkReal x3226=((cj8)*(r10));
IkReal x3227=((cj5)*(x3218));
IkReal x3228=((sj5)*(x3219));
IkReal x3229=((r11)*(sj3)*(sj8));
IkReal x3230=((cj3)*(cj8)*(r00));
IkReal x3231=((cj5)*(x3219));
IkReal x3232=((cj3)*(r01)*(sj8));
IkReal x3233=((sj5)*(x3218));
IkReal x3234=((x3228)+(x3227));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3220)*(x3221)))+(x3233)+(((IkReal(-1.00000000000000))*(x3231)))+(((cj7)*(x3225)))+(((IkReal(-1.00000000000000))*(r22)*(x3223))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3221)*(x3223)))+(((cj7)*(r22)))+(((sj7)*(x3225)))+(x3234));
evalcond[2]=((((cj7)*(x3230)))+(x3234)+(((cj7)*(sj3)*(x3226)))+(((r12)*(x3224)))+(((IkReal(-1.00000000000000))*(x3220)*(x3232)))+(((sj7)*(x3222)))+(((IkReal(-1.00000000000000))*(x3220)*(x3229))));
evalcond[3]=((((x3224)*(x3226)))+(((sj7)*(x3230)))+(x3231)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3220)))+(((IkReal(-1.00000000000000))*(x3233)))+(((IkReal(-1.00000000000000))*(x3220)*(x3222)))+(((IkReal(-1.00000000000000))*(x3223)*(x3232)))+(((IkReal(-1.00000000000000))*(x3223)*(x3229))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3235=((cj3)*(cj8));
IkReal x3236=((IkReal(1.00000000000000))*(sj7));
IkReal x3237=((cj8)*(npx));
IkReal x3238=((r01)*(sj3));
IkReal x3239=((npy)*(sj8));
IkReal x3240=((r02)*(sj3));
IkReal x3241=((IkReal(1.00000000000000))*(r11));
IkReal x3242=((cj3)*(r12));
IkReal x3243=((IkReal(1.00000000000000))*(cj7));
IkReal x3244=((sj3)*(sj8));
IkReal x3245=((IkReal(1.00000000000000))*(cj3)*(sj8));
IkReal x3246=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3236)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x3237)*(x3243)))+(((cj7)*(x3239)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(-1.00000000000000))+(((cj8)*(x3238)))+(((r00)*(x3244)))+(((IkReal(-1.00000000000000))*(x3235)*(x3241)))+(((IkReal(-1.00000000000000))*(r10)*(x3245))));
evalcond[5]=((IkReal(-0.0200000000000000))+(((sj7)*(x3239)))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x3236)*(x3237)))+(((IkReal(0.0800000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r01)*(x3235)))+(((IkReal(-1.00000000000000))*(r10)*(x3244)))+(((IkReal(-1.00000000000000))*(r00)*(x3245)))+(((IkReal(-1.00000000000000))*(cj8)*(sj3)*(x3241))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x3236)*(x3240)))+(((cj7)*(sj8)*(x3238)))+(((IkReal(-1.00000000000000))*(x3243)*(x3246)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x3241)))+(((cj7)*(r10)*(x3235)))+(((sj7)*(x3242))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x3236)*(x3246)))+(((sj7)*(sj8)*(x3238)))+(((r10)*(sj7)*(x3235)))+(((cj7)*(x3240)))+(((IkReal(-1.00000000000000))*(x3242)*(x3243)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x3236))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3247=((cj3)*(cj5));
IkReal x3248=((r02)*(sj7));
IkReal x3249=((cj8)*(r00));
IkReal x3250=((cj5)*(sj3));
IkReal x3251=((cj7)*(cj8));
IkReal x3252=((sj5)*(sj7));
IkReal x3253=((sj3)*(sj5));
IkReal x3254=((cj3)*(cj7)*(sj5));
IkReal x3255=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst55)*(((((r12)*(sj7)*(x3250)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3251)))+(((IkReal(-1.00000000000000))*(r22)*(x3252)))+(((r10)*(x3250)*(x3251)))+(((x3247)*(x3248)))+(((cj7)*(x3247)*(x3249)))+(((IkReal(-1.00000000000000))*(r11)*(x3250)*(x3255)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r01)*(x3247)*(x3255))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((cj3)*(sj5)*(x3248)))+(((x3249)*(x3254)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3254)))+(((cj5)*(r20)*(x3251)))+(((IkReal(-1.00000000000000))*(r11)*(x3253)*(x3255)))+(((r10)*(x3251)*(x3253)))+(((r12)*(sj3)*(x3252)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3255)))+(((cj5)*(r22)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst55)*(((((r12)*(sj7)*(x3250)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3251)))+(((IkReal(-1.00000000000000))*(r22)*(x3252)))+(((r10)*(x3250)*(x3251)))+(((x3247)*(x3248)))+(((cj7)*(x3247)*(x3249)))+(((IkReal(-1.00000000000000))*(r11)*(x3250)*(x3255)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r01)*(x3247)*(x3255)))))), ((gconst55)*(((((cj3)*(sj5)*(x3248)))+(((x3249)*(x3254)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3254)))+(((cj5)*(r20)*(x3251)))+(((IkReal(-1.00000000000000))*(r11)*(x3253)*(x3255)))+(((r10)*(x3251)*(x3253)))+(((r12)*(sj3)*(x3252)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3255)))+(((cj5)*(r22)*(sj7)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3256=IKcos(j4);
IkReal x3257=IKsin(j4);
IkReal x3258=((IkReal(1.00000000000000))*(cj7));
IkReal x3259=((cj8)*(r20));
IkReal x3260=((cj3)*(r02));
IkReal x3261=((IkReal(1.00000000000000))*(sj7));
IkReal x3262=((sj3)*(sj7));
IkReal x3263=((r21)*(sj8));
IkReal x3264=((IkReal(1.00000000000000))*(cj5));
IkReal x3265=((cj8)*(r10));
IkReal x3266=((sj5)*(x3257));
IkReal x3267=((sj5)*(x3256));
IkReal x3268=((r11)*(sj3)*(sj8));
IkReal x3269=((cj3)*(cj8)*(r00));
IkReal x3270=((cj3)*(r01)*(sj8));
IkReal x3271=((x3256)*(x3264));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3271)))+(((IkReal(-1.00000000000000))*(r22)*(x3261)))+(((cj7)*(x3263)))+(x3266)+(((IkReal(-1.00000000000000))*(x3258)*(x3259))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3267)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x3259)*(x3261)))+(((sj7)*(x3263)))+(((IkReal(-1.00000000000000))*(x3257)*(x3264))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3258)*(x3270)))+(((IkReal(-1.00000000000000))*(x3258)*(x3268)))+(((cj7)*(x3269)))+(((cj7)*(sj3)*(x3265)))+(((cj5)*(x3257)))+(x3267)+(((sj7)*(x3260)))+(((r12)*(x3262))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3271)))+(((IkReal(-1.00000000000000))*(x3261)*(x3270)))+(((sj7)*(x3269)))+(((IkReal(-1.00000000000000))*(x3261)*(x3268)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3258)))+(((x3262)*(x3265)))+(x3266)+(((IkReal(-1.00000000000000))*(x3258)*(x3260))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3272=((cj7)*(sj5));
IkReal x3273=((r21)*(sj8));
IkReal x3274=((cj5)*(cj7));
IkReal x3275=((cj8)*(r20));
IkReal x3276=((sj5)*(sj7));
IkReal x3277=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst54)*(((((r22)*(x3274)))+(((IkReal(-1.00000000000000))*(x3272)*(x3273)))+(((IkReal(-1.00000000000000))*(x3275)*(x3277)))+(((x3272)*(x3275)))+(((cj5)*(sj7)*(x3273)))+(((r22)*(x3276))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((x3273)*(x3274)))+(((r22)*(x3272)))+(((IkReal(-1.00000000000000))*(x3274)*(x3275)))+(((IkReal(-1.00000000000000))*(r22)*(x3277)))+(((IkReal(-1.00000000000000))*(x3275)*(x3276)))+(((x3273)*(x3276))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst54)*(((((r22)*(x3274)))+(((IkReal(-1.00000000000000))*(x3272)*(x3273)))+(((IkReal(-1.00000000000000))*(x3275)*(x3277)))+(((x3272)*(x3275)))+(((cj5)*(sj7)*(x3273)))+(((r22)*(x3276)))))), ((gconst54)*(((((x3273)*(x3274)))+(((r22)*(x3272)))+(((IkReal(-1.00000000000000))*(x3274)*(x3275)))+(((IkReal(-1.00000000000000))*(r22)*(x3277)))+(((IkReal(-1.00000000000000))*(x3275)*(x3276)))+(((x3273)*(x3276)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3278=IKcos(j4);
IkReal x3279=IKsin(j4);
IkReal x3280=((IkReal(1.00000000000000))*(cj7));
IkReal x3281=((cj8)*(r20));
IkReal x3282=((cj3)*(r02));
IkReal x3283=((IkReal(1.00000000000000))*(sj7));
IkReal x3284=((sj3)*(sj7));
IkReal x3285=((r21)*(sj8));
IkReal x3286=((IkReal(1.00000000000000))*(cj5));
IkReal x3287=((cj8)*(r10));
IkReal x3288=((sj5)*(x3279));
IkReal x3289=((sj5)*(x3278));
IkReal x3290=((r11)*(sj3)*(sj8));
IkReal x3291=((cj3)*(cj8)*(r00));
IkReal x3292=((cj3)*(r01)*(sj8));
IkReal x3293=((x3278)*(x3286));
evalcond[0]=((((cj7)*(x3285)))+(((IkReal(-1.00000000000000))*(x3280)*(x3281)))+(((IkReal(-1.00000000000000))*(r22)*(x3283)))+(x3288)+(((IkReal(-1.00000000000000))*(x3293))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3279)*(x3286)))+(((IkReal(-1.00000000000000))*(x3289)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x3281)*(x3283)))+(((sj7)*(x3285))));
evalcond[2]=((((cj7)*(sj3)*(x3287)))+(((IkReal(-1.00000000000000))*(x3280)*(x3290)))+(((cj5)*(x3279)))+(x3289)+(((r12)*(x3284)))+(((IkReal(-1.00000000000000))*(x3280)*(x3292)))+(((cj7)*(x3291)))+(((sj7)*(x3282))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3280)))+(((IkReal(-1.00000000000000))*(x3283)*(x3290)))+(((IkReal(-1.00000000000000))*(x3280)*(x3282)))+(x3288)+(((IkReal(-1.00000000000000))*(x3293)))+(((IkReal(-1.00000000000000))*(x3283)*(x3292)))+(((sj7)*(x3291)))+(((x3284)*(x3287))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3294=((r21)*(sj8));
IkReal x3295=((IkReal(1.00000000000000))*(r22));
IkReal x3296=((cj5)*(sj7));
IkReal x3297=((cj6)*(cj7));
IkReal x3298=((sj5)*(sj7));
IkReal x3299=((cj5)*(cj8)*(r20));
IkReal x3300=((IkReal(1.00000000000000))*(x3297));
IkReal x3301=((cj8)*(r20)*(sj5));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x3295)))+(((x3297)*(x3301)))+(((IkReal(-1.00000000000000))*(x3294)*(x3296)))+(((IkReal(-1.00000000000000))*(sj5)*(x3294)*(x3300)))+(((cj8)*(r20)*(x3296)))+(((cj6)*(r22)*(x3298))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((cj5)*(x3294)*(x3297)))+(((IkReal(-1.00000000000000))*(x3299)*(x3300)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x3295)))+(((cj8)*(r20)*(x3298)))+(((IkReal(-1.00000000000000))*(cj6)*(x3295)*(x3296)))+(((IkReal(-1.00000000000000))*(x3294)*(x3298))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x3295)))+(((x3297)*(x3301)))+(((IkReal(-1.00000000000000))*(x3294)*(x3296)))+(((IkReal(-1.00000000000000))*(sj5)*(x3294)*(x3300)))+(((cj8)*(r20)*(x3296)))+(((cj6)*(r22)*(x3298)))))), ((gconst47)*(((((cj5)*(x3294)*(x3297)))+(((IkReal(-1.00000000000000))*(x3299)*(x3300)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x3295)))+(((cj8)*(r20)*(x3298)))+(((IkReal(-1.00000000000000))*(cj6)*(x3295)*(x3296)))+(((IkReal(-1.00000000000000))*(x3294)*(x3298)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3302=IKsin(j4);
IkReal x3303=IKcos(j4);
IkReal x3304=((IkReal(1.00000000000000))*(cj8));
IkReal x3305=((cj3)*(r01));
IkReal x3306=((IkReal(1.00000000000000))*(sj8));
IkReal x3307=((r11)*(sj3));
IkReal x3308=((cj3)*(r00));
IkReal x3309=((IkReal(1.00000000000000))*(sj6));
IkReal x3310=((IkReal(1.00000000000000))*(cj7));
IkReal x3311=((cj3)*(r02));
IkReal x3312=((cj8)*(sj7));
IkReal x3313=((r12)*(sj3));
IkReal x3314=((cj7)*(cj8));
IkReal x3315=((r21)*(sj8));
IkReal x3316=((r10)*(sj3));
IkReal x3317=((sj5)*(x3303));
IkReal x3318=((cj5)*(x3303));
IkReal x3319=((sj5)*(x3302));
IkReal x3320=((cj5)*(x3302));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x3309)*(x3317)))+(((IkReal(-1.00000000000000))*(x3309)*(x3320))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3318)))+(((cj7)*(x3315)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x3319)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3304))));
evalcond[2]=((((cj6)*(x3320)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x3304)))+(((sj7)*(x3315)))+(((cj6)*(x3317))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3304)*(x3305)))+(((IkReal(-1.00000000000000))*(x3306)*(x3308)))+(((IkReal(-1.00000000000000))*(x3309)*(x3318)))+(((IkReal(-1.00000000000000))*(x3304)*(x3307)))+(((sj6)*(x3319)))+(((IkReal(-1.00000000000000))*(x3306)*(x3316))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj7)*(x3306)*(x3307)))+(((x3308)*(x3314)))+(((IkReal(-1.00000000000000))*(cj7)*(x3305)*(x3306)))+(x3317)+(((sj7)*(x3311)))+(((sj7)*(x3313)))+(((x3314)*(x3316)))+(x3320));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x3305)*(x3306)))+(((cj6)*(x3318)))+(((x3312)*(x3316)))+(((x3308)*(x3312)))+(((IkReal(-1.00000000000000))*(cj6)*(x3319)))+(((IkReal(-1.00000000000000))*(x3310)*(x3313)))+(((IkReal(-1.00000000000000))*(x3310)*(x3311)))+(((IkReal(-1.00000000000000))*(sj7)*(x3306)*(x3307))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3321=((sj5)*(sj6));
IkReal x3322=((r22)*(sj7));
IkReal x3323=((r20)*(sj8));
IkReal x3324=((cj8)*(r21));
IkReal x3325=((cj5)*(sj6));
IkReal x3326=((cj7)*(cj8)*(r20));
IkReal x3327=((cj7)*(r21)*(sj8));
if( IKabs(((gconst46)*(((((x3321)*(x3322)))+(((x3321)*(x3326)))+(((cj5)*(x3323)))+(((IkReal(-1.00000000000000))*(x3321)*(x3327)))+(((cj5)*(x3324))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((sj5)*(x3323)))+(((x3325)*(x3327)))+(((sj5)*(x3324)))+(((IkReal(-1.00000000000000))*(x3322)*(x3325)))+(((IkReal(-1.00000000000000))*(x3325)*(x3326))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst46)*(((((x3321)*(x3322)))+(((x3321)*(x3326)))+(((cj5)*(x3323)))+(((IkReal(-1.00000000000000))*(x3321)*(x3327)))+(((cj5)*(x3324)))))), ((gconst46)*(((((sj5)*(x3323)))+(((x3325)*(x3327)))+(((sj5)*(x3324)))+(((IkReal(-1.00000000000000))*(x3322)*(x3325)))+(((IkReal(-1.00000000000000))*(x3325)*(x3326)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3328=IKsin(j4);
IkReal x3329=IKcos(j4);
IkReal x3330=((IkReal(1.00000000000000))*(cj8));
IkReal x3331=((cj3)*(r01));
IkReal x3332=((IkReal(1.00000000000000))*(sj8));
IkReal x3333=((r11)*(sj3));
IkReal x3334=((cj3)*(r00));
IkReal x3335=((IkReal(1.00000000000000))*(sj6));
IkReal x3336=((IkReal(1.00000000000000))*(cj7));
IkReal x3337=((cj3)*(r02));
IkReal x3338=((cj8)*(sj7));
IkReal x3339=((r12)*(sj3));
IkReal x3340=((cj7)*(cj8));
IkReal x3341=((r21)*(sj8));
IkReal x3342=((r10)*(sj3));
IkReal x3343=((sj5)*(x3329));
IkReal x3344=((cj5)*(x3329));
IkReal x3345=((sj5)*(x3328));
IkReal x3346=((cj5)*(x3328));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3335)*(x3343)))+(((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x3335)*(x3346))));
evalcond[1]=((x3345)+(((IkReal(-1.00000000000000))*(x3344)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3330)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x3341))));
evalcond[2]=((((sj7)*(x3341)))+(((cj7)*(r22)))+(((cj6)*(x3343)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x3330)))+(((cj6)*(x3346))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3335)*(x3344)))+(((IkReal(-1.00000000000000))*(x3330)*(x3333)))+(((IkReal(-1.00000000000000))*(x3330)*(x3331)))+(((sj6)*(x3345)))+(((IkReal(-1.00000000000000))*(x3332)*(x3334)))+(((IkReal(-1.00000000000000))*(x3332)*(x3342))));
evalcond[4]=((x3343)+(x3346)+(((sj7)*(x3339)))+(((IkReal(-1.00000000000000))*(cj7)*(x3331)*(x3332)))+(((x3340)*(x3342)))+(((sj7)*(x3337)))+(((IkReal(-1.00000000000000))*(cj7)*(x3332)*(x3333)))+(((x3334)*(x3340))));
evalcond[5]=((((x3334)*(x3338)))+(((IkReal(-1.00000000000000))*(x3336)*(x3337)))+(((IkReal(-1.00000000000000))*(sj7)*(x3332)*(x3333)))+(((IkReal(-1.00000000000000))*(sj7)*(x3331)*(x3332)))+(((IkReal(-1.00000000000000))*(x3336)*(x3339)))+(((cj6)*(x3344)))+(((IkReal(-1.00000000000000))*(cj6)*(x3345)))+(((x3338)*(x3342))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3347=((IkReal(4.00000000000000))*(npx));
IkReal x3348=((IkReal(4.00000000000000))*(npy));
if( IKabs(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj8)*(x3348)))+(((IkReal(-1.00000000000000))*(sj8)*(x3347)))+(((IkReal(0.0800000000000000))*(sj6)))+(((IkReal(-0.320000000000000))*(cj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x3347)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x3348))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj8)*(x3348)))+(((IkReal(-1.00000000000000))*(sj8)*(x3347)))+(((IkReal(0.0800000000000000))*(sj6)))+(((IkReal(-0.320000000000000))*(cj6)))))))+IKsqr(((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x3347)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x3348)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj8)*(x3348)))+(((IkReal(-1.00000000000000))*(sj8)*(x3347)))+(((IkReal(0.0800000000000000))*(sj6)))+(((IkReal(-0.320000000000000))*(cj6)))))), ((IkReal(-0.920000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x3347)))+(((IkReal(-0.320000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x3348)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x3349=IKsin(j5);
IkReal x3350=((IkReal(1.00000000000000))*(sj7));
IkReal x3351=((npy)*(sj8));
IkReal x3352=((cj8)*(npx));
IkReal x3353=((IkReal(0.250000000000000))*(x3349));
evalcond[0]=((((IkReal(0.0800000000000000))*(cj6)))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((sj6)*(x3353)))+(((IkReal(-0.0200000000000000))*(sj6))));
evalcond[1]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x3352)))+(((IkReal(-1.00000000000000))*(npz)*(x3350)))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((cj7)*(x3351)))+(((IkReal(0.0800000000000000))*(cj7))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3350)*(x3352)))+(((cj7)*(npz)))+(((sj7)*(x3351)))+(((IkReal(0.0800000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(x3353)))+(((IkReal(0.0200000000000000))*(cj6)))+(((IkReal(0.0800000000000000))*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5))))));
dummyeval[0]=((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3354=((IkReal(1.00000000000000))*(sj7));
IkReal x3355=((IkReal(1.00000000000000))*(cj3));
IkReal x3356=((cj7)*(r02));
IkReal x3357=((cj3)*(sj7));
IkReal x3358=((cj8)*(r00));
IkReal x3359=((cj8)*(npx));
IkReal x3360=((r01)*(sj3));
IkReal x3361=((cj7)*(sj8));
IkReal x3362=((r11)*(sj8));
IkReal x3363=((IkReal(1.00000000000000))*(cj7));
IkReal x3364=((sj7)*(sj8));
IkReal x3365=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0200000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.230000000000000))+(((npy)*(x3361)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x3354)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x3359)*(x3363))));
evalcond[3]=((((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x3355)))+(((cj8)*(x3360)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x3355))));
evalcond[4]=((((cj7)*(r22)))+(((r21)*(x3364)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x3354))));
evalcond[5]=((IkReal(0.0800000000000000))+(((cj7)*(npz)))+(((npy)*(x3364)))+(((IkReal(-1.00000000000000))*(x3354)*(x3359)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[6]=((((cj3)*(cj7)*(x3365)))+(((x3360)*(x3361)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x3354)))+(((IkReal(-1.00000000000000))*(r11)*(x3355)*(x3361)))+(((IkReal(-1.00000000000000))*(sj3)*(x3358)*(x3363)))+(((r12)*(x3357))));
evalcond[7]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3355)))+(((IkReal(-1.00000000000000))*(sj3)*(x3354)*(x3358)))+(((x3357)*(x3365)))+(((sj3)*(x3356)))+(((IkReal(-1.00000000000000))*(cj3)*(x3354)*(x3362)))+(((x3360)*(x3364))));
evalcond[8]=((((x3357)*(x3358)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3363)))+(((IkReal(-1.00000000000000))*(x3355)*(x3356)))+(((sj3)*(sj7)*(x3365)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x3354)))+(((IkReal(-1.00000000000000))*(sj3)*(x3354)*(x3362))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3366=((cj8)*(sj5));
IkReal x3367=((cj3)*(r01));
IkReal x3368=((IkReal(1.00000000000000))*(cj5));
IkReal x3369=((r11)*(sj3));
IkReal x3370=((sj5)*(sj8));
IkReal x3371=((r10)*(sj3));
IkReal x3372=((cj3)*(r00)*(sj8));
if( IKabs(((gconst49)*(((((x3366)*(x3369)))+(((x3366)*(x3367)))+(((cj5)*(cj8)*(r21)))+(((cj3)*(r00)*(x3370)))+(((x3370)*(x3371)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((r20)*(x3370)))+(((IkReal(-1.00000000000000))*(x3368)*(x3372)))+(((r21)*(x3366)))+(((IkReal(-1.00000000000000))*(sj8)*(x3368)*(x3371)))+(((IkReal(-1.00000000000000))*(cj8)*(x3367)*(x3368)))+(((IkReal(-1.00000000000000))*(cj8)*(x3368)*(x3369))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst49)*(((((x3366)*(x3369)))+(((x3366)*(x3367)))+(((cj5)*(cj8)*(r21)))+(((cj3)*(r00)*(x3370)))+(((x3370)*(x3371)))+(((cj5)*(r20)*(sj8)))))), ((gconst49)*(((((r20)*(x3370)))+(((IkReal(-1.00000000000000))*(x3368)*(x3372)))+(((r21)*(x3366)))+(((IkReal(-1.00000000000000))*(sj8)*(x3368)*(x3371)))+(((IkReal(-1.00000000000000))*(cj8)*(x3367)*(x3368)))+(((IkReal(-1.00000000000000))*(cj8)*(x3368)*(x3369)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3373=IKsin(j4);
IkReal x3374=IKcos(j4);
IkReal x3375=((IkReal(1.00000000000000))*(cj8));
IkReal x3376=((cj3)*(r01));
IkReal x3377=((cj3)*(r00));
IkReal x3378=((cj7)*(cj8));
IkReal x3379=((IkReal(1.00000000000000))*(cj5));
IkReal x3380=((IkReal(1.00000000000000))*(sj8));
IkReal x3381=((r11)*(sj3));
IkReal x3382=((r10)*(sj3));
IkReal x3383=((sj5)*(x3373));
IkReal x3384=((sj5)*(x3374));
IkReal x3385=((x3374)*(x3379));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x3384)))+(((IkReal(-1.00000000000000))*(x3373)*(x3379)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3385)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3375)))+(x3383));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3375)*(x3376)))+(((IkReal(-1.00000000000000))*(x3377)*(x3380)))+(((IkReal(-1.00000000000000))*(x3385)))+(((IkReal(-1.00000000000000))*(x3380)*(x3382)))+(x3383)+(((IkReal(-1.00000000000000))*(x3375)*(x3381))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3380)*(x3381)))+(((r12)*(sj3)*(sj7)))+(((x3377)*(x3378)))+(((IkReal(-1.00000000000000))*(cj7)*(x3376)*(x3380)))+(x3384)+(((cj5)*(x3373)))+(((x3378)*(x3382))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3386=((IkReal(1.00000000000000))*(cj5));
IkReal x3387=((r22)*(sj7));
IkReal x3388=((cj8)*(sj5));
IkReal x3389=((cj7)*(r20));
IkReal x3390=((r20)*(sj8));
IkReal x3391=((cj7)*(r21)*(sj8));
if( IKabs(((gconst48)*(((((sj5)*(x3387)))+(((IkReal(-1.00000000000000))*(sj5)*(x3391)))+(((cj5)*(x3390)))+(((cj5)*(cj8)*(r21)))+(((x3388)*(x3389))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((sj5)*(x3390)))+(((cj5)*(x3391)))+(((IkReal(-1.00000000000000))*(x3386)*(x3387)))+(((IkReal(-1.00000000000000))*(cj8)*(x3386)*(x3389)))+(((r21)*(x3388))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst48)*(((((sj5)*(x3387)))+(((IkReal(-1.00000000000000))*(sj5)*(x3391)))+(((cj5)*(x3390)))+(((cj5)*(cj8)*(r21)))+(((x3388)*(x3389)))))), ((gconst48)*(((((sj5)*(x3390)))+(((cj5)*(x3391)))+(((IkReal(-1.00000000000000))*(x3386)*(x3387)))+(((IkReal(-1.00000000000000))*(cj8)*(x3386)*(x3389)))+(((r21)*(x3388)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3392=IKsin(j4);
IkReal x3393=IKcos(j4);
IkReal x3394=((IkReal(1.00000000000000))*(cj8));
IkReal x3395=((cj3)*(r01));
IkReal x3396=((cj3)*(r00));
IkReal x3397=((cj7)*(cj8));
IkReal x3398=((IkReal(1.00000000000000))*(cj5));
IkReal x3399=((IkReal(1.00000000000000))*(sj8));
IkReal x3400=((r11)*(sj3));
IkReal x3401=((r10)*(sj3));
IkReal x3402=((sj5)*(x3392));
IkReal x3403=((sj5)*(x3393));
IkReal x3404=((x3393)*(x3398));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x3392)*(x3398)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x3403))));
evalcond[1]=((x3402)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3394)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x3404))));
evalcond[2]=((x3402)+(((IkReal(-1.00000000000000))*(x3394)*(x3395)))+(((IkReal(-1.00000000000000))*(x3394)*(x3400)))+(((IkReal(-1.00000000000000))*(x3399)*(x3401)))+(((IkReal(-1.00000000000000))*(x3404)))+(((IkReal(-1.00000000000000))*(x3396)*(x3399))));
evalcond[3]=((x3403)+(((cj3)*(r02)*(sj7)))+(((x3396)*(x3397)))+(((x3397)*(x3401)))+(((IkReal(-1.00000000000000))*(cj7)*(x3399)*(x3400)))+(((r12)*(sj3)*(sj7)))+(((cj5)*(x3392)))+(((IkReal(-1.00000000000000))*(cj7)*(x3395)*(x3399))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3405=((IkReal(1.00000000000000))*(sj7));
IkReal x3406=((IkReal(1.00000000000000))*(cj3));
IkReal x3407=((cj7)*(r02));
IkReal x3408=((cj3)*(sj7));
IkReal x3409=((cj8)*(r00));
IkReal x3410=((cj8)*(npx));
IkReal x3411=((r01)*(sj3));
IkReal x3412=((cj7)*(sj8));
IkReal x3413=((r11)*(sj8));
IkReal x3414=((IkReal(1.00000000000000))*(cj7));
IkReal x3415=((sj7)*(sj8));
IkReal x3416=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0200000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.230000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3405)))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x3410)*(x3414)))+(((npy)*(x3412)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((r00)*(sj3)*(sj8)))+(((cj8)*(x3411)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x3406)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x3406))));
evalcond[4]=((((cj7)*(r22)))+(((r21)*(x3415)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x3405))));
evalcond[5]=((IkReal(-0.0800000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x3405)*(x3410)))+(((npy)*(x3415)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[6]=((((x3411)*(x3412)))+(((r12)*(x3408)))+(((cj3)*(cj7)*(x3416)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x3405)))+(((IkReal(-1.00000000000000))*(sj3)*(x3409)*(x3414)))+(((IkReal(-1.00000000000000))*(r11)*(x3406)*(x3412))));
evalcond[7]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3406)))+(((IkReal(-1.00000000000000))*(cj3)*(x3405)*(x3413)))+(((sj3)*(x3407)))+(((x3408)*(x3416)))+(((x3411)*(x3415)))+(((IkReal(-1.00000000000000))*(sj3)*(x3405)*(x3409))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x3406)*(x3407)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3414)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x3405)))+(((IkReal(-1.00000000000000))*(sj3)*(x3405)*(x3413)))+(((x3408)*(x3409)))+(((sj3)*(sj7)*(x3416))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3417=((IkReal(1.00000000000000))*(sj5));
IkReal x3418=((r20)*(sj8));
IkReal x3419=((cj5)*(cj8));
IkReal x3420=((r11)*(sj3));
IkReal x3421=((cj3)*(r01));
IkReal x3422=((cj3)*(r00)*(sj8));
IkReal x3423=((r10)*(sj3)*(sj8));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x3417)*(x3422)))+(((IkReal(-1.00000000000000))*(cj8)*(x3417)*(x3421)))+(((IkReal(-1.00000000000000))*(cj8)*(x3417)*(x3420)))+(((IkReal(-1.00000000000000))*(r21)*(x3419)))+(((IkReal(-1.00000000000000))*(cj5)*(x3418)))+(((IkReal(-1.00000000000000))*(x3417)*(x3423))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((x3419)*(x3420)))+(((x3419)*(x3421)))+(((cj5)*(x3422)))+(((IkReal(-1.00000000000000))*(x3417)*(x3418)))+(((cj5)*(x3423)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x3417))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(x3417)*(x3422)))+(((IkReal(-1.00000000000000))*(cj8)*(x3417)*(x3421)))+(((IkReal(-1.00000000000000))*(cj8)*(x3417)*(x3420)))+(((IkReal(-1.00000000000000))*(r21)*(x3419)))+(((IkReal(-1.00000000000000))*(cj5)*(x3418)))+(((IkReal(-1.00000000000000))*(x3417)*(x3423)))))), ((gconst51)*(((((x3419)*(x3420)))+(((x3419)*(x3421)))+(((cj5)*(x3422)))+(((IkReal(-1.00000000000000))*(x3417)*(x3418)))+(((cj5)*(x3423)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x3417)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3424=IKsin(j4);
IkReal x3425=IKcos(j4);
IkReal x3426=((IkReal(1.00000000000000))*(cj8));
IkReal x3427=((cj3)*(r01));
IkReal x3428=((cj3)*(r00));
IkReal x3429=((cj7)*(cj8));
IkReal x3430=((r11)*(sj3));
IkReal x3431=((IkReal(1.00000000000000))*(sj8));
IkReal x3432=((r10)*(sj3));
IkReal x3433=((cj5)*(x3424));
IkReal x3434=((sj5)*(x3425));
IkReal x3435=((cj5)*(x3425));
IkReal x3436=((sj5)*(x3424));
IkReal x3437=((x3433)+(x3434));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x3437));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3426)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x3436)+(((IkReal(-1.00000000000000))*(x3435))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3426)*(x3430)))+(((IkReal(-1.00000000000000))*(x3431)*(x3432)))+(x3435)+(((IkReal(-1.00000000000000))*(x3436)))+(((IkReal(-1.00000000000000))*(x3428)*(x3431)))+(((IkReal(-1.00000000000000))*(x3426)*(x3427))));
evalcond[3]=((((x3428)*(x3429)))+(((cj3)*(r02)*(sj7)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3430)*(x3431)))+(x3437)+(((IkReal(-1.00000000000000))*(cj7)*(x3427)*(x3431)))+(((x3429)*(x3432))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3438=((r22)*(sj7));
IkReal x3439=((cj8)*(sj5));
IkReal x3440=((sj5)*(sj8));
IkReal x3441=((cj7)*(r20));
IkReal x3442=((cj5)*(cj8));
IkReal x3443=((cj7)*(r21));
IkReal x3444=((cj5)*(sj8));
if( IKabs(((gconst50)*(((((r20)*(x3444)))+(((IkReal(-1.00000000000000))*(sj5)*(x3438)))+(((IkReal(-1.00000000000000))*(x3439)*(x3441)))+(((r21)*(x3442)))+(((x3440)*(x3443))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((r20)*(x3440)))+(((IkReal(-1.00000000000000))*(x3443)*(x3444)))+(((x3441)*(x3442)))+(((cj5)*(x3438)))+(((r21)*(x3439))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst50)*(((((r20)*(x3444)))+(((IkReal(-1.00000000000000))*(sj5)*(x3438)))+(((IkReal(-1.00000000000000))*(x3439)*(x3441)))+(((r21)*(x3442)))+(((x3440)*(x3443)))))), ((gconst50)*(((((r20)*(x3440)))+(((IkReal(-1.00000000000000))*(x3443)*(x3444)))+(((x3441)*(x3442)))+(((cj5)*(x3438)))+(((r21)*(x3439)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3445=IKsin(j4);
IkReal x3446=IKcos(j4);
IkReal x3447=((IkReal(1.00000000000000))*(cj8));
IkReal x3448=((cj3)*(r01));
IkReal x3449=((cj3)*(r00));
IkReal x3450=((cj7)*(cj8));
IkReal x3451=((r11)*(sj3));
IkReal x3452=((IkReal(1.00000000000000))*(sj8));
IkReal x3453=((r10)*(sj3));
IkReal x3454=((cj5)*(x3445));
IkReal x3455=((sj5)*(x3446));
IkReal x3456=((cj5)*(x3446));
IkReal x3457=((sj5)*(x3445));
IkReal x3458=((x3454)+(x3455));
evalcond[0]=((((cj8)*(r21)))+(x3458)+(((r20)*(sj8))));
evalcond[1]=((x3457)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3447)))+(((IkReal(-1.00000000000000))*(x3456))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3452)*(x3453)))+(((IkReal(-1.00000000000000))*(x3449)*(x3452)))+(((IkReal(-1.00000000000000))*(x3447)*(x3451)))+(x3456)+(((IkReal(-1.00000000000000))*(x3457)))+(((IkReal(-1.00000000000000))*(x3447)*(x3448))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj7)*(x3451)*(x3452)))+(((cj3)*(r02)*(sj7)))+(x3458)+(((x3450)*(x3453)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3448)*(x3452)))+(((x3449)*(x3450))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3459=((cj3)*(cj8));
IkReal x3460=((IkReal(1.00000000000000))*(sj7));
IkReal x3461=((cj8)*(npx));
IkReal x3462=((r01)*(sj3));
IkReal x3463=((npy)*(sj8));
IkReal x3464=((r02)*(sj3));
IkReal x3465=((IkReal(1.00000000000000))*(r11));
IkReal x3466=((cj3)*(r12));
IkReal x3467=((IkReal(1.00000000000000))*(cj7));
IkReal x3468=((sj3)*(sj8));
IkReal x3469=((IkReal(1.00000000000000))*(cj3)*(sj8));
IkReal x3470=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x3460)))+(((IkReal(-1.00000000000000))*(x3461)*(x3467)))+(((cj7)*(x3463)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(1.00000000000000))+(((r00)*(x3468)))+(((IkReal(-1.00000000000000))*(x3459)*(x3465)))+(((cj8)*(x3462)))+(((IkReal(-1.00000000000000))*(r10)*(x3469))));
evalcond[5]=((IkReal(0.0200000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x3460)*(x3461)))+(((sj7)*(x3463)))+(((IkReal(-0.250000000000000))*(sj5)))+(((IkReal(0.0800000000000000))*(sj7))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r01)*(x3459)))+(((IkReal(-1.00000000000000))*(cj8)*(sj3)*(x3465)))+(((IkReal(-1.00000000000000))*(r10)*(x3468)))+(((IkReal(-1.00000000000000))*(r00)*(x3469))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x3467)*(x3470)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x3465)))+(((cj7)*(sj8)*(x3462)))+(((cj7)*(r10)*(x3459)))+(((sj7)*(x3466)))+(((IkReal(-1.00000000000000))*(x3460)*(x3464))));
evalcond[8]=((((sj7)*(sj8)*(x3462)))+(((IkReal(-1.00000000000000))*(x3466)*(x3467)))+(((r10)*(sj7)*(x3459)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x3460)))+(((IkReal(-1.00000000000000))*(x3460)*(x3470)))+(((cj7)*(x3464))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3471=((cj3)*(cj5));
IkReal x3472=((r02)*(sj7));
IkReal x3473=((cj8)*(r00));
IkReal x3474=((cj5)*(sj3));
IkReal x3475=((cj7)*(cj8));
IkReal x3476=((sj5)*(sj7));
IkReal x3477=((sj3)*(sj5));
IkReal x3478=((cj3)*(cj7)*(sj5));
IkReal x3479=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst53)*(((((x3471)*(x3472)))+(((r12)*(sj7)*(x3474)))+(((cj7)*(x3471)*(x3473)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3475)))+(((IkReal(-1.00000000000000))*(r22)*(x3476)))+(((r10)*(x3474)*(x3475)))+(((IkReal(-1.00000000000000))*(r01)*(x3471)*(x3479)))+(((IkReal(-1.00000000000000))*(r11)*(x3474)*(x3479)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3478)))+(((r12)*(sj3)*(x3476)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3479)))+(((r10)*(x3475)*(x3477)))+(((x3473)*(x3478)))+(((cj5)*(r20)*(x3475)))+(((cj3)*(sj5)*(x3472)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x3477)*(x3479))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst53)*(((((x3471)*(x3472)))+(((r12)*(sj7)*(x3474)))+(((cj7)*(x3471)*(x3473)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3475)))+(((IkReal(-1.00000000000000))*(r22)*(x3476)))+(((r10)*(x3474)*(x3475)))+(((IkReal(-1.00000000000000))*(r01)*(x3471)*(x3479)))+(((IkReal(-1.00000000000000))*(r11)*(x3474)*(x3479)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3478)))+(((r12)*(sj3)*(x3476)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3479)))+(((r10)*(x3475)*(x3477)))+(((x3473)*(x3478)))+(((cj5)*(r20)*(x3475)))+(((cj3)*(sj5)*(x3472)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x3477)*(x3479)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3480=IKsin(j4);
IkReal x3481=IKcos(j4);
IkReal x3482=((IkReal(1.00000000000000))*(cj7));
IkReal x3483=((cj8)*(r20));
IkReal x3484=((cj3)*(r02));
IkReal x3485=((IkReal(1.00000000000000))*(sj7));
IkReal x3486=((sj3)*(sj7));
IkReal x3487=((r21)*(sj8));
IkReal x3488=((cj8)*(r10));
IkReal x3489=((cj5)*(x3480));
IkReal x3490=((sj5)*(x3481));
IkReal x3491=((r11)*(sj3)*(sj8));
IkReal x3492=((cj3)*(cj8)*(r00));
IkReal x3493=((cj5)*(x3481));
IkReal x3494=((cj3)*(r01)*(sj8));
IkReal x3495=((sj5)*(x3480));
IkReal x3496=((x3489)+(x3490));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3493)))+(x3495)+(((IkReal(-1.00000000000000))*(r22)*(x3485)))+(((IkReal(-1.00000000000000))*(x3482)*(x3483)))+(((cj7)*(x3487))));
evalcond[1]=((((cj7)*(r22)))+(x3496)+(((IkReal(-1.00000000000000))*(x3483)*(x3485)))+(((sj7)*(x3487))));
evalcond[2]=((((cj7)*(sj3)*(x3488)))+(((sj7)*(x3484)))+(((cj7)*(x3492)))+(x3496)+(((IkReal(-1.00000000000000))*(x3482)*(x3491)))+(((r12)*(x3486)))+(((IkReal(-1.00000000000000))*(x3482)*(x3494))));
evalcond[3]=((((sj7)*(x3492)))+(((IkReal(-1.00000000000000))*(x3495)))+(x3493)+(((x3486)*(x3488)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3482)))+(((IkReal(-1.00000000000000))*(x3485)*(x3494)))+(((IkReal(-1.00000000000000))*(x3485)*(x3491)))+(((IkReal(-1.00000000000000))*(x3482)*(x3484))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3497=((sj5)*(sj7));
IkReal x3498=((r21)*(sj8));
IkReal x3499=((cj7)*(sj5));
IkReal x3500=((cj8)*(r20));
IkReal x3501=((cj5)*(cj7));
IkReal x3502=((cj5)*(sj7));
if( IKabs(((gconst52)*(((((x3498)*(x3499)))+(((r22)*(x3501)))+(((IkReal(-1.00000000000000))*(r22)*(x3497)))+(((x3498)*(x3502)))+(((IkReal(-1.00000000000000))*(x3500)*(x3502)))+(((IkReal(-1.00000000000000))*(x3499)*(x3500))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(x3497)*(x3500)))+(((r22)*(x3499)))+(((x3500)*(x3501)))+(((IkReal(-1.00000000000000))*(x3498)*(x3501)))+(((x3497)*(x3498)))+(((r22)*(x3502))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst52)*(((((x3498)*(x3499)))+(((r22)*(x3501)))+(((IkReal(-1.00000000000000))*(r22)*(x3497)))+(((x3498)*(x3502)))+(((IkReal(-1.00000000000000))*(x3500)*(x3502)))+(((IkReal(-1.00000000000000))*(x3499)*(x3500)))))), ((gconst52)*(((((IkReal(-1.00000000000000))*(x3497)*(x3500)))+(((r22)*(x3499)))+(((x3500)*(x3501)))+(((IkReal(-1.00000000000000))*(x3498)*(x3501)))+(((x3497)*(x3498)))+(((r22)*(x3502)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3503=IKsin(j4);
IkReal x3504=IKcos(j4);
IkReal x3505=((IkReal(1.00000000000000))*(cj7));
IkReal x3506=((cj8)*(r20));
IkReal x3507=((cj3)*(r02));
IkReal x3508=((IkReal(1.00000000000000))*(sj7));
IkReal x3509=((sj3)*(sj7));
IkReal x3510=((r21)*(sj8));
IkReal x3511=((cj8)*(r10));
IkReal x3512=((cj5)*(x3503));
IkReal x3513=((sj5)*(x3504));
IkReal x3514=((r11)*(sj3)*(sj8));
IkReal x3515=((cj3)*(cj8)*(r00));
IkReal x3516=((cj5)*(x3504));
IkReal x3517=((cj3)*(r01)*(sj8));
IkReal x3518=((sj5)*(x3503));
IkReal x3519=((x3513)+(x3512));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3516)))+(((cj7)*(x3510)))+(((IkReal(-1.00000000000000))*(x3505)*(x3506)))+(x3518)+(((IkReal(-1.00000000000000))*(r22)*(x3508))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3506)*(x3508)))+(((cj7)*(r22)))+(((sj7)*(x3510)))+(x3519));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3505)*(x3517)))+(((r12)*(x3509)))+(((cj7)*(sj3)*(x3511)))+(x3519)+(((sj7)*(x3507)))+(((IkReal(-1.00000000000000))*(x3505)*(x3514)))+(((cj7)*(x3515))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3518)))+(((IkReal(-1.00000000000000))*(x3508)*(x3517)))+(((IkReal(-1.00000000000000))*(x3505)*(x3507)))+(((IkReal(-1.00000000000000))*(x3508)*(x3514)))+(((sj7)*(x3515)))+(((x3509)*(x3511)))+(x3516)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3505))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3520=((cj3)*(cj8));
IkReal x3521=((IkReal(1.00000000000000))*(sj7));
IkReal x3522=((cj8)*(npx));
IkReal x3523=((r01)*(sj3));
IkReal x3524=((npy)*(sj8));
IkReal x3525=((r02)*(sj3));
IkReal x3526=((IkReal(1.00000000000000))*(r11));
IkReal x3527=((cj3)*(r12));
IkReal x3528=((IkReal(1.00000000000000))*(cj7));
IkReal x3529=((sj3)*(sj8));
IkReal x3530=((IkReal(1.00000000000000))*(cj3)*(sj8));
IkReal x3531=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0800000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.230000000000000))+(((IkReal(0.0800000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x3521)))+(((cj7)*(x3524)))+(((IkReal(-1.00000000000000))*(x3522)*(x3528)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x3530)))+(((cj8)*(x3523)))+(((r00)*(x3529)))+(((IkReal(-1.00000000000000))*(x3520)*(x3526))));
evalcond[5]=((IkReal(-0.0200000000000000))+(((IkReal(-1.00000000000000))*(x3521)*(x3522)))+(((cj7)*(npz)))+(((sj7)*(x3524)))+(((IkReal(0.0800000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj8)*(sj3)*(x3526)))+(((IkReal(-1.00000000000000))*(r00)*(x3530)))+(((IkReal(-1.00000000000000))*(r01)*(x3520)))+(((IkReal(-1.00000000000000))*(r10)*(x3529))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x3526)))+(((IkReal(-1.00000000000000))*(x3521)*(x3525)))+(((cj7)*(sj8)*(x3523)))+(((sj7)*(x3527)))+(((cj7)*(r10)*(x3520)))+(((IkReal(-1.00000000000000))*(x3528)*(x3531))));
evalcond[8]=((((sj7)*(sj8)*(x3523)))+(((IkReal(-1.00000000000000))*(x3521)*(x3531)))+(((r10)*(sj7)*(x3520)))+(((IkReal(-1.00000000000000))*(x3527)*(x3528)))+(((cj7)*(x3525)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x3521))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3532=((cj3)*(cj5));
IkReal x3533=((r02)*(sj7));
IkReal x3534=((cj8)*(r00));
IkReal x3535=((cj5)*(sj3));
IkReal x3536=((cj7)*(cj8));
IkReal x3537=((sj5)*(sj7));
IkReal x3538=((sj3)*(sj5));
IkReal x3539=((cj3)*(cj7)*(sj5));
IkReal x3540=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3536)))+(((x3532)*(x3533)))+(((IkReal(-1.00000000000000))*(r22)*(x3537)))+(((IkReal(-1.00000000000000))*(r01)*(x3532)*(x3540)))+(((IkReal(-1.00000000000000))*(r11)*(x3535)*(x3540)))+(((r12)*(sj7)*(x3535)))+(((r10)*(x3535)*(x3536)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((cj7)*(x3532)*(x3534))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((r12)*(sj3)*(x3537)))+(((x3534)*(x3539)))+(((cj5)*(r20)*(x3536)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3540)))+(((IkReal(-1.00000000000000))*(r11)*(x3538)*(x3540)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3539)))+(((cj5)*(r22)*(sj7)))+(((r10)*(x3536)*(x3538)))+(((cj3)*(sj5)*(x3533))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst55)*(((((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3536)))+(((x3532)*(x3533)))+(((IkReal(-1.00000000000000))*(r22)*(x3537)))+(((IkReal(-1.00000000000000))*(r01)*(x3532)*(x3540)))+(((IkReal(-1.00000000000000))*(r11)*(x3535)*(x3540)))+(((r12)*(sj7)*(x3535)))+(((r10)*(x3535)*(x3536)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((cj7)*(x3532)*(x3534)))))), ((gconst55)*(((((r12)*(sj3)*(x3537)))+(((x3534)*(x3539)))+(((cj5)*(r20)*(x3536)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3540)))+(((IkReal(-1.00000000000000))*(r11)*(x3538)*(x3540)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3539)))+(((cj5)*(r22)*(sj7)))+(((r10)*(x3536)*(x3538)))+(((cj3)*(sj5)*(x3533)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3541=IKcos(j4);
IkReal x3542=IKsin(j4);
IkReal x3543=((IkReal(1.00000000000000))*(cj7));
IkReal x3544=((cj8)*(r20));
IkReal x3545=((cj3)*(r02));
IkReal x3546=((IkReal(1.00000000000000))*(sj7));
IkReal x3547=((sj3)*(sj7));
IkReal x3548=((r21)*(sj8));
IkReal x3549=((IkReal(1.00000000000000))*(cj5));
IkReal x3550=((cj8)*(r10));
IkReal x3551=((sj5)*(x3542));
IkReal x3552=((sj5)*(x3541));
IkReal x3553=((r11)*(sj3)*(sj8));
IkReal x3554=((cj3)*(cj8)*(r00));
IkReal x3555=((cj3)*(r01)*(sj8));
IkReal x3556=((x3541)*(x3549));
evalcond[0]=((x3551)+(((IkReal(-1.00000000000000))*(x3543)*(x3544)))+(((cj7)*(x3548)))+(((IkReal(-1.00000000000000))*(x3556)))+(((IkReal(-1.00000000000000))*(r22)*(x3546))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3544)*(x3546)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x3542)*(x3549)))+(((sj7)*(x3548)))+(((IkReal(-1.00000000000000))*(x3552))));
evalcond[2]=((((cj7)*(x3554)))+(((cj5)*(x3542)))+(x3552)+(((IkReal(-1.00000000000000))*(x3543)*(x3553)))+(((r12)*(x3547)))+(((cj7)*(sj3)*(x3550)))+(((IkReal(-1.00000000000000))*(x3543)*(x3555)))+(((sj7)*(x3545))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3543)*(x3545)))+(((IkReal(-1.00000000000000))*(x3546)*(x3553)))+(x3551)+(((IkReal(-1.00000000000000))*(x3546)*(x3555)))+(((x3547)*(x3550)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3543)))+(((IkReal(-1.00000000000000))*(x3556)))+(((sj7)*(x3554))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3557=((cj7)*(sj5));
IkReal x3558=((r21)*(sj8));
IkReal x3559=((cj5)*(cj7));
IkReal x3560=((cj8)*(r20));
IkReal x3561=((sj5)*(sj7));
IkReal x3562=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst54)*(((((r22)*(x3559)))+(((r22)*(x3561)))+(((cj5)*(sj7)*(x3558)))+(((x3557)*(x3560)))+(((IkReal(-1.00000000000000))*(x3557)*(x3558)))+(((IkReal(-1.00000000000000))*(x3560)*(x3562))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((x3558)*(x3559)))+(((IkReal(-1.00000000000000))*(r22)*(x3562)))+(((x3558)*(x3561)))+(((IkReal(-1.00000000000000))*(x3560)*(x3561)))+(((IkReal(-1.00000000000000))*(x3559)*(x3560)))+(((r22)*(x3557))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst54)*(((((r22)*(x3559)))+(((r22)*(x3561)))+(((cj5)*(sj7)*(x3558)))+(((x3557)*(x3560)))+(((IkReal(-1.00000000000000))*(x3557)*(x3558)))+(((IkReal(-1.00000000000000))*(x3560)*(x3562)))))), ((gconst54)*(((((x3558)*(x3559)))+(((IkReal(-1.00000000000000))*(r22)*(x3562)))+(((x3558)*(x3561)))+(((IkReal(-1.00000000000000))*(x3560)*(x3561)))+(((IkReal(-1.00000000000000))*(x3559)*(x3560)))+(((r22)*(x3557)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3563=IKcos(j4);
IkReal x3564=IKsin(j4);
IkReal x3565=((IkReal(1.00000000000000))*(cj7));
IkReal x3566=((cj8)*(r20));
IkReal x3567=((cj3)*(r02));
IkReal x3568=((IkReal(1.00000000000000))*(sj7));
IkReal x3569=((sj3)*(sj7));
IkReal x3570=((r21)*(sj8));
IkReal x3571=((IkReal(1.00000000000000))*(cj5));
IkReal x3572=((cj8)*(r10));
IkReal x3573=((sj5)*(x3564));
IkReal x3574=((sj5)*(x3563));
IkReal x3575=((r11)*(sj3)*(sj8));
IkReal x3576=((cj3)*(cj8)*(r00));
IkReal x3577=((cj3)*(r01)*(sj8));
IkReal x3578=((x3563)*(x3571));
evalcond[0]=((((cj7)*(x3570)))+(x3573)+(((IkReal(-1.00000000000000))*(x3565)*(x3566)))+(((IkReal(-1.00000000000000))*(x3578)))+(((IkReal(-1.00000000000000))*(r22)*(x3568))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x3564)*(x3571)))+(((IkReal(-1.00000000000000))*(x3566)*(x3568)))+(((sj7)*(x3570)))+(((IkReal(-1.00000000000000))*(x3574))));
evalcond[2]=((((cj5)*(x3564)))+(((cj7)*(x3576)))+(((IkReal(-1.00000000000000))*(x3565)*(x3575)))+(((r12)*(x3569)))+(x3574)+(((IkReal(-1.00000000000000))*(x3565)*(x3577)))+(((cj7)*(sj3)*(x3572)))+(((sj7)*(x3567))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3565)*(x3567)))+(((IkReal(-1.00000000000000))*(x3568)*(x3575)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3565)))+(((IkReal(-1.00000000000000))*(x3568)*(x3577)))+(((sj7)*(x3576)))+(x3573)+(((IkReal(-1.00000000000000))*(x3578)))+(((x3569)*(x3572))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3579=((r21)*(sj8));
IkReal x3580=((IkReal(1.00000000000000))*(r22));
IkReal x3581=((cj5)*(sj7));
IkReal x3582=((cj6)*(cj7));
IkReal x3583=((sj5)*(sj7));
IkReal x3584=((cj5)*(cj8)*(r20));
IkReal x3585=((IkReal(1.00000000000000))*(x3582));
IkReal x3586=((cj8)*(r20)*(sj5));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x3580)))+(((cj6)*(r22)*(x3583)))+(((IkReal(-1.00000000000000))*(x3579)*(x3581)))+(((cj8)*(r20)*(x3581)))+(((IkReal(-1.00000000000000))*(sj5)*(x3579)*(x3585)))+(((x3582)*(x3586))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((cj5)*(x3579)*(x3582)))+(((IkReal(-1.00000000000000))*(x3579)*(x3583)))+(((IkReal(-1.00000000000000))*(cj6)*(x3580)*(x3581)))+(((IkReal(-1.00000000000000))*(x3584)*(x3585)))+(((cj8)*(r20)*(x3583)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x3580))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x3580)))+(((cj6)*(r22)*(x3583)))+(((IkReal(-1.00000000000000))*(x3579)*(x3581)))+(((cj8)*(r20)*(x3581)))+(((IkReal(-1.00000000000000))*(sj5)*(x3579)*(x3585)))+(((x3582)*(x3586)))))), ((gconst47)*(((((cj5)*(x3579)*(x3582)))+(((IkReal(-1.00000000000000))*(x3579)*(x3583)))+(((IkReal(-1.00000000000000))*(cj6)*(x3580)*(x3581)))+(((IkReal(-1.00000000000000))*(x3584)*(x3585)))+(((cj8)*(r20)*(x3583)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x3580)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3587=IKsin(j4);
IkReal x3588=IKcos(j4);
IkReal x3589=((IkReal(1.00000000000000))*(cj8));
IkReal x3590=((cj3)*(r01));
IkReal x3591=((IkReal(1.00000000000000))*(sj8));
IkReal x3592=((r11)*(sj3));
IkReal x3593=((cj3)*(r00));
IkReal x3594=((IkReal(1.00000000000000))*(sj6));
IkReal x3595=((IkReal(1.00000000000000))*(cj7));
IkReal x3596=((cj3)*(r02));
IkReal x3597=((cj8)*(sj7));
IkReal x3598=((r12)*(sj3));
IkReal x3599=((cj7)*(cj8));
IkReal x3600=((r21)*(sj8));
IkReal x3601=((r10)*(sj3));
IkReal x3602=((sj5)*(x3588));
IkReal x3603=((cj5)*(x3588));
IkReal x3604=((sj5)*(x3587));
IkReal x3605=((cj5)*(x3587));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x3594)*(x3602)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x3594)*(x3605))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3603)))+(x3604)+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3589)))+(((cj7)*(x3600))));
evalcond[2]=((((cj7)*(r22)))+(((cj6)*(x3605)))+(((sj7)*(x3600)))+(((cj6)*(x3602)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x3589))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3591)*(x3601)))+(((IkReal(-1.00000000000000))*(x3589)*(x3590)))+(((IkReal(-1.00000000000000))*(x3594)*(x3603)))+(((IkReal(-1.00000000000000))*(x3591)*(x3593)))+(((IkReal(-1.00000000000000))*(x3589)*(x3592)))+(((sj6)*(x3604))));
evalcond[4]=((((sj7)*(x3598)))+(((sj7)*(x3596)))+(((x3593)*(x3599)))+(x3602)+(x3605)+(((IkReal(-1.00000000000000))*(cj7)*(x3591)*(x3592)))+(((x3599)*(x3601)))+(((IkReal(-1.00000000000000))*(cj7)*(x3590)*(x3591))));
evalcond[5]=((((x3597)*(x3601)))+(((IkReal(-1.00000000000000))*(sj7)*(x3590)*(x3591)))+(((IkReal(-1.00000000000000))*(cj6)*(x3604)))+(((IkReal(-1.00000000000000))*(x3595)*(x3596)))+(((IkReal(-1.00000000000000))*(x3595)*(x3598)))+(((IkReal(-1.00000000000000))*(sj7)*(x3591)*(x3592)))+(((x3593)*(x3597)))+(((cj6)*(x3603))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3606=((sj5)*(sj6));
IkReal x3607=((r22)*(sj7));
IkReal x3608=((r20)*(sj8));
IkReal x3609=((cj8)*(r21));
IkReal x3610=((cj5)*(sj6));
IkReal x3611=((cj7)*(cj8)*(r20));
IkReal x3612=((cj7)*(r21)*(sj8));
if( IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(x3606)*(x3612)))+(((x3606)*(x3607)))+(((cj5)*(x3608)))+(((x3606)*(x3611)))+(((cj5)*(x3609))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(x3607)*(x3610)))+(((IkReal(-1.00000000000000))*(x3610)*(x3611)))+(((sj5)*(x3609)))+(((sj5)*(x3608)))+(((x3610)*(x3612))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst46)*(((((IkReal(-1.00000000000000))*(x3606)*(x3612)))+(((x3606)*(x3607)))+(((cj5)*(x3608)))+(((x3606)*(x3611)))+(((cj5)*(x3609)))))), ((gconst46)*(((((IkReal(-1.00000000000000))*(x3607)*(x3610)))+(((IkReal(-1.00000000000000))*(x3610)*(x3611)))+(((sj5)*(x3609)))+(((sj5)*(x3608)))+(((x3610)*(x3612)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3613=IKsin(j4);
IkReal x3614=IKcos(j4);
IkReal x3615=((IkReal(1.00000000000000))*(cj8));
IkReal x3616=((cj3)*(r01));
IkReal x3617=((IkReal(1.00000000000000))*(sj8));
IkReal x3618=((r11)*(sj3));
IkReal x3619=((cj3)*(r00));
IkReal x3620=((IkReal(1.00000000000000))*(sj6));
IkReal x3621=((IkReal(1.00000000000000))*(cj7));
IkReal x3622=((cj3)*(r02));
IkReal x3623=((cj8)*(sj7));
IkReal x3624=((r12)*(sj3));
IkReal x3625=((cj7)*(cj8));
IkReal x3626=((r21)*(sj8));
IkReal x3627=((r10)*(sj3));
IkReal x3628=((sj5)*(x3614));
IkReal x3629=((cj5)*(x3614));
IkReal x3630=((sj5)*(x3613));
IkReal x3631=((cj5)*(x3613));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x3620)*(x3631)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x3620)*(x3628))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x3630)+(((cj7)*(x3626)))+(((IkReal(-1.00000000000000))*(x3629)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3615))));
evalcond[2]=((((cj6)*(x3628)))+(((sj7)*(x3626)))+(((cj7)*(r22)))+(((cj6)*(x3631)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x3615))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3620)*(x3629)))+(((IkReal(-1.00000000000000))*(x3615)*(x3616)))+(((sj6)*(x3630)))+(((IkReal(-1.00000000000000))*(x3615)*(x3618)))+(((IkReal(-1.00000000000000))*(x3617)*(x3627)))+(((IkReal(-1.00000000000000))*(x3617)*(x3619))));
evalcond[4]=((((x3619)*(x3625)))+(((x3625)*(x3627)))+(((sj7)*(x3622)))+(((IkReal(-1.00000000000000))*(cj7)*(x3616)*(x3617)))+(x3628)+(((IkReal(-1.00000000000000))*(cj7)*(x3617)*(x3618)))+(x3631)+(((sj7)*(x3624))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x3617)*(x3618)))+(((IkReal(-1.00000000000000))*(sj7)*(x3616)*(x3617)))+(((IkReal(-1.00000000000000))*(x3621)*(x3624)))+(((x3619)*(x3623)))+(((x3623)*(x3627)))+(((cj6)*(x3629)))+(((IkReal(-1.00000000000000))*(cj6)*(x3630)))+(((IkReal(-1.00000000000000))*(x3621)*(x3622))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - HRP2STEP1 (5268c17360e4473e99ccf794a93cfb5f)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
