/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2015-04-22 02:08:15.177966
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#else
#ifndef isnan
#define isnan(x) std::isnan(x)
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKcos(j[2]);
x3=IKsin(j[1]);
x4=IKsin(j[2]);
x5=IKsin(j[3]);
x6=IKcos(j[3]);
x7=IKsin(j[0]);
x8=IKsin(j[4]);
x9=IKcos(j[4]);
x10=IKsin(j[5]);
x11=IKcos(j[5]);
x12=((IkReal(1.00000000000000))*(x9));
x13=((IkReal(0.00776462480902323))*(x7));
x14=((IkReal(0.965925348838040))*(x9));
x15=((IkReal(1.00000000000000))*(x5));
x16=((IkReal(0.0990000000000000))*(x0));
x17=((IkReal(0.0990000000000000))*(x7));
x18=((IkReal(0.258820826967441))*(x10));
x19=((IkReal(0.965925348838040))*(x10));
x20=((IkReal(0.258820826967441))*(x9));
x21=((IkReal(0.258820826967441))*(x11));
x22=((IkReal(0.965925348838040))*(x11));
x23=((IkReal(0.0900000000000000))*(x7));
x24=((IkReal(0.0300000000000000))*(x0));
x25=((IkReal(1.00000000000000))*(x8));
x26=((IkReal(0.965925348838040))*(x8));
x27=((IkReal(0.258820826967441))*(x8));
x28=((IkReal(1.00000000000000))*(x7));
x29=((IkReal(1.00000000000000))*(x2));
x30=((IkReal(0.0900000000000000))*(x2));
x31=((IkReal(1.00000000000000))*(x0));
x32=((IkReal(1.00000000000000))*(x6));
x33=((IkReal(0.0289777604651412))*(x7));
x34=((x3)*(x4));
x35=((x1)*(x2));
x36=((x1)*(x4));
x37=((x3)*(x7));
x38=((x2)*(x3));
x39=((x0)*(x5));
x40=((x15)*(x7));
x41=((x28)*(x6));
x42=((x0)*(x38));
x43=((x31)*(x34));
x44=((x28)*(x34));
x45=((x34)+(((IkReal(-1.00000000000000))*(x1)*(x29))));
x46=((((IkReal(0.0900000000000000))*(x34)))+(((IkReal(-1.00000000000000))*(x1)*(x30))));
x47=((((IkReal(-0.0990000000000000))*(x34)))+(((IkReal(0.0990000000000000))*(x35))));
x48=((((IkReal(1.00000000000000))*(x36)))+(((x29)*(x3))));
x49=((IkReal(-1.00000000000000))*(x48));
x50=((((IkReal(0.0900000000000000))*(x36)))+(((x3)*(x30))));
x51=((((IkReal(0.0990000000000000))*(x38)))+(((IkReal(0.0990000000000000))*(x36))));
x52=((IkReal(0.258820826967441))*(x49));
x53=((((x0)*(x35)))+(((IkReal(-1.00000000000000))*(x43))));
x54=((((x35)*(x7)))+(((IkReal(-1.00000000000000))*(x44))));
x55=((x49)*(x6));
x56=((x51)*(x6));
x57=((x50)*(x6));
x58=((x48)*(x5));
x59=((((IkReal(-1.00000000000000))*(x0)*(x1)*(x29)))+(x43));
x60=((x44)+(((IkReal(-1.00000000000000))*(x28)*(x35))));
x61=((((IkReal(-1.00000000000000))*(x0)*(x29)*(x3)))+(((IkReal(-1.00000000000000))*(x31)*(x36))));
x62=((x28)*(((((IkReal(-1.00000000000000))*(x38)))+(((IkReal(-1.00000000000000))*(x36))))));
x63=((x17)*(((x38)+(x36))));
x64=((x23)*(((((IkReal(-1.00000000000000))*(x38)))+(((IkReal(-1.00000000000000))*(x36))))));
x65=((x10)*(x49)*(x5));
x66=((x54)*(x6));
x67=((x53)*(x6));
x68=((x5)*(x59));
x69=((x66)+(x39));
x70=((((x0)*(x6)))+(((x5)*(x60))));
x71=((((IkReal(-1.00000000000000))*(x16)*(x5)))+(((IkReal(-0.0990000000000000))*(x66))));
x72=((((IkReal(-1.00000000000000))*(x15)*(x60)))+(((IkReal(-1.00000000000000))*(x31)*(x6))));
x73=((((IkReal(-0.0900000000000000))*(x66)))+(((IkReal(-0.0900000000000000))*(x39))));
x74=((((IkReal(-1.00000000000000))*(x12)*(x45)))+(((IkReal(-1.00000000000000))*(x25)*(x48)*(x6))));
x75=((((x25)*(((((IkReal(-1.00000000000000))*(x40)))+(((x32)*(x53)))))))+(((IkReal(-1.00000000000000))*(x12)*(x61))));
x76=((((x25)*(((((x0)*(x15)))+(((x32)*(x54)))))))+(((IkReal(-1.00000000000000))*(x12)*(x62))));
eerot[0]=((((x9)*(((x67)+(((IkReal(-1.00000000000000))*(x40)))))))+(((x61)*(x8))));
eerot[1]=((((x10)*(x75)))+(((x11)*(((x68)+(((IkReal(-1.00000000000000))*(x41))))))));
eerot[2]=((((x11)*(x75)))+(((x10)*(((x41)+(((IkReal(-1.00000000000000))*(x15)*(x59))))))));
IkReal x77=((x0)*(x3));
IkReal x78=((x0)*(x36));
eetrans[0]=((((IkReal(-0.235000000000000))*(x42)))+(((IkReal(-0.235000000000000))*(x78)))+(((x9)*(((((IkReal(-0.0990000000000000))*(x67)))+(((x17)*(x5)))))))+(((x24)*(x34)))+(((IkReal(-0.250000000000000))*(x77)))+(((x9)*(((((IkReal(-1.00000000000000))*(x30)*(x77)))+(((IkReal(-0.0900000000000000))*(x78)))))))+(((x8)*(((((IkReal(-0.0900000000000000))*(x67)))+(((x23)*(x5)))))))+(((IkReal(-0.0950000000000000))*(x7)))+(((IkReal(-1.00000000000000))*(x24)*(x35)))+(((x8)*(((((x16)*(x36)))+(((x16)*(x38))))))));
eerot[3]=((((x20)*(x55)))+(((x26)*(x62)))+(((x14)*(x69)))+(((x27)*(x45))));
eerot[4]=((((x21)*(x58)))+(((x18)*(x74)))+(((x19)*(x76)))+(((x22)*(x70))));
eerot[5]=((((x22)*(x76)))+(((x18)*(x49)*(x5)))+(((x21)*(x74)))+(((x19)*(x72))));
eetrans[1]=((IkReal(0.145000000000000))+(((IkReal(0.0917629081396138))*(x0)))+(((IkReal(-0.241481337209510))*(x37)))+(((IkReal(-1.00000000000000))*(x33)*(x35)))+(((IkReal(0.00776462480902323))*(x38)))+(((IkReal(-0.0647052067418602))*(x1)))+(((x26)*(x63)))+(((x20)*(x46)))+(((x27)*(x47)))+(((IkReal(-0.226992456976939))*(x36)*(x7)))+(((IkReal(-0.0608228943373486))*(x35)))+(((IkReal(0.00776462480902323))*(x36)))+(((x33)*(x34)))+(((x14)*(x71)))+(((IkReal(0.0608228943373486))*(x34)))+(((IkReal(-0.226992456976939))*(x2)*(x37)))+(((x20)*(x56)))+(((x14)*(x64)))+(((x27)*(x57)))+(((x26)*(x73))));
eerot[6]=((((x26)*(x45)))+(((IkReal(-1.00000000000000))*(x27)*(x62)))+(((x14)*(x55)))+(((IkReal(-1.00000000000000))*(x20)*(x69))));
eerot[7]=((((x19)*(x74)))+(((IkReal(-1.00000000000000))*(x21)*(x70)))+(((IkReal(-1.00000000000000))*(x18)*(x76)))+(((x22)*(x58))));
eerot[8]=((((x19)*(x49)*(x5)))+(((IkReal(-1.00000000000000))*(x21)*(x76)))+(((IkReal(-1.00000000000000))*(x18)*(x72)))+(((x22)*(x74))));
IkReal x79=((IkReal(1.00000000000000))*(x20));
IkReal x80=((IkReal(1.00000000000000))*(x27));
eetrans[2]=((IkReal(0.370296000000000))+(((x14)*(x56)))+(((IkReal(-0.241481337209510))*(x1)))+(((x26)*(x47)))+(((IkReal(0.0647052067418602))*(x37)))+(((x14)*(x46)))+(((IkReal(0.0289777604651412))*(x38)))+(((IkReal(0.0608228943373486))*(x36)*(x7)))+(((IkReal(0.0289777604651412))*(x36)))+(((IkReal(-1.00000000000000))*(x13)*(x34)))+(((IkReal(-0.226992456976939))*(x35)))+(((IkReal(0.0608228943373486))*(x2)*(x37)))+(((x13)*(x35)))+(((IkReal(-1.00000000000000))*(x64)*(x79)))+(((IkReal(-1.00000000000000))*(x71)*(x79)))+(((IkReal(0.226992456976939))*(x34)))+(((IkReal(-0.0245879785619069))*(x0)))+(((x26)*(x57)))+(((IkReal(-1.00000000000000))*(x63)*(x80)))+(((IkReal(-1.00000000000000))*(x73)*(x80))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j9,cj9,sj9,htj9,j10,cj10,sj10,htj10,j11,cj11,sj11,htj11,j12,cj12,sj12,htj12,j13,cj13,sj13,htj13,j14,cj14,sj14,htj14,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij9[2], _nj9,_ij10[2], _nj10,_ij11[2], _nj11,_ij12[2], _nj12,_ij13[2], _nj13,_ij14[2], _nj14;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j9=numeric_limits<IkReal>::quiet_NaN(); _ij9[0] = -1; _ij9[1] = -1; _nj9 = -1; j10=numeric_limits<IkReal>::quiet_NaN(); _ij10[0] = -1; _ij10[1] = -1; _nj10 = -1; j11=numeric_limits<IkReal>::quiet_NaN(); _ij11[0] = -1; _ij11[1] = -1; _nj11 = -1; j12=numeric_limits<IkReal>::quiet_NaN(); _ij12[0] = -1; _ij12[1] = -1; _nj12 = -1; j13=numeric_limits<IkReal>::quiet_NaN(); _ij13[0] = -1; _ij13[1] = -1; _nj13 = -1; j14=numeric_limits<IkReal>::quiet_NaN(); _ij14[0] = -1; _ij14[1] = -1; _nj14 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((IkReal(-1.00000000000000))*(r02));
new_r01=r01;
new_r02=r00;
new_px=((((IkReal(0.0990000000000000))*(r00)))+(px));
new_r10=((((IkReal(0.258820826967441))*(r22)))+(((IkReal(-0.965925348838040))*(r12))));
new_r11=((((IkReal(-0.258820826967441))*(r21)))+(((IkReal(0.965925348838040))*(r11))));
new_r12=((((IkReal(-0.258820826967441))*(r20)))+(((IkReal(0.965925348838040))*(r10))));
new_py=((IkReal(-0.0442188586387804))+(((IkReal(0.0956266095349660))*(r10)))+(((IkReal(0.965925348838040))*(py)))+(((IkReal(-0.258820826967441))*(pz)))+(((IkReal(-0.0256232618697767))*(r20))));
new_r20=((((IkReal(-0.258820826967441))*(r12)))+(((IkReal(-0.965925348838040))*(r22))));
new_r21=((((IkReal(0.258820826967441))*(r11)))+(((IkReal(0.965925348838040))*(r21))));
new_r22=((((IkReal(0.258820826967441))*(r10)))+(((IkReal(0.965925348838040))*(r20))));
new_pz=((IkReal(-0.395207312883610))+(((IkReal(0.0956266095349660))*(r20)))+(((IkReal(0.965925348838040))*(pz)))+(((IkReal(0.258820826967441))*(py)))+(((IkReal(0.0256232618697767))*(r10))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((pz)*(pz))+((py)*(py)));
npx=((((py)*(r10)))+(((pz)*(r20)))+(((px)*(r00))));
npy=((((px)*(r01)))+(((pz)*(r21)))+(((py)*(r11))));
npz=((((py)*(r12)))+(((pz)*(r22)))+(((px)*(r02))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((py)*(r00)))+(((IkReal(-1.00000000000000))*(px)*(r10))));
rxp1_0=((((pz)*(r11)))+(((IkReal(-1.00000000000000))*(py)*(r21))));
rxp1_1=((((IkReal(-1.00000000000000))*(pz)*(r01)))+(((px)*(r21))));
rxp1_2=((((py)*(r01)))+(((IkReal(-1.00000000000000))*(px)*(r11))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((py)*(r02)))+(((IkReal(-1.00000000000000))*(px)*(r12))));
IkReal op[72], zeror[48];
int numroots;
IkReal x81=((IkReal(0.650000000000000))*(npx));
IkReal x82=((IkReal(1.00000000000000))*(pp));
IkReal x83=((IkReal(0.0600000000000000))*(npz));
IkReal x84=((IkReal(0.0600000000000000))*(npy));
IkReal x85=((IkReal(0.0950000000000000))*(r22));
IkReal x86=((IkReal(0.120000000000000))*(npx));
IkReal x87=((IkReal(1.00000000000000))*(rxp0_2));
IkReal x88=((IkReal(2.00000000000000))*(rxp1_2));
IkReal x89=((IkReal(0.0950000000000000))*(r21));
IkReal x90=((IkReal(0.940000000000000))*(npz));
IkReal x91=((IkReal(0.190000000000000))*(r20));
IkReal x92=((IkReal(2.00000000000000))*(rxp2_2));
IkReal x93=((IkReal(0.180000000000000))*(r21));
IkReal x94=((IkReal(0.360000000000000))*(r20));
IkReal x95=((IkReal(0.380000000000000))*(r21));
IkReal x96=((IkReal(0.290000000000000))*(npx));
IkReal x97=((IkReal(0.00570000000000000))+(((IkReal(-1.00000000000000))*(x84))));
IkReal x98=((rxp0_2)+(((IkReal(-1.00000000000000))*(x85))));
IkReal x99=((IkReal(0.580000000000000))*(npy));
IkReal x100=((IkReal(-0.00570000000000000))+(((IkReal(-1.00000000000000))*(x84))));
IkReal x101=((IkReal(-1.30000000000000))*(npy));
IkReal x102=((IkReal(-0.0950000000000000))*(r21));
IkReal x103=((IkReal(-0.190000000000000))*(r20));
IkReal x104=((IkReal(0.00570000000000000))+(x84));
IkReal x105=((IkReal(-0.00570000000000000))+(x84));
IkReal x106=((rxp0_2)+(x85));
IkReal x107=((IkReal(-2.00000000000000))*(rxp1_2));
IkReal x108=((x85)+(((IkReal(-1.00000000000000))*(x87))));
IkReal x109=((IkReal(-0.0108000000000000))+(x90));
IkReal x110=((IkReal(-0.0350000000000000))+(x83));
IkReal x111=((IkReal(0.0496000000000000))+(x83));
IkReal x112=((IkReal(0.0108000000000000))+(x90));
IkReal x113=((((IkReal(-1.00000000000000))*(x85)))+(((IkReal(-1.00000000000000))*(x87))));
IkReal x114=((x82)+(x83));
IkReal x115=((x82)+(x96));
IkReal x116=((x93)+(x92));
op[0]=((IkReal(-0.0350000000000000))+(((IkReal(-1.00000000000000))*(x114)))+(x81));
op[1]=x104;
op[2]=x101;
op[3]=x86;
op[4]=((IkReal(-0.0350000000000000))+(((IkReal(-1.00000000000000))*(x114)))+(((IkReal(-1.00000000000000))*(x81))));
op[5]=x97;
op[6]=x108;
op[7]=x102;
op[8]=x88;
op[9]=x103;
op[10]=x106;
op[11]=x89;
op[12]=x105;
op[13]=((((IkReal(-1.00000000000000))*(x82)))+(x110)+(x81));
op[14]=x86;
op[15]=x101;
op[16]=x100;
op[17]=((((IkReal(-1.00000000000000))*(x82)))+(((IkReal(-1.00000000000000))*(x81)))+(x110));
op[18]=x102;
op[19]=x113;
op[20]=x103;
op[21]=x88;
op[22]=x89;
op[23]=x98;
op[24]=((x109)+(x86));
op[25]=IkReal(0);
op[26]=((IkReal(-0.240000000000000))*(npy));
op[27]=IkReal(0);
op[28]=((((IkReal(-1.00000000000000))*(x86)))+(x109));
op[29]=IkReal(0);
op[30]=((((IkReal(-1.00000000000000))*(x92)))+(((IkReal(-1.00000000000000))*(x91)))+(x93));
op[31]=IkReal(0);
op[32]=((x95)+(x94));
op[33]=IkReal(0);
op[34]=((((IkReal(-1.00000000000000))*(x116)))+(x91));
op[35]=IkReal(0);
op[36]=IkReal(0);
op[37]=((((IkReal(-1.00000000000000))*(x86)))+(x112));
op[38]=IkReal(0);
op[39]=((IkReal(0.240000000000000))*(npy));
op[40]=IkReal(0);
op[41]=((x112)+(x86));
op[42]=IkReal(0);
op[43]=((((IkReal(-1.00000000000000))*(x92)))+(x91)+(x93));
op[44]=IkReal(0);
op[45]=((((IkReal(-1.00000000000000))*(x95)))+(x94));
op[46]=IkReal(0);
op[47]=((((IkReal(-1.00000000000000))*(x116)))+(((IkReal(-1.00000000000000))*(x91))));
op[48]=((((IkReal(-1.00000000000000))*(x115)))+(x111));
op[49]=x104;
op[50]=x99;
op[51]=x86;
op[52]=((((IkReal(-1.00000000000000))*(x82)))+(x111)+(x96));
op[53]=x97;
op[54]=x98;
op[55]=x102;
op[56]=x107;
op[57]=x103;
op[58]=x113;
op[59]=x89;
op[60]=x105;
op[61]=((IkReal(0.0496000000000000))+(((IkReal(-1.00000000000000))*(x114)))+(((IkReal(-1.00000000000000))*(x96))));
op[62]=x86;
op[63]=x99;
op[64]=x100;
op[65]=((IkReal(0.0496000000000000))+(((IkReal(-1.00000000000000))*(x114)))+(x96));
op[66]=x102;
op[67]=x106;
op[68]=x103;
op[69]=x107;
op[70]=x89;
op[71]=x108;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j13array[16], cj13array[16], sj13array[16], j14array[16], cj14array[16], sj14array[16], j12array[16], cj12array[16], sj12array[16];
int numsolutions = 0;
for(int ij13 = 0; ij13 < numroots; ij13 += 3)
{
IkReal htj13 = zeror[ij13+0], htj14 = zeror[ij13+1], htj12 = zeror[ij13+2];
j13array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj13)));
j14array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj14)));
j12array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj12)));
IkReal x117=(htj13)*(htj13);
IkReal x118=(htj14)*(htj14);
IkReal x119=(htj12)*(htj12);
cj13array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x117))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x117)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x117))))));
cj14array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x118))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x118)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x118))))));
cj12array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x119))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x119)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x119))))));
sj13array[numsolutions]=((IkReal(2.00000000000000))*(htj13)*(((IKabs(((IkReal(1.00000000000000))+((htj13)*(htj13)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj13)*(htj13))))):(IkReal)1.0e30)));
sj14array[numsolutions]=((IkReal(2.00000000000000))*(htj14)*(((IKabs(((IkReal(1.00000000000000))+((htj14)*(htj14)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj14)*(htj14))))):(IkReal)1.0e30)));
sj12array[numsolutions]=((IkReal(2.00000000000000))*(htj12)*(((IKabs(((IkReal(1.00000000000000))+((htj12)*(htj12)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj12)*(htj12))))):(IkReal)1.0e30)));
if( j13array[numsolutions] > IKPI )
{
    j13array[numsolutions]-=IK2PI;
}
else if( j13array[numsolutions] < -IKPI )
{
    j13array[numsolutions]+=IK2PI;
}
if( j14array[numsolutions] > IKPI )
{
    j14array[numsolutions]-=IK2PI;
}
else if( j14array[numsolutions] < -IKPI )
{
    j14array[numsolutions]+=IK2PI;
}
if( j12array[numsolutions] > IKPI )
{
    j12array[numsolutions]-=IK2PI;
}
else if( j12array[numsolutions] < -IKPI )
{
    j12array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j13valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj13 = 16;
_nj14 = 1;
_nj12 = 1;
for(int ij13 = 0; ij13 < numsolutions; ++ij13)
    {
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
_ij14[0] = 0; _ij14[1] = -1;
_ij12[0] = 0; _ij12[1] = -1;
for(int iij13 = ij13+1; iij13 < numsolutions; ++iij13)
{
if( !j13valid[iij13] ) { continue; }
if( IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(cj14array[ij13]-cj14array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij13]-sj14array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(cj12array[ij13]-cj12array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij13]-sj12array[iij13]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j13valid[iij13]=false; _ij13[1] = iij13; _ij14[1] = 0; _ij12[1] = 0;  break; 
}
}
    j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];

    j14 = j14array[ij13]; cj14 = cj14array[ij13]; sj14 = sj14array[ij13];

    j12 = j12array[ij13]; cj12 = cj12array[ij13]; sj12 = sj12array[ij13];

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x120=(cj14)*(cj14);
IkReal x121=(sj14)*(sj14);
IkReal x122=((IkReal(1.00000000000000))*(r01));
IkReal x123=((sj13)*(sj14));
IkReal x124=((cj14)*(sj13));
IkReal x125=((r00)*(r11));
IkReal x126=((cj13)*(x120));
IkReal x127=((cj13)*(x121));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x122)*(x127)))+(((r02)*(r11)*(x124)))+(((x125)*(x127)))+(((r02)*(r10)*(x123)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x123)))+(((IkReal(-1.00000000000000))*(r10)*(x122)*(x126)))+(((IkReal(-1.00000000000000))*(r12)*(x122)*(x124)))+(((x125)*(x126)))));
IkReal x128=(cj14)*(cj14);
IkReal x129=(sj14)*(sj14);
IkReal x130=((IkReal(1.00000000000000))*(r01));
IkReal x131=((sj13)*(sj14));
IkReal x132=((cj14)*(sj13));
IkReal x133=((r00)*(r11));
IkReal x134=((cj13)*(x128));
IkReal x135=((cj13)*(x129));
dummyeval[0]=((((x133)*(x134)))+(((r02)*(r11)*(x132)))+(((IkReal(-1.00000000000000))*(r10)*(x130)*(x135)))+(((r02)*(r10)*(x131)))+(((x133)*(x135)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x131)))+(((IkReal(-1.00000000000000))*(r12)*(x130)*(x132)))+(((IkReal(-1.00000000000000))*(r10)*(x130)*(x134))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x136=(cj14)*(cj14);
IkReal x137=(sj14)*(sj14);
IkReal x138=((cj13)*(r12));
IkReal x139=((IkReal(1.00000000000000))*(r10));
IkReal x140=((cj13)*(r02));
IkReal x141=((r01)*(sj13));
IkReal x142=((r00)*(r11)*(sj13));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x140)))+(((IkReal(-1.00000000000000))*(x136)*(x139)*(x141)))+(((x136)*(x142)))+(((IkReal(-1.00000000000000))*(sj14)*(x139)*(x140)))+(((r00)*(sj14)*(x138)))+(((IkReal(-1.00000000000000))*(x137)*(x139)*(x141)))+(((cj14)*(r01)*(x138)))+(((x137)*(x142)))));
IkReal x143=(cj14)*(cj14);
IkReal x144=(sj14)*(sj14);
IkReal x145=((cj13)*(r12));
IkReal x146=((IkReal(1.00000000000000))*(r10));
IkReal x147=((cj13)*(r02));
IkReal x148=((r01)*(sj13));
IkReal x149=((r00)*(r11)*(sj13));
dummyeval[0]=((((IkReal(-1.00000000000000))*(sj14)*(x146)*(x147)))+(((IkReal(-1.00000000000000))*(x144)*(x146)*(x148)))+(((cj14)*(r01)*(x145)))+(((x143)*(x149)))+(((IkReal(-1.00000000000000))*(x143)*(x146)*(x148)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x147)))+(((r00)*(sj14)*(x145)))+(((x144)*(x149))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x150=((IkReal(4.00000000000000))*(cj13));
IkReal x151=((npy)*(sj14));
IkReal x152=((IkReal(4.00000000000000))*(sj13));
IkReal x153=((cj14)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x152)*(x153)))+(((npz)*(x150)))+(((IkReal(0.360000000000000))*(sj13)))+(((x151)*(x152))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x150)*(x151)))+(((npz)*(x152)))+(((x150)*(x153))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x152)*(x153)))+(((npz)*(x150)))+(((IkReal(0.360000000000000))*(sj13)))+(((x151)*(x152)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x150)*(x151)))+(((npz)*(x152)))+(((x150)*(x153)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x152)*(x153)))+(((npz)*(x150)))+(((IkReal(0.360000000000000))*(sj13)))+(((x151)*(x152)))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x150)*(x151)))+(((npz)*(x152)))+(((x150)*(x153)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x154=((npy)*(sj14));
IkReal x155=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((cj13)*(x154)))+(((IkReal(-1.00000000000000))*(cj13)*(x155)))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
evalcond[1]=((IkReal(0.0300000000000000))+(((cj13)*(npz)))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(sj13)*(x155)))+(((sj13)*(x154))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst66;
IkReal x156=(sj14)*(sj14);
IkReal x157=(cj14)*(cj14);
IkReal x158=((IkReal(2.00000000000000))*(cj14)*(sj14));
gconst66=IKsign(((((x156)*((r00)*(r00))))+(((r00)*(r01)*(x158)))+(((x156)*((r10)*(r10))))+(((r10)*(r11)*(x158)))+(((x157)*((r11)*(r11))))+(((x157)*((r01)*(r01))))));
IkReal x159=(sj14)*(sj14);
IkReal x160=(cj14)*(cj14);
IkReal x161=((IkReal(2.00000000000000))*(cj14)*(sj14));
dummyeval[0]=((((x159)*((r10)*(r10))))+(((r10)*(r11)*(x161)))+(((r00)*(r01)*(x161)))+(((x160)*((r01)*(r01))))+(((x160)*((r11)*(r11))))+(((x159)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst68;
gconst68=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst67;
IkReal x162=(cj14)*(cj14);
IkReal x163=(sj14)*(sj14);
IkReal x164=((IkReal(1.00000000000000))*(r01));
IkReal x165=((sj13)*(sj14));
IkReal x166=((cj14)*(sj13));
IkReal x167=((r00)*(r11));
IkReal x168=((cj13)*(x162));
IkReal x169=((cj13)*(x163));
gconst67=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x164)*(x168)))+(((x167)*(x169)))+(((IkReal(-1.00000000000000))*(r10)*(x164)*(x169)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x165)))+(((x167)*(x168)))+(((IkReal(-1.00000000000000))*(r12)*(x164)*(x166)))+(((r02)*(r11)*(x166)))+(((r02)*(r10)*(x165)))));
IkReal x170=(cj14)*(cj14);
IkReal x171=(sj14)*(sj14);
IkReal x172=((IkReal(1.00000000000000))*(r01));
IkReal x173=((sj13)*(sj14));
IkReal x174=((cj14)*(sj13));
IkReal x175=((r00)*(r11));
IkReal x176=((cj13)*(x170));
IkReal x177=((cj13)*(x171));
dummyeval[0]=((((x175)*(x177)))+(((IkReal(-1.00000000000000))*(r10)*(x172)*(x177)))+(((r02)*(r11)*(x174)))+(((IkReal(-1.00000000000000))*(r12)*(x172)*(x174)))+(((r02)*(r10)*(x173)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x173)))+(((x175)*(x176)))+(((IkReal(-1.00000000000000))*(r10)*(x172)*(x176))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x178=((cj13)*(cj14));
IkReal x179=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst67)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x179)))+(((r10)*(x178))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst67)*(((((r02)*(sj13)))+(((r00)*(x178)))+(((IkReal(-1.00000000000000))*(r01)*(x179))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst67)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x179)))+(((r10)*(x178)))))), ((gconst67)*(((((r02)*(sj13)))+(((r00)*(x178)))+(((IkReal(-1.00000000000000))*(r01)*(x179)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x180=IKsin(j9);
IkReal x181=IKcos(j9);
IkReal x182=((r10)*(sj14));
IkReal x183=((cj14)*(r11));
IkReal x184=((cj14)*(r10));
IkReal x185=((r11)*(sj14));
IkReal x186=((cj14)*(r00));
IkReal x187=((r00)*(sj14));
IkReal x188=((IkReal(1.00000000000000))*(x180));
IkReal x189=((cj13)*(x180));
IkReal x190=((sj13)*(x181));
IkReal x191=((r01)*(x180));
IkReal x192=((IkReal(1.00000000000000))*(x181));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x183)*(x192)))+(((IkReal(-1.00000000000000))*(x182)*(x192)))+(((x180)*(x187)))+(((cj14)*(x191))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x187)*(x192)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x192)))+(((IkReal(-1.00000000000000))*(x183)*(x188)))+(((IkReal(-1.00000000000000))*(x182)*(x188))));
evalcond[2]=((((cj13)*(x181)*(x184)))+(((IkReal(-1.00000000000000))*(cj13)*(x186)*(x188)))+(((r12)*(x190)))+(((IkReal(-1.00000000000000))*(cj13)*(x185)*(x192)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x188)))+(((r01)*(sj14)*(x189))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(r12)*(x192)))+(((r02)*(x189)))+(((sj13)*(sj14)*(x191)))+(((x184)*(x190)))+(((IkReal(-1.00000000000000))*(sj13)*(x186)*(x188)))+(((IkReal(-1.00000000000000))*(x185)*(x190))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst69;
gconst69=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst70;
gconst70=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x193=((cj13)*(sj14));
IkReal x194=((cj11)*(sj9));
IkReal x195=((IkReal(1.00000000000000))*(r11));
IkReal x196=((IkReal(1.00000000000000))*(sj11));
IkReal x197=((cj13)*(cj14));
IkReal x198=((r22)*(sj13));
IkReal x199=((r12)*(sj13));
IkReal x200=((cj9)*(r01));
IkReal x201=((cj9)*(sj11));
IkReal x202=((r02)*(sj13));
IkReal x203=((IkReal(1.00000000000000))*(cj11));
IkReal x204=((sj11)*(sj9));
IkReal x205=((cj11)*(cj9));
if( IKabs(((gconst70)*(((((IkReal(-1.00000000000000))*(x193)*(x194)*(x195)))+(((IkReal(-1.00000000000000))*(x193)*(x200)*(x203)))+(((x194)*(x199)))+(((IkReal(-1.00000000000000))*(x196)*(x198)))+(((x202)*(x205)))+(((IkReal(-1.00000000000000))*(r20)*(x196)*(x197)))+(((r10)*(x194)*(x197)))+(((r00)*(x197)*(x205)))+(((r21)*(sj11)*(x193))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((cj11)*(x198)))+(((IkReal(-1.00000000000000))*(x193)*(x196)*(x200)))+(((IkReal(-1.00000000000000))*(r21)*(x193)*(x203)))+(((x199)*(x204)))+(((r00)*(x197)*(x201)))+(((IkReal(-1.00000000000000))*(x193)*(x195)*(x204)))+(((x201)*(x202)))+(((cj11)*(r20)*(x197)))+(((r10)*(x197)*(x204))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst70)*(((((IkReal(-1.00000000000000))*(x193)*(x194)*(x195)))+(((IkReal(-1.00000000000000))*(x193)*(x200)*(x203)))+(((x194)*(x199)))+(((IkReal(-1.00000000000000))*(x196)*(x198)))+(((x202)*(x205)))+(((IkReal(-1.00000000000000))*(r20)*(x196)*(x197)))+(((r10)*(x194)*(x197)))+(((r00)*(x197)*(x205)))+(((r21)*(sj11)*(x193)))))), ((gconst70)*(((((cj11)*(x198)))+(((IkReal(-1.00000000000000))*(x193)*(x196)*(x200)))+(((IkReal(-1.00000000000000))*(r21)*(x193)*(x203)))+(((x199)*(x204)))+(((r00)*(x197)*(x201)))+(((IkReal(-1.00000000000000))*(x193)*(x195)*(x204)))+(((x201)*(x202)))+(((cj11)*(r20)*(x197)))+(((r10)*(x197)*(x204)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x206=IKsin(j10);
IkReal x207=IKcos(j10);
IkReal x208=((IkReal(1.00000000000000))*(sj13));
IkReal x209=((r11)*(sj9));
IkReal x210=((cj9)*(r01));
IkReal x211=((r21)*(sj14));
IkReal x212=((cj9)*(r02));
IkReal x213=((sj13)*(sj9));
IkReal x214=((cj14)*(r10));
IkReal x215=((IkReal(1.00000000000000))*(cj13));
IkReal x216=((cj14)*(r20));
IkReal x217=((cj11)*(x206));
IkReal x218=((sj11)*(x207));
IkReal x219=((sj14)*(x215));
IkReal x220=((sj11)*(x206));
IkReal x221=((cj11)*(x207));
IkReal x222=((cj14)*(cj9)*(r00));
IkReal x223=((x217)+(x218));
evalcond[0]=((((IkReal(-1.00000000000000))*(x221)))+(((IkReal(-1.00000000000000))*(x215)*(x216)))+(x220)+(((IkReal(-1.00000000000000))*(r22)*(x208)))+(((cj13)*(x211))));
evalcond[1]=((((sj13)*(x211)))+(((IkReal(-1.00000000000000))*(x208)*(x216)))+(x223)+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x210)*(x219)))+(((r12)*(x213)))+(((cj13)*(sj9)*(x214)))+(((cj13)*(x222)))+(x223)+(((IkReal(-1.00000000000000))*(x209)*(x219)))+(((sj13)*(x212))));
evalcond[3]=((((x213)*(x214)))+(((IkReal(-1.00000000000000))*(sj14)*(x208)*(x210)))+(((sj13)*(x222)))+(x221)+(((IkReal(-1.00000000000000))*(x212)*(x215)))+(((IkReal(-1.00000000000000))*(sj14)*(x208)*(x209)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x215)))+(((IkReal(-1.00000000000000))*(x220))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x224=((cj13)*(sj11));
IkReal x225=((r21)*(sj14));
IkReal x226=((cj11)*(cj13));
IkReal x227=((cj11)*(sj13));
IkReal x228=((sj11)*(sj13));
IkReal x229=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst69)*(((((IkReal(-1.00000000000000))*(r22)*(x228)))+(((x224)*(x225)))+(((r22)*(x226)))+(((IkReal(-1.00000000000000))*(x224)*(x229)))+(((x225)*(x227)))+(((IkReal(-1.00000000000000))*(x227)*(x229))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst69)*(((((cj14)*(r20)*(x226)))+(((x225)*(x228)))+(((IkReal(-1.00000000000000))*(x228)*(x229)))+(((IkReal(-1.00000000000000))*(x225)*(x226)))+(((r22)*(x224)))+(((r22)*(x227))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst69)*(((((IkReal(-1.00000000000000))*(r22)*(x228)))+(((x224)*(x225)))+(((r22)*(x226)))+(((IkReal(-1.00000000000000))*(x224)*(x229)))+(((x225)*(x227)))+(((IkReal(-1.00000000000000))*(x227)*(x229)))))), ((gconst69)*(((((cj14)*(r20)*(x226)))+(((x225)*(x228)))+(((IkReal(-1.00000000000000))*(x228)*(x229)))+(((IkReal(-1.00000000000000))*(x225)*(x226)))+(((r22)*(x224)))+(((r22)*(x227)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x230=IKsin(j10);
IkReal x231=IKcos(j10);
IkReal x232=((IkReal(1.00000000000000))*(sj13));
IkReal x233=((r11)*(sj9));
IkReal x234=((cj9)*(r01));
IkReal x235=((r21)*(sj14));
IkReal x236=((cj9)*(r02));
IkReal x237=((sj13)*(sj9));
IkReal x238=((cj14)*(r10));
IkReal x239=((IkReal(1.00000000000000))*(cj13));
IkReal x240=((cj14)*(r20));
IkReal x241=((cj11)*(x230));
IkReal x242=((sj11)*(x231));
IkReal x243=((sj14)*(x239));
IkReal x244=((sj11)*(x230));
IkReal x245=((cj11)*(x231));
IkReal x246=((cj14)*(cj9)*(r00));
IkReal x247=((x242)+(x241));
evalcond[0]=((((cj13)*(x235)))+(((IkReal(-1.00000000000000))*(x245)))+(((IkReal(-1.00000000000000))*(x239)*(x240)))+(((IkReal(-1.00000000000000))*(r22)*(x232)))+(x244));
evalcond[1]=((((sj13)*(x235)))+(x247)+(((IkReal(-1.00000000000000))*(x232)*(x240)))+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x236)))+(((r12)*(x237)))+(((cj13)*(x246)))+(((cj13)*(sj9)*(x238)))+(((IkReal(-1.00000000000000))*(x234)*(x243)))+(((IkReal(-1.00000000000000))*(x233)*(x243)))+(x247));
evalcond[3]=((((IkReal(-1.00000000000000))*(x244)))+(((x237)*(x238)))+(x245)+(((sj13)*(x246)))+(((IkReal(-1.00000000000000))*(sj14)*(x232)*(x234)))+(((IkReal(-1.00000000000000))*(x236)*(x239)))+(((IkReal(-1.00000000000000))*(sj14)*(x232)*(x233)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x239))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x248=((cj13)*(sj11));
IkReal x249=((r21)*(sj14));
IkReal x250=((cj11)*(cj13));
IkReal x251=((cj11)*(sj13));
IkReal x252=((sj11)*(sj13));
IkReal x253=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst68)*(((((x249)*(x251)))+(((r22)*(x250)))+(((IkReal(-1.00000000000000))*(r22)*(x252)))+(((IkReal(-1.00000000000000))*(x248)*(x253)))+(((x248)*(x249)))+(((IkReal(-1.00000000000000))*(x251)*(x253))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst68)*(((((IkReal(-1.00000000000000))*(x252)*(x253)))+(((r22)*(x251)))+(((IkReal(-1.00000000000000))*(x249)*(x250)))+(((cj14)*(r20)*(x250)))+(((r22)*(x248)))+(((x249)*(x252))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst68)*(((((x249)*(x251)))+(((r22)*(x250)))+(((IkReal(-1.00000000000000))*(r22)*(x252)))+(((IkReal(-1.00000000000000))*(x248)*(x253)))+(((x248)*(x249)))+(((IkReal(-1.00000000000000))*(x251)*(x253)))))), ((gconst68)*(((((IkReal(-1.00000000000000))*(x252)*(x253)))+(((r22)*(x251)))+(((IkReal(-1.00000000000000))*(x249)*(x250)))+(((cj14)*(r20)*(x250)))+(((r22)*(x248)))+(((x249)*(x252)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x254=IKsin(j10);
IkReal x255=IKcos(j10);
IkReal x256=((IkReal(1.00000000000000))*(sj13));
IkReal x257=((cj14)*(r20));
IkReal x258=((r21)*(sj14));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x256)))+(((cj13)*(x258)))+(((sj11)*(x254)))+(((IkReal(-1.00000000000000))*(cj13)*(x257)))+(((IkReal(-1.00000000000000))*(cj11)*(x255))));
evalcond[1]=((((sj13)*(x258)))+(((sj11)*(x255)))+(((IkReal(-1.00000000000000))*(x256)*(x257)))+(((cj11)*(x254)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst71;
IkReal x259=(sj14)*(sj14);
IkReal x260=(cj14)*(cj14);
IkReal x261=((IkReal(2.00000000000000))*(cj14)*(sj14));
gconst71=IKsign(((((r00)*(r01)*(x261)))+(((x259)*((r00)*(r00))))+(((x259)*((r10)*(r10))))+(((x260)*((r01)*(r01))))+(((x260)*((r11)*(r11))))+(((r10)*(r11)*(x261)))));
IkReal x262=(sj14)*(sj14);
IkReal x263=(cj14)*(cj14);
IkReal x264=((IkReal(2.00000000000000))*(cj14)*(sj14));
dummyeval[0]=((((x263)*((r11)*(r11))))+(((x262)*((r00)*(r00))))+(((r10)*(r11)*(x264)))+(((x262)*((r10)*(r10))))+(((r00)*(r01)*(x264)))+(((x263)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst72;
IkReal x265=(cj14)*(cj14);
IkReal x266=(sj14)*(sj14);
IkReal x267=((IkReal(1.00000000000000))*(r01));
IkReal x268=((sj13)*(sj14));
IkReal x269=((cj14)*(sj13));
IkReal x270=((r00)*(r11));
IkReal x271=((cj13)*(x265));
IkReal x272=((cj13)*(x266));
gconst72=IKsign(((((x270)*(x272)))+(((IkReal(-1.00000000000000))*(r10)*(x267)*(x271)))+(((r02)*(r11)*(x269)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x268)))+(((IkReal(-1.00000000000000))*(r10)*(x267)*(x272)))+(((x270)*(x271)))+(((r02)*(r10)*(x268)))+(((IkReal(-1.00000000000000))*(r12)*(x267)*(x269)))));
IkReal x273=(cj14)*(cj14);
IkReal x274=(sj14)*(sj14);
IkReal x275=((IkReal(1.00000000000000))*(r01));
IkReal x276=((sj13)*(sj14));
IkReal x277=((cj14)*(sj13));
IkReal x278=((r00)*(r11));
IkReal x279=((cj13)*(x273));
IkReal x280=((cj13)*(x274));
dummyeval[0]=((((r02)*(r11)*(x277)))+(((r02)*(r10)*(x276)))+(((IkReal(-1.00000000000000))*(r10)*(x275)*(x280)))+(((x278)*(x279)))+(((IkReal(-1.00000000000000))*(r10)*(x275)*(x279)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x276)))+(((x278)*(x280)))+(((IkReal(-1.00000000000000))*(r12)*(x275)*(x277))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x281=((cj13)*(cj14));
IkReal x282=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst72)*(((((r12)*(sj13)))+(((r10)*(x281)))+(((IkReal(-1.00000000000000))*(r11)*(x282))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst72)*(((((r02)*(sj13)))+(((r00)*(x281)))+(((IkReal(-1.00000000000000))*(r01)*(x282))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst72)*(((((r12)*(sj13)))+(((r10)*(x281)))+(((IkReal(-1.00000000000000))*(r11)*(x282)))))), ((gconst72)*(((((r02)*(sj13)))+(((r00)*(x281)))+(((IkReal(-1.00000000000000))*(r01)*(x282)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x283=IKsin(j9);
IkReal x284=IKcos(j9);
IkReal x285=((IkReal(1.00000000000000))*(cj14));
IkReal x286=((IkReal(1.00000000000000))*(sj14));
IkReal x287=((cj13)*(cj14));
IkReal x288=((cj14)*(r10));
IkReal x289=((r01)*(sj14));
IkReal x290=((IkReal(1.00000000000000))*(r12));
IkReal x291=((sj13)*(x284));
IkReal x292=((r02)*(x283));
IkReal x293=((r11)*(x283));
IkReal x294=((r10)*(x284));
IkReal x295=((r01)*(x284));
IkReal x296=((sj13)*(x283));
IkReal x297=((r11)*(x284));
IkReal x298=((cj13)*(x283));
IkReal x299=((r10)*(x283));
IkReal x300=((r00)*(x284));
IkReal x301=((cj13)*(x284));
evalcond[0]=((IkReal(1.00000000000000))+(((r00)*(sj14)*(x283)))+(((IkReal(-1.00000000000000))*(x286)*(x294)))+(((IkReal(-1.00000000000000))*(x285)*(x297)))+(((cj14)*(r01)*(x283))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x286)*(x299)))+(((IkReal(-1.00000000000000))*(x285)*(x293)))+(((IkReal(-1.00000000000000))*(x286)*(x300)))+(((IkReal(-1.00000000000000))*(x285)*(x295))));
evalcond[2]=((((x287)*(x294)))+(((IkReal(-1.00000000000000))*(sj13)*(x292)))+(((r12)*(x291)))+(((x289)*(x298)))+(((IkReal(-1.00000000000000))*(cj13)*(x286)*(x297)))+(((IkReal(-1.00000000000000))*(r00)*(x285)*(x298))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x286)*(x291)))+(((IkReal(-1.00000000000000))*(x290)*(x301)))+(((cj13)*(x292)))+(((x288)*(x291)))+(((IkReal(-1.00000000000000))*(r00)*(x285)*(x296)))+(((x289)*(x296))));
evalcond[4]=((((cj10)*(sj11)))+(((r02)*(x291)))+(((IkReal(-1.00000000000000))*(cj13)*(x286)*(x295)))+(((x287)*(x299)))+(((cj11)*(sj10)))+(((r12)*(x296)))+(((x287)*(x300)))+(((IkReal(-1.00000000000000))*(cj13)*(x286)*(x293))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(r01)*(x286)*(x291)))+(((IkReal(-1.00000000000000))*(r02)*(x301)))+(((IkReal(-1.00000000000000))*(sj13)*(x286)*(x293)))+(((cj10)*(cj11)))+(((x288)*(x296)))+(((IkReal(-1.00000000000000))*(x290)*(x298)))+(((cj14)*(r00)*(x291))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst71)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst71)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst71)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst71)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x302=IKsin(j9);
IkReal x303=IKcos(j9);
IkReal x304=((IkReal(1.00000000000000))*(cj14));
IkReal x305=((IkReal(1.00000000000000))*(sj14));
IkReal x306=((cj13)*(cj14));
IkReal x307=((cj14)*(r10));
IkReal x308=((r01)*(sj14));
IkReal x309=((IkReal(1.00000000000000))*(r12));
IkReal x310=((sj13)*(x303));
IkReal x311=((r02)*(x302));
IkReal x312=((r11)*(x302));
IkReal x313=((r10)*(x303));
IkReal x314=((r01)*(x303));
IkReal x315=((sj13)*(x302));
IkReal x316=((r11)*(x303));
IkReal x317=((cj13)*(x302));
IkReal x318=((r10)*(x302));
IkReal x319=((r00)*(x303));
IkReal x320=((cj13)*(x303));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x305)*(x313)))+(((r00)*(sj14)*(x302)))+(((IkReal(-1.00000000000000))*(x304)*(x316)))+(((cj14)*(r01)*(x302))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x304)*(x312)))+(((IkReal(-1.00000000000000))*(x305)*(x318)))+(((IkReal(-1.00000000000000))*(x305)*(x319)))+(((IkReal(-1.00000000000000))*(x304)*(x314))));
evalcond[2]=((((r12)*(x310)))+(((IkReal(-1.00000000000000))*(sj13)*(x311)))+(((x308)*(x317)))+(((IkReal(-1.00000000000000))*(r00)*(x304)*(x317)))+(((IkReal(-1.00000000000000))*(cj13)*(x305)*(x316)))+(((x306)*(x313))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x304)*(x315)))+(((x308)*(x315)))+(((IkReal(-1.00000000000000))*(r11)*(x305)*(x310)))+(((cj13)*(x311)))+(((IkReal(-1.00000000000000))*(x309)*(x320)))+(((x307)*(x310))));
evalcond[4]=((((x306)*(x319)))+(((IkReal(-1.00000000000000))*(cj13)*(x305)*(x312)))+(((cj10)*(sj11)))+(((r02)*(x310)))+(((r12)*(x315)))+(((cj11)*(sj10)))+(((IkReal(-1.00000000000000))*(cj13)*(x305)*(x314)))+(((x306)*(x318))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x309)*(x317)))+(((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((x307)*(x315)))+(((IkReal(-1.00000000000000))*(r01)*(x305)*(x310)))+(((cj14)*(r00)*(x310)))+(((IkReal(-1.00000000000000))*(sj13)*(x305)*(x312)))+(((IkReal(-1.00000000000000))*(r02)*(x320)))+(((cj10)*(cj11))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst66)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst66)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst66)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst66)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x321=IKsin(j9);
IkReal x322=IKcos(j9);
IkReal x323=((r10)*(sj14));
IkReal x324=((cj14)*(r11));
IkReal x325=((cj14)*(r10));
IkReal x326=((r11)*(sj14));
IkReal x327=((cj14)*(r00));
IkReal x328=((r00)*(sj14));
IkReal x329=((IkReal(1.00000000000000))*(x321));
IkReal x330=((cj13)*(x321));
IkReal x331=((sj13)*(x322));
IkReal x332=((r01)*(x321));
IkReal x333=((IkReal(1.00000000000000))*(x322));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x323)*(x333)))+(((x321)*(x328)))+(((cj14)*(x332)))+(((IkReal(-1.00000000000000))*(x324)*(x333))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x328)*(x333)))+(((IkReal(-1.00000000000000))*(x323)*(x329)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x333)))+(((IkReal(-1.00000000000000))*(x324)*(x329))));
evalcond[2]=((((r01)*(sj14)*(x330)))+(((cj13)*(x322)*(x325)))+(((IkReal(-1.00000000000000))*(cj13)*(x326)*(x333)))+(((r12)*(x331)))+(((IkReal(-1.00000000000000))*(cj13)*(x327)*(x329)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x329))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj13)*(x327)*(x329)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x333)))+(((sj13)*(sj14)*(x332)))+(((IkReal(-1.00000000000000))*(x326)*(x331)))+(((x325)*(x331)))+(((r02)*(x330))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst69;
gconst69=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst70;
gconst70=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x334=((cj13)*(sj14));
IkReal x335=((cj11)*(sj9));
IkReal x336=((IkReal(1.00000000000000))*(r11));
IkReal x337=((IkReal(1.00000000000000))*(sj11));
IkReal x338=((cj13)*(cj14));
IkReal x339=((r22)*(sj13));
IkReal x340=((r12)*(sj13));
IkReal x341=((cj9)*(r01));
IkReal x342=((cj9)*(sj11));
IkReal x343=((r02)*(sj13));
IkReal x344=((IkReal(1.00000000000000))*(cj11));
IkReal x345=((sj11)*(sj9));
IkReal x346=((cj11)*(cj9));
if( IKabs(((gconst70)*(((((x335)*(x340)))+(((IkReal(-1.00000000000000))*(x334)*(x335)*(x336)))+(((r10)*(x335)*(x338)))+(((IkReal(-1.00000000000000))*(r20)*(x337)*(x338)))+(((r21)*(sj11)*(x334)))+(((IkReal(-1.00000000000000))*(x334)*(x341)*(x344)))+(((x343)*(x346)))+(((r00)*(x338)*(x346)))+(((IkReal(-1.00000000000000))*(x337)*(x339))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((r00)*(x338)*(x342)))+(((IkReal(-1.00000000000000))*(x334)*(x337)*(x341)))+(((IkReal(-1.00000000000000))*(r21)*(x334)*(x344)))+(((cj11)*(x339)))+(((r10)*(x338)*(x345)))+(((IkReal(-1.00000000000000))*(x334)*(x336)*(x345)))+(((x342)*(x343)))+(((cj11)*(r20)*(x338)))+(((x340)*(x345))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst70)*(((((x335)*(x340)))+(((IkReal(-1.00000000000000))*(x334)*(x335)*(x336)))+(((r10)*(x335)*(x338)))+(((IkReal(-1.00000000000000))*(r20)*(x337)*(x338)))+(((r21)*(sj11)*(x334)))+(((IkReal(-1.00000000000000))*(x334)*(x341)*(x344)))+(((x343)*(x346)))+(((r00)*(x338)*(x346)))+(((IkReal(-1.00000000000000))*(x337)*(x339)))))), ((gconst70)*(((((r00)*(x338)*(x342)))+(((IkReal(-1.00000000000000))*(x334)*(x337)*(x341)))+(((IkReal(-1.00000000000000))*(r21)*(x334)*(x344)))+(((cj11)*(x339)))+(((r10)*(x338)*(x345)))+(((IkReal(-1.00000000000000))*(x334)*(x336)*(x345)))+(((x342)*(x343)))+(((cj11)*(r20)*(x338)))+(((x340)*(x345)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x347=IKsin(j10);
IkReal x348=IKcos(j10);
IkReal x349=((IkReal(1.00000000000000))*(sj13));
IkReal x350=((r11)*(sj9));
IkReal x351=((cj9)*(r01));
IkReal x352=((r21)*(sj14));
IkReal x353=((cj9)*(r02));
IkReal x354=((sj13)*(sj9));
IkReal x355=((cj14)*(r10));
IkReal x356=((IkReal(1.00000000000000))*(cj13));
IkReal x357=((cj14)*(r20));
IkReal x358=((cj11)*(x347));
IkReal x359=((sj11)*(x348));
IkReal x360=((sj14)*(x356));
IkReal x361=((sj11)*(x347));
IkReal x362=((cj11)*(x348));
IkReal x363=((cj14)*(cj9)*(r00));
IkReal x364=((x359)+(x358));
evalcond[0]=((((cj13)*(x352)))+(x361)+(((IkReal(-1.00000000000000))*(x356)*(x357)))+(((IkReal(-1.00000000000000))*(r22)*(x349)))+(((IkReal(-1.00000000000000))*(x362))));
evalcond[1]=((x364)+(((sj13)*(x352)))+(((IkReal(-1.00000000000000))*(x349)*(x357)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x355)))+(((IkReal(-1.00000000000000))*(x350)*(x360)))+(((r12)*(x354)))+(x364)+(((IkReal(-1.00000000000000))*(x351)*(x360)))+(((sj13)*(x353)))+(((cj13)*(x363))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x349)*(x350)))+(((IkReal(-1.00000000000000))*(x361)))+(x362)+(((x354)*(x355)))+(((sj13)*(x363)))+(((IkReal(-1.00000000000000))*(x353)*(x356)))+(((IkReal(-1.00000000000000))*(sj14)*(x349)*(x351)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x356))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x365=((cj13)*(sj11));
IkReal x366=((r21)*(sj14));
IkReal x367=((cj11)*(cj13));
IkReal x368=((cj11)*(sj13));
IkReal x369=((sj11)*(sj13));
IkReal x370=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst69)*(((((x366)*(x368)))+(((x365)*(x366)))+(((IkReal(-1.00000000000000))*(x365)*(x370)))+(((r22)*(x367)))+(((IkReal(-1.00000000000000))*(r22)*(x369)))+(((IkReal(-1.00000000000000))*(x368)*(x370))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst69)*(((((r22)*(x365)))+(((IkReal(-1.00000000000000))*(x366)*(x367)))+(((cj14)*(r20)*(x367)))+(((IkReal(-1.00000000000000))*(x369)*(x370)))+(((x366)*(x369)))+(((r22)*(x368))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst69)*(((((x366)*(x368)))+(((x365)*(x366)))+(((IkReal(-1.00000000000000))*(x365)*(x370)))+(((r22)*(x367)))+(((IkReal(-1.00000000000000))*(r22)*(x369)))+(((IkReal(-1.00000000000000))*(x368)*(x370)))))), ((gconst69)*(((((r22)*(x365)))+(((IkReal(-1.00000000000000))*(x366)*(x367)))+(((cj14)*(r20)*(x367)))+(((IkReal(-1.00000000000000))*(x369)*(x370)))+(((x366)*(x369)))+(((r22)*(x368)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x371=IKsin(j10);
IkReal x372=IKcos(j10);
IkReal x373=((IkReal(1.00000000000000))*(sj13));
IkReal x374=((r11)*(sj9));
IkReal x375=((cj9)*(r01));
IkReal x376=((r21)*(sj14));
IkReal x377=((cj9)*(r02));
IkReal x378=((sj13)*(sj9));
IkReal x379=((cj14)*(r10));
IkReal x380=((IkReal(1.00000000000000))*(cj13));
IkReal x381=((cj14)*(r20));
IkReal x382=((cj11)*(x371));
IkReal x383=((sj11)*(x372));
IkReal x384=((sj14)*(x380));
IkReal x385=((sj11)*(x371));
IkReal x386=((cj11)*(x372));
IkReal x387=((cj14)*(cj9)*(r00));
IkReal x388=((x382)+(x383));
evalcond[0]=((x385)+(((IkReal(-1.00000000000000))*(r22)*(x373)))+(((IkReal(-1.00000000000000))*(x380)*(x381)))+(((cj13)*(x376)))+(((IkReal(-1.00000000000000))*(x386))));
evalcond[1]=((((sj13)*(x376)))+(((IkReal(-1.00000000000000))*(x373)*(x381)))+(x388)+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x379)))+(x388)+(((cj13)*(x387)))+(((sj13)*(x377)))+(((IkReal(-1.00000000000000))*(x374)*(x384)))+(((IkReal(-1.00000000000000))*(x375)*(x384)))+(((r12)*(x378))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x373)*(x375)))+(x386)+(((IkReal(-1.00000000000000))*(sj14)*(x373)*(x374)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x380)))+(((x378)*(x379)))+(((sj13)*(x387)))+(((IkReal(-1.00000000000000))*(x377)*(x380)))+(((IkReal(-1.00000000000000))*(x385))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x389=((IkReal(4.00000000000000))*(cj13));
IkReal x390=((npy)*(sj14));
IkReal x391=((cj14)*(npx));
IkReal x392=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x389)))+(((x391)*(x392)))+(((IkReal(-1.00000000000000))*(x390)*(x392)))+(((IkReal(-0.360000000000000))*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x389)*(x390)))+(((x389)*(x391)))+(((npz)*(x392))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x389)))+(((x391)*(x392)))+(((IkReal(-1.00000000000000))*(x390)*(x392)))+(((IkReal(-0.360000000000000))*(sj13)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x389)*(x390)))+(((x389)*(x391)))+(((npz)*(x392)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x389)))+(((x391)*(x392)))+(((IkReal(-1.00000000000000))*(x390)*(x392)))+(((IkReal(-0.360000000000000))*(sj13)))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x389)*(x390)))+(((x389)*(x391)))+(((npz)*(x392)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x393=((npy)*(sj14));
IkReal x394=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((cj13)*(x393)))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(-1.00000000000000))*(cj13)*(x394)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(sj13)*(x394)))+(((sj13)*(x393)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(IKsin(j11)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst75;
IkReal x395=(sj14)*(sj14);
IkReal x396=(cj14)*(cj14);
IkReal x397=((IkReal(1.00000000000000))*(x395));
IkReal x398=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x399=((IkReal(1.00000000000000))*(x396));
gconst75=IKsign(((((IkReal(-1.00000000000000))*(x397)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x398)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x398)))+(((IkReal(-1.00000000000000))*(x399)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x399)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x397)*((r10)*(r10))))));
IkReal x400=(sj14)*(sj14);
IkReal x401=(cj14)*(cj14);
IkReal x402=((IkReal(1.00000000000000))*(x400));
IkReal x403=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x404=((IkReal(1.00000000000000))*(x401));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x402)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x402)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x404)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x403)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x403)))+(((IkReal(-1.00000000000000))*(x404)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst77;
gconst77=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst76;
IkReal x405=(sj14)*(sj14);
IkReal x406=(cj14)*(cj14);
IkReal x407=((cj14)*(sj13));
IkReal x408=((IkReal(1.00000000000000))*(r11));
IkReal x409=((cj13)*(r00));
IkReal x410=((sj13)*(sj14));
IkReal x411=((cj13)*(r01)*(r10));
gconst76=IKsign(((((IkReal(-1.00000000000000))*(x406)*(x408)*(x409)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x410)))+(((x406)*(x411)))+(((IkReal(-1.00000000000000))*(r02)*(x407)*(x408)))+(((r01)*(r12)*(x407)))+(((IkReal(-1.00000000000000))*(x405)*(x408)*(x409)))+(((r00)*(r12)*(x410)))+(((x405)*(x411)))));
IkReal x412=(sj14)*(sj14);
IkReal x413=(cj14)*(cj14);
IkReal x414=((cj14)*(sj13));
IkReal x415=((IkReal(1.00000000000000))*(r11));
IkReal x416=((cj13)*(r00));
IkReal x417=((sj13)*(sj14));
IkReal x418=((cj13)*(r01)*(r10));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x412)*(x415)*(x416)))+(((x412)*(x418)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x417)))+(((IkReal(-1.00000000000000))*(r02)*(x414)*(x415)))+(((r00)*(r12)*(x417)))+(((IkReal(-1.00000000000000))*(x413)*(x415)*(x416)))+(((x413)*(x418)))+(((r01)*(r12)*(x414))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x419=((cj13)*(cj14));
IkReal x420=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst76)*(((((r12)*(sj13)))+(((r10)*(x419)))+(((IkReal(-1.00000000000000))*(r11)*(x420))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst76)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x420)))+(((r00)*(x419))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst76)*(((((r12)*(sj13)))+(((r10)*(x419)))+(((IkReal(-1.00000000000000))*(r11)*(x420)))))), ((gconst76)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x420)))+(((r00)*(x419)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x421=IKsin(j9);
IkReal x422=IKcos(j9);
IkReal x423=((r10)*(sj14));
IkReal x424=((cj14)*(r11));
IkReal x425=((cj14)*(r10));
IkReal x426=((r11)*(sj14));
IkReal x427=((cj14)*(r00));
IkReal x428=((r00)*(sj14));
IkReal x429=((IkReal(1.00000000000000))*(x421));
IkReal x430=((cj13)*(x421));
IkReal x431=((sj13)*(x422));
IkReal x432=((r01)*(x421));
IkReal x433=((IkReal(1.00000000000000))*(x422));
evalcond[0]=((IkReal(-1.00000000000000))+(((cj14)*(x432)))+(((IkReal(-1.00000000000000))*(x423)*(x433)))+(((x421)*(x428)))+(((IkReal(-1.00000000000000))*(x424)*(x433))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x433)))+(((IkReal(-1.00000000000000))*(x423)*(x429)))+(((IkReal(-1.00000000000000))*(x428)*(x433)))+(((IkReal(-1.00000000000000))*(x424)*(x429))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x426)*(x433)))+(((r01)*(sj14)*(x430)))+(((cj13)*(x422)*(x425)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x429)))+(((r12)*(x431)))+(((IkReal(-1.00000000000000))*(cj13)*(x427)*(x429))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(r12)*(x433)))+(((IkReal(-1.00000000000000))*(sj13)*(x427)*(x429)))+(((x425)*(x431)))+(((IkReal(-1.00000000000000))*(x426)*(x431)))+(((r02)*(x430)))+(((sj13)*(sj14)*(x432))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst78;
gconst78=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst79;
gconst79=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x434=((cj13)*(sj14));
IkReal x435=((IkReal(1.00000000000000))*(cj11));
IkReal x436=((r11)*(sj9));
IkReal x437=((cj11)*(sj13));
IkReal x438=((r12)*(sj9));
IkReal x439=((r10)*(sj9));
IkReal x440=((sj11)*(sj13));
IkReal x441=((cj9)*(r02));
IkReal x442=((cj9)*(r01));
IkReal x443=((IkReal(1.00000000000000))*(sj11));
IkReal x444=((cj9)*(r00));
IkReal x445=((cj13)*(cj14)*(sj11));
IkReal x446=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst79)*(((((IkReal(-1.00000000000000))*(x434)*(x435)*(x442)))+(((x439)*(x446)))+(((IkReal(-1.00000000000000))*(x434)*(x435)*(x436)))+(((x437)*(x438)))+(((x444)*(x446)))+(((IkReal(-1.00000000000000))*(r22)*(x440)))+(((r21)*(sj11)*(x434)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x443)))+(((x437)*(x441))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst79)*(((((IkReal(-1.00000000000000))*(r21)*(x434)*(x435)))+(((r20)*(x446)))+(((IkReal(-1.00000000000000))*(x434)*(x442)*(x443)))+(((x440)*(x441)))+(((x438)*(x440)))+(((r22)*(x437)))+(((IkReal(-1.00000000000000))*(x434)*(x436)*(x443)))+(((x444)*(x445)))+(((x439)*(x445))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst79)*(((((IkReal(-1.00000000000000))*(x434)*(x435)*(x442)))+(((x439)*(x446)))+(((IkReal(-1.00000000000000))*(x434)*(x435)*(x436)))+(((x437)*(x438)))+(((x444)*(x446)))+(((IkReal(-1.00000000000000))*(r22)*(x440)))+(((r21)*(sj11)*(x434)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x443)))+(((x437)*(x441)))))), ((gconst79)*(((((IkReal(-1.00000000000000))*(r21)*(x434)*(x435)))+(((r20)*(x446)))+(((IkReal(-1.00000000000000))*(x434)*(x442)*(x443)))+(((x440)*(x441)))+(((x438)*(x440)))+(((r22)*(x437)))+(((IkReal(-1.00000000000000))*(x434)*(x436)*(x443)))+(((x444)*(x445)))+(((x439)*(x445)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x447=IKsin(j10);
IkReal x448=IKcos(j10);
IkReal x449=((IkReal(1.00000000000000))*(sj13));
IkReal x450=((r11)*(sj9));
IkReal x451=((cj9)*(r01));
IkReal x452=((IkReal(1.00000000000000))*(cj11));
IkReal x453=((r21)*(sj14));
IkReal x454=((cj9)*(r02));
IkReal x455=((sj13)*(sj9));
IkReal x456=((cj14)*(r10));
IkReal x457=((IkReal(1.00000000000000))*(cj13));
IkReal x458=((cj14)*(r20));
IkReal x459=((sj11)*(x447));
IkReal x460=((sj14)*(x457));
IkReal x461=((sj11)*(x448));
IkReal x462=((cj14)*(cj9)*(r00));
IkReal x463=((x448)*(x452));
evalcond[0]=((((IkReal(-1.00000000000000))*(x463)))+(x459)+(((IkReal(-1.00000000000000))*(r22)*(x449)))+(((cj13)*(x453)))+(((IkReal(-1.00000000000000))*(x457)*(x458))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x461)))+(((sj13)*(x453)))+(((IkReal(-1.00000000000000))*(x447)*(x452)))+(((IkReal(-1.00000000000000))*(x449)*(x458)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x456)))+(((sj13)*(x454)))+(x461)+(((r12)*(x455)))+(((cj13)*(x462)))+(((IkReal(-1.00000000000000))*(x451)*(x460)))+(((cj11)*(x447)))+(((IkReal(-1.00000000000000))*(x450)*(x460))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x463)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x457)))+(x459)+(((IkReal(-1.00000000000000))*(sj14)*(x449)*(x451)))+(((IkReal(-1.00000000000000))*(x454)*(x457)))+(((sj13)*(x462)))+(((x455)*(x456)))+(((IkReal(-1.00000000000000))*(sj14)*(x449)*(x450))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x464=((cj13)*(sj11));
IkReal x465=((r21)*(sj14));
IkReal x466=((cj11)*(cj13));
IkReal x467=((IkReal(1.00000000000000))*(sj13));
IkReal x468=((sj11)*(sj13));
IkReal x469=((cj14)*(r20));
if( IKabs(((gconst78)*(((((x464)*(x469)))+(((IkReal(-1.00000000000000))*(x464)*(x465)))+(((r22)*(x468)))+(((IkReal(-1.00000000000000))*(cj11)*(x467)*(x469)))+(((r22)*(x466)))+(((cj11)*(sj13)*(x465))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst78)*(((((IkReal(-1.00000000000000))*(x466)*(x469)))+(((x465)*(x466)))+(((r22)*(x464)))+(((IkReal(-1.00000000000000))*(sj11)*(x467)*(x469)))+(((x465)*(x468)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x467))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst78)*(((((x464)*(x469)))+(((IkReal(-1.00000000000000))*(x464)*(x465)))+(((r22)*(x468)))+(((IkReal(-1.00000000000000))*(cj11)*(x467)*(x469)))+(((r22)*(x466)))+(((cj11)*(sj13)*(x465)))))), ((gconst78)*(((((IkReal(-1.00000000000000))*(x466)*(x469)))+(((x465)*(x466)))+(((r22)*(x464)))+(((IkReal(-1.00000000000000))*(sj11)*(x467)*(x469)))+(((x465)*(x468)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x467)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x470=IKsin(j10);
IkReal x471=IKcos(j10);
IkReal x472=((IkReal(1.00000000000000))*(sj13));
IkReal x473=((r11)*(sj9));
IkReal x474=((cj9)*(r01));
IkReal x475=((IkReal(1.00000000000000))*(cj11));
IkReal x476=((r21)*(sj14));
IkReal x477=((cj9)*(r02));
IkReal x478=((sj13)*(sj9));
IkReal x479=((cj14)*(r10));
IkReal x480=((IkReal(1.00000000000000))*(cj13));
IkReal x481=((cj14)*(r20));
IkReal x482=((sj11)*(x470));
IkReal x483=((sj14)*(x480));
IkReal x484=((sj11)*(x471));
IkReal x485=((cj14)*(cj9)*(r00));
IkReal x486=((x471)*(x475));
evalcond[0]=((((IkReal(-1.00000000000000))*(x480)*(x481)))+(((cj13)*(x476)))+(((IkReal(-1.00000000000000))*(x486)))+(x482)+(((IkReal(-1.00000000000000))*(r22)*(x472))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x470)*(x475)))+(((IkReal(-1.00000000000000))*(x484)))+(((sj13)*(x476)))+(((IkReal(-1.00000000000000))*(x472)*(x481)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x479)))+(((sj13)*(x477)))+(((r12)*(x478)))+(((cj11)*(x470)))+(((IkReal(-1.00000000000000))*(x473)*(x483)))+(x484)+(((IkReal(-1.00000000000000))*(x474)*(x483)))+(((cj13)*(x485))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x477)*(x480)))+(((IkReal(-1.00000000000000))*(sj14)*(x472)*(x473)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x480)))+(((sj13)*(x485)))+(((IkReal(-1.00000000000000))*(x486)))+(((IkReal(-1.00000000000000))*(sj14)*(x472)*(x474)))+(x482)+(((x478)*(x479))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x487=((cj13)*(sj11));
IkReal x488=((r21)*(sj14));
IkReal x489=((cj11)*(cj13));
IkReal x490=((IkReal(1.00000000000000))*(sj13));
IkReal x491=((sj11)*(sj13));
IkReal x492=((cj14)*(r20));
if( IKabs(((gconst77)*(((((x487)*(x492)))+(((r22)*(x489)))+(((IkReal(-1.00000000000000))*(x487)*(x488)))+(((r22)*(x491)))+(((IkReal(-1.00000000000000))*(cj11)*(x490)*(x492)))+(((cj11)*(sj13)*(x488))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst77)*(((((r22)*(x487)))+(((IkReal(-1.00000000000000))*(sj11)*(x490)*(x492)))+(((x488)*(x489)))+(((x488)*(x491)))+(((IkReal(-1.00000000000000))*(x489)*(x492)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x490))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst77)*(((((x487)*(x492)))+(((r22)*(x489)))+(((IkReal(-1.00000000000000))*(x487)*(x488)))+(((r22)*(x491)))+(((IkReal(-1.00000000000000))*(cj11)*(x490)*(x492)))+(((cj11)*(sj13)*(x488)))))), ((gconst77)*(((((r22)*(x487)))+(((IkReal(-1.00000000000000))*(sj11)*(x490)*(x492)))+(((x488)*(x489)))+(((x488)*(x491)))+(((IkReal(-1.00000000000000))*(x489)*(x492)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x490)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x493=IKsin(j10);
IkReal x494=IKcos(j10);
IkReal x495=((IkReal(1.00000000000000))*(sj13));
IkReal x496=((cj14)*(r20));
IkReal x497=((r21)*(sj14));
IkReal x498=((IkReal(1.00000000000000))*(x494));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x495)))+(((cj13)*(x497)))+(((IkReal(-1.00000000000000))*(cj13)*(x496)))+(((IkReal(-1.00000000000000))*(cj11)*(x498)))+(((sj11)*(x493))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x495)*(x496)))+(((sj13)*(x497)))+(((IkReal(-1.00000000000000))*(cj11)*(x493)))+(((IkReal(-1.00000000000000))*(sj11)*(x498)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst80;
IkReal x499=(sj14)*(sj14);
IkReal x500=(cj14)*(cj14);
IkReal x501=((IkReal(1.00000000000000))*(x499));
IkReal x502=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x503=((IkReal(1.00000000000000))*(x500));
gconst80=IKsign(((((IkReal(-1.00000000000000))*(x501)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x502)))+(((IkReal(-1.00000000000000))*(x503)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x503)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x501)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x502)))));
IkReal x504=(sj14)*(sj14);
IkReal x505=(cj14)*(cj14);
IkReal x506=((IkReal(1.00000000000000))*(x504));
IkReal x507=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x508=((IkReal(1.00000000000000))*(x505));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x506)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x507)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x507)))+(((IkReal(-1.00000000000000))*(x506)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x508)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x508)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst81;
IkReal x509=(sj14)*(sj14);
IkReal x510=(cj14)*(cj14);
IkReal x511=((cj14)*(sj13));
IkReal x512=((IkReal(1.00000000000000))*(r11));
IkReal x513=((cj13)*(r00));
IkReal x514=((sj13)*(sj14));
IkReal x515=((cj13)*(r01)*(r10));
gconst81=IKsign(((((r01)*(r12)*(x511)))+(((x509)*(x515)))+(((r00)*(r12)*(x514)))+(((IkReal(-1.00000000000000))*(x510)*(x512)*(x513)))+(((IkReal(-1.00000000000000))*(x509)*(x512)*(x513)))+(((x510)*(x515)))+(((IkReal(-1.00000000000000))*(r02)*(x511)*(x512)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x514)))));
IkReal x516=(sj14)*(sj14);
IkReal x517=(cj14)*(cj14);
IkReal x518=((cj14)*(sj13));
IkReal x519=((IkReal(1.00000000000000))*(r11));
IkReal x520=((cj13)*(r00));
IkReal x521=((sj13)*(sj14));
IkReal x522=((cj13)*(r01)*(r10));
dummyeval[0]=((((x516)*(x522)))+(((IkReal(-1.00000000000000))*(x517)*(x519)*(x520)))+(((r00)*(r12)*(x521)))+(((IkReal(-1.00000000000000))*(x516)*(x519)*(x520)))+(((IkReal(-1.00000000000000))*(r02)*(x518)*(x519)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x521)))+(((x517)*(x522)))+(((r01)*(r12)*(x518))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x523=((cj13)*(cj14));
IkReal x524=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst81)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x524)))+(((r10)*(x523))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst81)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x524)))+(((r00)*(x523))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst81)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x524)))+(((r10)*(x523)))))), ((gconst81)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x524)))+(((r00)*(x523)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x525=IKsin(j9);
IkReal x526=IKcos(j9);
IkReal x527=((IkReal(1.00000000000000))*(cj14));
IkReal x528=((IkReal(1.00000000000000))*(sj14));
IkReal x529=((cj13)*(cj14));
IkReal x530=((cj14)*(r10));
IkReal x531=((r01)*(sj14));
IkReal x532=((IkReal(1.00000000000000))*(r12));
IkReal x533=((sj13)*(x526));
IkReal x534=((r02)*(x525));
IkReal x535=((r11)*(x525));
IkReal x536=((r10)*(x526));
IkReal x537=((r01)*(x526));
IkReal x538=((sj13)*(x525));
IkReal x539=((r11)*(x526));
IkReal x540=((cj13)*(x525));
IkReal x541=((r10)*(x525));
IkReal x542=((r00)*(x526));
IkReal x543=((cj13)*(x526));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x527)*(x539)))+(((r00)*(sj14)*(x525)))+(((IkReal(-1.00000000000000))*(x528)*(x536)))+(((cj14)*(r01)*(x525))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x527)*(x537)))+(((IkReal(-1.00000000000000))*(x527)*(x535)))+(((IkReal(-1.00000000000000))*(x528)*(x541)))+(((IkReal(-1.00000000000000))*(x528)*(x542))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x527)*(x540)))+(((x529)*(x536)))+(((x531)*(x540)))+(((r12)*(x533)))+(((IkReal(-1.00000000000000))*(cj13)*(x528)*(x539)))+(((IkReal(-1.00000000000000))*(sj13)*(x534))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x527)*(x538)))+(((IkReal(-1.00000000000000))*(x532)*(x543)))+(((x530)*(x533)))+(((cj13)*(x534)))+(((x531)*(x538)))+(((IkReal(-1.00000000000000))*(r11)*(x528)*(x533))));
evalcond[4]=((((r12)*(x538)))+(((x529)*(x542)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x528)*(x535)))+(((r02)*(x533)))+(((x529)*(x541)))+(((cj11)*(sj10)))+(((IkReal(-1.00000000000000))*(cj13)*(x528)*(x537))));
evalcond[5]=((((x530)*(x538)))+(((IkReal(-1.00000000000000))*(r02)*(x543)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(sj13)*(x528)*(x535)))+(((cj14)*(r00)*(x533)))+(((IkReal(-1.00000000000000))*(x532)*(x540)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(r01)*(x528)*(x533))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst80)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst80)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst80)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst80)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x544=IKsin(j9);
IkReal x545=IKcos(j9);
IkReal x546=((IkReal(1.00000000000000))*(cj14));
IkReal x547=((IkReal(1.00000000000000))*(sj14));
IkReal x548=((cj13)*(cj14));
IkReal x549=((cj14)*(r10));
IkReal x550=((r01)*(sj14));
IkReal x551=((IkReal(1.00000000000000))*(r12));
IkReal x552=((sj13)*(x545));
IkReal x553=((r02)*(x544));
IkReal x554=((r11)*(x544));
IkReal x555=((r10)*(x545));
IkReal x556=((r01)*(x545));
IkReal x557=((sj13)*(x544));
IkReal x558=((r11)*(x545));
IkReal x559=((cj13)*(x544));
IkReal x560=((r10)*(x544));
IkReal x561=((r00)*(x545));
IkReal x562=((cj13)*(x545));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x547)*(x555)))+(((IkReal(-1.00000000000000))*(x546)*(x558)))+(((r00)*(sj14)*(x544)))+(((cj14)*(r01)*(x544))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x546)*(x554)))+(((IkReal(-1.00000000000000))*(x546)*(x556)))+(((IkReal(-1.00000000000000))*(x547)*(x561)))+(((IkReal(-1.00000000000000))*(x547)*(x560))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x547)*(x558)))+(((r12)*(x552)))+(((x548)*(x555)))+(((IkReal(-1.00000000000000))*(sj13)*(x553)))+(((IkReal(-1.00000000000000))*(r00)*(x546)*(x559)))+(((x550)*(x559))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x551)*(x562)))+(((cj13)*(x553)))+(((x550)*(x557)))+(((IkReal(-1.00000000000000))*(r00)*(x546)*(x557)))+(((x549)*(x552)))+(((IkReal(-1.00000000000000))*(r11)*(x547)*(x552))));
evalcond[4]=((((cj10)*(sj11)))+(((x548)*(x560)))+(((IkReal(-1.00000000000000))*(cj13)*(x547)*(x556)))+(((r02)*(x552)))+(((cj11)*(sj10)))+(((r12)*(x557)))+(((IkReal(-1.00000000000000))*(cj13)*(x547)*(x554)))+(((x548)*(x561))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x547)*(x552)))+(((IkReal(-1.00000000000000))*(x551)*(x559)))+(((sj10)*(sj11)))+(((cj14)*(r00)*(x552)))+(((IkReal(-1.00000000000000))*(sj13)*(x547)*(x554)))+(((x549)*(x557)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(r02)*(x562))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst75)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst75)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst75)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst75)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x563=IKsin(j9);
IkReal x564=IKcos(j9);
IkReal x565=((r10)*(sj14));
IkReal x566=((cj14)*(r11));
IkReal x567=((cj14)*(r10));
IkReal x568=((r11)*(sj14));
IkReal x569=((cj14)*(r00));
IkReal x570=((r00)*(sj14));
IkReal x571=((IkReal(1.00000000000000))*(x563));
IkReal x572=((cj13)*(x563));
IkReal x573=((sj13)*(x564));
IkReal x574=((r01)*(x563));
IkReal x575=((IkReal(1.00000000000000))*(x564));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x566)*(x575)))+(((x563)*(x570)))+(((IkReal(-1.00000000000000))*(x565)*(x575)))+(((cj14)*(x574))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x565)*(x571)))+(((IkReal(-1.00000000000000))*(x570)*(x575)))+(((IkReal(-1.00000000000000))*(x566)*(x571)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x575))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(sj13)*(x571)))+(((IkReal(-1.00000000000000))*(cj13)*(x569)*(x571)))+(((r01)*(sj14)*(x572)))+(((r12)*(x573)))+(((IkReal(-1.00000000000000))*(cj13)*(x568)*(x575)))+(((cj13)*(x564)*(x567))));
evalcond[3]=((((sj13)*(sj14)*(x574)))+(((r02)*(x572)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x575)))+(((IkReal(-1.00000000000000))*(x568)*(x573)))+(((IkReal(-1.00000000000000))*(sj13)*(x569)*(x571)))+(((x567)*(x573))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst78;
gconst78=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst79;
gconst79=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x576=((cj13)*(sj14));
IkReal x577=((IkReal(1.00000000000000))*(cj11));
IkReal x578=((r11)*(sj9));
IkReal x579=((cj11)*(sj13));
IkReal x580=((r12)*(sj9));
IkReal x581=((r10)*(sj9));
IkReal x582=((sj11)*(sj13));
IkReal x583=((cj9)*(r02));
IkReal x584=((cj9)*(r01));
IkReal x585=((IkReal(1.00000000000000))*(sj11));
IkReal x586=((cj9)*(r00));
IkReal x587=((cj13)*(cj14)*(sj11));
IkReal x588=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst79)*(((((x579)*(x580)))+(((x586)*(x588)))+(((x579)*(x583)))+(((IkReal(-1.00000000000000))*(r22)*(x582)))+(((r21)*(sj11)*(x576)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x585)))+(((x581)*(x588)))+(((IkReal(-1.00000000000000))*(x576)*(x577)*(x584)))+(((IkReal(-1.00000000000000))*(x576)*(x577)*(x578))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst79)*(((((IkReal(-1.00000000000000))*(x576)*(x578)*(x585)))+(((IkReal(-1.00000000000000))*(r21)*(x576)*(x577)))+(((x581)*(x587)))+(((r20)*(x588)))+(((IkReal(-1.00000000000000))*(x576)*(x584)*(x585)))+(((r22)*(x579)))+(((x586)*(x587)))+(((x582)*(x583)))+(((x580)*(x582))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst79)*(((((x579)*(x580)))+(((x586)*(x588)))+(((x579)*(x583)))+(((IkReal(-1.00000000000000))*(r22)*(x582)))+(((r21)*(sj11)*(x576)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x585)))+(((x581)*(x588)))+(((IkReal(-1.00000000000000))*(x576)*(x577)*(x584)))+(((IkReal(-1.00000000000000))*(x576)*(x577)*(x578)))))), ((gconst79)*(((((IkReal(-1.00000000000000))*(x576)*(x578)*(x585)))+(((IkReal(-1.00000000000000))*(r21)*(x576)*(x577)))+(((x581)*(x587)))+(((r20)*(x588)))+(((IkReal(-1.00000000000000))*(x576)*(x584)*(x585)))+(((r22)*(x579)))+(((x586)*(x587)))+(((x582)*(x583)))+(((x580)*(x582)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x589=IKsin(j10);
IkReal x590=IKcos(j10);
IkReal x591=((IkReal(1.00000000000000))*(sj13));
IkReal x592=((r11)*(sj9));
IkReal x593=((cj9)*(r01));
IkReal x594=((IkReal(1.00000000000000))*(cj11));
IkReal x595=((r21)*(sj14));
IkReal x596=((cj9)*(r02));
IkReal x597=((sj13)*(sj9));
IkReal x598=((cj14)*(r10));
IkReal x599=((IkReal(1.00000000000000))*(cj13));
IkReal x600=((cj14)*(r20));
IkReal x601=((sj11)*(x589));
IkReal x602=((sj14)*(x599));
IkReal x603=((sj11)*(x590));
IkReal x604=((cj14)*(cj9)*(r00));
IkReal x605=((x590)*(x594));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x591)))+(((IkReal(-1.00000000000000))*(x605)))+(((IkReal(-1.00000000000000))*(x599)*(x600)))+(((cj13)*(x595)))+(x601));
evalcond[1]=((((IkReal(-1.00000000000000))*(x603)))+(((IkReal(-1.00000000000000))*(x591)*(x600)))+(((sj13)*(x595)))+(((IkReal(-1.00000000000000))*(x589)*(x594)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x598)))+(((IkReal(-1.00000000000000))*(x593)*(x602)))+(((cj11)*(x589)))+(((cj13)*(x604)))+(((sj13)*(x596)))+(((r12)*(x597)))+(((IkReal(-1.00000000000000))*(x592)*(x602)))+(x603));
evalcond[3]=((((IkReal(-1.00000000000000))*(x605)))+(((IkReal(-1.00000000000000))*(x596)*(x599)))+(((IkReal(-1.00000000000000))*(sj14)*(x591)*(x593)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x599)))+(((sj13)*(x604)))+(((IkReal(-1.00000000000000))*(sj14)*(x591)*(x592)))+(((x597)*(x598)))+(x601));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x606=((cj13)*(sj11));
IkReal x607=((r21)*(sj14));
IkReal x608=((cj11)*(cj13));
IkReal x609=((IkReal(1.00000000000000))*(sj13));
IkReal x610=((sj11)*(sj13));
IkReal x611=((cj14)*(r20));
if( IKabs(((gconst78)*(((((x606)*(x611)))+(((IkReal(-1.00000000000000))*(x606)*(x607)))+(((r22)*(x610)))+(((r22)*(x608)))+(((cj11)*(sj13)*(x607)))+(((IkReal(-1.00000000000000))*(cj11)*(x609)*(x611))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst78)*(((((IkReal(-1.00000000000000))*(sj11)*(x609)*(x611)))+(((IkReal(-1.00000000000000))*(x608)*(x611)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x609)))+(((r22)*(x606)))+(((x607)*(x610)))+(((x607)*(x608))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst78)*(((((x606)*(x611)))+(((IkReal(-1.00000000000000))*(x606)*(x607)))+(((r22)*(x610)))+(((r22)*(x608)))+(((cj11)*(sj13)*(x607)))+(((IkReal(-1.00000000000000))*(cj11)*(x609)*(x611)))))), ((gconst78)*(((((IkReal(-1.00000000000000))*(sj11)*(x609)*(x611)))+(((IkReal(-1.00000000000000))*(x608)*(x611)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x609)))+(((r22)*(x606)))+(((x607)*(x610)))+(((x607)*(x608)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x612=IKsin(j10);
IkReal x613=IKcos(j10);
IkReal x614=((IkReal(1.00000000000000))*(sj13));
IkReal x615=((r11)*(sj9));
IkReal x616=((cj9)*(r01));
IkReal x617=((IkReal(1.00000000000000))*(cj11));
IkReal x618=((r21)*(sj14));
IkReal x619=((cj9)*(r02));
IkReal x620=((sj13)*(sj9));
IkReal x621=((cj14)*(r10));
IkReal x622=((IkReal(1.00000000000000))*(cj13));
IkReal x623=((cj14)*(r20));
IkReal x624=((sj11)*(x612));
IkReal x625=((sj14)*(x622));
IkReal x626=((sj11)*(x613));
IkReal x627=((cj14)*(cj9)*(r00));
IkReal x628=((x613)*(x617));
evalcond[0]=((((cj13)*(x618)))+(((IkReal(-1.00000000000000))*(x622)*(x623)))+(((IkReal(-1.00000000000000))*(x628)))+(((IkReal(-1.00000000000000))*(r22)*(x614)))+(x624));
evalcond[1]=((((sj13)*(x618)))+(((IkReal(-1.00000000000000))*(x612)*(x617)))+(((IkReal(-1.00000000000000))*(x614)*(x623)))+(((IkReal(-1.00000000000000))*(x626)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x616)*(x625)))+(((r12)*(x620)))+(((cj13)*(x627)))+(((cj13)*(sj9)*(x621)))+(x626)+(((cj11)*(x612)))+(((sj13)*(x619)))+(((IkReal(-1.00000000000000))*(x615)*(x625))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x614)*(x615)))+(((IkReal(-1.00000000000000))*(sj14)*(x614)*(x616)))+(((sj13)*(x627)))+(((IkReal(-1.00000000000000))*(x628)))+(x624)+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x622)))+(((x620)*(x621)))+(((IkReal(-1.00000000000000))*(x619)*(x622))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x629=((IkReal(4.00000000000000))*(sj14));
IkReal x630=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(npx)*(x629)))+(((IkReal(-1.00000000000000))*(npy)*(x630)))+(((IkReal(0.380000000000000))*(cj12)))+(((IkReal(0.120000000000000))*(sj12))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x630)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x629))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(npx)*(x629)))+(((IkReal(-1.00000000000000))*(npy)*(x630)))+(((IkReal(0.380000000000000))*(cj12)))+(((IkReal(0.120000000000000))*(sj12)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x630)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x629)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(npx)*(x629)))+(((IkReal(-1.00000000000000))*(npy)*(x630)))+(((IkReal(0.380000000000000))*(cj12)))+(((IkReal(0.120000000000000))*(sj12)))))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x630)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x629)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x631=IKsin(j11);
IkReal x632=((IkReal(1.00000000000000))*(sj13));
IkReal x633=((npy)*(sj14));
IkReal x634=((cj14)*(npx));
IkReal x635=((IkReal(0.250000000000000))*(x631));
evalcond[0]=((((cj14)*(npy)))+(((sj12)*(x635)))+(((IkReal(-0.0950000000000000))*(cj12)))+(((npx)*(sj14)))+(((IkReal(-0.0300000000000000))*(sj12))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x632)))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((cj13)*(x633)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x634))));
evalcond[2]=((((cj13)*(npz)))+(((sj13)*(x633)))+(((IkReal(0.0300000000000000))*(cj12)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-0.0950000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(cj12)*(x635)))+(((IkReal(-1.00000000000000))*(x632)*(x634))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11))))));
dummyeval[0]=((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x636=(cj14)*(cj14);
IkReal x637=(sj14)*(sj14);
IkReal x638=((IkReal(1.00000000000000))*(r01));
IkReal x639=((sj13)*(sj14));
IkReal x640=((cj14)*(sj13));
IkReal x641=((r00)*(r11));
IkReal x642=((cj13)*(x636));
IkReal x643=((cj13)*(x637));
gconst2=IKsign(((((IkReal(-1.00000000000000))*(r12)*(x638)*(x640)))+(((r02)*(r10)*(x639)))+(((r02)*(r11)*(x640)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x639)))+(((IkReal(-1.00000000000000))*(r10)*(x638)*(x643)))+(((IkReal(-1.00000000000000))*(r10)*(x638)*(x642)))+(((x641)*(x643)))+(((x641)*(x642)))));
IkReal x644=(cj14)*(cj14);
IkReal x645=(sj14)*(sj14);
IkReal x646=((IkReal(1.00000000000000))*(r01));
IkReal x647=((sj13)*(sj14));
IkReal x648=((cj14)*(sj13));
IkReal x649=((r00)*(r11));
IkReal x650=((cj13)*(x644));
IkReal x651=((cj13)*(x645));
dummyeval[0]=((((r02)*(r11)*(x648)))+(((x649)*(x651)))+(((IkReal(-1.00000000000000))*(r10)*(x646)*(x650)))+(((r02)*(r10)*(x647)))+(((IkReal(-1.00000000000000))*(r10)*(x646)*(x651)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x647)))+(((x649)*(x650)))+(((IkReal(-1.00000000000000))*(r12)*(x646)*(x648))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x652=((IkReal(1.00000000000000))*(sj13));
IkReal x653=((npy)*(sj14));
IkReal x654=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x654)))+(((cj13)*(x653)))+(((IkReal(-1.00000000000000))*(npz)*(x652))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x652)))+(((r21)*(sj13)*(sj14)))+(((cj13)*(r22))));
evalcond[4]=((IkReal(-0.0950000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(npx)*(x652)))+(((sj13)*(x653)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
IkReal x655=(sj14)*(sj14);
IkReal x656=(cj14)*(cj14);
IkReal x657=((r01)*(r10));
IkReal x658=((cj13)*(cj14));
IkReal x659=((IkReal(1.00000000000000))*(r12));
IkReal x660=((cj13)*(sj14));
IkReal x661=((sj13)*(x655));
IkReal x662=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x663=((sj13)*(x656));
gconst18=IKsign(((((r02)*(r10)*(x660)))+(((r02)*(r11)*(x658)))+(((x657)*(x661)))+(((IkReal(-1.00000000000000))*(x662)*(x663)))+(((IkReal(-1.00000000000000))*(x661)*(x662)))+(((x657)*(x663)))+(((IkReal(-1.00000000000000))*(r00)*(x659)*(x660)))+(((IkReal(-1.00000000000000))*(r01)*(x658)*(x659)))));
IkReal x664=(sj14)*(sj14);
IkReal x665=(cj14)*(cj14);
IkReal x666=((r01)*(r10));
IkReal x667=((cj13)*(cj14));
IkReal x668=((IkReal(1.00000000000000))*(r12));
IkReal x669=((cj13)*(sj14));
IkReal x670=((sj13)*(x664));
IkReal x671=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x672=((sj13)*(x665));
dummyeval[0]=((((r02)*(r11)*(x667)))+(((IkReal(-1.00000000000000))*(x670)*(x671)))+(((r02)*(r10)*(x669)))+(((IkReal(-1.00000000000000))*(x671)*(x672)))+(((x666)*(x672)))+(((IkReal(-1.00000000000000))*(r01)*(x667)*(x668)))+(((x666)*(x670)))+(((IkReal(-1.00000000000000))*(r00)*(x668)*(x669))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
IkReal x673=(sj13)*(sj13);
IkReal x674=(cj13)*(cj13);
IkReal x675=((cj14)*(r00));
IkReal x676=((r11)*(sj14));
IkReal x677=((r12)*(x674));
IkReal x678=((IkReal(1.00000000000000))*(r01)*(sj14));
IkReal x679=((r02)*(x673));
IkReal x680=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x681=((r02)*(x674));
IkReal x682=((r12)*(x673));
gconst19=IKsign(((((IkReal(-1.00000000000000))*(x680)*(x681)))+(((IkReal(-1.00000000000000))*(x677)*(x678)))+(((x675)*(x677)))+(((x676)*(x679)))+(((x675)*(x682)))+(((IkReal(-1.00000000000000))*(x679)*(x680)))+(((x676)*(x681)))+(((IkReal(-1.00000000000000))*(x678)*(x682)))));
IkReal x683=(sj13)*(sj13);
IkReal x684=(cj13)*(cj13);
IkReal x685=((cj14)*(r00));
IkReal x686=((r11)*(sj14));
IkReal x687=((r12)*(x684));
IkReal x688=((IkReal(1.00000000000000))*(r01)*(sj14));
IkReal x689=((r02)*(x683));
IkReal x690=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x691=((r02)*(x684));
IkReal x692=((r12)*(x683));
dummyeval[0]=((((x685)*(x692)))+(((IkReal(-1.00000000000000))*(x689)*(x690)))+(((IkReal(-1.00000000000000))*(x688)*(x692)))+(((IkReal(-1.00000000000000))*(x690)*(x691)))+(((x685)*(x687)))+(((x686)*(x689)))+(((x686)*(x691)))+(((IkReal(-1.00000000000000))*(x687)*(x688))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x693=((cj13)*(cj14));
IkReal x694=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst19)*(((((r12)*(sj13)))+(((r10)*(x693)))+(((IkReal(-1.00000000000000))*(r11)*(x694))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((r00)*(x693)))+(((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x694))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst19)*(((((r12)*(sj13)))+(((r10)*(x693)))+(((IkReal(-1.00000000000000))*(r11)*(x694)))))), ((gconst19)*(((((r00)*(x693)))+(((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x694)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x695=IKsin(j9);
IkReal x696=IKcos(j9);
IkReal x697=((IkReal(1.00000000000000))*(sj14));
IkReal x698=((cj13)*(cj14));
IkReal x699=((IkReal(1.00000000000000))*(r00));
IkReal x700=((r01)*(sj14));
IkReal x701=((IkReal(1.00000000000000))*(cj13));
IkReal x702=((sj13)*(x696));
IkReal x703=((r02)*(x695));
IkReal x704=((r10)*(x696));
IkReal x705=((r11)*(x696));
IkReal x706=((sj13)*(x695));
IkReal x707=((cj14)*(x706));
evalcond[0]=((((cj14)*(r01)*(x695)))+(((IkReal(-1.00000000000000))*(cj14)*(x705)))+(((IkReal(-1.00000000000000))*(x697)*(x704)))+(((r00)*(sj14)*(x695))));
evalcond[1]=((((r12)*(x702)))+(((IkReal(-1.00000000000000))*(x695)*(x698)*(x699)))+(((IkReal(-1.00000000000000))*(cj13)*(x697)*(x705)))+(((cj13)*(x695)*(x700)))+(((x698)*(x704)))+(((IkReal(-1.00000000000000))*(sj13)*(x703))));
evalcond[2]=((IkReal(1.00000000000000))+(((cj13)*(x703)))+(((x700)*(x706)))+(((IkReal(-1.00000000000000))*(r12)*(x696)*(x701)))+(((IkReal(-1.00000000000000))*(r11)*(x697)*(x702)))+(((cj14)*(r10)*(x702)))+(((IkReal(-1.00000000000000))*(x699)*(x707))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(x695)*(x701)))+(((r10)*(x707)))+(((IkReal(-1.00000000000000))*(r01)*(x697)*(x702)))+(((IkReal(-1.00000000000000))*(r11)*(x697)*(x706)))+(((cj14)*(r00)*(x702)))+(((IkReal(-1.00000000000000))*(r02)*(x696)*(x701))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
gconst22=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x708=((IkReal(1.00000000000000))*(cj11));
IkReal x709=((r20)*(sj14));
IkReal x710=((sj11)*(sj14));
IkReal x711=((r10)*(sj9));
IkReal x712=((cj9)*(r00));
IkReal x713=((cj14)*(r21));
IkReal x714=((cj14)*(cj9)*(r01));
IkReal x715=((cj14)*(r11)*(sj9));
if( IKabs(((gconst22)*(((((cj11)*(x709)))+(((sj11)*(x715)))+(((x710)*(x711)))+(((sj11)*(x714)))+(((x710)*(x712)))+(((cj11)*(x713))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((IkReal(-1.00000000000000))*(sj14)*(x708)*(x711)))+(((IkReal(-1.00000000000000))*(sj14)*(x708)*(x712)))+(((IkReal(-1.00000000000000))*(x708)*(x714)))+(((IkReal(-1.00000000000000))*(x708)*(x715)))+(((sj11)*(x713)))+(((sj11)*(x709))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst22)*(((((cj11)*(x709)))+(((sj11)*(x715)))+(((x710)*(x711)))+(((sj11)*(x714)))+(((x710)*(x712)))+(((cj11)*(x713)))))), ((gconst22)*(((((IkReal(-1.00000000000000))*(sj14)*(x708)*(x711)))+(((IkReal(-1.00000000000000))*(sj14)*(x708)*(x712)))+(((IkReal(-1.00000000000000))*(x708)*(x714)))+(((IkReal(-1.00000000000000))*(x708)*(x715)))+(((sj11)*(x713)))+(((sj11)*(x709)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x716=IKsin(j10);
IkReal x717=IKcos(j10);
IkReal x718=((cj13)*(sj14));
IkReal x719=((cj13)*(cj14));
IkReal x720=((r10)*(sj9));
IkReal x721=((IkReal(1.00000000000000))*(cj9));
IkReal x722=((sj11)*(x716));
IkReal x723=((IkReal(1.00000000000000))*(x717));
IkReal x724=((cj11)*(x716));
IkReal x725=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x726=((cj11)*(x723));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x723)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x724))));
evalcond[1]=((((r21)*(x718)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x722)+(((IkReal(-1.00000000000000))*(x726)))+(((IkReal(-1.00000000000000))*(r20)*(x719))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x721)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x721)))+(x722)+(((IkReal(-1.00000000000000))*(sj14)*(x720)))+(((IkReal(-1.00000000000000))*(x726)))+(((IkReal(-1.00000000000000))*(cj14)*(x725))));
evalcond[3]=((x724)+(((cj9)*(r00)*(x719)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x718)*(x725)))+(((sj11)*(x717)))+(((IkReal(-1.00000000000000))*(r01)*(x718)*(x721)))+(((x719)*(x720))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x727=((cj11)*(r20));
IkReal x728=((IkReal(1.00000000000000))*(cj13));
IkReal x729=((r21)*(sj14));
IkReal x730=((r22)*(sj13));
IkReal x731=((r20)*(sj11));
IkReal x732=((cj14)*(r21));
if( IKabs(((gconst21)*(((((sj14)*(x727)))+(((cj11)*(x732)))+(((sj11)*(x730)))+(((IkReal(-1.00000000000000))*(sj11)*(x728)*(x729)))+(((cj13)*(cj14)*(x731))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((sj11)*(x732)))+(((IkReal(-1.00000000000000))*(cj14)*(x727)*(x728)))+(((cj11)*(cj13)*(x729)))+(((sj14)*(x731)))+(((IkReal(-1.00000000000000))*(cj11)*(x730))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst21)*(((((sj14)*(x727)))+(((cj11)*(x732)))+(((sj11)*(x730)))+(((IkReal(-1.00000000000000))*(sj11)*(x728)*(x729)))+(((cj13)*(cj14)*(x731)))))), ((gconst21)*(((((sj11)*(x732)))+(((IkReal(-1.00000000000000))*(cj14)*(x727)*(x728)))+(((cj11)*(cj13)*(x729)))+(((sj14)*(x731)))+(((IkReal(-1.00000000000000))*(cj11)*(x730)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x733=IKsin(j10);
IkReal x734=IKcos(j10);
IkReal x735=((cj13)*(sj14));
IkReal x736=((cj13)*(cj14));
IkReal x737=((r10)*(sj9));
IkReal x738=((IkReal(1.00000000000000))*(cj9));
IkReal x739=((sj11)*(x733));
IkReal x740=((IkReal(1.00000000000000))*(x734));
IkReal x741=((cj11)*(x733));
IkReal x742=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x743=((cj11)*(x740));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x741)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x740))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x735)))+(x739)+(((IkReal(-1.00000000000000))*(x743)))+(((IkReal(-1.00000000000000))*(r20)*(x736))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x737)))+(x739)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x738)))+(((IkReal(-1.00000000000000))*(x743)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x738)))+(((IkReal(-1.00000000000000))*(cj14)*(x742))));
evalcond[3]=((((cj9)*(r00)*(x736)))+(((x736)*(x737)))+(x741)+(((sj11)*(x734)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x735)*(x742)))+(((IkReal(-1.00000000000000))*(r01)*(x735)*(x738))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x744=((IkReal(1.00000000000000))*(cj14));
IkReal x745=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r10)*(x745)))+(((IkReal(-1.00000000000000))*(r11)*(x744))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r00)*(x745)))+(((IkReal(-1.00000000000000))*(r01)*(x744))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst18)*(((((IkReal(-1.00000000000000))*(r10)*(x745)))+(((IkReal(-1.00000000000000))*(r11)*(x744)))))), ((gconst18)*(((((IkReal(-1.00000000000000))*(r00)*(x745)))+(((IkReal(-1.00000000000000))*(r01)*(x744)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x746=IKsin(j9);
IkReal x747=IKcos(j9);
IkReal x748=((IkReal(1.00000000000000))*(sj14));
IkReal x749=((cj13)*(cj14));
IkReal x750=((IkReal(1.00000000000000))*(r00));
IkReal x751=((r01)*(sj14));
IkReal x752=((IkReal(1.00000000000000))*(cj13));
IkReal x753=((sj13)*(x747));
IkReal x754=((r02)*(x746));
IkReal x755=((r10)*(x747));
IkReal x756=((r11)*(x747));
IkReal x757=((sj13)*(x746));
IkReal x758=((cj14)*(x757));
evalcond[0]=((((r00)*(sj14)*(x746)))+(((IkReal(-1.00000000000000))*(cj14)*(x756)))+(((cj14)*(r01)*(x746)))+(((IkReal(-1.00000000000000))*(x748)*(x755))));
evalcond[1]=((((x749)*(x755)))+(((IkReal(-1.00000000000000))*(cj13)*(x748)*(x756)))+(((IkReal(-1.00000000000000))*(sj13)*(x754)))+(((cj13)*(x746)*(x751)))+(((r12)*(x753)))+(((IkReal(-1.00000000000000))*(x746)*(x749)*(x750))));
evalcond[2]=((IkReal(1.00000000000000))+(((x751)*(x757)))+(((IkReal(-1.00000000000000))*(r12)*(x747)*(x752)))+(((cj13)*(x754)))+(((cj14)*(r10)*(x753)))+(((IkReal(-1.00000000000000))*(x750)*(x758)))+(((IkReal(-1.00000000000000))*(r11)*(x748)*(x753))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x748)*(x753)))+(((cj14)*(r00)*(x753)))+(((IkReal(-1.00000000000000))*(r12)*(x746)*(x752)))+(((IkReal(-1.00000000000000))*(r11)*(x748)*(x757)))+(((IkReal(-1.00000000000000))*(r02)*(x747)*(x752)))+(((r10)*(x758))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
gconst22=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x759=((IkReal(1.00000000000000))*(cj11));
IkReal x760=((r20)*(sj14));
IkReal x761=((sj11)*(sj14));
IkReal x762=((r10)*(sj9));
IkReal x763=((cj9)*(r00));
IkReal x764=((cj14)*(r21));
IkReal x765=((cj14)*(cj9)*(r01));
IkReal x766=((cj14)*(r11)*(sj9));
if( IKabs(((gconst22)*(((((x761)*(x763)))+(((x761)*(x762)))+(((cj11)*(x764)))+(((cj11)*(x760)))+(((sj11)*(x766)))+(((sj11)*(x765))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((IkReal(-1.00000000000000))*(sj14)*(x759)*(x762)))+(((sj11)*(x764)))+(((sj11)*(x760)))+(((IkReal(-1.00000000000000))*(x759)*(x765)))+(((IkReal(-1.00000000000000))*(sj14)*(x759)*(x763)))+(((IkReal(-1.00000000000000))*(x759)*(x766))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst22)*(((((x761)*(x763)))+(((x761)*(x762)))+(((cj11)*(x764)))+(((cj11)*(x760)))+(((sj11)*(x766)))+(((sj11)*(x765)))))), ((gconst22)*(((((IkReal(-1.00000000000000))*(sj14)*(x759)*(x762)))+(((sj11)*(x764)))+(((sj11)*(x760)))+(((IkReal(-1.00000000000000))*(x759)*(x765)))+(((IkReal(-1.00000000000000))*(sj14)*(x759)*(x763)))+(((IkReal(-1.00000000000000))*(x759)*(x766)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x767=IKsin(j10);
IkReal x768=IKcos(j10);
IkReal x769=((cj13)*(sj14));
IkReal x770=((cj13)*(cj14));
IkReal x771=((r10)*(sj9));
IkReal x772=((IkReal(1.00000000000000))*(cj9));
IkReal x773=((sj11)*(x767));
IkReal x774=((IkReal(1.00000000000000))*(x768));
IkReal x775=((cj11)*(x767));
IkReal x776=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x777=((cj11)*(x774));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x775)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x774))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x770)))+(x773)+(((r21)*(x769)))+(((IkReal(-1.00000000000000))*(x777))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x772)))+(((IkReal(-1.00000000000000))*(cj14)*(x776)))+(((IkReal(-1.00000000000000))*(sj14)*(x771)))+(x773)+(((IkReal(-1.00000000000000))*(x777)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x772))));
evalcond[3]=((((x770)*(x771)))+(((cj9)*(r00)*(x770)))+(((IkReal(-1.00000000000000))*(x769)*(x776)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x769)*(x772)))+(((sj11)*(x768)))+(x775));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x778=((cj11)*(r20));
IkReal x779=((IkReal(1.00000000000000))*(cj13));
IkReal x780=((r21)*(sj14));
IkReal x781=((r22)*(sj13));
IkReal x782=((r20)*(sj11));
IkReal x783=((cj14)*(r21));
if( IKabs(((gconst21)*(((((sj14)*(x778)))+(((cj13)*(cj14)*(x782)))+(((cj11)*(x783)))+(((IkReal(-1.00000000000000))*(sj11)*(x779)*(x780)))+(((sj11)*(x781))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(cj11)*(x781)))+(((sj14)*(x782)))+(((IkReal(-1.00000000000000))*(cj14)*(x778)*(x779)))+(((sj11)*(x783)))+(((cj11)*(cj13)*(x780))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst21)*(((((sj14)*(x778)))+(((cj13)*(cj14)*(x782)))+(((cj11)*(x783)))+(((IkReal(-1.00000000000000))*(sj11)*(x779)*(x780)))+(((sj11)*(x781)))))), ((gconst21)*(((((IkReal(-1.00000000000000))*(cj11)*(x781)))+(((sj14)*(x782)))+(((IkReal(-1.00000000000000))*(cj14)*(x778)*(x779)))+(((sj11)*(x783)))+(((cj11)*(cj13)*(x780)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x784=IKsin(j10);
IkReal x785=IKcos(j10);
IkReal x786=((cj13)*(sj14));
IkReal x787=((cj13)*(cj14));
IkReal x788=((r10)*(sj9));
IkReal x789=((IkReal(1.00000000000000))*(cj9));
IkReal x790=((sj11)*(x784));
IkReal x791=((IkReal(1.00000000000000))*(x785));
IkReal x792=((cj11)*(x784));
IkReal x793=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x794=((cj11)*(x791));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x791)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x792))));
evalcond[1]=((((r21)*(x786)))+(((IkReal(-1.00000000000000))*(r20)*(x787)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x794)))+(x790));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x793)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x789)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x789)))+(((IkReal(-1.00000000000000))*(x794)))+(x790)+(((IkReal(-1.00000000000000))*(sj14)*(x788))));
evalcond[3]=((((sj11)*(x785)))+(((x787)*(x788)))+(((IkReal(-1.00000000000000))*(r01)*(x786)*(x789)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(x792)+(((cj9)*(r00)*(x787)))+(((IkReal(-1.00000000000000))*(x786)*(x793))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x795=((cj11)*(r20));
IkReal x796=((IkReal(1.00000000000000))*(cj13));
IkReal x797=((r21)*(sj14));
IkReal x798=((r22)*(sj13));
IkReal x799=((r20)*(sj11));
IkReal x800=((cj14)*(r21));
if( IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(sj11)*(x796)*(x797)))+(((cj11)*(x800)))+(((sj11)*(x798)))+(((cj13)*(cj14)*(x799)))+(((sj14)*(x795))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(cj14)*(x795)*(x796)))+(((cj11)*(cj13)*(x797)))+(((sj14)*(x799)))+(((IkReal(-1.00000000000000))*(cj11)*(x798)))+(((sj11)*(x800))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst20)*(((((IkReal(-1.00000000000000))*(sj11)*(x796)*(x797)))+(((cj11)*(x800)))+(((sj11)*(x798)))+(((cj13)*(cj14)*(x799)))+(((sj14)*(x795)))))), ((gconst20)*(((((IkReal(-1.00000000000000))*(cj14)*(x795)*(x796)))+(((cj11)*(cj13)*(x797)))+(((sj14)*(x799)))+(((IkReal(-1.00000000000000))*(cj11)*(x798)))+(((sj11)*(x800)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x801=IKsin(j10);
IkReal x802=IKcos(j10);
IkReal x803=((IkReal(1.00000000000000))*(x802));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x803)))+(((IkReal(-1.00000000000000))*(cj11)*(x801))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((sj11)*(x801)))+(((IkReal(-1.00000000000000))*(cj11)*(x803)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst24;
IkReal x804=(sj14)*(sj14);
IkReal x805=(cj14)*(cj14);
IkReal x806=((r01)*(r10));
IkReal x807=((cj13)*(cj14));
IkReal x808=((IkReal(1.00000000000000))*(r12));
IkReal x809=((cj13)*(sj14));
IkReal x810=((sj13)*(x804));
IkReal x811=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x812=((sj13)*(x805));
gconst24=IKsign(((((x806)*(x812)))+(((IkReal(-1.00000000000000))*(r00)*(x808)*(x809)))+(((r02)*(r11)*(x807)))+(((IkReal(-1.00000000000000))*(r01)*(x807)*(x808)))+(((r02)*(r10)*(x809)))+(((IkReal(-1.00000000000000))*(x811)*(x812)))+(((IkReal(-1.00000000000000))*(x810)*(x811)))+(((x806)*(x810)))));
IkReal x813=(sj14)*(sj14);
IkReal x814=(cj14)*(cj14);
IkReal x815=((r01)*(r10));
IkReal x816=((cj13)*(cj14));
IkReal x817=((IkReal(1.00000000000000))*(r12));
IkReal x818=((cj13)*(sj14));
IkReal x819=((sj13)*(x813));
IkReal x820=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x821=((sj13)*(x814));
dummyeval[0]=((((x815)*(x819)))+(((IkReal(-1.00000000000000))*(r01)*(x816)*(x817)))+(((r02)*(r11)*(x816)))+(((r02)*(r10)*(x818)))+(((IkReal(-1.00000000000000))*(x820)*(x821)))+(((IkReal(-1.00000000000000))*(x819)*(x820)))+(((x815)*(x821)))+(((IkReal(-1.00000000000000))*(r00)*(x817)*(x818))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst23;
IkReal x822=(sj14)*(sj14);
IkReal x823=(cj14)*(cj14);
IkReal x824=((IkReal(1.00000000000000))*(x822));
IkReal x825=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x826=((IkReal(1.00000000000000))*(x823));
gconst23=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x825)))+(((IkReal(-1.00000000000000))*(x826)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x824)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x826)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x824)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x825)))));
IkReal x827=(sj14)*(sj14);
IkReal x828=(cj14)*(cj14);
IkReal x829=((IkReal(1.00000000000000))*(x827));
IkReal x830=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x831=((IkReal(1.00000000000000))*(x828));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x831)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x830)))+(((IkReal(-1.00000000000000))*(x829)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x830)))+(((IkReal(-1.00000000000000))*(x829)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x831)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x832=((cj14)*(r11));
IkReal x833=((cj10)*(cj11));
IkReal x834=((cj14)*(r01));
IkReal x835=((sj14)*(x833));
IkReal x836=((IkReal(1.00000000000000))*(sj10)*(sj11));
if( IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x836)))+(((r10)*(x835)))+(((x832)*(x833)))+(((IkReal(-1.00000000000000))*(x832)*(x836))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((r00)*(x835)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x836)))+(((IkReal(-1.00000000000000))*(x834)*(x836)))+(((x833)*(x834))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst23)*(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x836)))+(((r10)*(x835)))+(((x832)*(x833)))+(((IkReal(-1.00000000000000))*(x832)*(x836)))))), ((gconst23)*(((((r00)*(x835)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x836)))+(((IkReal(-1.00000000000000))*(x834)*(x836)))+(((x833)*(x834)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x837=IKsin(j9);
IkReal x838=IKcos(j9);
IkReal x839=((IkReal(1.00000000000000))*(cj14));
IkReal x840=((IkReal(1.00000000000000))*(sj14));
IkReal x841=((cj13)*(cj14));
IkReal x842=((cj14)*(r10));
IkReal x843=((r01)*(sj14));
IkReal x844=((IkReal(1.00000000000000))*(r12));
IkReal x845=((sj13)*(x838));
IkReal x846=((r02)*(x837));
IkReal x847=((r11)*(x837));
IkReal x848=((r10)*(x838));
IkReal x849=((r01)*(x838));
IkReal x850=((sj13)*(x837));
IkReal x851=((r11)*(x838));
IkReal x852=((cj13)*(x837));
IkReal x853=((r10)*(x837));
IkReal x854=((r00)*(x838));
IkReal x855=((cj13)*(x838));
evalcond[0]=((((IkReal(-1.00000000000000))*(x839)*(x851)))+(((cj14)*(r01)*(x837)))+(((r00)*(sj14)*(x837)))+(((IkReal(-1.00000000000000))*(x840)*(x848))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x839)*(x849)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x840)*(x854)))+(((IkReal(-1.00000000000000))*(x840)*(x853)))+(((IkReal(-1.00000000000000))*(x839)*(x847)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x839)*(x852)))+(((x841)*(x848)))+(((IkReal(-1.00000000000000))*(cj13)*(x840)*(x851)))+(((r12)*(x845)))+(((x843)*(x852)))+(((IkReal(-1.00000000000000))*(sj13)*(x846))));
evalcond[3]=((IkReal(1.00000000000000))+(((x842)*(x845)))+(((IkReal(-1.00000000000000))*(r11)*(x840)*(x845)))+(((IkReal(-1.00000000000000))*(r00)*(x839)*(x850)))+(((cj13)*(x846)))+(((IkReal(-1.00000000000000))*(x844)*(x855)))+(((x843)*(x850))));
evalcond[4]=((((x841)*(x853)))+(((r12)*(x850)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x840)*(x849)))+(((r02)*(x845)))+(((cj11)*(sj10)))+(((IkReal(-1.00000000000000))*(cj13)*(x840)*(x847)))+(((x841)*(x854))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x844)*(x852)))+(((IkReal(-1.00000000000000))*(r01)*(x840)*(x845)))+(((IkReal(-1.00000000000000))*(sj13)*(x840)*(x847)))+(((cj14)*(r00)*(x845)))+(((IkReal(-1.00000000000000))*(r02)*(x855)))+(((x842)*(x850))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x856=((IkReal(1.00000000000000))*(sj14));
IkReal x857=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r11)*(x857)))+(((IkReal(-1.00000000000000))*(r10)*(x856))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r00)*(x856)))+(((IkReal(-1.00000000000000))*(r01)*(x857))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst24)*(((((IkReal(-1.00000000000000))*(r11)*(x857)))+(((IkReal(-1.00000000000000))*(r10)*(x856)))))), ((gconst24)*(((((IkReal(-1.00000000000000))*(r00)*(x856)))+(((IkReal(-1.00000000000000))*(r01)*(x857)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x858=IKsin(j9);
IkReal x859=IKcos(j9);
IkReal x860=((IkReal(1.00000000000000))*(cj14));
IkReal x861=((IkReal(1.00000000000000))*(sj14));
IkReal x862=((cj13)*(cj14));
IkReal x863=((cj14)*(r10));
IkReal x864=((r01)*(sj14));
IkReal x865=((IkReal(1.00000000000000))*(r12));
IkReal x866=((sj13)*(x859));
IkReal x867=((r02)*(x858));
IkReal x868=((r11)*(x858));
IkReal x869=((r10)*(x859));
IkReal x870=((r01)*(x859));
IkReal x871=((sj13)*(x858));
IkReal x872=((r11)*(x859));
IkReal x873=((cj13)*(x858));
IkReal x874=((r10)*(x858));
IkReal x875=((r00)*(x859));
IkReal x876=((cj13)*(x859));
evalcond[0]=((((r00)*(sj14)*(x858)))+(((cj14)*(r01)*(x858)))+(((IkReal(-1.00000000000000))*(x861)*(x869)))+(((IkReal(-1.00000000000000))*(x860)*(x872))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x861)*(x874)))+(((IkReal(-1.00000000000000))*(x860)*(x870)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x860)*(x868)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(x861)*(x875))));
evalcond[2]=((((x864)*(x873)))+(((IkReal(-1.00000000000000))*(r00)*(x860)*(x873)))+(((x862)*(x869)))+(((r12)*(x866)))+(((IkReal(-1.00000000000000))*(cj13)*(x861)*(x872)))+(((IkReal(-1.00000000000000))*(sj13)*(x867))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x860)*(x871)))+(((x864)*(x871)))+(((IkReal(-1.00000000000000))*(r11)*(x861)*(x866)))+(((IkReal(-1.00000000000000))*(x865)*(x876)))+(((cj13)*(x867)))+(((x863)*(x866))));
evalcond[4]=((((x862)*(x874)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x861)*(x868)))+(((x862)*(x875)))+(((r12)*(x871)))+(((r02)*(x866)))+(((IkReal(-1.00000000000000))*(cj13)*(x861)*(x870)))+(((cj11)*(sj10))));
evalcond[5]=((((x863)*(x871)))+(((IkReal(-1.00000000000000))*(sj13)*(x861)*(x868)))+(((IkReal(-1.00000000000000))*(r02)*(x876)))+(((cj14)*(r00)*(x866)))+(((IkReal(-1.00000000000000))*(x865)*(x873)))+(((IkReal(-1.00000000000000))*(r01)*(x861)*(x866))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x877=((IkReal(1.00000000000000))*(sj13));
IkReal x878=((npy)*(sj14));
IkReal x879=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.235000000000000))+(((cj13)*(x878)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(npz)*(x877)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x879))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x877)))+(((r21)*(sj13)*(sj14)))+(((cj13)*(r22))));
evalcond[4]=((IkReal(0.0950000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(npx)*(x877)))+(((cj13)*(npz)))+(((sj13)*(x878)))+(((IkReal(0.0900000000000000))*(sj13))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst27;
gconst27=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst25;
IkReal x880=(cj14)*(cj14);
IkReal x881=(sj14)*(sj14);
IkReal x882=((cj13)*(r12));
IkReal x883=((IkReal(1.00000000000000))*(r10));
IkReal x884=((cj13)*(r02));
IkReal x885=((r01)*(sj13));
IkReal x886=((r00)*(r11)*(sj13));
gconst25=IKsign(((((cj14)*(r01)*(x882)))+(((IkReal(-1.00000000000000))*(sj14)*(x883)*(x884)))+(((x880)*(x886)))+(((IkReal(-1.00000000000000))*(x881)*(x883)*(x885)))+(((IkReal(-1.00000000000000))*(x880)*(x883)*(x885)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x884)))+(((r00)*(sj14)*(x882)))+(((x881)*(x886)))));
IkReal x887=(cj14)*(cj14);
IkReal x888=(sj14)*(sj14);
IkReal x889=((cj13)*(r12));
IkReal x890=((IkReal(1.00000000000000))*(r10));
IkReal x891=((cj13)*(r02));
IkReal x892=((r01)*(sj13));
IkReal x893=((r00)*(r11)*(sj13));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x891)))+(((cj14)*(r01)*(x889)))+(((IkReal(-1.00000000000000))*(sj14)*(x890)*(x891)))+(((x888)*(x893)))+(((r00)*(sj14)*(x889)))+(((IkReal(-1.00000000000000))*(x887)*(x890)*(x892)))+(((x887)*(x893)))+(((IkReal(-1.00000000000000))*(x888)*(x890)*(x892))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst26;
IkReal x894=(cj13)*(cj13);
IkReal x895=(sj13)*(sj13);
IkReal x896=((r01)*(sj14));
IkReal x897=((r12)*(x895));
IkReal x898=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x899=((cj14)*(r02)*(r10));
IkReal x900=((r12)*(x894));
IkReal x901=((IkReal(1.00000000000000))*(r02)*(r11)*(sj14));
gconst26=IKsign(((((IkReal(-1.00000000000000))*(x897)*(x898)))+(((x895)*(x899)))+(((x896)*(x900)))+(((x894)*(x899)))+(((IkReal(-1.00000000000000))*(x895)*(x901)))+(((IkReal(-1.00000000000000))*(x894)*(x901)))+(((x896)*(x897)))+(((IkReal(-1.00000000000000))*(x898)*(x900)))));
IkReal x902=(cj13)*(cj13);
IkReal x903=(sj13)*(sj13);
IkReal x904=((r01)*(sj14));
IkReal x905=((r12)*(x903));
IkReal x906=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x907=((cj14)*(r02)*(r10));
IkReal x908=((r12)*(x902));
IkReal x909=x901;
dummyeval[0]=((((IkReal(-1.00000000000000))*(x905)*(x906)))+(((x904)*(x908)))+(((IkReal(-1.00000000000000))*(x903)*(x909)))+(((x902)*(x907)))+(((IkReal(-1.00000000000000))*(x902)*(x909)))+(((x903)*(x907)))+(((x904)*(x905)))+(((IkReal(-1.00000000000000))*(x906)*(x908))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x910=((cj13)*(cj14));
IkReal x911=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst26)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x911)))+(((r10)*(x910))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst26)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x911)))+(((r00)*(x910))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst26)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x911)))+(((r10)*(x910)))))), ((gconst26)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x911)))+(((r00)*(x910)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x912=IKsin(j9);
IkReal x913=IKcos(j9);
IkReal x914=((IkReal(1.00000000000000))*(sj14));
IkReal x915=((cj13)*(cj14));
IkReal x916=((IkReal(1.00000000000000))*(r00));
IkReal x917=((r01)*(sj14));
IkReal x918=((IkReal(1.00000000000000))*(cj13));
IkReal x919=((sj13)*(x913));
IkReal x920=((r02)*(x912));
IkReal x921=((r10)*(x913));
IkReal x922=((r11)*(x913));
IkReal x923=((sj13)*(x912));
IkReal x924=((cj14)*(x923));
evalcond[0]=((((r00)*(sj14)*(x912)))+(((cj14)*(r01)*(x912)))+(((IkReal(-1.00000000000000))*(cj14)*(x922)))+(((IkReal(-1.00000000000000))*(x914)*(x921))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x920)))+(((r12)*(x919)))+(((IkReal(-1.00000000000000))*(x912)*(x915)*(x916)))+(((x915)*(x921)))+(((IkReal(-1.00000000000000))*(cj13)*(x914)*(x922)))+(((cj13)*(x912)*(x917))));
evalcond[2]=((IkReal(-1.00000000000000))+(((x917)*(x923)))+(((IkReal(-1.00000000000000))*(r11)*(x914)*(x919)))+(((cj14)*(r10)*(x919)))+(((cj13)*(x920)))+(((IkReal(-1.00000000000000))*(x916)*(x924)))+(((IkReal(-1.00000000000000))*(r12)*(x913)*(x918))));
evalcond[3]=((((r10)*(x924)))+(((IkReal(-1.00000000000000))*(r01)*(x914)*(x919)))+(((IkReal(-1.00000000000000))*(r02)*(x913)*(x918)))+(((cj14)*(r00)*(x919)))+(((IkReal(-1.00000000000000))*(r12)*(x912)*(x918)))+(((IkReal(-1.00000000000000))*(r11)*(x914)*(x923))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x925=((IkReal(1.00000000000000))*(cj14));
IkReal x926=((sj11)*(sj9));
IkReal x927=((cj9)*(r01));
IkReal x928=((cj11)*(cj14));
IkReal x929=((cj9)*(r00));
IkReal x930=((r10)*(sj14));
IkReal x931=((cj11)*(sj14));
IkReal x932=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(r20)*(x931)))+(((IkReal(-1.00000000000000))*(sj11)*(x925)*(x927)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x925)))+(((IkReal(-1.00000000000000))*(x926)*(x930)))+(((IkReal(-1.00000000000000))*(x929)*(x932)))+(((IkReal(-1.00000000000000))*(r11)*(x925)*(x926))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((r11)*(sj9)*(x928)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x925)))+(((x927)*(x928)))+(((IkReal(-1.00000000000000))*(r20)*(x932)))+(((x929)*(x931)))+(((cj11)*(sj9)*(x930))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst29)*(((((IkReal(-1.00000000000000))*(r20)*(x931)))+(((IkReal(-1.00000000000000))*(sj11)*(x925)*(x927)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x925)))+(((IkReal(-1.00000000000000))*(x926)*(x930)))+(((IkReal(-1.00000000000000))*(x929)*(x932)))+(((IkReal(-1.00000000000000))*(r11)*(x925)*(x926)))))), ((gconst29)*(((((r11)*(sj9)*(x928)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x925)))+(((x927)*(x928)))+(((IkReal(-1.00000000000000))*(r20)*(x932)))+(((x929)*(x931)))+(((cj11)*(sj9)*(x930)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x933=IKsin(j10);
IkReal x934=IKcos(j10);
IkReal x935=((cj14)*(sj9));
IkReal x936=((IkReal(1.00000000000000))*(r11));
IkReal x937=((cj13)*(sj14));
IkReal x938=((IkReal(1.00000000000000))*(cj9));
IkReal x939=((cj13)*(cj14));
IkReal x940=((cj11)*(x933));
IkReal x941=((sj11)*(x934));
IkReal x942=((cj11)*(x934));
IkReal x943=((sj11)*(x933));
IkReal x944=((x940)+(x941));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x944));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x939)))+(((IkReal(-1.00000000000000))*(x942)))+(x943)+(((r21)*(x937))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x938)))+(((IkReal(-1.00000000000000))*(x935)*(x936)))+(((IkReal(-1.00000000000000))*(x943)))+(x942)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x938))));
evalcond[3]=((((cj13)*(r10)*(x935)))+(x944)+(((IkReal(-1.00000000000000))*(r01)*(x937)*(x938)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x939)))+(((IkReal(-1.00000000000000))*(sj9)*(x936)*(x937))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x945=((cj13)*(sj11));
IkReal x946=((r21)*(sj14));
IkReal x947=((cj14)*(r20));
IkReal x948=((cj11)*(cj13));
IkReal x949=((r22)*(sj13));
IkReal x950=((r20)*(sj14));
IkReal x951=((cj14)*(r21));
if( IKabs(((gconst28)*(((((x945)*(x946)))+(((IkReal(-1.00000000000000))*(sj11)*(x949)))+(((cj11)*(x950)))+(((IkReal(-1.00000000000000))*(x945)*(x947)))+(((cj11)*(x951))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((x947)*(x948)))+(((cj11)*(x949)))+(((sj11)*(x951)))+(((IkReal(-1.00000000000000))*(x946)*(x948)))+(((sj11)*(x950))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst28)*(((((x945)*(x946)))+(((IkReal(-1.00000000000000))*(sj11)*(x949)))+(((cj11)*(x950)))+(((IkReal(-1.00000000000000))*(x945)*(x947)))+(((cj11)*(x951)))))), ((gconst28)*(((((x947)*(x948)))+(((cj11)*(x949)))+(((sj11)*(x951)))+(((IkReal(-1.00000000000000))*(x946)*(x948)))+(((sj11)*(x950)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x952=IKsin(j10);
IkReal x953=IKcos(j10);
IkReal x954=((cj14)*(sj9));
IkReal x955=((IkReal(1.00000000000000))*(r11));
IkReal x956=((cj13)*(sj14));
IkReal x957=((IkReal(1.00000000000000))*(cj9));
IkReal x958=((cj13)*(cj14));
IkReal x959=((cj11)*(x952));
IkReal x960=((sj11)*(x953));
IkReal x961=((cj11)*(x953));
IkReal x962=((sj11)*(x952));
IkReal x963=((x959)+(x960));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x963));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x961)))+(((IkReal(-1.00000000000000))*(r20)*(x958)))+(((r21)*(x956)))+(x962));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x954)*(x955)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x957)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x957)))+(x961)+(((IkReal(-1.00000000000000))*(x962))));
evalcond[3]=((((cj9)*(r00)*(x958)))+(((IkReal(-1.00000000000000))*(r01)*(x956)*(x957)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r10)*(x954)))+(((IkReal(-1.00000000000000))*(sj9)*(x955)*(x956)))+(x963));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x964=((IkReal(1.00000000000000))*(sj14));
IkReal x965=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(r10)*(x964)))+(((IkReal(-1.00000000000000))*(r11)*(x965))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(r01)*(x965)))+(((IkReal(-1.00000000000000))*(r00)*(x964))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst25)*(((((IkReal(-1.00000000000000))*(r10)*(x964)))+(((IkReal(-1.00000000000000))*(r11)*(x965)))))), ((gconst25)*(((((IkReal(-1.00000000000000))*(r01)*(x965)))+(((IkReal(-1.00000000000000))*(r00)*(x964)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x966=IKsin(j9);
IkReal x967=IKcos(j9);
IkReal x968=((IkReal(1.00000000000000))*(sj14));
IkReal x969=((cj13)*(cj14));
IkReal x970=((IkReal(1.00000000000000))*(r00));
IkReal x971=((r01)*(sj14));
IkReal x972=((IkReal(1.00000000000000))*(cj13));
IkReal x973=((sj13)*(x967));
IkReal x974=((r02)*(x966));
IkReal x975=((r10)*(x967));
IkReal x976=((r11)*(x967));
IkReal x977=((sj13)*(x966));
IkReal x978=((cj14)*(x977));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj14)*(x976)))+(((r00)*(sj14)*(x966)))+(((IkReal(-1.00000000000000))*(x968)*(x975)))+(((cj14)*(r01)*(x966))));
evalcond[1]=((((cj13)*(x966)*(x971)))+(((r12)*(x973)))+(((IkReal(-1.00000000000000))*(sj13)*(x974)))+(((x969)*(x975)))+(((IkReal(-1.00000000000000))*(x966)*(x969)*(x970)))+(((IkReal(-1.00000000000000))*(cj13)*(x968)*(x976))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r12)*(x967)*(x972)))+(((cj14)*(r10)*(x973)))+(((cj13)*(x974)))+(((IkReal(-1.00000000000000))*(x970)*(x978)))+(((x971)*(x977)))+(((IkReal(-1.00000000000000))*(r11)*(x968)*(x973))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(x967)*(x972)))+(((r10)*(x978)))+(((IkReal(-1.00000000000000))*(r01)*(x968)*(x973)))+(((IkReal(-1.00000000000000))*(r11)*(x968)*(x977)))+(((cj14)*(r00)*(x973)))+(((IkReal(-1.00000000000000))*(r12)*(x966)*(x972))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x979=((IkReal(1.00000000000000))*(cj14));
IkReal x980=((sj11)*(sj9));
IkReal x981=((cj9)*(r01));
IkReal x982=((cj11)*(cj14));
IkReal x983=((cj9)*(r00));
IkReal x984=((r10)*(sj14));
IkReal x985=((cj11)*(sj14));
IkReal x986=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(x983)*(x986)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x979)))+(((IkReal(-1.00000000000000))*(r20)*(x985)))+(((IkReal(-1.00000000000000))*(r11)*(x979)*(x980)))+(((IkReal(-1.00000000000000))*(sj11)*(x979)*(x981)))+(((IkReal(-1.00000000000000))*(x980)*(x984))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(r21)*(sj11)*(x979)))+(((x981)*(x982)))+(((IkReal(-1.00000000000000))*(r20)*(x986)))+(((cj11)*(sj9)*(x984)))+(((x983)*(x985)))+(((r11)*(sj9)*(x982))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst29)*(((((IkReal(-1.00000000000000))*(x983)*(x986)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x979)))+(((IkReal(-1.00000000000000))*(r20)*(x985)))+(((IkReal(-1.00000000000000))*(r11)*(x979)*(x980)))+(((IkReal(-1.00000000000000))*(sj11)*(x979)*(x981)))+(((IkReal(-1.00000000000000))*(x980)*(x984)))))), ((gconst29)*(((((IkReal(-1.00000000000000))*(r21)*(sj11)*(x979)))+(((x981)*(x982)))+(((IkReal(-1.00000000000000))*(r20)*(x986)))+(((cj11)*(sj9)*(x984)))+(((x983)*(x985)))+(((r11)*(sj9)*(x982)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x987=IKsin(j10);
IkReal x988=IKcos(j10);
IkReal x989=((cj14)*(sj9));
IkReal x990=((IkReal(1.00000000000000))*(r11));
IkReal x991=((cj13)*(sj14));
IkReal x992=((IkReal(1.00000000000000))*(cj9));
IkReal x993=((cj13)*(cj14));
IkReal x994=((cj11)*(x987));
IkReal x995=((sj11)*(x988));
IkReal x996=((cj11)*(x988));
IkReal x997=((sj11)*(x987));
IkReal x998=((x995)+(x994));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x998));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x996)))+(((IkReal(-1.00000000000000))*(r20)*(x993)))+(((r21)*(x991)))+(x997));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x992)))+(((IkReal(-1.00000000000000))*(x997)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x989)*(x990)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x992)))+(x996));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj9)*(x990)*(x991)))+(((cj13)*(r10)*(x989)))+(((IkReal(-1.00000000000000))*(r01)*(x991)*(x992)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x993)))+(x998));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x999=((cj13)*(sj11));
IkReal x1000=((r21)*(sj14));
IkReal x1001=((cj14)*(r20));
IkReal x1002=((cj11)*(cj13));
IkReal x1003=((r22)*(sj13));
IkReal x1004=((r20)*(sj14));
IkReal x1005=((cj14)*(r21));
if( IKabs(((gconst28)*(((((cj11)*(x1005)))+(((x1000)*(x999)))+(((IkReal(-1.00000000000000))*(sj11)*(x1003)))+(((IkReal(-1.00000000000000))*(x1001)*(x999)))+(((cj11)*(x1004))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((sj11)*(x1004)))+(((x1001)*(x1002)))+(((sj11)*(x1005)))+(((cj11)*(x1003)))+(((IkReal(-1.00000000000000))*(x1000)*(x1002))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst28)*(((((cj11)*(x1005)))+(((x1000)*(x999)))+(((IkReal(-1.00000000000000))*(sj11)*(x1003)))+(((IkReal(-1.00000000000000))*(x1001)*(x999)))+(((cj11)*(x1004)))))), ((gconst28)*(((((sj11)*(x1004)))+(((x1001)*(x1002)))+(((sj11)*(x1005)))+(((cj11)*(x1003)))+(((IkReal(-1.00000000000000))*(x1000)*(x1002)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1006=IKsin(j10);
IkReal x1007=IKcos(j10);
IkReal x1008=((cj14)*(sj9));
IkReal x1009=((IkReal(1.00000000000000))*(r11));
IkReal x1010=((cj13)*(sj14));
IkReal x1011=((IkReal(1.00000000000000))*(cj9));
IkReal x1012=((cj13)*(cj14));
IkReal x1013=((cj11)*(x1006));
IkReal x1014=((sj11)*(x1007));
IkReal x1015=((cj11)*(x1007));
IkReal x1016=((sj11)*(x1006));
IkReal x1017=((x1014)+(x1013));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x1017));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x1012)))+(((IkReal(-1.00000000000000))*(x1015)))+(((r21)*(x1010)))+(x1016));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1011)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x1008)*(x1009)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1011)))+(x1015)+(((IkReal(-1.00000000000000))*(x1016))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x1010)*(x1011)))+(((IkReal(-1.00000000000000))*(sj9)*(x1009)*(x1010)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(x1017)+(((cj9)*(r00)*(x1012)))+(((cj13)*(r10)*(x1008))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1018=((cj13)*(sj11));
IkReal x1019=((r21)*(sj14));
IkReal x1020=((cj14)*(r20));
IkReal x1021=((cj11)*(cj13));
IkReal x1022=((r22)*(sj13));
IkReal x1023=((r20)*(sj14));
IkReal x1024=((cj14)*(r21));
if( IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(x1018)*(x1020)))+(((cj11)*(x1023)))+(((cj11)*(x1024)))+(((x1018)*(x1019)))+(((IkReal(-1.00000000000000))*(sj11)*(x1022))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(x1019)*(x1021)))+(((x1020)*(x1021)))+(((sj11)*(x1024)))+(((cj11)*(x1022)))+(((sj11)*(x1023))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst27)*(((((IkReal(-1.00000000000000))*(x1018)*(x1020)))+(((cj11)*(x1023)))+(((cj11)*(x1024)))+(((x1018)*(x1019)))+(((IkReal(-1.00000000000000))*(sj11)*(x1022)))))), ((gconst27)*(((((IkReal(-1.00000000000000))*(x1019)*(x1021)))+(((x1020)*(x1021)))+(((sj11)*(x1024)))+(((cj11)*(x1022)))+(((sj11)*(x1023)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x1025=IKsin(j10);
IkReal x1026=IKcos(j10);
evalcond[0]=((((r20)*(sj14)))+(((cj11)*(x1025)))+(((cj14)*(r21)))+(((sj11)*(x1026))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((sj11)*(x1025)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x1026))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst31;
IkReal x1027=(cj14)*(cj14);
IkReal x1028=(sj14)*(sj14);
IkReal x1029=((cj13)*(r12));
IkReal x1030=((IkReal(1.00000000000000))*(r10));
IkReal x1031=((cj13)*(r02));
IkReal x1032=((r01)*(sj13));
IkReal x1033=((r00)*(r11)*(sj13));
gconst31=IKsign(((((r00)*(sj14)*(x1029)))+(((IkReal(-1.00000000000000))*(x1028)*(x1030)*(x1032)))+(((x1027)*(x1033)))+(((IkReal(-1.00000000000000))*(x1027)*(x1030)*(x1032)))+(((IkReal(-1.00000000000000))*(sj14)*(x1030)*(x1031)))+(((cj14)*(r01)*(x1029)))+(((x1028)*(x1033)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1031)))));
IkReal x1034=(cj14)*(cj14);
IkReal x1035=(sj14)*(sj14);
IkReal x1036=((cj13)*(r12));
IkReal x1037=((IkReal(1.00000000000000))*(r10));
IkReal x1038=((cj13)*(r02));
IkReal x1039=((r01)*(sj13));
IkReal x1040=((r00)*(r11)*(sj13));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1038)))+(((r00)*(sj14)*(x1036)))+(((cj14)*(r01)*(x1036)))+(((IkReal(-1.00000000000000))*(x1034)*(x1037)*(x1039)))+(((x1034)*(x1040)))+(((IkReal(-1.00000000000000))*(sj14)*(x1037)*(x1038)))+(((x1035)*(x1040)))+(((IkReal(-1.00000000000000))*(x1035)*(x1037)*(x1039))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst30;
IkReal x1041=(sj14)*(sj14);
IkReal x1042=(cj14)*(cj14);
IkReal x1043=((IkReal(1.00000000000000))*(x1041));
IkReal x1044=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1045=((IkReal(1.00000000000000))*(x1042));
gconst30=IKsign(((((IkReal(-1.00000000000000))*(r00)*(r01)*(x1044)))+(((IkReal(-1.00000000000000))*(x1043)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1044)))+(((IkReal(-1.00000000000000))*(x1043)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1045)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1045)*((r11)*(r11))))));
IkReal x1046=(sj14)*(sj14);
IkReal x1047=(cj14)*(cj14);
IkReal x1048=((IkReal(1.00000000000000))*(x1046));
IkReal x1049=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1050=((IkReal(1.00000000000000))*(x1047));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1050)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1048)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1049)))+(((IkReal(-1.00000000000000))*(x1050)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1049)))+(((IkReal(-1.00000000000000))*(x1048)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1051=((sj10)*(sj11));
IkReal x1052=((r00)*(sj14));
IkReal x1053=((cj14)*(r11));
IkReal x1054=((r10)*(sj14));
IkReal x1055=((cj14)*(r01));
IkReal x1056=((IkReal(1.00000000000000))*(cj10)*(cj11));
if( IKabs(((gconst30)*(((((IkReal(-1.00000000000000))*(x1054)*(x1056)))+(((IkReal(-1.00000000000000))*(x1053)*(x1056)))+(((x1051)*(x1053)))+(((x1051)*(x1054))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst30)*(((((x1051)*(x1052)))+(((IkReal(-1.00000000000000))*(x1055)*(x1056)))+(((x1051)*(x1055)))+(((IkReal(-1.00000000000000))*(x1052)*(x1056))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst30)*(((((IkReal(-1.00000000000000))*(x1054)*(x1056)))+(((IkReal(-1.00000000000000))*(x1053)*(x1056)))+(((x1051)*(x1053)))+(((x1051)*(x1054)))))), ((gconst30)*(((((x1051)*(x1052)))+(((IkReal(-1.00000000000000))*(x1055)*(x1056)))+(((x1051)*(x1055)))+(((IkReal(-1.00000000000000))*(x1052)*(x1056)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1057=IKsin(j9);
IkReal x1058=IKcos(j9);
IkReal x1059=((IkReal(1.00000000000000))*(cj14));
IkReal x1060=((IkReal(1.00000000000000))*(sj14));
IkReal x1061=((cj13)*(cj14));
IkReal x1062=((cj14)*(r10));
IkReal x1063=((r01)*(sj14));
IkReal x1064=((IkReal(1.00000000000000))*(r12));
IkReal x1065=((sj13)*(x1058));
IkReal x1066=((r02)*(x1057));
IkReal x1067=((r11)*(x1057));
IkReal x1068=((r10)*(x1058));
IkReal x1069=((r01)*(x1058));
IkReal x1070=((sj13)*(x1057));
IkReal x1071=((r11)*(x1058));
IkReal x1072=((cj13)*(x1057));
IkReal x1073=((r10)*(x1057));
IkReal x1074=((r00)*(x1058));
IkReal x1075=((cj13)*(x1058));
evalcond[0]=((((r00)*(sj14)*(x1057)))+(((cj14)*(r01)*(x1057)))+(((IkReal(-1.00000000000000))*(x1059)*(x1071)))+(((IkReal(-1.00000000000000))*(x1060)*(x1068))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1059)*(x1069)))+(((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x1059)*(x1067)))+(((IkReal(-1.00000000000000))*(x1060)*(x1074)))+(((cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(x1060)*(x1073))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x1060)*(x1071)))+(((x1061)*(x1068)))+(((x1063)*(x1072)))+(((IkReal(-1.00000000000000))*(sj13)*(x1066)))+(((IkReal(-1.00000000000000))*(r00)*(x1059)*(x1072)))+(((r12)*(x1065))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x1060)*(x1065)))+(((IkReal(-1.00000000000000))*(r00)*(x1059)*(x1070)))+(((IkReal(-1.00000000000000))*(x1064)*(x1075)))+(((cj13)*(x1066)))+(((x1063)*(x1070)))+(((x1062)*(x1065))));
evalcond[4]=((((r02)*(x1065)))+(((x1061)*(x1073)))+(((cj10)*(sj11)))+(((r12)*(x1070)))+(((IkReal(-1.00000000000000))*(cj13)*(x1060)*(x1069)))+(((IkReal(-1.00000000000000))*(cj13)*(x1060)*(x1067)))+(((x1061)*(x1074)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x1075)))+(((IkReal(-1.00000000000000))*(r01)*(x1060)*(x1065)))+(((cj14)*(r00)*(x1065)))+(((IkReal(-1.00000000000000))*(sj13)*(x1060)*(x1067)))+(((x1062)*(x1070)))+(((IkReal(-1.00000000000000))*(x1064)*(x1072))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1076=((IkReal(1.00000000000000))*(sj14));
IkReal x1077=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r11)*(x1077)))+(((IkReal(-1.00000000000000))*(r10)*(x1076))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r01)*(x1077)))+(((IkReal(-1.00000000000000))*(r00)*(x1076))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst31)*(((((IkReal(-1.00000000000000))*(r11)*(x1077)))+(((IkReal(-1.00000000000000))*(r10)*(x1076)))))), ((gconst31)*(((((IkReal(-1.00000000000000))*(r01)*(x1077)))+(((IkReal(-1.00000000000000))*(r00)*(x1076)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1078=IKsin(j9);
IkReal x1079=IKcos(j9);
IkReal x1080=((IkReal(1.00000000000000))*(cj14));
IkReal x1081=((IkReal(1.00000000000000))*(sj14));
IkReal x1082=((cj13)*(cj14));
IkReal x1083=((cj14)*(r10));
IkReal x1084=((r01)*(sj14));
IkReal x1085=((IkReal(1.00000000000000))*(r12));
IkReal x1086=((sj13)*(x1079));
IkReal x1087=((r02)*(x1078));
IkReal x1088=((r11)*(x1078));
IkReal x1089=((r10)*(x1079));
IkReal x1090=((r01)*(x1079));
IkReal x1091=((sj13)*(x1078));
IkReal x1092=((r11)*(x1079));
IkReal x1093=((cj13)*(x1078));
IkReal x1094=((r10)*(x1078));
IkReal x1095=((r00)*(x1079));
IkReal x1096=((cj13)*(x1079));
evalcond[0]=((((cj14)*(r01)*(x1078)))+(((IkReal(-1.00000000000000))*(x1081)*(x1089)))+(((r00)*(sj14)*(x1078)))+(((IkReal(-1.00000000000000))*(x1080)*(x1092))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x1080)*(x1088)))+(((IkReal(-1.00000000000000))*(x1081)*(x1094)))+(((cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(x1081)*(x1095)))+(((IkReal(-1.00000000000000))*(x1080)*(x1090))));
evalcond[2]=((((x1082)*(x1089)))+(((r12)*(x1086)))+(((IkReal(-1.00000000000000))*(cj13)*(x1081)*(x1092)))+(((x1084)*(x1093)))+(((IkReal(-1.00000000000000))*(sj13)*(x1087)))+(((IkReal(-1.00000000000000))*(r00)*(x1080)*(x1093))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1085)*(x1096)))+(((x1083)*(x1086)))+(((cj13)*(x1087)))+(((IkReal(-1.00000000000000))*(r11)*(x1081)*(x1086)))+(((x1084)*(x1091)))+(((IkReal(-1.00000000000000))*(r00)*(x1080)*(x1091))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj13)*(x1081)*(x1090)))+(((cj10)*(sj11)))+(((r12)*(x1091)))+(((r02)*(x1086)))+(((IkReal(-1.00000000000000))*(cj13)*(x1081)*(x1088)))+(((x1082)*(x1094)))+(((cj11)*(sj10)))+(((x1082)*(x1095))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x1096)))+(((IkReal(-1.00000000000000))*(x1085)*(x1093)))+(((IkReal(-1.00000000000000))*(sj13)*(x1081)*(x1088)))+(((cj14)*(r00)*(x1086)))+(((IkReal(-1.00000000000000))*(r01)*(x1081)*(x1086)))+(((x1083)*(x1091))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1097=((npy)*(sj14));
IkReal x1098=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x1098)))+(((cj13)*(x1097))));
evalcond[4]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((sj13)*(x1097)))+(((IkReal(-1.00000000000000))*(sj13)*(x1098))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst32;
IkReal x1099=(sj14)*(sj14);
IkReal x1100=(cj14)*(cj14);
IkReal x1101=((IkReal(2.00000000000000))*(cj14)*(sj14));
gconst32=IKsign(((((x1100)*((r01)*(r01))))+(((r00)*(r01)*(x1101)))+(((r10)*(r11)*(x1101)))+(((x1099)*((r00)*(r00))))+(((x1099)*((r10)*(r10))))+(((x1100)*((r11)*(r11))))));
IkReal x1102=(sj14)*(sj14);
IkReal x1103=(cj14)*(cj14);
IkReal x1104=((IkReal(2.00000000000000))*(cj14)*(sj14));
dummyeval[0]=((((x1103)*((r11)*(r11))))+(((x1103)*((r01)*(r01))))+(((r10)*(r11)*(x1104)))+(((r00)*(r01)*(x1104)))+(((x1102)*((r10)*(r10))))+(((x1102)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst34;
gconst34=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst33;
IkReal x1105=(cj14)*(cj14);
IkReal x1106=(sj14)*(sj14);
IkReal x1107=((IkReal(1.00000000000000))*(r01));
IkReal x1108=((sj13)*(sj14));
IkReal x1109=((cj14)*(sj13));
IkReal x1110=((r00)*(r11));
IkReal x1111=((cj13)*(x1105));
IkReal x1112=((cj13)*(x1106));
gconst33=IKsign(((((x1110)*(x1111)))+(((x1110)*(x1112)))+(((IkReal(-1.00000000000000))*(r12)*(x1107)*(x1109)))+(((r02)*(r11)*(x1109)))+(((IkReal(-1.00000000000000))*(r10)*(x1107)*(x1111)))+(((IkReal(-1.00000000000000))*(r10)*(x1107)*(x1112)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1108)))+(((r02)*(r10)*(x1108)))));
IkReal x1113=(cj14)*(cj14);
IkReal x1114=(sj14)*(sj14);
IkReal x1115=((IkReal(1.00000000000000))*(r01));
IkReal x1116=((sj13)*(sj14));
IkReal x1117=((cj14)*(sj13));
IkReal x1118=((r00)*(r11));
IkReal x1119=((cj13)*(x1113));
IkReal x1120=((cj13)*(x1114));
dummyeval[0]=((((x1118)*(x1120)))+(((IkReal(-1.00000000000000))*(r12)*(x1115)*(x1117)))+(((r02)*(r10)*(x1116)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1116)))+(((x1118)*(x1119)))+(((IkReal(-1.00000000000000))*(r10)*(x1115)*(x1119)))+(((IkReal(-1.00000000000000))*(r10)*(x1115)*(x1120)))+(((r02)*(r11)*(x1117))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1121=((cj13)*(cj14));
IkReal x1122=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst33)*(((((r12)*(sj13)))+(((r10)*(x1121)))+(((IkReal(-1.00000000000000))*(r11)*(x1122))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst33)*(((((IkReal(-1.00000000000000))*(r01)*(x1122)))+(((r02)*(sj13)))+(((r00)*(x1121))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst33)*(((((r12)*(sj13)))+(((r10)*(x1121)))+(((IkReal(-1.00000000000000))*(r11)*(x1122)))))), ((gconst33)*(((((IkReal(-1.00000000000000))*(r01)*(x1122)))+(((r02)*(sj13)))+(((r00)*(x1121)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x1123=IKsin(j9);
IkReal x1124=IKcos(j9);
IkReal x1125=((r10)*(sj14));
IkReal x1126=((cj14)*(r11));
IkReal x1127=((cj14)*(r10));
IkReal x1128=((r11)*(sj14));
IkReal x1129=((cj14)*(r00));
IkReal x1130=((r00)*(sj14));
IkReal x1131=((IkReal(1.00000000000000))*(x1123));
IkReal x1132=((cj13)*(x1123));
IkReal x1133=((sj13)*(x1124));
IkReal x1134=((r01)*(x1123));
IkReal x1135=((IkReal(1.00000000000000))*(x1124));
evalcond[0]=((IkReal(1.00000000000000))+(((cj14)*(x1134)))+(((IkReal(-1.00000000000000))*(x1125)*(x1135)))+(((IkReal(-1.00000000000000))*(x1126)*(x1135)))+(((x1123)*(x1130))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1135)))+(((IkReal(-1.00000000000000))*(x1126)*(x1131)))+(((IkReal(-1.00000000000000))*(x1125)*(x1131)))+(((IkReal(-1.00000000000000))*(x1130)*(x1135))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x1128)*(x1135)))+(((cj13)*(x1124)*(x1127)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1131)))+(((IkReal(-1.00000000000000))*(cj13)*(x1129)*(x1131)))+(((r12)*(x1133)))+(((r01)*(sj14)*(x1132))));
evalcond[3]=((((r02)*(x1132)))+(((sj13)*(sj14)*(x1134)))+(((x1127)*(x1133)))+(((IkReal(-1.00000000000000))*(x1128)*(x1133)))+(((IkReal(-1.00000000000000))*(sj13)*(x1129)*(x1131)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1135))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst36;
gconst36=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1136=((cj13)*(sj14));
IkReal x1137=((IkReal(1.00000000000000))*(cj11));
IkReal x1138=((r11)*(sj9));
IkReal x1139=((IkReal(1.00000000000000))*(sj11));
IkReal x1140=((cj13)*(cj14));
IkReal x1141=((cj11)*(sj13));
IkReal x1142=((r12)*(sj9));
IkReal x1143=((cj9)*(r01));
IkReal x1144=((sj11)*(sj13));
IkReal x1145=((cj9)*(r02));
IkReal x1146=((r10)*(sj9));
IkReal x1147=((cj9)*(r00));
if( IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(r20)*(x1139)*(x1140)))+(((cj11)*(x1140)*(x1146)))+(((x1141)*(x1145)))+(((x1141)*(x1142)))+(((IkReal(-1.00000000000000))*(x1136)*(x1137)*(x1138)))+(((r21)*(sj11)*(x1136)))+(((cj11)*(x1140)*(x1147)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1139)))+(((IkReal(-1.00000000000000))*(x1136)*(x1137)*(x1143))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((x1144)*(x1145)))+(((IkReal(-1.00000000000000))*(x1136)*(x1138)*(x1139)))+(((cj11)*(r20)*(x1140)))+(((sj11)*(x1140)*(x1146)))+(((IkReal(-1.00000000000000))*(x1136)*(x1139)*(x1143)))+(((x1142)*(x1144)))+(((IkReal(-1.00000000000000))*(r21)*(x1136)*(x1137)))+(((r22)*(x1141)))+(((sj11)*(x1140)*(x1147))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst36)*(((((IkReal(-1.00000000000000))*(r20)*(x1139)*(x1140)))+(((cj11)*(x1140)*(x1146)))+(((x1141)*(x1145)))+(((x1141)*(x1142)))+(((IkReal(-1.00000000000000))*(x1136)*(x1137)*(x1138)))+(((r21)*(sj11)*(x1136)))+(((cj11)*(x1140)*(x1147)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1139)))+(((IkReal(-1.00000000000000))*(x1136)*(x1137)*(x1143)))))), ((gconst36)*(((((x1144)*(x1145)))+(((IkReal(-1.00000000000000))*(x1136)*(x1138)*(x1139)))+(((cj11)*(r20)*(x1140)))+(((sj11)*(x1140)*(x1146)))+(((IkReal(-1.00000000000000))*(x1136)*(x1139)*(x1143)))+(((x1142)*(x1144)))+(((IkReal(-1.00000000000000))*(r21)*(x1136)*(x1137)))+(((r22)*(x1141)))+(((sj11)*(x1140)*(x1147)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1148=IKsin(j10);
IkReal x1149=IKcos(j10);
IkReal x1150=((IkReal(1.00000000000000))*(sj13));
IkReal x1151=((r11)*(sj9));
IkReal x1152=((cj9)*(r01));
IkReal x1153=((r21)*(sj14));
IkReal x1154=((cj9)*(r02));
IkReal x1155=((sj13)*(sj9));
IkReal x1156=((cj14)*(r10));
IkReal x1157=((IkReal(1.00000000000000))*(cj13));
IkReal x1158=((cj14)*(r20));
IkReal x1159=((cj11)*(x1148));
IkReal x1160=((sj11)*(x1149));
IkReal x1161=((sj14)*(x1157));
IkReal x1162=((sj11)*(x1148));
IkReal x1163=((cj11)*(x1149));
IkReal x1164=((cj14)*(cj9)*(r00));
IkReal x1165=((x1160)+(x1159));
evalcond[0]=((((cj13)*(x1153)))+(x1162)+(((IkReal(-1.00000000000000))*(x1163)))+(((IkReal(-1.00000000000000))*(x1157)*(x1158)))+(((IkReal(-1.00000000000000))*(r22)*(x1150))));
evalcond[1]=((x1165)+(((sj13)*(x1153)))+(((IkReal(-1.00000000000000))*(x1150)*(x1158)))+(((cj13)*(r22))));
evalcond[2]=((x1165)+(((IkReal(-1.00000000000000))*(x1152)*(x1161)))+(((sj13)*(x1154)))+(((cj13)*(sj9)*(x1156)))+(((r12)*(x1155)))+(((IkReal(-1.00000000000000))*(x1151)*(x1161)))+(((cj13)*(x1164))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1157)))+(((IkReal(-1.00000000000000))*(x1162)))+(((IkReal(-1.00000000000000))*(sj14)*(x1150)*(x1152)))+(((x1155)*(x1156)))+(x1163)+(((IkReal(-1.00000000000000))*(sj14)*(x1150)*(x1151)))+(((sj13)*(x1164)))+(((IkReal(-1.00000000000000))*(x1154)*(x1157))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1166=((cj13)*(sj11));
IkReal x1167=((r21)*(sj14));
IkReal x1168=((cj11)*(cj13));
IkReal x1169=((cj11)*(sj13));
IkReal x1170=((sj11)*(sj13));
IkReal x1171=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(x1166)*(x1171)))+(((IkReal(-1.00000000000000))*(r22)*(x1170)))+(((x1166)*(x1167)))+(((x1167)*(x1169)))+(((IkReal(-1.00000000000000))*(x1169)*(x1171)))+(((r22)*(x1168))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((r22)*(x1166)))+(((IkReal(-1.00000000000000))*(x1167)*(x1168)))+(((IkReal(-1.00000000000000))*(x1170)*(x1171)))+(((r22)*(x1169)))+(((cj14)*(r20)*(x1168)))+(((x1167)*(x1170))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst35)*(((((IkReal(-1.00000000000000))*(x1166)*(x1171)))+(((IkReal(-1.00000000000000))*(r22)*(x1170)))+(((x1166)*(x1167)))+(((x1167)*(x1169)))+(((IkReal(-1.00000000000000))*(x1169)*(x1171)))+(((r22)*(x1168)))))), ((gconst35)*(((((r22)*(x1166)))+(((IkReal(-1.00000000000000))*(x1167)*(x1168)))+(((IkReal(-1.00000000000000))*(x1170)*(x1171)))+(((r22)*(x1169)))+(((cj14)*(r20)*(x1168)))+(((x1167)*(x1170)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1172=IKsin(j10);
IkReal x1173=IKcos(j10);
IkReal x1174=((IkReal(1.00000000000000))*(sj13));
IkReal x1175=((r11)*(sj9));
IkReal x1176=((cj9)*(r01));
IkReal x1177=((r21)*(sj14));
IkReal x1178=((cj9)*(r02));
IkReal x1179=((sj13)*(sj9));
IkReal x1180=((cj14)*(r10));
IkReal x1181=((IkReal(1.00000000000000))*(cj13));
IkReal x1182=((cj14)*(r20));
IkReal x1183=((cj11)*(x1172));
IkReal x1184=((sj11)*(x1173));
IkReal x1185=((sj14)*(x1181));
IkReal x1186=((sj11)*(x1172));
IkReal x1187=((cj11)*(x1173));
IkReal x1188=((cj14)*(cj9)*(r00));
IkReal x1189=((x1184)+(x1183));
evalcond[0]=((((cj13)*(x1177)))+(x1186)+(((IkReal(-1.00000000000000))*(x1187)))+(((IkReal(-1.00000000000000))*(x1181)*(x1182)))+(((IkReal(-1.00000000000000))*(r22)*(x1174))));
evalcond[1]=((((sj13)*(x1177)))+(x1189)+(((IkReal(-1.00000000000000))*(x1174)*(x1182)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x1180)))+(((cj13)*(x1188)))+(((sj13)*(x1178)))+(x1189)+(((IkReal(-1.00000000000000))*(x1175)*(x1185)))+(((IkReal(-1.00000000000000))*(x1176)*(x1185)))+(((r12)*(x1179))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x1174)*(x1175)))+(((sj13)*(x1188)))+(((x1179)*(x1180)))+(x1187)+(((IkReal(-1.00000000000000))*(x1178)*(x1181)))+(((IkReal(-1.00000000000000))*(sj14)*(x1174)*(x1176)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1181)))+(((IkReal(-1.00000000000000))*(x1186))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1190=((cj13)*(sj11));
IkReal x1191=((r21)*(sj14));
IkReal x1192=((cj14)*(r20));
IkReal x1193=((cj11)*(cj13));
IkReal x1194=((sj11)*(sj13));
IkReal x1195=((cj11)*(sj13));
if( IKabs(((gconst34)*(((((x1191)*(x1195)))+(((r22)*(x1193)))+(((IkReal(-1.00000000000000))*(x1192)*(x1195)))+(((x1190)*(x1191)))+(((IkReal(-1.00000000000000))*(x1190)*(x1192)))+(((IkReal(-1.00000000000000))*(r22)*(x1194))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*(((((IkReal(-1.00000000000000))*(x1192)*(x1194)))+(((r22)*(x1190)))+(((IkReal(-1.00000000000000))*(x1191)*(x1193)))+(((x1192)*(x1193)))+(((x1191)*(x1194)))+(((r22)*(x1195))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst34)*(((((x1191)*(x1195)))+(((r22)*(x1193)))+(((IkReal(-1.00000000000000))*(x1192)*(x1195)))+(((x1190)*(x1191)))+(((IkReal(-1.00000000000000))*(x1190)*(x1192)))+(((IkReal(-1.00000000000000))*(r22)*(x1194)))))), ((gconst34)*(((((IkReal(-1.00000000000000))*(x1192)*(x1194)))+(((r22)*(x1190)))+(((IkReal(-1.00000000000000))*(x1191)*(x1193)))+(((x1192)*(x1193)))+(((x1191)*(x1194)))+(((r22)*(x1195)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x1196=IKsin(j10);
IkReal x1197=IKcos(j10);
IkReal x1198=((IkReal(1.00000000000000))*(sj13));
IkReal x1199=((cj14)*(r20));
IkReal x1200=((r21)*(sj14));
evalcond[0]=((((sj11)*(x1196)))+(((IkReal(-1.00000000000000))*(cj11)*(x1197)))+(((IkReal(-1.00000000000000))*(r22)*(x1198)))+(((cj13)*(x1200)))+(((IkReal(-1.00000000000000))*(cj13)*(x1199))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1198)*(x1199)))+(((sj13)*(x1200)))+(((cj11)*(x1196)))+(((sj11)*(x1197)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst37;
IkReal x1201=(sj14)*(sj14);
IkReal x1202=(cj14)*(cj14);
IkReal x1203=((IkReal(2.00000000000000))*(cj14)*(sj14));
gconst37=IKsign(((((x1201)*((r10)*(r10))))+(((r10)*(r11)*(x1203)))+(((r00)*(r01)*(x1203)))+(((x1202)*((r01)*(r01))))+(((x1201)*((r00)*(r00))))+(((x1202)*((r11)*(r11))))));
IkReal x1204=(sj14)*(sj14);
IkReal x1205=(cj14)*(cj14);
IkReal x1206=((IkReal(2.00000000000000))*(cj14)*(sj14));
dummyeval[0]=((((x1204)*((r10)*(r10))))+(((x1204)*((r00)*(r00))))+(((x1205)*((r01)*(r01))))+(((x1205)*((r11)*(r11))))+(((r00)*(r01)*(x1206)))+(((r10)*(r11)*(x1206))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst38;
IkReal x1207=(cj14)*(cj14);
IkReal x1208=(sj14)*(sj14);
IkReal x1209=((IkReal(1.00000000000000))*(r01));
IkReal x1210=((sj13)*(sj14));
IkReal x1211=((cj14)*(sj13));
IkReal x1212=((r00)*(r11));
IkReal x1213=((cj13)*(x1207));
IkReal x1214=((cj13)*(x1208));
gconst38=IKsign(((((x1212)*(x1214)))+(((IkReal(-1.00000000000000))*(r10)*(x1209)*(x1213)))+(((r02)*(r10)*(x1210)))+(((IkReal(-1.00000000000000))*(r12)*(x1209)*(x1211)))+(((r02)*(r11)*(x1211)))+(((IkReal(-1.00000000000000))*(r10)*(x1209)*(x1214)))+(((x1212)*(x1213)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1210)))));
IkReal x1215=(cj14)*(cj14);
IkReal x1216=(sj14)*(sj14);
IkReal x1217=((IkReal(1.00000000000000))*(r01));
IkReal x1218=((sj13)*(sj14));
IkReal x1219=((cj14)*(sj13));
IkReal x1220=((r00)*(r11));
IkReal x1221=((cj13)*(x1215));
IkReal x1222=((cj13)*(x1216));
dummyeval[0]=((((x1220)*(x1222)))+(((IkReal(-1.00000000000000))*(r12)*(x1217)*(x1219)))+(((IkReal(-1.00000000000000))*(r10)*(x1217)*(x1221)))+(((r02)*(r11)*(x1219)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1218)))+(((IkReal(-1.00000000000000))*(r10)*(x1217)*(x1222)))+(((x1220)*(x1221)))+(((r02)*(r10)*(x1218))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1223=((cj13)*(cj14));
IkReal x1224=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst38)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x1224)))+(((r10)*(x1223))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1224)))+(((r00)*(x1223))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst38)*(((((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x1224)))+(((r10)*(x1223)))))), ((gconst38)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1224)))+(((r00)*(x1223)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1225=IKsin(j9);
IkReal x1226=IKcos(j9);
IkReal x1227=((IkReal(1.00000000000000))*(cj14));
IkReal x1228=((IkReal(1.00000000000000))*(sj14));
IkReal x1229=((cj13)*(cj14));
IkReal x1230=((cj14)*(r10));
IkReal x1231=((r01)*(sj14));
IkReal x1232=((IkReal(1.00000000000000))*(r12));
IkReal x1233=((sj13)*(x1226));
IkReal x1234=((r02)*(x1225));
IkReal x1235=((r11)*(x1225));
IkReal x1236=((r10)*(x1226));
IkReal x1237=((r01)*(x1226));
IkReal x1238=((sj13)*(x1225));
IkReal x1239=((r11)*(x1226));
IkReal x1240=((cj13)*(x1225));
IkReal x1241=((r10)*(x1225));
IkReal x1242=((r00)*(x1226));
IkReal x1243=((cj13)*(x1226));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1227)*(x1239)))+(((r00)*(sj14)*(x1225)))+(((cj14)*(r01)*(x1225)))+(((IkReal(-1.00000000000000))*(x1228)*(x1236))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1227)*(x1235)))+(((IkReal(-1.00000000000000))*(x1228)*(x1241)))+(((IkReal(-1.00000000000000))*(x1227)*(x1237)))+(((IkReal(-1.00000000000000))*(x1228)*(x1242))));
evalcond[2]=((((x1229)*(x1236)))+(((IkReal(-1.00000000000000))*(cj13)*(x1228)*(x1239)))+(((x1231)*(x1240)))+(((IkReal(-1.00000000000000))*(r00)*(x1227)*(x1240)))+(((IkReal(-1.00000000000000))*(sj13)*(x1234)))+(((r12)*(x1233))));
evalcond[3]=((((cj13)*(x1234)))+(((IkReal(-1.00000000000000))*(r00)*(x1227)*(x1238)))+(((IkReal(-1.00000000000000))*(r11)*(x1228)*(x1233)))+(((IkReal(-1.00000000000000))*(x1232)*(x1243)))+(((x1230)*(x1233)))+(((x1231)*(x1238))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj13)*(x1228)*(x1235)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x1228)*(x1237)))+(((r02)*(x1233)))+(((r12)*(x1238)))+(((x1229)*(x1242)))+(((cj11)*(sj10)))+(((x1229)*(x1241))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1232)*(x1240)))+(((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(r02)*(x1243)))+(((cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(sj13)*(x1228)*(x1235)))+(((IkReal(-1.00000000000000))*(r01)*(x1228)*(x1233)))+(((cj14)*(r00)*(x1233)))+(((x1230)*(x1238))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst37)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst37)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst37)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst37)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1244=IKsin(j9);
IkReal x1245=IKcos(j9);
IkReal x1246=((IkReal(1.00000000000000))*(cj14));
IkReal x1247=((IkReal(1.00000000000000))*(sj14));
IkReal x1248=((cj13)*(cj14));
IkReal x1249=((cj14)*(r10));
IkReal x1250=((r01)*(sj14));
IkReal x1251=((IkReal(1.00000000000000))*(r12));
IkReal x1252=((sj13)*(x1245));
IkReal x1253=((r02)*(x1244));
IkReal x1254=((r11)*(x1244));
IkReal x1255=((r10)*(x1245));
IkReal x1256=((r01)*(x1245));
IkReal x1257=((sj13)*(x1244));
IkReal x1258=((r11)*(x1245));
IkReal x1259=((cj13)*(x1244));
IkReal x1260=((r10)*(x1244));
IkReal x1261=((r00)*(x1245));
IkReal x1262=((cj13)*(x1245));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1246)*(x1258)))+(((cj14)*(r01)*(x1244)))+(((r00)*(sj14)*(x1244)))+(((IkReal(-1.00000000000000))*(x1247)*(x1255))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1247)*(x1261)))+(((IkReal(-1.00000000000000))*(x1247)*(x1260)))+(((IkReal(-1.00000000000000))*(x1246)*(x1254)))+(((IkReal(-1.00000000000000))*(x1246)*(x1256))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1246)*(x1259)))+(((IkReal(-1.00000000000000))*(cj13)*(x1247)*(x1258)))+(((r12)*(x1252)))+(((x1248)*(x1255)))+(((IkReal(-1.00000000000000))*(sj13)*(x1253)))+(((x1250)*(x1259))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1246)*(x1257)))+(((IkReal(-1.00000000000000))*(x1251)*(x1262)))+(((cj13)*(x1253)))+(((x1249)*(x1252)))+(((x1250)*(x1257)))+(((IkReal(-1.00000000000000))*(r11)*(x1247)*(x1252))));
evalcond[4]=((((r02)*(x1252)))+(((IkReal(-1.00000000000000))*(cj13)*(x1247)*(x1256)))+(((cj10)*(sj11)))+(((r12)*(x1257)))+(((IkReal(-1.00000000000000))*(cj13)*(x1247)*(x1254)))+(((x1248)*(x1261)))+(((x1248)*(x1260)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(r02)*(x1262)))+(((cj14)*(r00)*(x1252)))+(((IkReal(-1.00000000000000))*(r01)*(x1247)*(x1252)))+(((IkReal(-1.00000000000000))*(sj13)*(x1247)*(x1254)))+(((cj10)*(cj11)))+(((IkReal(-1.00000000000000))*(x1251)*(x1259)))+(((x1249)*(x1257))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst32)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst32)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst32)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst32)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x1263=IKsin(j9);
IkReal x1264=IKcos(j9);
IkReal x1265=((r10)*(sj14));
IkReal x1266=((cj14)*(r11));
IkReal x1267=((cj14)*(r10));
IkReal x1268=((r11)*(sj14));
IkReal x1269=((cj14)*(r00));
IkReal x1270=((r00)*(sj14));
IkReal x1271=((IkReal(1.00000000000000))*(x1263));
IkReal x1272=((cj13)*(x1263));
IkReal x1273=((sj13)*(x1264));
IkReal x1274=((r01)*(x1263));
IkReal x1275=((IkReal(1.00000000000000))*(x1264));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1266)*(x1275)))+(((cj14)*(x1274)))+(((x1263)*(x1270)))+(((IkReal(-1.00000000000000))*(x1265)*(x1275))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1265)*(x1271)))+(((IkReal(-1.00000000000000))*(x1270)*(x1275)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1275)))+(((IkReal(-1.00000000000000))*(x1266)*(x1271))));
evalcond[2]=((((r12)*(x1273)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1271)))+(((IkReal(-1.00000000000000))*(cj13)*(x1268)*(x1275)))+(((cj13)*(x1264)*(x1267)))+(((r01)*(sj14)*(x1272)))+(((IkReal(-1.00000000000000))*(cj13)*(x1269)*(x1271))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj13)*(x1269)*(x1271)))+(((IkReal(-1.00000000000000))*(x1268)*(x1273)))+(((x1267)*(x1273)))+(((r02)*(x1272)))+(((sj13)*(sj14)*(x1274)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1275))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst36;
gconst36=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1276=((cj13)*(sj14));
IkReal x1277=((IkReal(1.00000000000000))*(cj11));
IkReal x1278=((r11)*(sj9));
IkReal x1279=((IkReal(1.00000000000000))*(sj11));
IkReal x1280=((cj13)*(cj14));
IkReal x1281=((cj11)*(sj13));
IkReal x1282=((r12)*(sj9));
IkReal x1283=((cj9)*(r01));
IkReal x1284=((sj11)*(sj13));
IkReal x1285=((cj9)*(r02));
IkReal x1286=((r10)*(sj9));
IkReal x1287=((cj9)*(r00));
if( IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(x1276)*(x1277)*(x1283)))+(((cj11)*(x1280)*(x1286)))+(((x1281)*(x1285)))+(((r21)*(sj11)*(x1276)))+(((cj11)*(x1280)*(x1287)))+(((x1281)*(x1282)))+(((IkReal(-1.00000000000000))*(r20)*(x1279)*(x1280)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1279)))+(((IkReal(-1.00000000000000))*(x1276)*(x1277)*(x1278))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((x1284)*(x1285)))+(((sj11)*(x1280)*(x1287)))+(((cj11)*(r20)*(x1280)))+(((IkReal(-1.00000000000000))*(x1276)*(x1279)*(x1283)))+(((r22)*(x1281)))+(((IkReal(-1.00000000000000))*(r21)*(x1276)*(x1277)))+(((x1282)*(x1284)))+(((IkReal(-1.00000000000000))*(x1276)*(x1278)*(x1279)))+(((sj11)*(x1280)*(x1286))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst36)*(((((IkReal(-1.00000000000000))*(x1276)*(x1277)*(x1283)))+(((cj11)*(x1280)*(x1286)))+(((x1281)*(x1285)))+(((r21)*(sj11)*(x1276)))+(((cj11)*(x1280)*(x1287)))+(((x1281)*(x1282)))+(((IkReal(-1.00000000000000))*(r20)*(x1279)*(x1280)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1279)))+(((IkReal(-1.00000000000000))*(x1276)*(x1277)*(x1278)))))), ((gconst36)*(((((x1284)*(x1285)))+(((sj11)*(x1280)*(x1287)))+(((cj11)*(r20)*(x1280)))+(((IkReal(-1.00000000000000))*(x1276)*(x1279)*(x1283)))+(((r22)*(x1281)))+(((IkReal(-1.00000000000000))*(r21)*(x1276)*(x1277)))+(((x1282)*(x1284)))+(((IkReal(-1.00000000000000))*(x1276)*(x1278)*(x1279)))+(((sj11)*(x1280)*(x1286)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1288=IKsin(j10);
IkReal x1289=IKcos(j10);
IkReal x1290=((IkReal(1.00000000000000))*(sj13));
IkReal x1291=((r11)*(sj9));
IkReal x1292=((cj9)*(r01));
IkReal x1293=((r21)*(sj14));
IkReal x1294=((cj9)*(r02));
IkReal x1295=((sj13)*(sj9));
IkReal x1296=((cj14)*(r10));
IkReal x1297=((IkReal(1.00000000000000))*(cj13));
IkReal x1298=((cj14)*(r20));
IkReal x1299=((cj11)*(x1288));
IkReal x1300=((sj11)*(x1289));
IkReal x1301=((sj14)*(x1297));
IkReal x1302=((sj11)*(x1288));
IkReal x1303=((cj11)*(x1289));
IkReal x1304=((cj14)*(cj9)*(r00));
IkReal x1305=((x1299)+(x1300));
evalcond[0]=((((cj13)*(x1293)))+(((IkReal(-1.00000000000000))*(r22)*(x1290)))+(((IkReal(-1.00000000000000))*(x1303)))+(((IkReal(-1.00000000000000))*(x1297)*(x1298)))+(x1302));
evalcond[1]=((((sj13)*(x1293)))+(((IkReal(-1.00000000000000))*(x1290)*(x1298)))+(x1305)+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x1294)))+(((cj13)*(sj9)*(x1296)))+(((r12)*(x1295)))+(((IkReal(-1.00000000000000))*(x1291)*(x1301)))+(((cj13)*(x1304)))+(((IkReal(-1.00000000000000))*(x1292)*(x1301)))+(x1305));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x1290)*(x1292)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1297)))+(((IkReal(-1.00000000000000))*(sj14)*(x1290)*(x1291)))+(((x1295)*(x1296)))+(((sj13)*(x1304)))+(((IkReal(-1.00000000000000))*(x1302)))+(((IkReal(-1.00000000000000))*(x1294)*(x1297)))+(x1303));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1306=((cj13)*(sj11));
IkReal x1307=((r21)*(sj14));
IkReal x1308=((cj11)*(cj13));
IkReal x1309=((cj11)*(sj13));
IkReal x1310=((sj11)*(sj13));
IkReal x1311=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(r22)*(x1310)))+(((r22)*(x1308)))+(((x1306)*(x1307)))+(((IkReal(-1.00000000000000))*(x1309)*(x1311)))+(((IkReal(-1.00000000000000))*(x1306)*(x1311)))+(((x1307)*(x1309))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((r22)*(x1306)))+(((cj14)*(r20)*(x1308)))+(((IkReal(-1.00000000000000))*(x1310)*(x1311)))+(((IkReal(-1.00000000000000))*(x1307)*(x1308)))+(((x1307)*(x1310)))+(((r22)*(x1309))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst35)*(((((IkReal(-1.00000000000000))*(r22)*(x1310)))+(((r22)*(x1308)))+(((x1306)*(x1307)))+(((IkReal(-1.00000000000000))*(x1309)*(x1311)))+(((IkReal(-1.00000000000000))*(x1306)*(x1311)))+(((x1307)*(x1309)))))), ((gconst35)*(((((r22)*(x1306)))+(((cj14)*(r20)*(x1308)))+(((IkReal(-1.00000000000000))*(x1310)*(x1311)))+(((IkReal(-1.00000000000000))*(x1307)*(x1308)))+(((x1307)*(x1310)))+(((r22)*(x1309)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1312=IKsin(j10);
IkReal x1313=IKcos(j10);
IkReal x1314=((IkReal(1.00000000000000))*(sj13));
IkReal x1315=((r11)*(sj9));
IkReal x1316=((cj9)*(r01));
IkReal x1317=((r21)*(sj14));
IkReal x1318=((cj9)*(r02));
IkReal x1319=((sj13)*(sj9));
IkReal x1320=((cj14)*(r10));
IkReal x1321=((IkReal(1.00000000000000))*(cj13));
IkReal x1322=((cj14)*(r20));
IkReal x1323=((cj11)*(x1312));
IkReal x1324=((sj11)*(x1313));
IkReal x1325=((sj14)*(x1321));
IkReal x1326=((sj11)*(x1312));
IkReal x1327=((cj11)*(x1313));
IkReal x1328=((cj14)*(cj9)*(r00));
IkReal x1329=((x1323)+(x1324));
evalcond[0]=((((cj13)*(x1317)))+(((IkReal(-1.00000000000000))*(x1327)))+(((IkReal(-1.00000000000000))*(r22)*(x1314)))+(((IkReal(-1.00000000000000))*(x1321)*(x1322)))+(x1326));
evalcond[1]=((((sj13)*(x1317)))+(((IkReal(-1.00000000000000))*(x1314)*(x1322)))+(x1329)+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x1319)))+(((cj13)*(sj9)*(x1320)))+(((IkReal(-1.00000000000000))*(x1316)*(x1325)))+(((cj13)*(x1328)))+(((sj13)*(x1318)))+(((IkReal(-1.00000000000000))*(x1315)*(x1325)))+(x1329));
evalcond[3]=((((sj13)*(x1328)))+(((IkReal(-1.00000000000000))*(sj14)*(x1314)*(x1315)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1321)))+(((IkReal(-1.00000000000000))*(sj14)*(x1314)*(x1316)))+(((x1319)*(x1320)))+(((IkReal(-1.00000000000000))*(x1318)*(x1321)))+(x1327)+(((IkReal(-1.00000000000000))*(x1326))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1330=((npy)*(sj14));
IkReal x1331=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x1331)))+(((cj13)*(x1330))));
evalcond[4]=((IkReal(-0.0300000000000000))+(((sj13)*(x1330)))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(sj13)*(x1331)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
IkReal x1332=(sj14)*(sj14);
IkReal x1333=(cj14)*(cj14);
IkReal x1334=((IkReal(1.00000000000000))*(x1332));
IkReal x1335=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1336=((IkReal(1.00000000000000))*(x1333));
gconst39=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x1335)))+(((IkReal(-1.00000000000000))*(x1336)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1334)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1334)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1335)))+(((IkReal(-1.00000000000000))*(x1336)*((r01)*(r01))))));
IkReal x1337=(sj14)*(sj14);
IkReal x1338=(cj14)*(cj14);
IkReal x1339=((IkReal(1.00000000000000))*(x1337));
IkReal x1340=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1341=((IkReal(1.00000000000000))*(x1338));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1341)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1339)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1339)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1341)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1340)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1340))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst41;
gconst41=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst40;
IkReal x1342=(sj14)*(sj14);
IkReal x1343=(cj14)*(cj14);
IkReal x1344=((cj14)*(sj13));
IkReal x1345=((IkReal(1.00000000000000))*(r11));
IkReal x1346=((cj13)*(r00));
IkReal x1347=((sj13)*(sj14));
IkReal x1348=((cj13)*(r01)*(r10));
gconst40=IKsign(((((r01)*(r12)*(x1344)))+(((IkReal(-1.00000000000000))*(r02)*(x1344)*(x1345)))+(((IkReal(-1.00000000000000))*(x1343)*(x1345)*(x1346)))+(((x1342)*(x1348)))+(((x1343)*(x1348)))+(((IkReal(-1.00000000000000))*(x1342)*(x1345)*(x1346)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x1347)))+(((r00)*(r12)*(x1347)))));
IkReal x1349=(sj14)*(sj14);
IkReal x1350=(cj14)*(cj14);
IkReal x1351=((cj14)*(sj13));
IkReal x1352=((IkReal(1.00000000000000))*(r11));
IkReal x1353=((cj13)*(r00));
IkReal x1354=((sj13)*(sj14));
IkReal x1355=((cj13)*(r01)*(r10));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(r10)*(x1354)))+(((x1350)*(x1355)))+(((r01)*(r12)*(x1351)))+(((IkReal(-1.00000000000000))*(r02)*(x1351)*(x1352)))+(((x1349)*(x1355)))+(((IkReal(-1.00000000000000))*(x1350)*(x1352)*(x1353)))+(((r00)*(r12)*(x1354)))+(((IkReal(-1.00000000000000))*(x1349)*(x1352)*(x1353))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1356=((cj13)*(cj14));
IkReal x1357=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst40)*(((((r10)*(x1356)))+(((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x1357))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1357)))+(((r00)*(x1356))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst40)*(((((r10)*(x1356)))+(((r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r11)*(x1357)))))), ((gconst40)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1357)))+(((r00)*(x1356)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x1358=IKsin(j9);
IkReal x1359=IKcos(j9);
IkReal x1360=((r10)*(sj14));
IkReal x1361=((cj14)*(r11));
IkReal x1362=((cj14)*(r10));
IkReal x1363=((r11)*(sj14));
IkReal x1364=((cj14)*(r00));
IkReal x1365=((r00)*(sj14));
IkReal x1366=((IkReal(1.00000000000000))*(x1358));
IkReal x1367=((cj13)*(x1358));
IkReal x1368=((sj13)*(x1359));
IkReal x1369=((r01)*(x1358));
IkReal x1370=((IkReal(1.00000000000000))*(x1359));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1360)*(x1370)))+(((IkReal(-1.00000000000000))*(x1361)*(x1370)))+(((x1358)*(x1365)))+(((cj14)*(x1369))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1365)*(x1370)))+(((IkReal(-1.00000000000000))*(x1361)*(x1366)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1370)))+(((IkReal(-1.00000000000000))*(x1360)*(x1366))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x1363)*(x1370)))+(((r01)*(sj14)*(x1367)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1366)))+(((IkReal(-1.00000000000000))*(cj13)*(x1364)*(x1366)))+(((r12)*(x1368)))+(((cj13)*(x1359)*(x1362))));
evalcond[3]=((((r02)*(x1367)))+(((IkReal(-1.00000000000000))*(x1363)*(x1368)))+(((IkReal(-1.00000000000000))*(sj13)*(x1364)*(x1366)))+(((sj13)*(sj14)*(x1369)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1370)))+(((x1362)*(x1368))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1371=((cj13)*(sj14));
IkReal x1372=((cj11)*(sj9));
IkReal x1373=((IkReal(1.00000000000000))*(r11));
IkReal x1374=((IkReal(1.00000000000000))*(sj11));
IkReal x1375=((cj13)*(cj14));
IkReal x1376=((r22)*(sj13));
IkReal x1377=((r12)*(sj13));
IkReal x1378=((cj9)*(r01));
IkReal x1379=((cj9)*(sj11));
IkReal x1380=((r02)*(sj13));
IkReal x1381=((IkReal(1.00000000000000))*(cj11));
IkReal x1382=((sj11)*(sj9));
IkReal x1383=((cj11)*(cj9));
if( IKabs(((gconst43)*(((((IkReal(-1.00000000000000))*(x1374)*(x1376)))+(((IkReal(-1.00000000000000))*(r20)*(x1374)*(x1375)))+(((IkReal(-1.00000000000000))*(x1371)*(x1378)*(x1381)))+(((r21)*(sj11)*(x1371)))+(((IkReal(-1.00000000000000))*(x1371)*(x1372)*(x1373)))+(((r10)*(x1372)*(x1375)))+(((x1380)*(x1383)))+(((x1372)*(x1377)))+(((r00)*(x1375)*(x1383))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((r10)*(x1375)*(x1382)))+(((IkReal(-1.00000000000000))*(x1371)*(x1374)*(x1378)))+(((x1379)*(x1380)))+(((IkReal(-1.00000000000000))*(x1371)*(x1373)*(x1382)))+(((x1377)*(x1382)))+(((cj11)*(x1376)))+(((r00)*(x1375)*(x1379)))+(((IkReal(-1.00000000000000))*(r21)*(x1371)*(x1381)))+(((cj11)*(r20)*(x1375))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst43)*(((((IkReal(-1.00000000000000))*(x1374)*(x1376)))+(((IkReal(-1.00000000000000))*(r20)*(x1374)*(x1375)))+(((IkReal(-1.00000000000000))*(x1371)*(x1378)*(x1381)))+(((r21)*(sj11)*(x1371)))+(((IkReal(-1.00000000000000))*(x1371)*(x1372)*(x1373)))+(((r10)*(x1372)*(x1375)))+(((x1380)*(x1383)))+(((x1372)*(x1377)))+(((r00)*(x1375)*(x1383)))))), ((gconst43)*(((((r10)*(x1375)*(x1382)))+(((IkReal(-1.00000000000000))*(x1371)*(x1374)*(x1378)))+(((x1379)*(x1380)))+(((IkReal(-1.00000000000000))*(x1371)*(x1373)*(x1382)))+(((x1377)*(x1382)))+(((cj11)*(x1376)))+(((r00)*(x1375)*(x1379)))+(((IkReal(-1.00000000000000))*(r21)*(x1371)*(x1381)))+(((cj11)*(r20)*(x1375)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1384=IKsin(j10);
IkReal x1385=IKcos(j10);
IkReal x1386=((IkReal(1.00000000000000))*(sj13));
IkReal x1387=((r11)*(sj9));
IkReal x1388=((cj9)*(r01));
IkReal x1389=((IkReal(1.00000000000000))*(cj11));
IkReal x1390=((r21)*(sj14));
IkReal x1391=((cj9)*(r02));
IkReal x1392=((sj13)*(sj9));
IkReal x1393=((cj14)*(r10));
IkReal x1394=((IkReal(1.00000000000000))*(cj13));
IkReal x1395=((cj14)*(r20));
IkReal x1396=((sj11)*(x1384));
IkReal x1397=((sj14)*(x1394));
IkReal x1398=((sj11)*(x1385));
IkReal x1399=((cj14)*(cj9)*(r00));
IkReal x1400=((x1385)*(x1389));
evalcond[0]=((((cj13)*(x1390)))+(((IkReal(-1.00000000000000))*(x1394)*(x1395)))+(((IkReal(-1.00000000000000))*(x1400)))+(x1396)+(((IkReal(-1.00000000000000))*(r22)*(x1386))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1384)*(x1389)))+(((IkReal(-1.00000000000000))*(x1398)))+(((IkReal(-1.00000000000000))*(x1386)*(x1395)))+(((sj13)*(x1390)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1388)*(x1397)))+(((IkReal(-1.00000000000000))*(x1387)*(x1397)))+(((sj13)*(x1391)))+(((cj13)*(x1399)))+(((cj11)*(x1384)))+(((r12)*(x1392)))+(x1398)+(((cj13)*(sj9)*(x1393))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1391)*(x1394)))+(((IkReal(-1.00000000000000))*(sj14)*(x1386)*(x1387)))+(((IkReal(-1.00000000000000))*(x1400)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1394)))+(x1396)+(((IkReal(-1.00000000000000))*(sj14)*(x1386)*(x1388)))+(((x1392)*(x1393)))+(((sj13)*(x1399))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1401=((IkReal(1.00000000000000))*(cj11));
IkReal x1402=((r22)*(sj13));
IkReal x1403=((cj13)*(sj11));
IkReal x1404=((cj14)*(r20));
IkReal x1405=((r21)*(sj14));
IkReal x1406=((cj11)*(cj13));
IkReal x1407=((sj11)*(sj13));
if( IKabs(((gconst42)*(((((r22)*(x1406)))+(((cj11)*(sj13)*(x1405)))+(((sj11)*(x1402)))+(((IkReal(-1.00000000000000))*(x1403)*(x1405)))+(((x1403)*(x1404)))+(((IkReal(-1.00000000000000))*(sj13)*(x1401)*(x1404))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((x1405)*(x1406)))+(((IkReal(-1.00000000000000))*(x1401)*(x1402)))+(((IkReal(-1.00000000000000))*(cj13)*(x1401)*(x1404)))+(((r22)*(x1403)))+(((IkReal(-1.00000000000000))*(x1404)*(x1407)))+(((x1405)*(x1407))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst42)*(((((r22)*(x1406)))+(((cj11)*(sj13)*(x1405)))+(((sj11)*(x1402)))+(((IkReal(-1.00000000000000))*(x1403)*(x1405)))+(((x1403)*(x1404)))+(((IkReal(-1.00000000000000))*(sj13)*(x1401)*(x1404)))))), ((gconst42)*(((((x1405)*(x1406)))+(((IkReal(-1.00000000000000))*(x1401)*(x1402)))+(((IkReal(-1.00000000000000))*(cj13)*(x1401)*(x1404)))+(((r22)*(x1403)))+(((IkReal(-1.00000000000000))*(x1404)*(x1407)))+(((x1405)*(x1407)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1408=IKsin(j10);
IkReal x1409=IKcos(j10);
IkReal x1410=((IkReal(1.00000000000000))*(sj13));
IkReal x1411=((r11)*(sj9));
IkReal x1412=((cj9)*(r01));
IkReal x1413=((IkReal(1.00000000000000))*(cj11));
IkReal x1414=((r21)*(sj14));
IkReal x1415=((cj9)*(r02));
IkReal x1416=((sj13)*(sj9));
IkReal x1417=((cj14)*(r10));
IkReal x1418=((IkReal(1.00000000000000))*(cj13));
IkReal x1419=((cj14)*(r20));
IkReal x1420=((sj11)*(x1408));
IkReal x1421=((sj14)*(x1418));
IkReal x1422=((sj11)*(x1409));
IkReal x1423=((cj14)*(cj9)*(r00));
IkReal x1424=((x1409)*(x1413));
evalcond[0]=((x1420)+(((IkReal(-1.00000000000000))*(r22)*(x1410)))+(((IkReal(-1.00000000000000))*(x1418)*(x1419)))+(((IkReal(-1.00000000000000))*(x1424)))+(((cj13)*(x1414))));
evalcond[1]=((((sj13)*(x1414)))+(((IkReal(-1.00000000000000))*(x1422)))+(((IkReal(-1.00000000000000))*(x1410)*(x1419)))+(((IkReal(-1.00000000000000))*(x1408)*(x1413)))+(((cj13)*(r22))));
evalcond[2]=((x1422)+(((cj13)*(x1423)))+(((IkReal(-1.00000000000000))*(x1411)*(x1421)))+(((r12)*(x1416)))+(((cj13)*(sj9)*(x1417)))+(((cj11)*(x1408)))+(((sj13)*(x1415)))+(((IkReal(-1.00000000000000))*(x1412)*(x1421))));
evalcond[3]=((x1420)+(((IkReal(-1.00000000000000))*(sj14)*(x1410)*(x1411)))+(((x1416)*(x1417)))+(((IkReal(-1.00000000000000))*(x1415)*(x1418)))+(((IkReal(-1.00000000000000))*(x1424)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1418)))+(((sj13)*(x1423)))+(((IkReal(-1.00000000000000))*(sj14)*(x1410)*(x1412))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1425=((cj13)*(sj11));
IkReal x1426=((r21)*(sj14));
IkReal x1427=((cj11)*(cj13));
IkReal x1428=((IkReal(1.00000000000000))*(sj13));
IkReal x1429=((sj11)*(sj13));
IkReal x1430=((cj14)*(r20));
if( IKabs(((gconst41)*(((((r22)*(x1429)))+(((cj11)*(sj13)*(x1426)))+(((IkReal(-1.00000000000000))*(cj11)*(x1428)*(x1430)))+(((IkReal(-1.00000000000000))*(x1425)*(x1426)))+(((r22)*(x1427)))+(((x1425)*(x1430))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*(((((IkReal(-1.00000000000000))*(sj11)*(x1428)*(x1430)))+(((x1426)*(x1427)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x1428)))+(((r22)*(x1425)))+(((IkReal(-1.00000000000000))*(x1427)*(x1430)))+(((x1426)*(x1429))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst41)*(((((r22)*(x1429)))+(((cj11)*(sj13)*(x1426)))+(((IkReal(-1.00000000000000))*(cj11)*(x1428)*(x1430)))+(((IkReal(-1.00000000000000))*(x1425)*(x1426)))+(((r22)*(x1427)))+(((x1425)*(x1430)))))), ((gconst41)*(((((IkReal(-1.00000000000000))*(sj11)*(x1428)*(x1430)))+(((x1426)*(x1427)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x1428)))+(((r22)*(x1425)))+(((IkReal(-1.00000000000000))*(x1427)*(x1430)))+(((x1426)*(x1429)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x1431=IKsin(j10);
IkReal x1432=IKcos(j10);
IkReal x1433=((IkReal(1.00000000000000))*(sj13));
IkReal x1434=((cj14)*(r20));
IkReal x1435=((r21)*(sj14));
IkReal x1436=((IkReal(1.00000000000000))*(x1432));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj11)*(x1436)))+(((cj13)*(x1435)))+(((IkReal(-1.00000000000000))*(r22)*(x1433)))+(((IkReal(-1.00000000000000))*(cj13)*(x1434)))+(((sj11)*(x1431))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj11)*(x1436)))+(((IkReal(-1.00000000000000))*(cj11)*(x1431)))+(((IkReal(-1.00000000000000))*(x1433)*(x1434)))+(((sj13)*(x1435)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst44;
IkReal x1437=(sj14)*(sj14);
IkReal x1438=(cj14)*(cj14);
IkReal x1439=((IkReal(1.00000000000000))*(x1437));
IkReal x1440=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1441=((IkReal(1.00000000000000))*(x1438));
gconst44=IKsign(((((IkReal(-1.00000000000000))*(x1441)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1441)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1439)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1439)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1440)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1440)))));
IkReal x1442=(sj14)*(sj14);
IkReal x1443=(cj14)*(cj14);
IkReal x1444=((IkReal(1.00000000000000))*(x1442));
IkReal x1445=((IkReal(2.00000000000000))*(cj14)*(sj14));
IkReal x1446=((IkReal(1.00000000000000))*(x1443));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1446)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1445)))+(((IkReal(-1.00000000000000))*(x1444)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1445)))+(((IkReal(-1.00000000000000))*(x1444)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1446)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst45;
IkReal x1447=(sj14)*(sj14);
IkReal x1448=(cj14)*(cj14);
IkReal x1449=((cj14)*(sj13));
IkReal x1450=((IkReal(1.00000000000000))*(r11));
IkReal x1451=((cj13)*(r00));
IkReal x1452=((sj13)*(sj14));
IkReal x1453=((cj13)*(r01)*(r10));
gconst45=IKsign(((((IkReal(-1.00000000000000))*(x1447)*(x1450)*(x1451)))+(((IkReal(-1.00000000000000))*(x1448)*(x1450)*(x1451)))+(((r01)*(r12)*(x1449)))+(((IkReal(-1.00000000000000))*(r02)*(x1449)*(x1450)))+(((x1448)*(x1453)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x1452)))+(((r00)*(r12)*(x1452)))+(((x1447)*(x1453)))));
IkReal x1454=(sj14)*(sj14);
IkReal x1455=(cj14)*(cj14);
IkReal x1456=((cj14)*(sj13));
IkReal x1457=((IkReal(1.00000000000000))*(r11));
IkReal x1458=((cj13)*(r00));
IkReal x1459=((sj13)*(sj14));
IkReal x1460=((cj13)*(r01)*(r10));
dummyeval[0]=((((x1454)*(x1460)))+(((r01)*(r12)*(x1456)))+(((IkReal(-1.00000000000000))*(r02)*(x1456)*(x1457)))+(((r00)*(r12)*(x1459)))+(((IkReal(-1.00000000000000))*(x1454)*(x1457)*(x1458)))+(((IkReal(-1.00000000000000))*(r02)*(r10)*(x1459)))+(((x1455)*(x1460)))+(((IkReal(-1.00000000000000))*(x1455)*(x1457)*(x1458))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1461=((cj13)*(cj14));
IkReal x1462=((IkReal(1.00000000000000))*(cj13)*(sj14));
if( IKabs(((gconst45)*(((((r12)*(sj13)))+(((r10)*(x1461)))+(((IkReal(-1.00000000000000))*(r11)*(x1462))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst45)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1462)))+(((r00)*(x1461))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst45)*(((((r12)*(sj13)))+(((r10)*(x1461)))+(((IkReal(-1.00000000000000))*(r11)*(x1462)))))), ((gconst45)*(((((r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x1462)))+(((r00)*(x1461)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1463=IKsin(j9);
IkReal x1464=IKcos(j9);
IkReal x1465=((IkReal(1.00000000000000))*(cj14));
IkReal x1466=((IkReal(1.00000000000000))*(sj14));
IkReal x1467=((cj13)*(cj14));
IkReal x1468=((cj14)*(r10));
IkReal x1469=((r01)*(sj14));
IkReal x1470=((IkReal(1.00000000000000))*(r12));
IkReal x1471=((sj13)*(x1464));
IkReal x1472=((r02)*(x1463));
IkReal x1473=((r11)*(x1463));
IkReal x1474=((r10)*(x1464));
IkReal x1475=((r01)*(x1464));
IkReal x1476=((sj13)*(x1463));
IkReal x1477=((r11)*(x1464));
IkReal x1478=((cj13)*(x1463));
IkReal x1479=((r10)*(x1463));
IkReal x1480=((r00)*(x1464));
IkReal x1481=((cj13)*(x1464));
evalcond[0]=((IkReal(-1.00000000000000))+(((r00)*(sj14)*(x1463)))+(((cj14)*(r01)*(x1463)))+(((IkReal(-1.00000000000000))*(x1466)*(x1474)))+(((IkReal(-1.00000000000000))*(x1465)*(x1477))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1465)*(x1473)))+(((IkReal(-1.00000000000000))*(x1465)*(x1475)))+(((IkReal(-1.00000000000000))*(x1466)*(x1480)))+(((IkReal(-1.00000000000000))*(x1466)*(x1479))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x1466)*(x1477)))+(((r12)*(x1471)))+(((x1469)*(x1478)))+(((IkReal(-1.00000000000000))*(sj13)*(x1472)))+(((x1467)*(x1474)))+(((IkReal(-1.00000000000000))*(r00)*(x1465)*(x1478))));
evalcond[3]=((((x1468)*(x1471)))+(((IkReal(-1.00000000000000))*(r00)*(x1465)*(x1476)))+(((IkReal(-1.00000000000000))*(r11)*(x1466)*(x1471)))+(((IkReal(-1.00000000000000))*(x1470)*(x1481)))+(((cj13)*(x1472)))+(((x1469)*(x1476))));
evalcond[4]=((((r02)*(x1471)))+(((x1467)*(x1480)))+(((r12)*(x1476)))+(((cj10)*(sj11)))+(((x1467)*(x1479)))+(((IkReal(-1.00000000000000))*(cj13)*(x1466)*(x1475)))+(((IkReal(-1.00000000000000))*(cj13)*(x1466)*(x1473)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x1481)))+(((sj10)*(sj11)))+(((x1468)*(x1476)))+(((IkReal(-1.00000000000000))*(x1470)*(x1478)))+(((IkReal(-1.00000000000000))*(r01)*(x1466)*(x1471)))+(((cj14)*(r00)*(x1471)))+(((IkReal(-1.00000000000000))*(sj13)*(x1466)*(x1473)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst44)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst44)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst44)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst44)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1482=IKsin(j9);
IkReal x1483=IKcos(j9);
IkReal x1484=((IkReal(1.00000000000000))*(cj14));
IkReal x1485=((IkReal(1.00000000000000))*(sj14));
IkReal x1486=((cj13)*(cj14));
IkReal x1487=((cj14)*(r10));
IkReal x1488=((r01)*(sj14));
IkReal x1489=((IkReal(1.00000000000000))*(r12));
IkReal x1490=((sj13)*(x1483));
IkReal x1491=((r02)*(x1482));
IkReal x1492=((r11)*(x1482));
IkReal x1493=((r10)*(x1483));
IkReal x1494=((r01)*(x1483));
IkReal x1495=((sj13)*(x1482));
IkReal x1496=((r11)*(x1483));
IkReal x1497=((cj13)*(x1482));
IkReal x1498=((r10)*(x1482));
IkReal x1499=((r00)*(x1483));
IkReal x1500=((cj13)*(x1483));
evalcond[0]=((IkReal(-1.00000000000000))+(((cj14)*(r01)*(x1482)))+(((IkReal(-1.00000000000000))*(x1485)*(x1493)))+(((IkReal(-1.00000000000000))*(x1484)*(x1496)))+(((r00)*(sj14)*(x1482))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1484)*(x1492)))+(((IkReal(-1.00000000000000))*(x1485)*(x1499)))+(((IkReal(-1.00000000000000))*(x1485)*(x1498)))+(((IkReal(-1.00000000000000))*(x1484)*(x1494))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x1485)*(x1496)))+(((x1488)*(x1497)))+(((x1486)*(x1493)))+(((r12)*(x1490)))+(((IkReal(-1.00000000000000))*(sj13)*(x1491)))+(((IkReal(-1.00000000000000))*(r00)*(x1484)*(x1497))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x1485)*(x1490)))+(((IkReal(-1.00000000000000))*(r00)*(x1484)*(x1495)))+(((cj13)*(x1491)))+(((x1488)*(x1495)))+(((x1487)*(x1490)))+(((IkReal(-1.00000000000000))*(x1489)*(x1500))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj13)*(x1485)*(x1494)))+(((x1486)*(x1499)))+(((r12)*(x1495)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x1485)*(x1492)))+(((r02)*(x1490)))+(((cj11)*(sj10)))+(((x1486)*(x1498))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1489)*(x1497)))+(((IkReal(-1.00000000000000))*(r02)*(x1500)))+(((x1487)*(x1495)))+(((IkReal(-1.00000000000000))*(r01)*(x1485)*(x1490)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(sj13)*(x1485)*(x1492)))+(((cj14)*(r00)*(x1490)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
if( IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*(((((r10)*(sj14)))+(((cj14)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst39)*(((((IkReal(-1.00000000000000))*(r00)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)))))), ((gconst39)*(((((r10)*(sj14)))+(((cj14)*(r11)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[4];
IkReal x1501=IKsin(j9);
IkReal x1502=IKcos(j9);
IkReal x1503=((r10)*(sj14));
IkReal x1504=((cj14)*(r11));
IkReal x1505=((cj14)*(r10));
IkReal x1506=((r11)*(sj14));
IkReal x1507=((cj14)*(r00));
IkReal x1508=((r00)*(sj14));
IkReal x1509=((IkReal(1.00000000000000))*(x1501));
IkReal x1510=((cj13)*(x1501));
IkReal x1511=((sj13)*(x1502));
IkReal x1512=((r01)*(x1501));
IkReal x1513=((IkReal(1.00000000000000))*(x1502));
evalcond[0]=((IkReal(-1.00000000000000))+(((cj14)*(x1512)))+(((x1501)*(x1508)))+(((IkReal(-1.00000000000000))*(x1503)*(x1513)))+(((IkReal(-1.00000000000000))*(x1504)*(x1513))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1504)*(x1509)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1513)))+(((IkReal(-1.00000000000000))*(x1503)*(x1509)))+(((IkReal(-1.00000000000000))*(x1508)*(x1513))));
evalcond[2]=((((r12)*(x1511)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1509)))+(((IkReal(-1.00000000000000))*(cj13)*(x1507)*(x1509)))+(((cj13)*(x1502)*(x1505)))+(((IkReal(-1.00000000000000))*(cj13)*(x1506)*(x1513)))+(((r01)*(sj14)*(x1510))));
evalcond[3]=((((x1505)*(x1511)))+(((IkReal(-1.00000000000000))*(x1506)*(x1511)))+(((IkReal(-1.00000000000000))*(sj13)*(x1507)*(x1509)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1513)))+(((sj13)*(sj14)*(x1512)))+(((r02)*(x1510))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1514=((cj13)*(sj14));
IkReal x1515=((cj11)*(sj9));
IkReal x1516=((IkReal(1.00000000000000))*(r11));
IkReal x1517=((IkReal(1.00000000000000))*(sj11));
IkReal x1518=((cj13)*(cj14));
IkReal x1519=((r22)*(sj13));
IkReal x1520=((r12)*(sj13));
IkReal x1521=((cj9)*(r01));
IkReal x1522=((cj9)*(sj11));
IkReal x1523=((r02)*(sj13));
IkReal x1524=((IkReal(1.00000000000000))*(cj11));
IkReal x1525=((sj11)*(sj9));
IkReal x1526=((cj11)*(cj9));
if( IKabs(((gconst43)*(((((IkReal(-1.00000000000000))*(r20)*(x1517)*(x1518)))+(((r21)*(sj11)*(x1514)))+(((x1523)*(x1526)))+(((IkReal(-1.00000000000000))*(x1514)*(x1515)*(x1516)))+(((x1515)*(x1520)))+(((IkReal(-1.00000000000000))*(x1517)*(x1519)))+(((IkReal(-1.00000000000000))*(x1514)*(x1521)*(x1524)))+(((r10)*(x1515)*(x1518)))+(((r00)*(x1518)*(x1526))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((r00)*(x1518)*(x1522)))+(((IkReal(-1.00000000000000))*(x1514)*(x1517)*(x1521)))+(((IkReal(-1.00000000000000))*(r21)*(x1514)*(x1524)))+(((x1522)*(x1523)))+(((cj11)*(r20)*(x1518)))+(((r10)*(x1518)*(x1525)))+(((cj11)*(x1519)))+(((x1520)*(x1525)))+(((IkReal(-1.00000000000000))*(x1514)*(x1516)*(x1525))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst43)*(((((IkReal(-1.00000000000000))*(r20)*(x1517)*(x1518)))+(((r21)*(sj11)*(x1514)))+(((x1523)*(x1526)))+(((IkReal(-1.00000000000000))*(x1514)*(x1515)*(x1516)))+(((x1515)*(x1520)))+(((IkReal(-1.00000000000000))*(x1517)*(x1519)))+(((IkReal(-1.00000000000000))*(x1514)*(x1521)*(x1524)))+(((r10)*(x1515)*(x1518)))+(((r00)*(x1518)*(x1526)))))), ((gconst43)*(((((r00)*(x1518)*(x1522)))+(((IkReal(-1.00000000000000))*(x1514)*(x1517)*(x1521)))+(((IkReal(-1.00000000000000))*(r21)*(x1514)*(x1524)))+(((x1522)*(x1523)))+(((cj11)*(r20)*(x1518)))+(((r10)*(x1518)*(x1525)))+(((cj11)*(x1519)))+(((x1520)*(x1525)))+(((IkReal(-1.00000000000000))*(x1514)*(x1516)*(x1525)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1527=IKsin(j10);
IkReal x1528=IKcos(j10);
IkReal x1529=((IkReal(1.00000000000000))*(sj13));
IkReal x1530=((r11)*(sj9));
IkReal x1531=((cj9)*(r01));
IkReal x1532=((IkReal(1.00000000000000))*(cj11));
IkReal x1533=((r21)*(sj14));
IkReal x1534=((cj9)*(r02));
IkReal x1535=((sj13)*(sj9));
IkReal x1536=((cj14)*(r10));
IkReal x1537=((IkReal(1.00000000000000))*(cj13));
IkReal x1538=((cj14)*(r20));
IkReal x1539=((sj11)*(x1527));
IkReal x1540=((sj14)*(x1537));
IkReal x1541=((sj11)*(x1528));
IkReal x1542=((cj14)*(cj9)*(r00));
IkReal x1543=((x1528)*(x1532));
evalcond[0]=((((cj13)*(x1533)))+(((IkReal(-1.00000000000000))*(x1543)))+(((IkReal(-1.00000000000000))*(r22)*(x1529)))+(((IkReal(-1.00000000000000))*(x1537)*(x1538)))+(x1539));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1529)*(x1538)))+(((sj13)*(x1533)))+(((IkReal(-1.00000000000000))*(x1541)))+(((IkReal(-1.00000000000000))*(x1527)*(x1532)))+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x1534)))+(((cj11)*(x1527)))+(x1541)+(((cj13)*(x1542)))+(((IkReal(-1.00000000000000))*(x1531)*(x1540)))+(((cj13)*(sj9)*(x1536)))+(((IkReal(-1.00000000000000))*(x1530)*(x1540)))+(((r12)*(x1535))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x1529)*(x1530)))+(((IkReal(-1.00000000000000))*(sj14)*(x1529)*(x1531)))+(((IkReal(-1.00000000000000))*(x1543)))+(((sj13)*(x1542)))+(((x1535)*(x1536)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1537)))+(((IkReal(-1.00000000000000))*(x1534)*(x1537)))+(x1539));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1544=((IkReal(1.00000000000000))*(cj11));
IkReal x1545=((r22)*(sj13));
IkReal x1546=((cj13)*(sj11));
IkReal x1547=((cj14)*(r20));
IkReal x1548=((r21)*(sj14));
IkReal x1549=((cj11)*(cj13));
IkReal x1550=((sj11)*(sj13));
if( IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(sj13)*(x1544)*(x1547)))+(((IkReal(-1.00000000000000))*(x1546)*(x1548)))+(((r22)*(x1549)))+(((x1546)*(x1547)))+(((cj11)*(sj13)*(x1548)))+(((sj11)*(x1545))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(x1547)*(x1550)))+(((x1548)*(x1549)))+(((IkReal(-1.00000000000000))*(cj13)*(x1544)*(x1547)))+(((r22)*(x1546)))+(((x1548)*(x1550)))+(((IkReal(-1.00000000000000))*(x1544)*(x1545))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst42)*(((((IkReal(-1.00000000000000))*(sj13)*(x1544)*(x1547)))+(((IkReal(-1.00000000000000))*(x1546)*(x1548)))+(((r22)*(x1549)))+(((x1546)*(x1547)))+(((cj11)*(sj13)*(x1548)))+(((sj11)*(x1545)))))), ((gconst42)*(((((IkReal(-1.00000000000000))*(x1547)*(x1550)))+(((x1548)*(x1549)))+(((IkReal(-1.00000000000000))*(cj13)*(x1544)*(x1547)))+(((r22)*(x1546)))+(((x1548)*(x1550)))+(((IkReal(-1.00000000000000))*(x1544)*(x1545)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1551=IKsin(j10);
IkReal x1552=IKcos(j10);
IkReal x1553=((IkReal(1.00000000000000))*(sj13));
IkReal x1554=((r11)*(sj9));
IkReal x1555=((cj9)*(r01));
IkReal x1556=((IkReal(1.00000000000000))*(cj11));
IkReal x1557=((r21)*(sj14));
IkReal x1558=((cj9)*(r02));
IkReal x1559=((sj13)*(sj9));
IkReal x1560=((cj14)*(r10));
IkReal x1561=((IkReal(1.00000000000000))*(cj13));
IkReal x1562=((cj14)*(r20));
IkReal x1563=((sj11)*(x1551));
IkReal x1564=((sj14)*(x1561));
IkReal x1565=((sj11)*(x1552));
IkReal x1566=((cj14)*(cj9)*(r00));
IkReal x1567=((x1552)*(x1556));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1561)*(x1562)))+(((cj13)*(x1557)))+(((IkReal(-1.00000000000000))*(x1567)))+(x1563)+(((IkReal(-1.00000000000000))*(r22)*(x1553))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1553)*(x1562)))+(((sj13)*(x1557)))+(((IkReal(-1.00000000000000))*(x1565)))+(((IkReal(-1.00000000000000))*(x1551)*(x1556)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x1560)))+(((IkReal(-1.00000000000000))*(x1555)*(x1564)))+(((cj11)*(x1551)))+(((IkReal(-1.00000000000000))*(x1554)*(x1564)))+(((r12)*(x1559)))+(((sj13)*(x1558)))+(x1565)+(((cj13)*(x1566))));
evalcond[3]=((((sj13)*(x1566)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1561)))+(((IkReal(-1.00000000000000))*(sj14)*(x1553)*(x1554)))+(((IkReal(-1.00000000000000))*(x1567)))+(((IkReal(-1.00000000000000))*(sj14)*(x1553)*(x1555)))+(x1563)+(((IkReal(-1.00000000000000))*(x1558)*(x1561)))+(((x1559)*(x1560))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1568=((cj12)*(sj13));
IkReal x1569=((cj12)*(cj13));
IkReal x1570=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst2)*(((((cj14)*(r10)*(x1569)))+(((IkReal(-1.00000000000000))*(r11)*(x1569)*(x1570)))+(((r12)*(x1568))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((r02)*(x1568)))+(((cj14)*(r00)*(x1569)))+(((IkReal(-1.00000000000000))*(r01)*(x1569)*(x1570))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst2)*(((((cj14)*(r10)*(x1569)))+(((IkReal(-1.00000000000000))*(r11)*(x1569)*(x1570)))+(((r12)*(x1568)))))), ((gconst2)*(((((r02)*(x1568)))+(((cj14)*(r00)*(x1569)))+(((IkReal(-1.00000000000000))*(r01)*(x1569)*(x1570)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[3];
IkReal x1571=IKsin(j9);
IkReal x1572=IKcos(j9);
IkReal x1573=((IkReal(1.00000000000000))*(sj14));
IkReal x1574=((sj13)*(x1572));
IkReal x1575=((cj13)*(x1571));
IkReal x1576=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x1577=((r01)*(x1571));
IkReal x1578=((r10)*(x1572));
IkReal x1579=((sj13)*(x1571));
IkReal x1580=((cj13)*(x1572));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1572)))+(((IkReal(-1.00000000000000))*(x1573)*(x1578)))+(cj12)+(((r00)*(sj14)*(x1571)))+(((cj14)*(x1577))));
evalcond[1]=((((r12)*(x1574)))+(((cj13)*(cj14)*(x1578)))+(((IkReal(-1.00000000000000))*(r02)*(x1579)))+(((r01)*(sj14)*(x1575)))+(((IkReal(-1.00000000000000))*(r11)*(x1573)*(x1580)))+(((IkReal(-1.00000000000000))*(x1575)*(x1576))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r12)*(x1580)))+(((cj14)*(r10)*(x1574)))+(((IkReal(-1.00000000000000))*(x1576)*(x1579)))+(sj12)+(((IkReal(-1.00000000000000))*(r11)*(x1573)*(x1574)))+(((sj13)*(sj14)*(x1577)))+(((r02)*(x1575))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11))))));
dummyeval[0]=((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1581=((cj13)*(sj14));
IkReal x1582=((sj14)*(sj9));
IkReal x1583=((r11)*(sj13));
IkReal x1584=((cj13)*(r02));
IkReal x1585=((sj13)*(sj14));
IkReal x1586=((r01)*(sj9));
IkReal x1587=((cj9)*(sj13));
IkReal x1588=((IkReal(1.00000000000000))*(cj9));
IkReal x1589=((r01)*(sj13));
IkReal x1590=((cj14)*(sj13));
IkReal x1591=((IkReal(1.00000000000000))*(npx));
IkReal x1592=((cj14)*(r00));
IkReal x1593=((IkReal(1.00000000000000))*(sj9));
IkReal x1594=((cj14)*(r10));
IkReal x1595=((sj14)*(x1588));
IkReal x1596=((cj13)*(x1593));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((npy)*(x1581)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(x1591))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1588)))+(((IkReal(-1.00000000000000))*(r10)*(x1595)))+(((r00)*(x1582)))+(((cj14)*(x1586))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x1590)))+(((r21)*(x1585)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x1590)*(x1591)))+(((npy)*(x1585))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1593)))+(((IkReal(-1.00000000000000))*(x1592)*(x1596)))+(((x1581)*(x1586)))+(((IkReal(-1.00000000000000))*(r11)*(x1581)*(x1588)))+(((cj13)*(cj9)*(x1594)))+(((r12)*(x1587))));
evalcond[7]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1588)))+(((x1582)*(x1589)))+(((sj9)*(x1584)))+(((x1587)*(x1594)))+(((IkReal(-1.00000000000000))*(r00)*(x1590)*(x1593)))+(((IkReal(-1.00000000000000))*(x1583)*(x1595))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x1582)*(x1583)))+(((r10)*(sj9)*(x1590)))+(((IkReal(-1.00000000000000))*(x1584)*(x1588)))+(((x1587)*(x1592)))+(((IkReal(-1.00000000000000))*(r01)*(x1585)*(x1588)))+(((IkReal(-1.00000000000000))*(r12)*(x1596))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1597=((IkReal(1.00000000000000))*(cj11));
IkReal x1598=((r20)*(sj14));
IkReal x1599=((cj14)*(r21));
IkReal x1600=((cj14)*(cj9)*(r01));
IkReal x1601=((r10)*(sj14)*(sj9));
IkReal x1602=((cj9)*(r00)*(sj14));
IkReal x1603=((cj14)*(r11)*(sj9));
if( IKabs(((gconst9)*(((((sj11)*(x1601)))+(((sj11)*(x1602)))+(((sj11)*(x1603)))+(((cj11)*(x1598)))+(((cj11)*(x1599)))+(((sj11)*(x1600))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((sj11)*(x1598)))+(((IkReal(-1.00000000000000))*(x1597)*(x1600)))+(((IkReal(-1.00000000000000))*(x1597)*(x1603)))+(((sj11)*(x1599)))+(((IkReal(-1.00000000000000))*(x1597)*(x1601)))+(((IkReal(-1.00000000000000))*(x1597)*(x1602))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst9)*(((((sj11)*(x1601)))+(((sj11)*(x1602)))+(((sj11)*(x1603)))+(((cj11)*(x1598)))+(((cj11)*(x1599)))+(((sj11)*(x1600)))))), ((gconst9)*(((((sj11)*(x1598)))+(((IkReal(-1.00000000000000))*(x1597)*(x1600)))+(((IkReal(-1.00000000000000))*(x1597)*(x1603)))+(((sj11)*(x1599)))+(((IkReal(-1.00000000000000))*(x1597)*(x1601)))+(((IkReal(-1.00000000000000))*(x1597)*(x1602)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1604=IKsin(j10);
IkReal x1605=IKcos(j10);
IkReal x1606=((cj13)*(sj14));
IkReal x1607=((cj13)*(cj14));
IkReal x1608=((r10)*(sj9));
IkReal x1609=((IkReal(1.00000000000000))*(cj9));
IkReal x1610=((sj11)*(x1604));
IkReal x1611=((IkReal(1.00000000000000))*(x1605));
IkReal x1612=((cj11)*(x1604));
IkReal x1613=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x1614=((cj11)*(x1611));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x1611)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x1612))));
evalcond[1]=((x1610)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x1607)))+(((r21)*(x1606)))+(((IkReal(-1.00000000000000))*(x1614))));
evalcond[2]=((x1610)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1609)))+(((IkReal(-1.00000000000000))*(sj14)*(x1608)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1609)))+(((IkReal(-1.00000000000000))*(cj14)*(x1613)))+(((IkReal(-1.00000000000000))*(x1614))));
evalcond[3]=((x1612)+(((cj9)*(r00)*(x1607)))+(((sj11)*(x1605)))+(((IkReal(-1.00000000000000))*(x1606)*(x1613)))+(((IkReal(-1.00000000000000))*(r01)*(x1606)*(x1609)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((x1607)*(x1608))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1615=((cj11)*(r20));
IkReal x1616=((IkReal(1.00000000000000))*(cj13));
IkReal x1617=((r21)*(sj14));
IkReal x1618=((r22)*(sj13));
IkReal x1619=((r20)*(sj11));
IkReal x1620=((cj14)*(r21));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(sj11)*(x1616)*(x1617)))+(((cj13)*(cj14)*(x1619)))+(((sj14)*(x1615)))+(((sj11)*(x1618)))+(((cj11)*(x1620))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(cj14)*(x1615)*(x1616)))+(((cj11)*(cj13)*(x1617)))+(((sj14)*(x1619)))+(((IkReal(-1.00000000000000))*(cj11)*(x1618)))+(((sj11)*(x1620))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(sj11)*(x1616)*(x1617)))+(((cj13)*(cj14)*(x1619)))+(((sj14)*(x1615)))+(((sj11)*(x1618)))+(((cj11)*(x1620)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(cj14)*(x1615)*(x1616)))+(((cj11)*(cj13)*(x1617)))+(((sj14)*(x1619)))+(((IkReal(-1.00000000000000))*(cj11)*(x1618)))+(((sj11)*(x1620)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1621=IKsin(j10);
IkReal x1622=IKcos(j10);
IkReal x1623=((cj13)*(sj14));
IkReal x1624=((cj13)*(cj14));
IkReal x1625=((r10)*(sj9));
IkReal x1626=((IkReal(1.00000000000000))*(cj9));
IkReal x1627=((sj11)*(x1621));
IkReal x1628=((IkReal(1.00000000000000))*(x1622));
IkReal x1629=((cj11)*(x1621));
IkReal x1630=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x1631=((cj11)*(x1628));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1629)))+(((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x1628))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x1627)+(((IkReal(-1.00000000000000))*(x1631)))+(((IkReal(-1.00000000000000))*(r20)*(x1624)))+(((r21)*(x1623))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1626)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1626)))+(x1627)+(((IkReal(-1.00000000000000))*(x1631)))+(((IkReal(-1.00000000000000))*(sj14)*(x1625)))+(((IkReal(-1.00000000000000))*(cj14)*(x1630))));
evalcond[3]=((x1629)+(((IkReal(-1.00000000000000))*(x1623)*(x1630)))+(((x1624)*(x1625)))+(((sj11)*(x1622)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(r01)*(x1623)*(x1626)))+(((cj9)*(r00)*(x1624)))+(((cj9)*(r02)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1632=((cj13)*(sj14));
IkReal x1633=((sj14)*(sj9));
IkReal x1634=((r11)*(sj13));
IkReal x1635=((cj13)*(r02));
IkReal x1636=((sj13)*(sj14));
IkReal x1637=((r01)*(sj9));
IkReal x1638=((cj9)*(sj13));
IkReal x1639=((IkReal(1.00000000000000))*(cj9));
IkReal x1640=((r01)*(sj13));
IkReal x1641=((cj14)*(sj13));
IkReal x1642=((IkReal(1.00000000000000))*(npx));
IkReal x1643=((cj14)*(r00));
IkReal x1644=((IkReal(1.00000000000000))*(sj9));
IkReal x1645=((cj14)*(r10));
IkReal x1646=((sj14)*(x1639));
IkReal x1647=((cj13)*(x1644));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((npy)*(x1632)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(x1642))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1639)))+(((IkReal(-1.00000000000000))*(r10)*(x1646)))+(((cj14)*(x1637)))+(((r00)*(x1633))));
evalcond[4]=((((r21)*(x1636)))+(((IkReal(-1.00000000000000))*(r20)*(x1641)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0950000000000000))+(((npy)*(x1636)))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(x1641)*(x1642)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[6]=((((cj13)*(cj9)*(x1645)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1644)))+(((IkReal(-1.00000000000000))*(r11)*(x1632)*(x1639)))+(((r12)*(x1638)))+(((x1632)*(x1637)))+(((IkReal(-1.00000000000000))*(x1643)*(x1647))));
evalcond[7]=((IkReal(-1.00000000000000))+(((x1638)*(x1645)))+(((IkReal(-1.00000000000000))*(x1634)*(x1646)))+(((sj9)*(x1635)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1639)))+(((x1633)*(x1640)))+(((IkReal(-1.00000000000000))*(r00)*(x1641)*(x1644))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r01)*(x1636)*(x1639)))+(((IkReal(-1.00000000000000))*(x1633)*(x1634)))+(((IkReal(-1.00000000000000))*(r12)*(x1647)))+(((IkReal(-1.00000000000000))*(x1635)*(x1639)))+(((r10)*(sj9)*(x1641)))+(((x1638)*(x1643))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1648=((IkReal(1.00000000000000))*(cj14));
IkReal x1649=((sj11)*(sj9));
IkReal x1650=((cj9)*(r01));
IkReal x1651=((cj11)*(cj14));
IkReal x1652=((cj9)*(r00));
IkReal x1653=((r10)*(sj14));
IkReal x1654=((cj11)*(sj14));
IkReal x1655=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1648)))+(((IkReal(-1.00000000000000))*(r20)*(x1654)))+(((IkReal(-1.00000000000000))*(r11)*(x1648)*(x1649)))+(((IkReal(-1.00000000000000))*(x1652)*(x1655)))+(((IkReal(-1.00000000000000))*(x1649)*(x1653)))+(((IkReal(-1.00000000000000))*(sj11)*(x1648)*(x1650))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj11)*(sj9)*(x1653)))+(((x1652)*(x1654)))+(((r11)*(sj9)*(x1651)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x1648)))+(((IkReal(-1.00000000000000))*(r20)*(x1655)))+(((x1650)*(x1651))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1648)))+(((IkReal(-1.00000000000000))*(r20)*(x1654)))+(((IkReal(-1.00000000000000))*(r11)*(x1648)*(x1649)))+(((IkReal(-1.00000000000000))*(x1652)*(x1655)))+(((IkReal(-1.00000000000000))*(x1649)*(x1653)))+(((IkReal(-1.00000000000000))*(sj11)*(x1648)*(x1650)))))), ((gconst11)*(((((cj11)*(sj9)*(x1653)))+(((x1652)*(x1654)))+(((r11)*(sj9)*(x1651)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x1648)))+(((IkReal(-1.00000000000000))*(r20)*(x1655)))+(((x1650)*(x1651)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1656=IKsin(j10);
IkReal x1657=IKcos(j10);
IkReal x1658=((cj14)*(sj9));
IkReal x1659=((IkReal(1.00000000000000))*(r11));
IkReal x1660=((cj13)*(sj14));
IkReal x1661=((IkReal(1.00000000000000))*(cj9));
IkReal x1662=((cj13)*(cj14));
IkReal x1663=((cj11)*(x1656));
IkReal x1664=((sj11)*(x1657));
IkReal x1665=((cj11)*(x1657));
IkReal x1666=((sj11)*(x1656));
IkReal x1667=((x1664)+(x1663));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x1667));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x1665)))+(((r21)*(x1660)))+(x1666)+(((IkReal(-1.00000000000000))*(r20)*(x1662))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1666)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x1658)*(x1659)))+(x1665)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1661)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1661))));
evalcond[3]=((x1667)+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(sj9)*(x1659)*(x1660)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x1662)))+(((IkReal(-1.00000000000000))*(r01)*(x1660)*(x1661)))+(((cj13)*(r10)*(x1658))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1668=((cj13)*(sj11));
IkReal x1669=((r21)*(sj14));
IkReal x1670=((cj14)*(r20));
IkReal x1671=((cj11)*(cj13));
IkReal x1672=((r22)*(sj13));
IkReal x1673=((r20)*(sj14));
IkReal x1674=((cj14)*(r21));
if( IKabs(((gconst10)*(((((cj11)*(x1673)))+(((IkReal(-1.00000000000000))*(sj11)*(x1672)))+(((x1668)*(x1669)))+(((IkReal(-1.00000000000000))*(x1668)*(x1670)))+(((cj11)*(x1674))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((cj11)*(x1672)))+(((sj11)*(x1673)))+(((x1670)*(x1671)))+(((IkReal(-1.00000000000000))*(x1669)*(x1671)))+(((sj11)*(x1674))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst10)*(((((cj11)*(x1673)))+(((IkReal(-1.00000000000000))*(sj11)*(x1672)))+(((x1668)*(x1669)))+(((IkReal(-1.00000000000000))*(x1668)*(x1670)))+(((cj11)*(x1674)))))), ((gconst10)*(((((cj11)*(x1672)))+(((sj11)*(x1673)))+(((x1670)*(x1671)))+(((IkReal(-1.00000000000000))*(x1669)*(x1671)))+(((sj11)*(x1674)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1675=IKsin(j10);
IkReal x1676=IKcos(j10);
IkReal x1677=((cj14)*(sj9));
IkReal x1678=((IkReal(1.00000000000000))*(r11));
IkReal x1679=((cj13)*(sj14));
IkReal x1680=((IkReal(1.00000000000000))*(cj9));
IkReal x1681=((cj13)*(cj14));
IkReal x1682=((cj11)*(x1675));
IkReal x1683=((sj11)*(x1676));
IkReal x1684=((cj11)*(x1676));
IkReal x1685=((sj11)*(x1675));
IkReal x1686=((x1683)+(x1682));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x1686));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x1681)))+(((IkReal(-1.00000000000000))*(x1684)))+(((r21)*(x1679)))+(x1685));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x1685)))+(((IkReal(-1.00000000000000))*(x1677)*(x1678)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1680)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1680)))+(x1684));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj9)*(x1678)*(x1679)))+(((cj13)*(r10)*(x1677)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(r01)*(x1679)*(x1680)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x1681)))+(x1686));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1687=((IkReal(1.00000000000000))*(r11));
IkReal x1688=((cj14)*(sj9));
IkReal x1689=((cj13)*(sj14));
IkReal x1690=((sj14)*(sj9));
IkReal x1691=((cj9)*(sj14));
IkReal x1692=((IkReal(1.00000000000000))*(r10));
IkReal x1693=((r02)*(sj9));
IkReal x1694=((cj9)*(sj13));
IkReal x1695=((IkReal(1.00000000000000))*(cj14));
IkReal x1696=((IkReal(1.00000000000000))*(r00));
IkReal x1697=((IkReal(1.00000000000000))*(sj13));
IkReal x1698=((cj14)*(r10));
IkReal x1699=((cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x1697)))+(((IkReal(-1.00000000000000))*(cj13)*(npx)*(x1695)))+(((npy)*(x1689))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1691)*(x1692)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x1687)))+(((r00)*(x1690)))+(((r01)*(x1688))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((npy)*(sj13)*(sj14)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(npx)*(sj13)*(x1695))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1690)*(x1692)))+(((IkReal(-1.00000000000000))*(x1691)*(x1696)))+(((IkReal(-1.00000000000000))*(x1687)*(x1688)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1695))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1693)*(x1697)))+(((r01)*(sj9)*(x1689)))+(((r12)*(x1694)))+(((IkReal(-1.00000000000000))*(cj9)*(x1687)*(x1689)))+(((IkReal(-1.00000000000000))*(cj13)*(x1688)*(x1696)))+(((x1698)*(x1699))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj13)*(x1688)*(x1696)))+(((r01)*(sj13)*(x1690)))+(((cj13)*(x1693)))+(((IkReal(-1.00000000000000))*(r12)*(x1699)))+(((IkReal(-1.00000000000000))*(sj13)*(x1687)*(x1691)))+(((x1694)*(x1698))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1700=((cj13)*(sj14));
IkReal x1701=((IkReal(1.00000000000000))*(cj11));
IkReal x1702=((r11)*(sj9));
IkReal x1703=((r10)*(sj9));
IkReal x1704=((cj11)*(sj13));
IkReal x1705=((r12)*(sj9));
IkReal x1706=((sj11)*(sj13));
IkReal x1707=((cj9)*(r02));
IkReal x1708=((IkReal(1.00000000000000))*(sj11));
IkReal x1709=((cj9)*(r01));
IkReal x1710=((cj9)*(r00));
IkReal x1711=((cj13)*(cj14)*(sj11));
IkReal x1712=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x1708)))+(((r21)*(sj11)*(x1700)))+(((x1703)*(x1712)))+(((IkReal(-1.00000000000000))*(x1700)*(x1701)*(x1702)))+(((IkReal(-1.00000000000000))*(x1700)*(x1701)*(x1709)))+(((IkReal(-1.00000000000000))*(r22)*(x1706)))+(((x1704)*(x1707)))+(((x1710)*(x1712)))+(((x1704)*(x1705))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((x1706)*(x1707)))+(((IkReal(-1.00000000000000))*(x1700)*(x1708)*(x1709)))+(((IkReal(-1.00000000000000))*(r21)*(x1700)*(x1701)))+(((x1703)*(x1711)))+(((r22)*(x1704)))+(((r20)*(x1712)))+(((x1710)*(x1711)))+(((x1705)*(x1706)))+(((IkReal(-1.00000000000000))*(x1700)*(x1702)*(x1708))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst13)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x1708)))+(((r21)*(sj11)*(x1700)))+(((x1703)*(x1712)))+(((IkReal(-1.00000000000000))*(x1700)*(x1701)*(x1702)))+(((IkReal(-1.00000000000000))*(x1700)*(x1701)*(x1709)))+(((IkReal(-1.00000000000000))*(r22)*(x1706)))+(((x1704)*(x1707)))+(((x1710)*(x1712)))+(((x1704)*(x1705)))))), ((gconst13)*(((((x1706)*(x1707)))+(((IkReal(-1.00000000000000))*(x1700)*(x1708)*(x1709)))+(((IkReal(-1.00000000000000))*(r21)*(x1700)*(x1701)))+(((x1703)*(x1711)))+(((r22)*(x1704)))+(((r20)*(x1712)))+(((x1710)*(x1711)))+(((x1705)*(x1706)))+(((IkReal(-1.00000000000000))*(x1700)*(x1702)*(x1708)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1713=IKsin(j10);
IkReal x1714=IKcos(j10);
IkReal x1715=((IkReal(1.00000000000000))*(sj13));
IkReal x1716=((r11)*(sj9));
IkReal x1717=((cj9)*(r01));
IkReal x1718=((r21)*(sj14));
IkReal x1719=((cj9)*(r02));
IkReal x1720=((sj13)*(sj9));
IkReal x1721=((cj14)*(r10));
IkReal x1722=((IkReal(1.00000000000000))*(cj13));
IkReal x1723=((cj14)*(r20));
IkReal x1724=((cj11)*(x1713));
IkReal x1725=((sj11)*(x1714));
IkReal x1726=((sj14)*(x1722));
IkReal x1727=((sj11)*(x1713));
IkReal x1728=((cj11)*(x1714));
IkReal x1729=((cj14)*(cj9)*(r00));
IkReal x1730=((x1724)+(x1725));
evalcond[0]=((x1727)+(((cj13)*(x1718)))+(((IkReal(-1.00000000000000))*(x1722)*(x1723)))+(((IkReal(-1.00000000000000))*(x1728)))+(((IkReal(-1.00000000000000))*(r22)*(x1715))));
evalcond[1]=((((sj13)*(x1718)))+(((IkReal(-1.00000000000000))*(x1715)*(x1723)))+(x1730)+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x1719)))+(((r12)*(x1720)))+(((cj13)*(x1729)))+(((IkReal(-1.00000000000000))*(x1716)*(x1726)))+(((cj13)*(sj9)*(x1721)))+(x1730)+(((IkReal(-1.00000000000000))*(x1717)*(x1726))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1719)*(x1722)))+(((IkReal(-1.00000000000000))*(sj14)*(x1715)*(x1716)))+(((x1720)*(x1721)))+(((IkReal(-1.00000000000000))*(x1727)))+(x1728)+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1722)))+(((IkReal(-1.00000000000000))*(sj14)*(x1715)*(x1717)))+(((sj13)*(x1729))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1731=((cj13)*(sj11));
IkReal x1732=((r21)*(sj14));
IkReal x1733=((cj11)*(r22));
IkReal x1734=((sj11)*(sj13));
IkReal x1735=((cj11)*(cj13));
IkReal x1736=((cj11)*(sj13));
IkReal x1737=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(x1734)))+(((x1731)*(x1732)))+(((IkReal(-1.00000000000000))*(x1731)*(x1737)))+(((cj13)*(x1733)))+(((x1732)*(x1736)))+(((IkReal(-1.00000000000000))*(x1736)*(x1737))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(x1734)*(x1737)))+(((sj13)*(x1733)))+(((r22)*(x1731)))+(((IkReal(-1.00000000000000))*(x1732)*(x1735)))+(((cj14)*(r20)*(x1735)))+(((x1732)*(x1734))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(x1734)))+(((x1731)*(x1732)))+(((IkReal(-1.00000000000000))*(x1731)*(x1737)))+(((cj13)*(x1733)))+(((x1732)*(x1736)))+(((IkReal(-1.00000000000000))*(x1736)*(x1737)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(x1734)*(x1737)))+(((sj13)*(x1733)))+(((r22)*(x1731)))+(((IkReal(-1.00000000000000))*(x1732)*(x1735)))+(((cj14)*(r20)*(x1735)))+(((x1732)*(x1734)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1738=IKsin(j10);
IkReal x1739=IKcos(j10);
IkReal x1740=((IkReal(1.00000000000000))*(sj13));
IkReal x1741=((r11)*(sj9));
IkReal x1742=((cj9)*(r01));
IkReal x1743=((r21)*(sj14));
IkReal x1744=((cj9)*(r02));
IkReal x1745=((sj13)*(sj9));
IkReal x1746=((cj14)*(r10));
IkReal x1747=((IkReal(1.00000000000000))*(cj13));
IkReal x1748=((cj14)*(r20));
IkReal x1749=((cj11)*(x1738));
IkReal x1750=((sj11)*(x1739));
IkReal x1751=((sj14)*(x1747));
IkReal x1752=((sj11)*(x1738));
IkReal x1753=((cj11)*(x1739));
IkReal x1754=((cj14)*(cj9)*(r00));
IkReal x1755=((x1749)+(x1750));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1740)))+(((IkReal(-1.00000000000000))*(x1753)))+(((IkReal(-1.00000000000000))*(x1747)*(x1748)))+(((cj13)*(x1743)))+(x1752));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1740)*(x1748)))+(x1755)+(((sj13)*(x1743)))+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x1745)))+(((IkReal(-1.00000000000000))*(x1741)*(x1751)))+(((IkReal(-1.00000000000000))*(x1742)*(x1751)))+(((sj13)*(x1744)))+(((cj13)*(sj9)*(x1746)))+(((cj13)*(x1754)))+(x1755));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x1740)*(x1742)))+(((IkReal(-1.00000000000000))*(sj14)*(x1740)*(x1741)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1747)))+(((x1745)*(x1746)))+(((IkReal(-1.00000000000000))*(x1752)))+(((sj13)*(x1754)))+(((IkReal(-1.00000000000000))*(x1744)*(x1747)))+(x1753));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1756=((IkReal(1.00000000000000))*(r11));
IkReal x1757=((cj14)*(sj9));
IkReal x1758=((cj13)*(sj14));
IkReal x1759=((sj14)*(sj9));
IkReal x1760=((cj9)*(sj14));
IkReal x1761=((IkReal(1.00000000000000))*(r10));
IkReal x1762=((r02)*(sj9));
IkReal x1763=((cj9)*(sj13));
IkReal x1764=((IkReal(1.00000000000000))*(cj14));
IkReal x1765=((IkReal(1.00000000000000))*(r00));
IkReal x1766=((IkReal(1.00000000000000))*(sj13));
IkReal x1767=((cj14)*(r10));
IkReal x1768=((cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npx)*(x1764)))+(((npy)*(x1758)))+(((IkReal(-1.00000000000000))*(npz)*(x1766))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1760)*(x1761)))+(((r01)*(x1757)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x1756)))+(((r00)*(x1759))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((npy)*(sj13)*(sj14)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(npx)*(sj13)*(x1764)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1764)))+(((IkReal(-1.00000000000000))*(x1760)*(x1765)))+(((IkReal(-1.00000000000000))*(x1759)*(x1761)))+(((IkReal(-1.00000000000000))*(x1756)*(x1757))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj13)*(x1757)*(x1765)))+(((IkReal(-1.00000000000000))*(cj9)*(x1756)*(x1758)))+(((x1767)*(x1768)))+(((IkReal(-1.00000000000000))*(x1762)*(x1766)))+(((r12)*(x1763)))+(((r01)*(sj9)*(x1758))));
evalcond[8]=((((cj13)*(x1762)))+(((IkReal(-1.00000000000000))*(r12)*(x1768)))+(((IkReal(-1.00000000000000))*(sj13)*(x1756)*(x1760)))+(((IkReal(-1.00000000000000))*(sj13)*(x1757)*(x1765)))+(((x1763)*(x1767)))+(((r01)*(sj13)*(x1759))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1769=((cj13)*(sj14));
IkReal x1770=((IkReal(1.00000000000000))*(cj11));
IkReal x1771=((r11)*(sj9));
IkReal x1772=((IkReal(1.00000000000000))*(sj11));
IkReal x1773=((cj13)*(cj14));
IkReal x1774=((cj11)*(sj13));
IkReal x1775=((r12)*(sj9));
IkReal x1776=((cj9)*(r01));
IkReal x1777=((sj11)*(sj13));
IkReal x1778=((cj9)*(r02));
IkReal x1779=((r10)*(sj9));
IkReal x1780=((cj9)*(r00));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(x1769)*(x1770)*(x1776)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1772)))+(((IkReal(-1.00000000000000))*(r20)*(x1772)*(x1773)))+(((IkReal(-1.00000000000000))*(x1769)*(x1770)*(x1771)))+(((cj11)*(x1773)*(x1780)))+(((r21)*(sj11)*(x1769)))+(((x1774)*(x1778)))+(((x1774)*(x1775)))+(((cj11)*(x1773)*(x1779))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((sj11)*(x1773)*(x1779)))+(((sj11)*(x1773)*(x1780)))+(((IkReal(-1.00000000000000))*(r21)*(x1769)*(x1770)))+(((cj11)*(r20)*(x1773)))+(((IkReal(-1.00000000000000))*(x1769)*(x1771)*(x1772)))+(((x1777)*(x1778)))+(((r22)*(x1774)))+(((x1775)*(x1777)))+(((IkReal(-1.00000000000000))*(x1769)*(x1772)*(x1776))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(x1769)*(x1770)*(x1776)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x1772)))+(((IkReal(-1.00000000000000))*(r20)*(x1772)*(x1773)))+(((IkReal(-1.00000000000000))*(x1769)*(x1770)*(x1771)))+(((cj11)*(x1773)*(x1780)))+(((r21)*(sj11)*(x1769)))+(((x1774)*(x1778)))+(((x1774)*(x1775)))+(((cj11)*(x1773)*(x1779)))))), ((gconst15)*(((((sj11)*(x1773)*(x1779)))+(((sj11)*(x1773)*(x1780)))+(((IkReal(-1.00000000000000))*(r21)*(x1769)*(x1770)))+(((cj11)*(r20)*(x1773)))+(((IkReal(-1.00000000000000))*(x1769)*(x1771)*(x1772)))+(((x1777)*(x1778)))+(((r22)*(x1774)))+(((x1775)*(x1777)))+(((IkReal(-1.00000000000000))*(x1769)*(x1772)*(x1776)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1781=IKsin(j10);
IkReal x1782=IKcos(j10);
IkReal x1783=((IkReal(1.00000000000000))*(sj13));
IkReal x1784=((r11)*(sj9));
IkReal x1785=((cj9)*(r01));
IkReal x1786=((IkReal(1.00000000000000))*(cj11));
IkReal x1787=((r21)*(sj14));
IkReal x1788=((cj9)*(r02));
IkReal x1789=((sj13)*(sj9));
IkReal x1790=((cj14)*(r10));
IkReal x1791=((IkReal(1.00000000000000))*(cj13));
IkReal x1792=((cj14)*(r20));
IkReal x1793=((sj11)*(x1781));
IkReal x1794=((sj14)*(x1791));
IkReal x1795=((sj11)*(x1782));
IkReal x1796=((cj14)*(cj9)*(r00));
IkReal x1797=((x1782)*(x1786));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1783)))+(((IkReal(-1.00000000000000))*(x1797)))+(((cj13)*(x1787)))+(x1793)+(((IkReal(-1.00000000000000))*(x1791)*(x1792))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1781)*(x1786)))+(((sj13)*(x1787)))+(((IkReal(-1.00000000000000))*(x1783)*(x1792)))+(((IkReal(-1.00000000000000))*(x1795)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x1790)))+(((cj11)*(x1781)))+(((cj13)*(x1796)))+(((sj13)*(x1788)))+(((IkReal(-1.00000000000000))*(x1785)*(x1794)))+(x1795)+(((r12)*(x1789)))+(((IkReal(-1.00000000000000))*(x1784)*(x1794))));
evalcond[3]=((((sj13)*(x1796)))+(((IkReal(-1.00000000000000))*(x1797)))+(((IkReal(-1.00000000000000))*(x1788)*(x1791)))+(x1793)+(((IkReal(-1.00000000000000))*(sj14)*(x1783)*(x1785)))+(((x1789)*(x1790)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1791)))+(((IkReal(-1.00000000000000))*(sj14)*(x1783)*(x1784))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1798=((IkReal(1.00000000000000))*(cj13));
IkReal x1799=((cj14)*(r20));
IkReal x1800=((r21)*(sj14));
IkReal x1801=((cj11)*(cj13));
IkReal x1802=((IkReal(1.00000000000000))*(sj13));
IkReal x1803=((sj11)*(sj13));
IkReal x1804=((cj13)*(sj11));
if( IKabs(((gconst14)*(((((x1799)*(x1804)))+(((r22)*(x1801)))+(((cj11)*(sj13)*(x1800)))+(((IkReal(-1.00000000000000))*(cj11)*(x1799)*(x1802)))+(((IkReal(-1.00000000000000))*(sj11)*(x1798)*(x1800)))+(((r22)*(x1803))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((x1800)*(x1801)))+(((IkReal(-1.00000000000000))*(sj11)*(x1799)*(x1802)))+(((r22)*(x1804)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x1802)))+(((IkReal(-1.00000000000000))*(cj11)*(x1798)*(x1799)))+(((x1800)*(x1803))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst14)*(((((x1799)*(x1804)))+(((r22)*(x1801)))+(((cj11)*(sj13)*(x1800)))+(((IkReal(-1.00000000000000))*(cj11)*(x1799)*(x1802)))+(((IkReal(-1.00000000000000))*(sj11)*(x1798)*(x1800)))+(((r22)*(x1803)))))), ((gconst14)*(((((x1800)*(x1801)))+(((IkReal(-1.00000000000000))*(sj11)*(x1799)*(x1802)))+(((r22)*(x1804)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x1802)))+(((IkReal(-1.00000000000000))*(cj11)*(x1798)*(x1799)))+(((x1800)*(x1803)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1805=IKsin(j10);
IkReal x1806=IKcos(j10);
IkReal x1807=((IkReal(1.00000000000000))*(sj13));
IkReal x1808=((r11)*(sj9));
IkReal x1809=((cj9)*(r01));
IkReal x1810=((IkReal(1.00000000000000))*(cj11));
IkReal x1811=((r21)*(sj14));
IkReal x1812=((cj9)*(r02));
IkReal x1813=((sj13)*(sj9));
IkReal x1814=((cj14)*(r10));
IkReal x1815=((IkReal(1.00000000000000))*(cj13));
IkReal x1816=((cj14)*(r20));
IkReal x1817=((sj11)*(x1805));
IkReal x1818=((sj14)*(x1815));
IkReal x1819=((sj11)*(x1806));
IkReal x1820=((cj14)*(cj9)*(r00));
IkReal x1821=((x1806)*(x1810));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1815)*(x1816)))+(x1817)+(((IkReal(-1.00000000000000))*(r22)*(x1807)))+(((IkReal(-1.00000000000000))*(x1821)))+(((cj13)*(x1811))));
evalcond[1]=((((sj13)*(x1811)))+(((IkReal(-1.00000000000000))*(x1807)*(x1816)))+(((IkReal(-1.00000000000000))*(x1805)*(x1810)))+(((IkReal(-1.00000000000000))*(x1819)))+(((cj13)*(r22))));
evalcond[2]=((((cj11)*(x1805)))+(((IkReal(-1.00000000000000))*(x1808)*(x1818)))+(x1819)+(((sj13)*(x1812)))+(((cj13)*(x1820)))+(((r12)*(x1813)))+(((cj13)*(sj9)*(x1814)))+(((IkReal(-1.00000000000000))*(x1809)*(x1818))));
evalcond[3]=((((x1813)*(x1814)))+(x1817)+(((sj13)*(x1820)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x1815)))+(((IkReal(-1.00000000000000))*(x1821)))+(((IkReal(-1.00000000000000))*(x1812)*(x1815)))+(((IkReal(-1.00000000000000))*(sj14)*(x1807)*(x1809)))+(((IkReal(-1.00000000000000))*(sj14)*(x1807)*(x1808))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1822=((r21)*(sj14));
IkReal x1823=((cj12)*(cj13));
IkReal x1824=((sj11)*(sj13));
IkReal x1825=((cj14)*(r20));
IkReal x1826=((IkReal(1.00000000000000))*(sj11));
IkReal x1827=((cj12)*(r22));
IkReal x1828=((IkReal(1.00000000000000))*(cj11));
IkReal x1829=((cj13)*(r22));
IkReal x1830=((sj13)*(x1828));
if( IKabs(((gconst7)*(((((sj11)*(x1823)*(x1825)))+(((cj11)*(sj13)*(x1825)))+(((IkReal(-1.00000000000000))*(x1822)*(x1830)))+(((IkReal(-1.00000000000000))*(x1822)*(x1823)*(x1826)))+(((IkReal(-1.00000000000000))*(x1828)*(x1829)))+(((x1824)*(x1827))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x1827)*(x1830)))+(((IkReal(-1.00000000000000))*(x1826)*(x1829)))+(((x1824)*(x1825)))+(((IkReal(-1.00000000000000))*(x1822)*(x1824)))+(((cj11)*(x1822)*(x1823)))+(((IkReal(-1.00000000000000))*(x1823)*(x1825)*(x1828))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst7)*(((((sj11)*(x1823)*(x1825)))+(((cj11)*(sj13)*(x1825)))+(((IkReal(-1.00000000000000))*(x1822)*(x1830)))+(((IkReal(-1.00000000000000))*(x1822)*(x1823)*(x1826)))+(((IkReal(-1.00000000000000))*(x1828)*(x1829)))+(((x1824)*(x1827)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(x1827)*(x1830)))+(((IkReal(-1.00000000000000))*(x1826)*(x1829)))+(((x1824)*(x1825)))+(((IkReal(-1.00000000000000))*(x1822)*(x1824)))+(((cj11)*(x1822)*(x1823)))+(((IkReal(-1.00000000000000))*(x1823)*(x1825)*(x1828)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1831=IKsin(j10);
IkReal x1832=IKcos(j10);
IkReal x1833=((IkReal(1.00000000000000))*(cj13));
IkReal x1834=((cj9)*(r02));
IkReal x1835=((IkReal(1.00000000000000))*(sj13));
IkReal x1836=((r11)*(sj9));
IkReal x1837=((IkReal(1.00000000000000))*(cj14));
IkReal x1838=((cj9)*(r01));
IkReal x1839=((r21)*(sj14));
IkReal x1840=((IkReal(1.00000000000000))*(sj12));
IkReal x1841=((r10)*(sj9));
IkReal x1842=((cj14)*(sj13));
IkReal x1843=((cj14)*(r20));
IkReal x1844=((IkReal(1.00000000000000))*(sj14));
IkReal x1845=((r12)*(sj9));
IkReal x1846=((cj13)*(cj14));
IkReal x1847=((cj9)*(r00));
IkReal x1848=((sj11)*(x1831));
IkReal x1849=((cj11)*(x1831));
IkReal x1850=((sj11)*(x1832));
IkReal x1851=((cj11)*(x1832));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x1840)*(x1849)))+(((IkReal(-1.00000000000000))*(x1840)*(x1850)))+(((cj14)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1851)))+(x1848)+(((IkReal(-1.00000000000000))*(x1833)*(x1843)))+(((cj13)*(x1839)))+(((IkReal(-1.00000000000000))*(r22)*(x1835))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1835)*(x1843)))+(((cj12)*(x1849)))+(((sj13)*(x1839)))+(((cj12)*(x1850)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1844)*(x1847)))+(((IkReal(-1.00000000000000))*(x1836)*(x1837)))+(((IkReal(-1.00000000000000))*(x1840)*(x1851)))+(((sj12)*(x1848)))+(((IkReal(-1.00000000000000))*(x1837)*(x1838)))+(((IkReal(-1.00000000000000))*(x1841)*(x1844))));
evalcond[4]=((x1849)+(((IkReal(-1.00000000000000))*(sj14)*(x1833)*(x1838)))+(x1850)+(((x1846)*(x1847)))+(((IkReal(-1.00000000000000))*(sj14)*(x1833)*(x1836)))+(((sj13)*(x1845)))+(((x1841)*(x1846)))+(((sj13)*(x1834))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj14)*(x1835)*(x1838)))+(((cj12)*(x1851)))+(((x1841)*(x1842)))+(((IkReal(-1.00000000000000))*(x1833)*(x1845)))+(((x1842)*(x1847)))+(((IkReal(-1.00000000000000))*(x1833)*(x1834)))+(((IkReal(-1.00000000000000))*(sj14)*(x1835)*(x1836)))+(((IkReal(-1.00000000000000))*(cj12)*(x1848))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1852=((cj11)*(sj12));
IkReal x1853=((r22)*(sj13));
IkReal x1854=((r20)*(sj14));
IkReal x1855=((cj14)*(sj11));
IkReal x1856=((cj13)*(r20));
IkReal x1857=((sj11)*(sj12));
IkReal x1858=((cj13)*(r21)*(sj14));
if( IKabs(((gconst6)*(((((x1853)*(x1857)))+(((cj11)*(cj14)*(r21)))+(((sj12)*(x1855)*(x1856)))+(((cj11)*(x1854)))+(((IkReal(-1.00000000000000))*(x1857)*(x1858))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((r21)*(x1855)))+(((IkReal(-1.00000000000000))*(x1852)*(x1853)))+(((IkReal(-1.00000000000000))*(cj14)*(x1852)*(x1856)))+(((sj11)*(x1854)))+(((x1852)*(x1858))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst6)*(((((x1853)*(x1857)))+(((cj11)*(cj14)*(r21)))+(((sj12)*(x1855)*(x1856)))+(((cj11)*(x1854)))+(((IkReal(-1.00000000000000))*(x1857)*(x1858)))))), ((gconst6)*(((((r21)*(x1855)))+(((IkReal(-1.00000000000000))*(x1852)*(x1853)))+(((IkReal(-1.00000000000000))*(cj14)*(x1852)*(x1856)))+(((sj11)*(x1854)))+(((x1852)*(x1858)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1859=IKsin(j10);
IkReal x1860=IKcos(j10);
IkReal x1861=((IkReal(1.00000000000000))*(cj13));
IkReal x1862=((cj9)*(r02));
IkReal x1863=((IkReal(1.00000000000000))*(sj13));
IkReal x1864=((r11)*(sj9));
IkReal x1865=((IkReal(1.00000000000000))*(cj14));
IkReal x1866=((cj9)*(r01));
IkReal x1867=((r21)*(sj14));
IkReal x1868=((IkReal(1.00000000000000))*(sj12));
IkReal x1869=((r10)*(sj9));
IkReal x1870=((cj14)*(sj13));
IkReal x1871=((cj14)*(r20));
IkReal x1872=((IkReal(1.00000000000000))*(sj14));
IkReal x1873=((r12)*(sj9));
IkReal x1874=((cj13)*(cj14));
IkReal x1875=((cj9)*(r00));
IkReal x1876=((sj11)*(x1859));
IkReal x1877=((cj11)*(x1859));
IkReal x1878=((sj11)*(x1860));
IkReal x1879=((cj11)*(x1860));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x1868)*(x1878)))+(((IkReal(-1.00000000000000))*(x1868)*(x1877))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1863)))+(((IkReal(-1.00000000000000))*(x1861)*(x1871)))+(((cj13)*(x1867)))+(x1876)+(((IkReal(-1.00000000000000))*(x1879))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1863)*(x1871)))+(((cj12)*(x1878)))+(((sj13)*(x1867)))+(((cj12)*(x1877)))+(((cj13)*(r22))));
evalcond[3]=((((sj12)*(x1876)))+(((IkReal(-1.00000000000000))*(x1865)*(x1866)))+(((IkReal(-1.00000000000000))*(x1868)*(x1879)))+(((IkReal(-1.00000000000000))*(x1869)*(x1872)))+(((IkReal(-1.00000000000000))*(x1864)*(x1865)))+(((IkReal(-1.00000000000000))*(x1872)*(x1875))));
evalcond[4]=((((x1869)*(x1874)))+(((IkReal(-1.00000000000000))*(sj14)*(x1861)*(x1866)))+(((IkReal(-1.00000000000000))*(sj14)*(x1861)*(x1864)))+(((sj13)*(x1862)))+(x1877)+(x1878)+(((sj13)*(x1873)))+(((x1874)*(x1875))));
evalcond[5]=((((x1870)*(x1875)))+(((IkReal(-1.00000000000000))*(cj12)*(x1876)))+(((IkReal(-1.00000000000000))*(sj14)*(x1863)*(x1866)))+(((IkReal(-1.00000000000000))*(sj14)*(x1863)*(x1864)))+(((x1869)*(x1870)))+(((cj12)*(x1879)))+(((IkReal(-1.00000000000000))*(x1861)*(x1873)))+(((IkReal(-1.00000000000000))*(x1861)*(x1862))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1880=((r21)*(sj14));
IkReal x1881=((cj12)*(cj13));
IkReal x1882=((sj11)*(sj13));
IkReal x1883=((cj14)*(r20));
IkReal x1884=((IkReal(1.00000000000000))*(sj11));
IkReal x1885=((cj12)*(r22));
IkReal x1886=((cj13)*(r22));
IkReal x1887=((IkReal(1.00000000000000))*(cj11));
IkReal x1888=((sj13)*(x1887));
if( IKabs(((gconst5)*(((((x1882)*(x1885)))+(((IkReal(-1.00000000000000))*(x1880)*(x1888)))+(((IkReal(-1.00000000000000))*(x1880)*(x1881)*(x1884)))+(((sj11)*(x1881)*(x1883)))+(((cj11)*(sj13)*(x1883)))+(((IkReal(-1.00000000000000))*(x1886)*(x1887))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(x1885)*(x1888)))+(((IkReal(-1.00000000000000))*(x1880)*(x1882)))+(((IkReal(-1.00000000000000))*(x1881)*(x1883)*(x1887)))+(((cj11)*(x1880)*(x1881)))+(((x1882)*(x1883)))+(((IkReal(-1.00000000000000))*(x1884)*(x1886))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst5)*(((((x1882)*(x1885)))+(((IkReal(-1.00000000000000))*(x1880)*(x1888)))+(((IkReal(-1.00000000000000))*(x1880)*(x1881)*(x1884)))+(((sj11)*(x1881)*(x1883)))+(((cj11)*(sj13)*(x1883)))+(((IkReal(-1.00000000000000))*(x1886)*(x1887)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(x1885)*(x1888)))+(((IkReal(-1.00000000000000))*(x1880)*(x1882)))+(((IkReal(-1.00000000000000))*(x1881)*(x1883)*(x1887)))+(((cj11)*(x1880)*(x1881)))+(((x1882)*(x1883)))+(((IkReal(-1.00000000000000))*(x1884)*(x1886)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[3];
IkReal x1889=IKsin(j10);
IkReal x1890=IKcos(j10);
IkReal x1891=((IkReal(1.00000000000000))*(sj13));
IkReal x1892=((cj14)*(r20));
IkReal x1893=((r21)*(sj14));
IkReal x1894=((IkReal(1.00000000000000))*(x1890));
IkReal x1895=((cj11)*(x1889));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj12)*(x1895)))+(((IkReal(-1.00000000000000))*(sj11)*(sj12)*(x1894))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1891)))+(((sj11)*(x1889)))+(((IkReal(-1.00000000000000))*(cj11)*(x1894)))+(((IkReal(-1.00000000000000))*(cj13)*(x1892)))+(((cj13)*(x1893))));
evalcond[2]=((((cj12)*(sj11)*(x1890)))+(((cj12)*(x1895)))+(((sj13)*(x1893)))+(((IkReal(-1.00000000000000))*(x1891)*(x1892)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x1896=(cj14)*(cj14);
IkReal x1897=(sj14)*(sj14);
IkReal x1898=((IkReal(1.00000000000000))*(r01));
IkReal x1899=((sj13)*(sj14));
IkReal x1900=((cj14)*(sj13));
IkReal x1901=((r00)*(r11));
IkReal x1902=((cj13)*(x1896));
IkReal x1903=((cj13)*(x1897));
gconst16=IKsign(((((r02)*(r10)*(x1899)))+(((IkReal(-1.00000000000000))*(r12)*(x1898)*(x1900)))+(((r02)*(r11)*(x1900)))+(((IkReal(-1.00000000000000))*(r10)*(x1898)*(x1903)))+(((x1901)*(x1903)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1899)))+(((IkReal(-1.00000000000000))*(r10)*(x1898)*(x1902)))+(((x1901)*(x1902)))));
IkReal x1904=(cj14)*(cj14);
IkReal x1905=(sj14)*(sj14);
IkReal x1906=((IkReal(1.00000000000000))*(r01));
IkReal x1907=((sj13)*(sj14));
IkReal x1908=((cj14)*(sj13));
IkReal x1909=((r00)*(r11));
IkReal x1910=((cj13)*(x1904));
IkReal x1911=((cj13)*(x1905));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r12)*(x1907)))+(((IkReal(-1.00000000000000))*(r10)*(x1906)*(x1910)))+(((IkReal(-1.00000000000000))*(r12)*(x1906)*(x1908)))+(((IkReal(-1.00000000000000))*(r10)*(x1906)*(x1911)))+(((x1909)*(x1910)))+(((r02)*(r11)*(x1908)))+(((r02)*(r10)*(x1907)))+(((x1909)*(x1911))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
IkReal x1912=(cj14)*(cj14);
IkReal x1913=(sj14)*(sj14);
IkReal x1914=((cj13)*(r12));
IkReal x1915=((IkReal(1.00000000000000))*(r10));
IkReal x1916=((cj13)*(r02));
IkReal x1917=((r01)*(sj13));
IkReal x1918=((r00)*(r11)*(sj13));
gconst17=IKsign(((((IkReal(-1.00000000000000))*(sj14)*(x1915)*(x1916)))+(((IkReal(-1.00000000000000))*(x1913)*(x1915)*(x1917)))+(((x1912)*(x1918)))+(((IkReal(-1.00000000000000))*(x1912)*(x1915)*(x1917)))+(((cj14)*(r01)*(x1914)))+(((r00)*(sj14)*(x1914)))+(((x1913)*(x1918)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1916)))));
IkReal x1919=(cj14)*(cj14);
IkReal x1920=(sj14)*(sj14);
IkReal x1921=((cj13)*(r12));
IkReal x1922=((IkReal(1.00000000000000))*(r10));
IkReal x1923=((cj13)*(r02));
IkReal x1924=((r01)*(sj13));
IkReal x1925=((r00)*(r11)*(sj13));
dummyeval[0]=((((IkReal(-1.00000000000000))*(sj14)*(x1922)*(x1923)))+(((IkReal(-1.00000000000000))*(x1919)*(x1922)*(x1924)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1923)))+(((r00)*(sj14)*(x1921)))+(((IkReal(-1.00000000000000))*(x1920)*(x1922)*(x1924)))+(((x1919)*(x1925)))+(((cj14)*(r01)*(x1921)))+(((x1920)*(x1925))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1926=((sj12)*(sj14));
IkReal x1927=((cj14)*(sj12));
IkReal x1928=((cj12)*(cj14)*(sj13));
IkReal x1929=((IkReal(1.00000000000000))*(cj12)*(cj13));
IkReal x1930=((IkReal(1.00000000000000))*(cj12)*(sj13)*(sj14));
if( IKabs(((gconst17)*(((((r11)*(x1927)))+(((r10)*(x1928)))+(((r10)*(x1926)))+(((IkReal(-1.00000000000000))*(r12)*(x1929)))+(((IkReal(-1.00000000000000))*(r11)*(x1930))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(r01)*(x1930)))+(((r00)*(x1926)))+(((IkReal(-1.00000000000000))*(r02)*(x1929)))+(((r00)*(x1928)))+(((r01)*(x1927))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst17)*(((((r11)*(x1927)))+(((r10)*(x1928)))+(((r10)*(x1926)))+(((IkReal(-1.00000000000000))*(r12)*(x1929)))+(((IkReal(-1.00000000000000))*(r11)*(x1930)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(r01)*(x1930)))+(((r00)*(x1926)))+(((IkReal(-1.00000000000000))*(r02)*(x1929)))+(((r00)*(x1928)))+(((r01)*(x1927)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1931=IKsin(j9);
IkReal x1932=IKcos(j9);
IkReal x1933=((cj10)*(cj11));
IkReal x1934=((IkReal(1.00000000000000))*(cj14));
IkReal x1935=((IkReal(1.00000000000000))*(sj14));
IkReal x1936=((cj13)*(cj14));
IkReal x1937=((cj14)*(r10));
IkReal x1938=((r01)*(sj14));
IkReal x1939=((sj10)*(sj11));
IkReal x1940=((IkReal(1.00000000000000))*(r12));
IkReal x1941=((sj13)*(x1932));
IkReal x1942=((r02)*(x1931));
IkReal x1943=((r11)*(x1931));
IkReal x1944=((r10)*(x1932));
IkReal x1945=((r01)*(x1932));
IkReal x1946=((sj13)*(x1931));
IkReal x1947=((r11)*(x1932));
IkReal x1948=((cj13)*(x1931));
IkReal x1949=((r10)*(x1931));
IkReal x1950=((r00)*(x1932));
IkReal x1951=((cj13)*(x1932));
evalcond[0]=((((r00)*(sj14)*(x1931)))+(((IkReal(-1.00000000000000))*(x1935)*(x1944)))+(cj12)+(((cj14)*(r01)*(x1931)))+(((IkReal(-1.00000000000000))*(x1934)*(x1947))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1935)*(x1949)))+(((IkReal(-1.00000000000000))*(x1935)*(x1950)))+(((IkReal(-1.00000000000000))*(sj12)*(x1933)))+(((IkReal(-1.00000000000000))*(x1934)*(x1945)))+(((sj12)*(x1939)))+(((IkReal(-1.00000000000000))*(x1934)*(x1943))));
evalcond[2]=((((x1938)*(x1948)))+(((IkReal(-1.00000000000000))*(sj13)*(x1942)))+(((x1936)*(x1944)))+(((r12)*(x1941)))+(((IkReal(-1.00000000000000))*(r00)*(x1934)*(x1948)))+(((IkReal(-1.00000000000000))*(cj13)*(x1935)*(x1947))));
evalcond[3]=((((x1938)*(x1946)))+(((IkReal(-1.00000000000000))*(x1940)*(x1951)))+(((x1937)*(x1941)))+(((IkReal(-1.00000000000000))*(r00)*(x1934)*(x1946)))+(sj12)+(((cj13)*(x1942)))+(((IkReal(-1.00000000000000))*(r11)*(x1935)*(x1941))));
evalcond[4]=((((r02)*(x1941)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x1935)*(x1945)))+(((IkReal(-1.00000000000000))*(cj13)*(x1935)*(x1943)))+(((x1936)*(x1949)))+(((r12)*(x1946)))+(((x1936)*(x1950)))+(((cj11)*(sj10))));
evalcond[5]=((((cj14)*(r00)*(x1941)))+(((IkReal(-1.00000000000000))*(x1940)*(x1948)))+(((IkReal(-1.00000000000000))*(r01)*(x1935)*(x1941)))+(((cj12)*(x1933)))+(((IkReal(-1.00000000000000))*(cj12)*(x1939)))+(((IkReal(-1.00000000000000))*(sj13)*(x1935)*(x1943)))+(((x1937)*(x1946)))+(((IkReal(-1.00000000000000))*(r02)*(x1951))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x1952=((cj12)*(sj13));
IkReal x1953=((cj12)*(cj13));
IkReal x1954=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst16)*(((((cj14)*(r10)*(x1953)))+(((IkReal(-1.00000000000000))*(r11)*(x1953)*(x1954)))+(((r12)*(x1952))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((r02)*(x1952)))+(((cj14)*(r00)*(x1953)))+(((IkReal(-1.00000000000000))*(r01)*(x1953)*(x1954))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst16)*(((((cj14)*(r10)*(x1953)))+(((IkReal(-1.00000000000000))*(r11)*(x1953)*(x1954)))+(((r12)*(x1952)))))), ((gconst16)*(((((r02)*(x1952)))+(((cj14)*(r00)*(x1953)))+(((IkReal(-1.00000000000000))*(r01)*(x1953)*(x1954)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x1955=IKsin(j9);
IkReal x1956=IKcos(j9);
IkReal x1957=((cj10)*(cj11));
IkReal x1958=((IkReal(1.00000000000000))*(cj14));
IkReal x1959=((IkReal(1.00000000000000))*(sj14));
IkReal x1960=((cj13)*(cj14));
IkReal x1961=((cj14)*(r10));
IkReal x1962=((r01)*(sj14));
IkReal x1963=((sj10)*(sj11));
IkReal x1964=((IkReal(1.00000000000000))*(r12));
IkReal x1965=((sj13)*(x1956));
IkReal x1966=((r02)*(x1955));
IkReal x1967=((r11)*(x1955));
IkReal x1968=((r10)*(x1956));
IkReal x1969=((r01)*(x1956));
IkReal x1970=((sj13)*(x1955));
IkReal x1971=((r11)*(x1956));
IkReal x1972=((cj13)*(x1955));
IkReal x1973=((r10)*(x1955));
IkReal x1974=((r00)*(x1956));
IkReal x1975=((cj13)*(x1956));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1958)*(x1971)))+(((r00)*(sj14)*(x1955)))+(cj12)+(((cj14)*(r01)*(x1955)))+(((IkReal(-1.00000000000000))*(x1959)*(x1968))));
evalcond[1]=((((sj12)*(x1963)))+(((IkReal(-1.00000000000000))*(x1959)*(x1974)))+(((IkReal(-1.00000000000000))*(sj12)*(x1957)))+(((IkReal(-1.00000000000000))*(x1959)*(x1973)))+(((IkReal(-1.00000000000000))*(x1958)*(x1967)))+(((IkReal(-1.00000000000000))*(x1958)*(x1969))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj13)*(x1966)))+(((IkReal(-1.00000000000000))*(cj13)*(x1959)*(x1971)))+(((x1962)*(x1972)))+(((IkReal(-1.00000000000000))*(r00)*(x1958)*(x1972)))+(((r12)*(x1965)))+(((x1960)*(x1968))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1958)*(x1970)))+(((x1961)*(x1965)))+(((IkReal(-1.00000000000000))*(r11)*(x1959)*(x1965)))+(((IkReal(-1.00000000000000))*(x1964)*(x1975)))+(((cj13)*(x1966)))+(((x1962)*(x1970)))+(sj12));
evalcond[4]=((((r12)*(x1970)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x1959)*(x1967)))+(((IkReal(-1.00000000000000))*(cj13)*(x1959)*(x1969)))+(((x1960)*(x1974)))+(((x1960)*(x1973)))+(((cj11)*(sj10)))+(((r02)*(x1965))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj13)*(x1959)*(x1967)))+(((x1961)*(x1970)))+(((cj12)*(x1957)))+(((IkReal(-1.00000000000000))*(r01)*(x1959)*(x1965)))+(((cj14)*(r00)*(x1965)))+(((IkReal(-1.00000000000000))*(x1964)*(x1972)))+(((IkReal(-1.00000000000000))*(r02)*(x1975)))+(((IkReal(-1.00000000000000))*(cj12)*(x1963))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1976=((cj11)*(sj12));
IkReal x1977=((r22)*(sj13));
IkReal x1978=((r20)*(sj14));
IkReal x1979=((cj14)*(sj11));
IkReal x1980=((cj13)*(r20));
IkReal x1981=((sj11)*(sj12));
IkReal x1982=((cj13)*(r21)*(sj14));
if( IKabs(((gconst4)*(((((sj12)*(x1979)*(x1980)))+(((cj11)*(cj14)*(r21)))+(((x1977)*(x1981)))+(((IkReal(-1.00000000000000))*(x1981)*(x1982)))+(((cj11)*(x1978))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((x1976)*(x1982)))+(((IkReal(-1.00000000000000))*(cj14)*(x1976)*(x1980)))+(((IkReal(-1.00000000000000))*(x1976)*(x1977)))+(((r21)*(x1979)))+(((sj11)*(x1978))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst4)*(((((sj12)*(x1979)*(x1980)))+(((cj11)*(cj14)*(r21)))+(((x1977)*(x1981)))+(((IkReal(-1.00000000000000))*(x1981)*(x1982)))+(((cj11)*(x1978)))))), ((gconst4)*(((((x1976)*(x1982)))+(((IkReal(-1.00000000000000))*(cj14)*(x1976)*(x1980)))+(((IkReal(-1.00000000000000))*(x1976)*(x1977)))+(((r21)*(x1979)))+(((sj11)*(x1978)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[3];
IkReal x1983=IKsin(j10);
IkReal x1984=IKcos(j10);
IkReal x1985=((IkReal(1.00000000000000))*(sj13));
IkReal x1986=((cj14)*(r20));
IkReal x1987=((r21)*(sj14));
IkReal x1988=((IkReal(1.00000000000000))*(x1984));
IkReal x1989=((cj11)*(x1983));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(sj12)*(x1988)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj12)*(x1989))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj13)*(x1986)))+(((IkReal(-1.00000000000000))*(cj11)*(x1988)))+(((IkReal(-1.00000000000000))*(r22)*(x1985)))+(((cj13)*(x1987)))+(((sj11)*(x1983))));
evalcond[2]=((((cj12)*(x1989)))+(((cj12)*(sj11)*(x1984)))+(((sj13)*(x1987)))+(((IkReal(-1.00000000000000))*(x1985)*(x1986)))+(((cj13)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x1990=(cj14)*(cj14);
IkReal x1991=(sj14)*(sj14);
IkReal x1992=((IkReal(1.00000000000000))*(r01));
IkReal x1993=((sj13)*(sj14));
IkReal x1994=((cj14)*(sj13));
IkReal x1995=((r00)*(r11));
IkReal x1996=((cj13)*(x1990));
IkReal x1997=((cj13)*(x1991));
gconst16=IKsign(((((IkReal(-1.00000000000000))*(r12)*(x1992)*(x1994)))+(((x1995)*(x1997)))+(((IkReal(-1.00000000000000))*(r10)*(x1992)*(x1997)))+(((IkReal(-1.00000000000000))*(r00)*(r12)*(x1993)))+(((IkReal(-1.00000000000000))*(r10)*(x1992)*(x1996)))+(((x1995)*(x1996)))+(((r02)*(r10)*(x1993)))+(((r02)*(r11)*(x1994)))));
IkReal x1998=(cj14)*(cj14);
IkReal x1999=(sj14)*(sj14);
IkReal x2000=((IkReal(1.00000000000000))*(r01));
IkReal x2001=((sj13)*(sj14));
IkReal x2002=((cj14)*(sj13));
IkReal x2003=((r00)*(r11));
IkReal x2004=((cj13)*(x1998));
IkReal x2005=((cj13)*(x1999));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r12)*(x2001)))+(((x2003)*(x2005)))+(((x2003)*(x2004)))+(((IkReal(-1.00000000000000))*(r10)*(x2000)*(x2005)))+(((r02)*(r11)*(x2002)))+(((r02)*(r10)*(x2001)))+(((IkReal(-1.00000000000000))*(r12)*(x2000)*(x2002)))+(((IkReal(-1.00000000000000))*(r10)*(x2000)*(x2004))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
IkReal x2006=(cj14)*(cj14);
IkReal x2007=(sj14)*(sj14);
IkReal x2008=((cj13)*(r12));
IkReal x2009=((IkReal(1.00000000000000))*(r10));
IkReal x2010=((cj13)*(r02));
IkReal x2011=((r01)*(sj13));
IkReal x2012=((r00)*(r11)*(sj13));
gconst17=IKsign(((((x2007)*(x2012)))+(((IkReal(-1.00000000000000))*(sj14)*(x2009)*(x2010)))+(((x2006)*(x2012)))+(((IkReal(-1.00000000000000))*(x2007)*(x2009)*(x2011)))+(((r00)*(sj14)*(x2008)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2010)))+(((cj14)*(r01)*(x2008)))+(((IkReal(-1.00000000000000))*(x2006)*(x2009)*(x2011)))));
IkReal x2013=(cj14)*(cj14);
IkReal x2014=(sj14)*(sj14);
IkReal x2015=((cj13)*(r12));
IkReal x2016=((IkReal(1.00000000000000))*(r10));
IkReal x2017=((cj13)*(r02));
IkReal x2018=((r01)*(sj13));
IkReal x2019=((r00)*(r11)*(sj13));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x2013)*(x2016)*(x2018)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2017)))+(((r00)*(sj14)*(x2015)))+(((IkReal(-1.00000000000000))*(x2014)*(x2016)*(x2018)))+(((cj14)*(r01)*(x2015)))+(((IkReal(-1.00000000000000))*(sj14)*(x2016)*(x2017)))+(((x2013)*(x2019)))+(((x2014)*(x2019))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x2020=((sj12)*(sj14));
IkReal x2021=((cj14)*(sj12));
IkReal x2022=((cj12)*(cj14)*(sj13));
IkReal x2023=((IkReal(1.00000000000000))*(cj12)*(cj13));
IkReal x2024=((IkReal(1.00000000000000))*(cj12)*(sj13)*(sj14));
if( IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(r12)*(x2023)))+(((r10)*(x2022)))+(((IkReal(-1.00000000000000))*(r11)*(x2024)))+(((r10)*(x2020)))+(((r11)*(x2021))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(r01)*(x2024)))+(((r00)*(x2022)))+(((IkReal(-1.00000000000000))*(r02)*(x2023)))+(((r01)*(x2021)))+(((r00)*(x2020))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst17)*(((((IkReal(-1.00000000000000))*(r12)*(x2023)))+(((r10)*(x2022)))+(((IkReal(-1.00000000000000))*(r11)*(x2024)))+(((r10)*(x2020)))+(((r11)*(x2021)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(r01)*(x2024)))+(((r00)*(x2022)))+(((IkReal(-1.00000000000000))*(r02)*(x2023)))+(((r01)*(x2021)))+(((r00)*(x2020)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x2025=IKsin(j9);
IkReal x2026=IKcos(j9);
IkReal x2027=((cj10)*(cj11));
IkReal x2028=((IkReal(1.00000000000000))*(cj14));
IkReal x2029=((IkReal(1.00000000000000))*(sj14));
IkReal x2030=((cj13)*(cj14));
IkReal x2031=((cj14)*(r10));
IkReal x2032=((r01)*(sj14));
IkReal x2033=((sj10)*(sj11));
IkReal x2034=((IkReal(1.00000000000000))*(r12));
IkReal x2035=((sj13)*(x2026));
IkReal x2036=((r02)*(x2025));
IkReal x2037=((r11)*(x2025));
IkReal x2038=((r10)*(x2026));
IkReal x2039=((r01)*(x2026));
IkReal x2040=((sj13)*(x2025));
IkReal x2041=((r11)*(x2026));
IkReal x2042=((cj13)*(x2025));
IkReal x2043=((r10)*(x2025));
IkReal x2044=((r00)*(x2026));
IkReal x2045=((cj13)*(x2026));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2029)*(x2038)))+(cj12)+(((cj14)*(r01)*(x2025)))+(((IkReal(-1.00000000000000))*(x2028)*(x2041)))+(((r00)*(sj14)*(x2025))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2029)*(x2043)))+(((IkReal(-1.00000000000000))*(x2029)*(x2044)))+(((sj12)*(x2033)))+(((IkReal(-1.00000000000000))*(sj12)*(x2027)))+(((IkReal(-1.00000000000000))*(x2028)*(x2039)))+(((IkReal(-1.00000000000000))*(x2028)*(x2037))));
evalcond[2]=((((r12)*(x2035)))+(((x2032)*(x2042)))+(((IkReal(-1.00000000000000))*(cj13)*(x2029)*(x2041)))+(((IkReal(-1.00000000000000))*(sj13)*(x2036)))+(((x2030)*(x2038)))+(((IkReal(-1.00000000000000))*(r00)*(x2028)*(x2042))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2034)*(x2045)))+(((x2032)*(x2040)))+(((x2031)*(x2035)))+(((cj13)*(x2036)))+(((IkReal(-1.00000000000000))*(r00)*(x2028)*(x2040)))+(sj12)+(((IkReal(-1.00000000000000))*(r11)*(x2029)*(x2035))));
evalcond[4]=((((r02)*(x2035)))+(((r12)*(x2040)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x2029)*(x2037)))+(((x2030)*(x2044)))+(((x2030)*(x2043)))+(((cj11)*(sj10)))+(((IkReal(-1.00000000000000))*(cj13)*(x2029)*(x2039))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj13)*(x2029)*(x2037)))+(((IkReal(-1.00000000000000))*(x2034)*(x2042)))+(((IkReal(-1.00000000000000))*(r02)*(x2045)))+(((x2031)*(x2040)))+(((IkReal(-1.00000000000000))*(cj12)*(x2033)))+(((cj14)*(r00)*(x2035)))+(((IkReal(-1.00000000000000))*(r01)*(x2029)*(x2035)))+(((cj12)*(x2027))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x2046=((cj12)*(sj13));
IkReal x2047=((cj12)*(cj13));
IkReal x2048=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst16)*(((((r12)*(x2046)))+(((IkReal(-1.00000000000000))*(r11)*(x2047)*(x2048)))+(((cj14)*(r10)*(x2047))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((cj14)*(r00)*(x2047)))+(((IkReal(-1.00000000000000))*(r01)*(x2047)*(x2048)))+(((r02)*(x2046))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst16)*(((((r12)*(x2046)))+(((IkReal(-1.00000000000000))*(r11)*(x2047)*(x2048)))+(((cj14)*(r10)*(x2047)))))), ((gconst16)*(((((cj14)*(r00)*(x2047)))+(((IkReal(-1.00000000000000))*(r01)*(x2047)*(x2048)))+(((r02)*(x2046)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[6];
IkReal x2049=IKsin(j9);
IkReal x2050=IKcos(j9);
IkReal x2051=((cj10)*(cj11));
IkReal x2052=((IkReal(1.00000000000000))*(cj14));
IkReal x2053=((IkReal(1.00000000000000))*(sj14));
IkReal x2054=((cj13)*(cj14));
IkReal x2055=((cj14)*(r10));
IkReal x2056=((r01)*(sj14));
IkReal x2057=((sj10)*(sj11));
IkReal x2058=((IkReal(1.00000000000000))*(r12));
IkReal x2059=((sj13)*(x2050));
IkReal x2060=((r02)*(x2049));
IkReal x2061=((r11)*(x2049));
IkReal x2062=((r10)*(x2050));
IkReal x2063=((r01)*(x2050));
IkReal x2064=((sj13)*(x2049));
IkReal x2065=((r11)*(x2050));
IkReal x2066=((cj13)*(x2049));
IkReal x2067=((r10)*(x2049));
IkReal x2068=((r00)*(x2050));
IkReal x2069=((cj13)*(x2050));
evalcond[0]=((((cj14)*(r01)*(x2049)))+(((IkReal(-1.00000000000000))*(x2052)*(x2065)))+(((r00)*(sj14)*(x2049)))+(cj12)+(((IkReal(-1.00000000000000))*(x2053)*(x2062))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2053)*(x2067)))+(((IkReal(-1.00000000000000))*(x2052)*(x2063)))+(((IkReal(-1.00000000000000))*(x2052)*(x2061)))+(((sj12)*(x2057)))+(((IkReal(-1.00000000000000))*(x2053)*(x2068)))+(((IkReal(-1.00000000000000))*(sj12)*(x2051))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj13)*(x2060)))+(((IkReal(-1.00000000000000))*(cj13)*(x2053)*(x2065)))+(((x2056)*(x2066)))+(((x2054)*(x2062)))+(((r12)*(x2059)))+(((IkReal(-1.00000000000000))*(r00)*(x2052)*(x2066))));
evalcond[3]=((((x2056)*(x2064)))+(((IkReal(-1.00000000000000))*(r11)*(x2053)*(x2059)))+(((IkReal(-1.00000000000000))*(r00)*(x2052)*(x2064)))+(((x2055)*(x2059)))+(sj12)+(((IkReal(-1.00000000000000))*(x2058)*(x2069)))+(((cj13)*(x2060))));
evalcond[4]=((((r12)*(x2064)))+(((x2054)*(x2068)))+(((r02)*(x2059)))+(((cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(cj13)*(x2053)*(x2061)))+(((x2054)*(x2067)))+(((IkReal(-1.00000000000000))*(cj13)*(x2053)*(x2063)))+(((cj11)*(sj10))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x2053)*(x2059)))+(((IkReal(-1.00000000000000))*(cj12)*(x2057)))+(((x2055)*(x2064)))+(((cj12)*(x2051)))+(((cj14)*(r00)*(x2059)))+(((IkReal(-1.00000000000000))*(x2058)*(x2066)))+(((IkReal(-1.00000000000000))*(sj13)*(x2053)*(x2061)))+(((IkReal(-1.00000000000000))*(r02)*(x2069))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x2070=((sj12)*(sj14));
IkReal x2071=((cj14)*(sj12));
IkReal x2072=((cj12)*(cj14)*(sj13));
IkReal x2073=((IkReal(1.00000000000000))*(cj12)*(cj13));
IkReal x2074=((IkReal(1.00000000000000))*(cj12)*(sj13)*(sj14));
if( IKabs(((gconst1)*(((((r10)*(x2070)))+(((IkReal(-1.00000000000000))*(r11)*(x2074)))+(((r10)*(x2072)))+(((IkReal(-1.00000000000000))*(r12)*(x2073)))+(((r11)*(x2071))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((r00)*(x2072)))+(((r01)*(x2071)))+(((IkReal(-1.00000000000000))*(r02)*(x2073)))+(((r00)*(x2070)))+(((IkReal(-1.00000000000000))*(r01)*(x2074))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst1)*(((((r10)*(x2070)))+(((IkReal(-1.00000000000000))*(r11)*(x2074)))+(((r10)*(x2072)))+(((IkReal(-1.00000000000000))*(r12)*(x2073)))+(((r11)*(x2071)))))), ((gconst1)*(((((r00)*(x2072)))+(((r01)*(x2071)))+(((IkReal(-1.00000000000000))*(r02)*(x2073)))+(((r00)*(x2070)))+(((IkReal(-1.00000000000000))*(r01)*(x2074)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[3];
IkReal x2075=IKsin(j9);
IkReal x2076=IKcos(j9);
IkReal x2077=((IkReal(1.00000000000000))*(sj14));
IkReal x2078=((sj13)*(x2076));
IkReal x2079=((cj13)*(x2075));
IkReal x2080=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x2081=((r01)*(x2075));
IkReal x2082=((r10)*(x2076));
IkReal x2083=((sj13)*(x2075));
IkReal x2084=((cj13)*(x2076));
evalcond[0]=((((r00)*(sj14)*(x2075)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2076)))+(cj12)+(((IkReal(-1.00000000000000))*(x2077)*(x2082)))+(((cj14)*(x2081))));
evalcond[1]=((((r12)*(x2078)))+(((cj13)*(cj14)*(x2082)))+(((IkReal(-1.00000000000000))*(r02)*(x2083)))+(((IkReal(-1.00000000000000))*(r11)*(x2077)*(x2084)))+(((r01)*(sj14)*(x2079)))+(((IkReal(-1.00000000000000))*(x2079)*(x2080))));
evalcond[2]=((((cj14)*(r10)*(x2078)))+(((IkReal(-1.00000000000000))*(r11)*(x2077)*(x2078)))+(((sj13)*(sj14)*(x2081)))+(sj12)+(((r02)*(x2079)))+(((IkReal(-1.00000000000000))*(r12)*(x2084)))+(((IkReal(-1.00000000000000))*(x2080)*(x2083))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2085=((r11)*(sj13));
IkReal x2086=((cj13)*(sj9));
IkReal x2087=((sj13)*(sj14));
IkReal x2088=((cj9)*(sj13));
IkReal x2089=((r01)*(sj9));
IkReal x2090=((cj13)*(cj9));
IkReal x2091=((IkReal(1.00000000000000))*(r02));
IkReal x2092=((cj14)*(sj13));
IkReal x2093=((cj14)*(r00));
IkReal x2094=((IkReal(1.00000000000000))*(r12));
IkReal x2095=((r00)*(sj9));
IkReal x2096=((cj14)*(r10));
IkReal x2097=((IkReal(1.00000000000000))*(cj9)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x2097)))+(((sj14)*(x2095)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(x2089))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x2092)))+(((r21)*(x2087)))+(((cj13)*(r22))));
evalcond[3]=((IkReal(-0.0950000000000000))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(npx)*(x2092)))+(((IkReal(0.0900000000000000))*(sj13)))+(((npy)*(x2087))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2090)))+(((x2090)*(x2096)))+(((IkReal(-1.00000000000000))*(sj13)*(sj9)*(x2091)))+(((IkReal(-1.00000000000000))*(x2086)*(x2093)))+(((r12)*(x2088)))+(((r01)*(sj14)*(x2086))));
evalcond[5]=((IkReal(1.00000000000000))+(((r02)*(x2086)))+(((IkReal(-1.00000000000000))*(x2090)*(x2094)))+(((IkReal(-1.00000000000000))*(x2085)*(x2097)))+(((x2087)*(x2089)))+(((x2088)*(x2096)))+(((IkReal(-1.00000000000000))*(x2092)*(x2095))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2086)*(x2094)))+(((IkReal(-1.00000000000000))*(x2090)*(x2091)))+(((x2088)*(x2093)))+(((IkReal(-1.00000000000000))*(sj14)*(sj9)*(x2085)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2087)))+(((r10)*(sj9)*(x2092))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2098=((IkReal(4.00000000000000))*(sj14));
IkReal x2099=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x2099)))+(((IkReal(-1.00000000000000))*(npx)*(x2098))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2098)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x2099))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x2099)))+(((IkReal(-1.00000000000000))*(npx)*(x2098)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2098)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x2099)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x2099)))+(((IkReal(-1.00000000000000))*(npx)*(x2098)))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2098)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x2099)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((IkReal(0.250000000000000))*(IKsin(j11))))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(npx)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((cj13)*(npy)*(sj14))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst57;
gconst57=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2100=((IkReal(1.00000000000000))*(cj11));
IkReal x2101=((r20)*(sj14));
IkReal x2102=((cj14)*(r21));
IkReal x2103=((cj14)*(cj9)*(r01));
IkReal x2104=((r10)*(sj14)*(sj9));
IkReal x2105=((cj9)*(r00)*(sj14));
IkReal x2106=((cj14)*(r11)*(sj9));
if( IKabs(((gconst57)*(((((cj11)*(x2101)))+(((sj11)*(x2103)))+(((cj11)*(x2102)))+(((sj11)*(x2105)))+(((sj11)*(x2104)))+(((sj11)*(x2106))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst57)*(((((IkReal(-1.00000000000000))*(x2100)*(x2106)))+(((IkReal(-1.00000000000000))*(x2100)*(x2105)))+(((IkReal(-1.00000000000000))*(x2100)*(x2104)))+(((IkReal(-1.00000000000000))*(x2100)*(x2103)))+(((sj11)*(x2102)))+(((sj11)*(x2101))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst57)*(((((cj11)*(x2101)))+(((sj11)*(x2103)))+(((cj11)*(x2102)))+(((sj11)*(x2105)))+(((sj11)*(x2104)))+(((sj11)*(x2106)))))), ((gconst57)*(((((IkReal(-1.00000000000000))*(x2100)*(x2106)))+(((IkReal(-1.00000000000000))*(x2100)*(x2105)))+(((IkReal(-1.00000000000000))*(x2100)*(x2104)))+(((IkReal(-1.00000000000000))*(x2100)*(x2103)))+(((sj11)*(x2102)))+(((sj11)*(x2101)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2107=IKsin(j10);
IkReal x2108=IKcos(j10);
IkReal x2109=((cj13)*(sj14));
IkReal x2110=((cj13)*(cj14));
IkReal x2111=((r10)*(sj9));
IkReal x2112=((IkReal(1.00000000000000))*(cj9));
IkReal x2113=((sj11)*(x2107));
IkReal x2114=((IkReal(1.00000000000000))*(x2108));
IkReal x2115=((cj11)*(x2107));
IkReal x2116=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2117=((cj11)*(x2114));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2115)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x2114))));
evalcond[1]=((((r21)*(x2109)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x2110)))+(((IkReal(-1.00000000000000))*(x2117)))+(x2113));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x2111)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2112)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2112)))+(((IkReal(-1.00000000000000))*(x2117)))+(((IkReal(-1.00000000000000))*(cj14)*(x2116)))+(x2113));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2109)*(x2116)))+(((sj11)*(x2108)))+(((x2110)*(x2111)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x2109)*(x2112)))+(((cj9)*(r00)*(x2110)))+(x2115));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2118=((r20)*(sj14));
IkReal x2119=((IkReal(1.00000000000000))*(cj13));
IkReal x2120=((cj14)*(r20));
IkReal x2121=((r21)*(sj14));
IkReal x2122=((r22)*(sj13));
IkReal x2123=((cj14)*(r21));
if( IKabs(((gconst56)*(((((IkReal(-1.00000000000000))*(sj11)*(x2119)*(x2121)))+(((cj11)*(x2123)))+(((sj11)*(x2122)))+(((cj13)*(sj11)*(x2120)))+(((cj11)*(x2118))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((IkReal(-1.00000000000000))*(cj11)*(x2119)*(x2120)))+(((cj11)*(cj13)*(x2121)))+(((sj11)*(x2118)))+(((IkReal(-1.00000000000000))*(cj11)*(x2122)))+(((sj11)*(x2123))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst56)*(((((IkReal(-1.00000000000000))*(sj11)*(x2119)*(x2121)))+(((cj11)*(x2123)))+(((sj11)*(x2122)))+(((cj13)*(sj11)*(x2120)))+(((cj11)*(x2118)))))), ((gconst56)*(((((IkReal(-1.00000000000000))*(cj11)*(x2119)*(x2120)))+(((cj11)*(cj13)*(x2121)))+(((sj11)*(x2118)))+(((IkReal(-1.00000000000000))*(cj11)*(x2122)))+(((sj11)*(x2123)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2124=IKsin(j10);
IkReal x2125=IKcos(j10);
IkReal x2126=((cj13)*(sj14));
IkReal x2127=((cj13)*(cj14));
IkReal x2128=((r10)*(sj9));
IkReal x2129=((IkReal(1.00000000000000))*(cj9));
IkReal x2130=((sj11)*(x2124));
IkReal x2131=((IkReal(1.00000000000000))*(x2125));
IkReal x2132=((cj11)*(x2124));
IkReal x2133=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2134=((cj11)*(x2131));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x2131)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2132))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x2130)+(((IkReal(-1.00000000000000))*(x2134)))+(((IkReal(-1.00000000000000))*(r20)*(x2127)))+(((r21)*(x2126))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2129)))+(((IkReal(-1.00000000000000))*(cj14)*(x2133)))+(((IkReal(-1.00000000000000))*(sj14)*(x2128)))+(x2130)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2129)))+(((IkReal(-1.00000000000000))*(x2134))));
evalcond[3]=((((cj9)*(r00)*(x2127)))+(((x2127)*(x2128)))+(((sj11)*(x2125)))+(((r12)*(sj13)*(sj9)))+(x2132)+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x2126)*(x2133)))+(((IkReal(-1.00000000000000))*(r01)*(x2126)*(x2129))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2135=((r11)*(sj13));
IkReal x2136=((cj13)*(sj9));
IkReal x2137=((sj13)*(sj14));
IkReal x2138=((cj9)*(sj13));
IkReal x2139=((r01)*(sj9));
IkReal x2140=((cj13)*(cj9));
IkReal x2141=((IkReal(1.00000000000000))*(r02));
IkReal x2142=((cj14)*(sj13));
IkReal x2143=((cj14)*(r00));
IkReal x2144=((IkReal(1.00000000000000))*(r12));
IkReal x2145=((r00)*(sj9));
IkReal x2146=((cj14)*(r10));
IkReal x2147=((IkReal(1.00000000000000))*(cj9)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((sj14)*(x2145)))+(((IkReal(-1.00000000000000))*(r10)*(x2147)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(x2139))));
evalcond[2]=((((r21)*(x2137)))+(((IkReal(-1.00000000000000))*(r20)*(x2142)))+(((cj13)*(r22))));
evalcond[3]=((IkReal(0.0950000000000000))+(((npy)*(x2137)))+(((IkReal(-1.00000000000000))*(npx)*(x2142)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2140)))+(((IkReal(-1.00000000000000))*(sj13)*(sj9)*(x2141)))+(((r12)*(x2138)))+(((IkReal(-1.00000000000000))*(x2136)*(x2143)))+(((r01)*(sj14)*(x2136)))+(((x2140)*(x2146))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2140)*(x2144)))+(((x2138)*(x2146)))+(((IkReal(-1.00000000000000))*(x2135)*(x2147)))+(((x2137)*(x2139)))+(((IkReal(-1.00000000000000))*(x2142)*(x2145)))+(((r02)*(x2136))));
evalcond[6]=((((x2138)*(x2143)))+(((r10)*(sj9)*(x2142)))+(((IkReal(-1.00000000000000))*(x2140)*(x2141)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2137)))+(((IkReal(-1.00000000000000))*(x2136)*(x2144)))+(((IkReal(-1.00000000000000))*(sj14)*(sj9)*(x2135))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2148=((IkReal(4.00000000000000))*(sj14));
IkReal x2149=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((IkReal(0.120000000000000))+(((npx)*(x2148)))+(((npy)*(x2149))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2148)))+(((cj13)*(npx)*(x2149)))+(((IkReal(4.00000000000000))*(npz)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((npx)*(x2148)))+(((npy)*(x2149)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2148)))+(((cj13)*(npx)*(x2149)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((npx)*(x2148)))+(((npy)*(x2149)))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2148)))+(((cj13)*(npx)*(x2149)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0300000000000000))+(((cj14)*(npy)))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(npx)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((cj13)*(npy)*(sj14))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst58;
gconst58=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2150=((IkReal(1.00000000000000))*(cj14));
IkReal x2151=((sj11)*(sj9));
IkReal x2152=((cj9)*(r01));
IkReal x2153=((cj11)*(cj14));
IkReal x2154=((cj9)*(r00));
IkReal x2155=((r10)*(sj14));
IkReal x2156=((cj11)*(sj14));
IkReal x2157=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(x2154)*(x2157)))+(((IkReal(-1.00000000000000))*(x2151)*(x2155)))+(((IkReal(-1.00000000000000))*(r20)*(x2156)))+(((IkReal(-1.00000000000000))*(sj11)*(x2150)*(x2152)))+(((IkReal(-1.00000000000000))*(r11)*(x2150)*(x2151)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x2150))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(((((x2154)*(x2156)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x2150)))+(((r11)*(sj9)*(x2153)))+(((IkReal(-1.00000000000000))*(r20)*(x2157)))+(((x2152)*(x2153)))+(((cj11)*(sj9)*(x2155))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst59)*(((((IkReal(-1.00000000000000))*(x2154)*(x2157)))+(((IkReal(-1.00000000000000))*(x2151)*(x2155)))+(((IkReal(-1.00000000000000))*(r20)*(x2156)))+(((IkReal(-1.00000000000000))*(sj11)*(x2150)*(x2152)))+(((IkReal(-1.00000000000000))*(r11)*(x2150)*(x2151)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x2150)))))), ((gconst59)*(((((x2154)*(x2156)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x2150)))+(((r11)*(sj9)*(x2153)))+(((IkReal(-1.00000000000000))*(r20)*(x2157)))+(((x2152)*(x2153)))+(((cj11)*(sj9)*(x2155)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2158=IKsin(j10);
IkReal x2159=IKcos(j10);
IkReal x2160=((cj14)*(sj9));
IkReal x2161=((IkReal(1.00000000000000))*(r11));
IkReal x2162=((cj13)*(sj14));
IkReal x2163=((IkReal(1.00000000000000))*(cj9));
IkReal x2164=((cj13)*(cj14));
IkReal x2165=((cj11)*(x2158));
IkReal x2166=((sj11)*(x2159));
IkReal x2167=((cj11)*(x2159));
IkReal x2168=((sj11)*(x2158));
IkReal x2169=((x2165)+(x2166));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x2169));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x2168)+(((IkReal(-1.00000000000000))*(r20)*(x2164)))+(((IkReal(-1.00000000000000))*(x2167)))+(((r21)*(x2162))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2168)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(x2167)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2163)))+(((IkReal(-1.00000000000000))*(x2160)*(x2161)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2163))));
evalcond[3]=((((cj9)*(r00)*(x2164)))+(((IkReal(-1.00000000000000))*(r01)*(x2162)*(x2163)))+(x2169)+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(sj9)*(x2161)*(x2162)))+(((cj13)*(r10)*(x2160))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2170=((cj13)*(sj11));
IkReal x2171=((r21)*(sj14));
IkReal x2172=((cj14)*(r20));
IkReal x2173=((cj11)*(cj13));
IkReal x2174=((r22)*(sj13));
IkReal x2175=((r20)*(sj14));
IkReal x2176=((cj14)*(r21));
if( IKabs(((gconst58)*(((((cj11)*(x2176)))+(((IkReal(-1.00000000000000))*(x2170)*(x2172)))+(((cj11)*(x2175)))+(((IkReal(-1.00000000000000))*(sj11)*(x2174)))+(((x2170)*(x2171))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst58)*(((((cj11)*(x2174)))+(((sj11)*(x2176)))+(((IkReal(-1.00000000000000))*(x2171)*(x2173)))+(((x2172)*(x2173)))+(((sj11)*(x2175))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst58)*(((((cj11)*(x2176)))+(((IkReal(-1.00000000000000))*(x2170)*(x2172)))+(((cj11)*(x2175)))+(((IkReal(-1.00000000000000))*(sj11)*(x2174)))+(((x2170)*(x2171)))))), ((gconst58)*(((((cj11)*(x2174)))+(((sj11)*(x2176)))+(((IkReal(-1.00000000000000))*(x2171)*(x2173)))+(((x2172)*(x2173)))+(((sj11)*(x2175)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2177=IKsin(j10);
IkReal x2178=IKcos(j10);
IkReal x2179=((cj14)*(sj9));
IkReal x2180=((IkReal(1.00000000000000))*(r11));
IkReal x2181=((cj13)*(sj14));
IkReal x2182=((IkReal(1.00000000000000))*(cj9));
IkReal x2183=((cj13)*(cj14));
IkReal x2184=((cj11)*(x2177));
IkReal x2185=((sj11)*(x2178));
IkReal x2186=((cj11)*(x2178));
IkReal x2187=((sj11)*(x2177));
IkReal x2188=((x2185)+(x2184));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x2188));
evalcond[1]=((((r21)*(x2181)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2186)))+(x2187)+(((IkReal(-1.00000000000000))*(r20)*(x2183))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2182)))+(((IkReal(-1.00000000000000))*(x2187)))+(x2186)+(((IkReal(-1.00000000000000))*(x2179)*(x2180)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2182))));
evalcond[3]=((((cj13)*(r10)*(x2179)))+(((IkReal(-1.00000000000000))*(sj9)*(x2180)*(x2181)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(r01)*(x2181)*(x2182)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x2183)))+(x2188));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2189=((cj13)*(sj9));
IkReal x2190=((r01)*(sj14));
IkReal x2191=((cj9)*(sj13));
IkReal x2192=((sj13)*(sj9));
IkReal x2193=((cj14)*(r01));
IkReal x2194=((cj14)*(r10));
IkReal x2195=((cj13)*(cj9));
IkReal x2196=((IkReal(1.00000000000000))*(cj9));
IkReal x2197=((sj14)*(sj9));
IkReal x2198=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2199=((sj14)*(x2196));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2196)))+(((r00)*(x2197)))+(((sj9)*(x2193)))+(((IkReal(-1.00000000000000))*(r10)*(x2199))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x2197)))+(((IkReal(-1.00000000000000))*(r00)*(x2199)))+(((IkReal(-1.00000000000000))*(x2193)*(x2196)))+(((IkReal(-1.00000000000000))*(r11)*(x2198))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2195)))+(((IkReal(-1.00000000000000))*(r02)*(x2192)))+(((x2189)*(x2190)))+(((x2194)*(x2195)))+(((r12)*(x2191)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2189))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x2195)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2191)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2192)))+(((r02)*(x2189)))+(((x2190)*(x2192)))+(((x2191)*(x2194))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2200=((IkReal(4.00000000000000))*(cj13));
IkReal x2201=((npy)*(sj14));
IkReal x2202=((IkReal(4.00000000000000))*(sj13));
IkReal x2203=((cj14)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((x2201)*(x2202)))+(((npz)*(x2200)))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2202)*(x2203))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x2200)*(x2201)))+(((x2200)*(x2203)))+(((npz)*(x2202))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((x2201)*(x2202)))+(((npz)*(x2200)))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2202)*(x2203)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x2200)*(x2201)))+(((x2200)*(x2203)))+(((npz)*(x2202)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((x2201)*(x2202)))+(((npz)*(x2200)))+(((IkReal(0.360000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2202)*(x2203)))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x2200)*(x2201)))+(((x2200)*(x2203)))+(((npz)*(x2202)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x2204=((npy)*(sj14));
IkReal x2205=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((cj13)*(x2204)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x2205))));
evalcond[1]=((IkReal(0.0300000000000000))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(sj13)*(x2205)))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((IkReal(0.0900000000000000))*(sj13)))+(((sj13)*(x2204))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst60;
gconst60=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2206=((cj13)*(sj14));
IkReal x2207=((IkReal(1.00000000000000))*(cj11));
IkReal x2208=((r11)*(sj9));
IkReal x2209=((IkReal(1.00000000000000))*(sj11));
IkReal x2210=((cj13)*(cj14));
IkReal x2211=((cj11)*(sj13));
IkReal x2212=((r12)*(sj9));
IkReal x2213=((cj9)*(r01));
IkReal x2214=((sj11)*(sj13));
IkReal x2215=((cj9)*(r02));
IkReal x2216=((r10)*(sj9));
IkReal x2217=((cj9)*(r00));
if( IKabs(((gconst61)*(((((IkReal(-1.00000000000000))*(r20)*(x2209)*(x2210)))+(((x2211)*(x2212)))+(((cj11)*(x2210)*(x2216)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2209)))+(((r21)*(sj11)*(x2206)))+(((IkReal(-1.00000000000000))*(x2206)*(x2207)*(x2213)))+(((IkReal(-1.00000000000000))*(x2206)*(x2207)*(x2208)))+(((x2211)*(x2215)))+(((cj11)*(x2210)*(x2217))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst61)*(((((IkReal(-1.00000000000000))*(x2206)*(x2208)*(x2209)))+(((r22)*(x2211)))+(((x2212)*(x2214)))+(((sj11)*(x2210)*(x2217)))+(((cj11)*(r20)*(x2210)))+(((sj11)*(x2210)*(x2216)))+(((IkReal(-1.00000000000000))*(r21)*(x2206)*(x2207)))+(((x2214)*(x2215)))+(((IkReal(-1.00000000000000))*(x2206)*(x2209)*(x2213))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst61)*(((((IkReal(-1.00000000000000))*(r20)*(x2209)*(x2210)))+(((x2211)*(x2212)))+(((cj11)*(x2210)*(x2216)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2209)))+(((r21)*(sj11)*(x2206)))+(((IkReal(-1.00000000000000))*(x2206)*(x2207)*(x2213)))+(((IkReal(-1.00000000000000))*(x2206)*(x2207)*(x2208)))+(((x2211)*(x2215)))+(((cj11)*(x2210)*(x2217)))))), ((gconst61)*(((((IkReal(-1.00000000000000))*(x2206)*(x2208)*(x2209)))+(((r22)*(x2211)))+(((x2212)*(x2214)))+(((sj11)*(x2210)*(x2217)))+(((cj11)*(r20)*(x2210)))+(((sj11)*(x2210)*(x2216)))+(((IkReal(-1.00000000000000))*(r21)*(x2206)*(x2207)))+(((x2214)*(x2215)))+(((IkReal(-1.00000000000000))*(x2206)*(x2209)*(x2213)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2218=IKsin(j10);
IkReal x2219=IKcos(j10);
IkReal x2220=((IkReal(1.00000000000000))*(sj13));
IkReal x2221=((r11)*(sj9));
IkReal x2222=((cj9)*(r01));
IkReal x2223=((r21)*(sj14));
IkReal x2224=((cj9)*(r02));
IkReal x2225=((sj13)*(sj9));
IkReal x2226=((cj14)*(r10));
IkReal x2227=((IkReal(1.00000000000000))*(cj13));
IkReal x2228=((cj14)*(r20));
IkReal x2229=((cj11)*(x2218));
IkReal x2230=((sj11)*(x2219));
IkReal x2231=((sj14)*(x2227));
IkReal x2232=((sj11)*(x2218));
IkReal x2233=((cj11)*(x2219));
IkReal x2234=((cj14)*(cj9)*(r00));
IkReal x2235=((x2229)+(x2230));
evalcond[0]=((((cj13)*(x2223)))+(((IkReal(-1.00000000000000))*(r22)*(x2220)))+(((IkReal(-1.00000000000000))*(x2233)))+(((IkReal(-1.00000000000000))*(x2227)*(x2228)))+(x2232));
evalcond[1]=((((sj13)*(x2223)))+(((IkReal(-1.00000000000000))*(x2220)*(x2228)))+(x2235)+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x2224)))+(((cj13)*(sj9)*(x2226)))+(((IkReal(-1.00000000000000))*(x2221)*(x2231)))+(((cj13)*(x2234)))+(x2235)+(((IkReal(-1.00000000000000))*(x2222)*(x2231)))+(((r12)*(x2225))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x2220)*(x2221)))+(((IkReal(-1.00000000000000))*(sj14)*(x2220)*(x2222)))+(((IkReal(-1.00000000000000))*(x2232)))+(((x2225)*(x2226)))+(((IkReal(-1.00000000000000))*(x2224)*(x2227)))+(x2233)+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2227)))+(((sj13)*(x2234))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2236=((cj13)*(sj11));
IkReal x2237=((r21)*(sj14));
IkReal x2238=((cj11)*(cj13));
IkReal x2239=((cj11)*(sj13));
IkReal x2240=((sj11)*(sj13));
IkReal x2241=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst60)*(((((IkReal(-1.00000000000000))*(x2236)*(x2241)))+(((IkReal(-1.00000000000000))*(x2239)*(x2241)))+(((x2237)*(x2239)))+(((r22)*(x2238)))+(((IkReal(-1.00000000000000))*(r22)*(x2240)))+(((x2236)*(x2237))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((cj14)*(r20)*(x2238)))+(((r22)*(x2239)))+(((r22)*(x2236)))+(((x2237)*(x2240)))+(((IkReal(-1.00000000000000))*(x2237)*(x2238)))+(((IkReal(-1.00000000000000))*(x2240)*(x2241))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst60)*(((((IkReal(-1.00000000000000))*(x2236)*(x2241)))+(((IkReal(-1.00000000000000))*(x2239)*(x2241)))+(((x2237)*(x2239)))+(((r22)*(x2238)))+(((IkReal(-1.00000000000000))*(r22)*(x2240)))+(((x2236)*(x2237)))))), ((gconst60)*(((((cj14)*(r20)*(x2238)))+(((r22)*(x2239)))+(((r22)*(x2236)))+(((x2237)*(x2240)))+(((IkReal(-1.00000000000000))*(x2237)*(x2238)))+(((IkReal(-1.00000000000000))*(x2240)*(x2241)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2242=IKsin(j10);
IkReal x2243=IKcos(j10);
IkReal x2244=((IkReal(1.00000000000000))*(sj13));
IkReal x2245=((r11)*(sj9));
IkReal x2246=((cj9)*(r01));
IkReal x2247=((r21)*(sj14));
IkReal x2248=((cj9)*(r02));
IkReal x2249=((sj13)*(sj9));
IkReal x2250=((cj14)*(r10));
IkReal x2251=((IkReal(1.00000000000000))*(cj13));
IkReal x2252=((cj14)*(r20));
IkReal x2253=((cj11)*(x2242));
IkReal x2254=((sj11)*(x2243));
IkReal x2255=((sj14)*(x2251));
IkReal x2256=((sj11)*(x2242));
IkReal x2257=((cj11)*(x2243));
IkReal x2258=((cj14)*(cj9)*(r00));
IkReal x2259=((x2254)+(x2253));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2244)))+(((cj13)*(x2247)))+(((IkReal(-1.00000000000000))*(x2251)*(x2252)))+(x2256)+(((IkReal(-1.00000000000000))*(x2257))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2244)*(x2252)))+(((sj13)*(x2247)))+(x2259)+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2246)*(x2255)))+(((sj13)*(x2248)))+(((IkReal(-1.00000000000000))*(x2245)*(x2255)))+(((cj13)*(x2258)))+(((r12)*(x2249)))+(((cj13)*(sj9)*(x2250)))+(x2259));
evalcond[3]=((((sj13)*(x2258)))+(((IkReal(-1.00000000000000))*(sj14)*(x2244)*(x2246)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2251)))+(((x2249)*(x2250)))+(((IkReal(-1.00000000000000))*(sj14)*(x2244)*(x2245)))+(((IkReal(-1.00000000000000))*(x2256)))+(((IkReal(-1.00000000000000))*(x2248)*(x2251)))+(x2257));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2260=((cj13)*(sj9));
IkReal x2261=((r01)*(sj14));
IkReal x2262=((cj9)*(sj13));
IkReal x2263=((sj13)*(sj9));
IkReal x2264=((cj14)*(r01));
IkReal x2265=((cj14)*(r10));
IkReal x2266=((cj13)*(cj9));
IkReal x2267=((IkReal(1.00000000000000))*(cj9));
IkReal x2268=((sj14)*(sj9));
IkReal x2269=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2270=((sj14)*(x2267));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(-1.00000000000000))+(((r00)*(x2268)))+(((sj9)*(x2264)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2267)))+(((IkReal(-1.00000000000000))*(r10)*(x2270))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x2270)))+(((IkReal(-1.00000000000000))*(r11)*(x2269)))+(((IkReal(-1.00000000000000))*(x2264)*(x2267)))+(((IkReal(-1.00000000000000))*(r10)*(x2268))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x2263)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2266)))+(((r12)*(x2262)))+(((x2260)*(x2261)))+(((x2265)*(x2266)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2260))));
evalcond[6]=((((r02)*(x2260)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2263)))+(((x2262)*(x2265)))+(((x2261)*(x2263)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2262)))+(((IkReal(-1.00000000000000))*(r12)*(x2266))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2271=((IkReal(4.00000000000000))*(cj13));
IkReal x2272=((npy)*(sj14));
IkReal x2273=((cj14)*(npx));
IkReal x2274=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x2272)*(x2274)))+(((x2273)*(x2274)))+(((IkReal(-1.00000000000000))*(npz)*(x2271)))+(((IkReal(-0.360000000000000))*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((x2271)*(x2273)))+(((npz)*(x2274)))+(((IkReal(-1.00000000000000))*(x2271)*(x2272))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x2272)*(x2274)))+(((x2273)*(x2274)))+(((IkReal(-1.00000000000000))*(npz)*(x2271)))+(((IkReal(-0.360000000000000))*(sj13)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((x2271)*(x2273)))+(((npz)*(x2274)))+(((IkReal(-1.00000000000000))*(x2271)*(x2272)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x2272)*(x2274)))+(((x2273)*(x2274)))+(((IkReal(-1.00000000000000))*(npz)*(x2271)))+(((IkReal(-0.360000000000000))*(sj13)))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((x2271)*(x2273)))+(((npz)*(x2274)))+(((IkReal(-1.00000000000000))*(x2271)*(x2272)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x2275=((npy)*(sj14));
IkReal x2276=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((cj13)*(x2275)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x2276)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((sj13)*(x2275)))+(((IkReal(-1.00000000000000))*(sj13)*(x2276)))+(((IkReal(0.250000000000000))*(IKsin(j11)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst63;
gconst63=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2277=((cj13)*(sj14));
IkReal x2278=((IkReal(1.00000000000000))*(cj11));
IkReal x2279=((r11)*(sj9));
IkReal x2280=((IkReal(1.00000000000000))*(sj11));
IkReal x2281=((cj13)*(cj14));
IkReal x2282=((cj11)*(sj13));
IkReal x2283=((r12)*(sj9));
IkReal x2284=((cj9)*(r01));
IkReal x2285=((sj11)*(sj13));
IkReal x2286=((r10)*(sj9));
IkReal x2287=((cj9)*(r00));
IkReal x2288=((cj9)*(r02));
if( IKabs(((gconst63)*(((((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2280)))+(((cj11)*(x2281)*(x2286)))+(((IkReal(-1.00000000000000))*(x2277)*(x2278)*(x2284)))+(((r21)*(sj11)*(x2277)))+(((cj11)*(x2281)*(x2287)))+(((x2282)*(x2283)))+(((IkReal(-1.00000000000000))*(r20)*(x2280)*(x2281)))+(((IkReal(-1.00000000000000))*(x2277)*(x2278)*(x2279)))+(((x2282)*(x2288))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*(((((sj11)*(x2281)*(x2287)))+(((cj11)*(r20)*(x2281)))+(((x2285)*(x2288)))+(((sj11)*(x2281)*(x2286)))+(((r22)*(x2282)))+(((IkReal(-1.00000000000000))*(r21)*(x2277)*(x2278)))+(((IkReal(-1.00000000000000))*(x2277)*(x2280)*(x2284)))+(((IkReal(-1.00000000000000))*(x2277)*(x2279)*(x2280)))+(((x2283)*(x2285))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst63)*(((((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2280)))+(((cj11)*(x2281)*(x2286)))+(((IkReal(-1.00000000000000))*(x2277)*(x2278)*(x2284)))+(((r21)*(sj11)*(x2277)))+(((cj11)*(x2281)*(x2287)))+(((x2282)*(x2283)))+(((IkReal(-1.00000000000000))*(r20)*(x2280)*(x2281)))+(((IkReal(-1.00000000000000))*(x2277)*(x2278)*(x2279)))+(((x2282)*(x2288)))))), ((gconst63)*(((((sj11)*(x2281)*(x2287)))+(((cj11)*(r20)*(x2281)))+(((x2285)*(x2288)))+(((sj11)*(x2281)*(x2286)))+(((r22)*(x2282)))+(((IkReal(-1.00000000000000))*(r21)*(x2277)*(x2278)))+(((IkReal(-1.00000000000000))*(x2277)*(x2280)*(x2284)))+(((IkReal(-1.00000000000000))*(x2277)*(x2279)*(x2280)))+(((x2283)*(x2285)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2289=IKsin(j10);
IkReal x2290=IKcos(j10);
IkReal x2291=((IkReal(1.00000000000000))*(sj13));
IkReal x2292=((r11)*(sj9));
IkReal x2293=((cj9)*(r01));
IkReal x2294=((IkReal(1.00000000000000))*(cj11));
IkReal x2295=((r21)*(sj14));
IkReal x2296=((cj9)*(r02));
IkReal x2297=((sj13)*(sj9));
IkReal x2298=((cj14)*(r10));
IkReal x2299=((IkReal(1.00000000000000))*(cj13));
IkReal x2300=((cj14)*(r20));
IkReal x2301=((sj11)*(x2289));
IkReal x2302=((sj14)*(x2299));
IkReal x2303=((sj11)*(x2290));
IkReal x2304=((cj14)*(cj9)*(r00));
IkReal x2305=((x2290)*(x2294));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2305)))+(((IkReal(-1.00000000000000))*(x2299)*(x2300)))+(((cj13)*(x2295)))+(((IkReal(-1.00000000000000))*(r22)*(x2291)))+(x2301));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2291)*(x2300)))+(((sj13)*(x2295)))+(((IkReal(-1.00000000000000))*(x2303)))+(((IkReal(-1.00000000000000))*(x2289)*(x2294)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(x2304)))+(((cj11)*(x2289)))+(((cj13)*(sj9)*(x2298)))+(((sj13)*(x2296)))+(((r12)*(x2297)))+(((IkReal(-1.00000000000000))*(x2293)*(x2302)))+(((IkReal(-1.00000000000000))*(x2292)*(x2302)))+(x2303));
evalcond[3]=((((sj13)*(x2304)))+(((IkReal(-1.00000000000000))*(sj14)*(x2291)*(x2292)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2299)))+(((IkReal(-1.00000000000000))*(sj14)*(x2291)*(x2293)))+(((IkReal(-1.00000000000000))*(x2305)))+(((IkReal(-1.00000000000000))*(x2296)*(x2299)))+(((x2297)*(x2298)))+(x2301));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2306=((cj13)*(sj11));
IkReal x2307=((cj11)*(cj13));
IkReal x2308=((r21)*(sj14));
IkReal x2309=((cj11)*(sj13));
IkReal x2310=((sj11)*(sj13));
IkReal x2311=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst62)*(((((IkReal(-1.00000000000000))*(x2306)*(x2308)))+(((r22)*(x2310)))+(((cj14)*(r20)*(x2306)))+(((IkReal(-1.00000000000000))*(x2309)*(x2311)))+(((x2308)*(x2309)))+(((r22)*(x2307))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*(((((x2308)*(x2310)))+(((r22)*(x2306)))+(((IkReal(-1.00000000000000))*(x2310)*(x2311)))+(((IkReal(-1.00000000000000))*(x2307)*(x2311)))+(((x2307)*(x2308)))+(((IkReal(-1.00000000000000))*(r22)*(x2309))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst62)*(((((IkReal(-1.00000000000000))*(x2306)*(x2308)))+(((r22)*(x2310)))+(((cj14)*(r20)*(x2306)))+(((IkReal(-1.00000000000000))*(x2309)*(x2311)))+(((x2308)*(x2309)))+(((r22)*(x2307)))))), ((gconst62)*(((((x2308)*(x2310)))+(((r22)*(x2306)))+(((IkReal(-1.00000000000000))*(x2310)*(x2311)))+(((IkReal(-1.00000000000000))*(x2307)*(x2311)))+(((x2307)*(x2308)))+(((IkReal(-1.00000000000000))*(r22)*(x2309)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2312=IKsin(j10);
IkReal x2313=IKcos(j10);
IkReal x2314=((IkReal(1.00000000000000))*(sj13));
IkReal x2315=((r11)*(sj9));
IkReal x2316=((cj9)*(r01));
IkReal x2317=((IkReal(1.00000000000000))*(cj11));
IkReal x2318=((r21)*(sj14));
IkReal x2319=((cj9)*(r02));
IkReal x2320=((sj13)*(sj9));
IkReal x2321=((cj14)*(r10));
IkReal x2322=((IkReal(1.00000000000000))*(cj13));
IkReal x2323=((cj14)*(r20));
IkReal x2324=((sj11)*(x2312));
IkReal x2325=((sj14)*(x2322));
IkReal x2326=((sj11)*(x2313));
IkReal x2327=((cj14)*(cj9)*(r00));
IkReal x2328=((x2313)*(x2317));
evalcond[0]=((x2324)+(((cj13)*(x2318)))+(((IkReal(-1.00000000000000))*(x2328)))+(((IkReal(-1.00000000000000))*(x2322)*(x2323)))+(((IkReal(-1.00000000000000))*(r22)*(x2314))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2314)*(x2323)))+(((IkReal(-1.00000000000000))*(x2312)*(x2317)))+(((sj13)*(x2318)))+(((IkReal(-1.00000000000000))*(x2326)))+(((cj13)*(r22))));
evalcond[2]=((x2326)+(((IkReal(-1.00000000000000))*(x2315)*(x2325)))+(((cj13)*(sj9)*(x2321)))+(((r12)*(x2320)))+(((IkReal(-1.00000000000000))*(x2316)*(x2325)))+(((sj13)*(x2319)))+(((cj13)*(x2327)))+(((cj11)*(x2312))));
evalcond[3]=((x2324)+(((IkReal(-1.00000000000000))*(sj14)*(x2314)*(x2316)))+(((IkReal(-1.00000000000000))*(x2328)))+(((sj13)*(x2327)))+(((x2320)*(x2321)))+(((IkReal(-1.00000000000000))*(sj14)*(x2314)*(x2315)))+(((IkReal(-1.00000000000000))*(x2319)*(x2322)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2322))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2329=((IkReal(4.00000000000000))*(cj13));
IkReal x2330=((npy)*(sj14));
IkReal x2331=((IkReal(4.00000000000000))*(sj13));
IkReal x2332=((cj14)*(npx));
if( IKabs(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(cj12)))+(((IkReal(-0.380000000000000))*(sj12)))+(((x2330)*(x2331)))+(((IkReal(0.360000000000000))*(sj13)))+(((npz)*(x2329)))+(((IkReal(-1.00000000000000))*(x2331)*(x2332))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x2329)*(x2330)))+(((x2329)*(x2332)))+(((npz)*(x2331))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(cj12)))+(((IkReal(-0.380000000000000))*(sj12)))+(((x2330)*(x2331)))+(((IkReal(0.360000000000000))*(sj13)))+(((npz)*(x2329)))+(((IkReal(-1.00000000000000))*(x2331)*(x2332)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x2329)*(x2330)))+(((x2329)*(x2332)))+(((npz)*(x2331)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(cj12)))+(((IkReal(-0.380000000000000))*(sj12)))+(((x2330)*(x2331)))+(((IkReal(0.360000000000000))*(sj13)))+(((npz)*(x2329)))+(((IkReal(-1.00000000000000))*(x2331)*(x2332)))))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x2329)*(x2330)))+(((x2329)*(x2332)))+(((npz)*(x2331)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x2333=IKsin(j11);
IkReal x2334=((IkReal(1.00000000000000))*(sj13));
IkReal x2335=((npy)*(sj14));
IkReal x2336=((cj14)*(npx));
IkReal x2337=((IkReal(0.250000000000000))*(x2333));
evalcond[0]=((((sj12)*(x2337)))+(((cj14)*(npy)))+(((IkReal(-0.0950000000000000))*(cj12)))+(((npx)*(sj14)))+(((IkReal(-0.0300000000000000))*(sj12))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((cj13)*(x2335)))+(((IkReal(-1.00000000000000))*(npz)*(x2334)))+(((IkReal(-1.00000000000000))*(cj13)*(x2336))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj12)*(x2337)))+(((IkReal(-1.00000000000000))*(x2334)*(x2336)))+(((sj13)*(x2335)))+(((cj13)*(npz)))+(((IkReal(0.0300000000000000))*(cj12)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-0.0950000000000000))*(sj12))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11))))));
dummyeval[0]=((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2338=((cj13)*(sj14));
IkReal x2339=((sj14)*(sj9));
IkReal x2340=((r11)*(sj13));
IkReal x2341=((cj13)*(r02));
IkReal x2342=((sj13)*(sj14));
IkReal x2343=((r01)*(sj9));
IkReal x2344=((cj9)*(sj13));
IkReal x2345=((IkReal(1.00000000000000))*(cj9));
IkReal x2346=((r01)*(sj13));
IkReal x2347=((cj14)*(sj13));
IkReal x2348=((IkReal(1.00000000000000))*(npx));
IkReal x2349=((cj14)*(r00));
IkReal x2350=((IkReal(1.00000000000000))*(sj9));
IkReal x2351=((cj14)*(r10));
IkReal x2352=((sj14)*(x2345));
IkReal x2353=((cj13)*(x2350));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(x2348)))+(((npy)*(x2338)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2345)))+(((cj14)*(x2343)))+(((r00)*(x2339)))+(((IkReal(-1.00000000000000))*(r10)*(x2352))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x2347)))+(((r21)*(x2342)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2347)*(x2348)))+(((npy)*(x2342))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(x2338)*(x2345)))+(((x2338)*(x2343)))+(((r12)*(x2344)))+(((cj13)*(cj9)*(x2351)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x2350)))+(((IkReal(-1.00000000000000))*(x2349)*(x2353))));
evalcond[7]=((IkReal(1.00000000000000))+(((x2344)*(x2351)))+(((IkReal(-1.00000000000000))*(x2340)*(x2352)))+(((x2339)*(x2346)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2345)))+(((IkReal(-1.00000000000000))*(r00)*(x2347)*(x2350)))+(((sj9)*(x2341))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r12)*(x2353)))+(((IkReal(-1.00000000000000))*(r01)*(x2342)*(x2345)))+(((x2344)*(x2349)))+(((IkReal(-1.00000000000000))*(x2341)*(x2345)))+(((r10)*(sj9)*(x2347)))+(((IkReal(-1.00000000000000))*(x2339)*(x2340))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2354=((IkReal(1.00000000000000))*(cj11));
IkReal x2355=((r20)*(sj14));
IkReal x2356=((cj14)*(r21));
IkReal x2357=((cj14)*(cj9)*(r01));
IkReal x2358=((r10)*(sj14)*(sj9));
IkReal x2359=((cj9)*(r00)*(sj14));
IkReal x2360=((cj14)*(r11)*(sj9));
if( IKabs(((gconst49)*(((((sj11)*(x2357)))+(((cj11)*(x2355)))+(((cj11)*(x2356)))+(((sj11)*(x2358)))+(((sj11)*(x2359)))+(((sj11)*(x2360))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(x2354)*(x2358)))+(((IkReal(-1.00000000000000))*(x2354)*(x2357)))+(((sj11)*(x2355)))+(((IkReal(-1.00000000000000))*(x2354)*(x2359)))+(((sj11)*(x2356)))+(((IkReal(-1.00000000000000))*(x2354)*(x2360))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst49)*(((((sj11)*(x2357)))+(((cj11)*(x2355)))+(((cj11)*(x2356)))+(((sj11)*(x2358)))+(((sj11)*(x2359)))+(((sj11)*(x2360)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(x2354)*(x2358)))+(((IkReal(-1.00000000000000))*(x2354)*(x2357)))+(((sj11)*(x2355)))+(((IkReal(-1.00000000000000))*(x2354)*(x2359)))+(((sj11)*(x2356)))+(((IkReal(-1.00000000000000))*(x2354)*(x2360)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2361=IKsin(j10);
IkReal x2362=IKcos(j10);
IkReal x2363=((cj13)*(sj14));
IkReal x2364=((cj13)*(cj14));
IkReal x2365=((r10)*(sj9));
IkReal x2366=((IkReal(1.00000000000000))*(cj9));
IkReal x2367=((sj11)*(x2361));
IkReal x2368=((IkReal(1.00000000000000))*(x2362));
IkReal x2369=((cj11)*(x2361));
IkReal x2370=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2371=((cj11)*(x2368));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj11)*(x2368)))+(((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2369))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x2363)))+(x2367)+(((IkReal(-1.00000000000000))*(x2371)))+(((IkReal(-1.00000000000000))*(r20)*(x2364))));
evalcond[2]=((x2367)+(((IkReal(-1.00000000000000))*(x2371)))+(((IkReal(-1.00000000000000))*(cj14)*(x2370)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2366)))+(((IkReal(-1.00000000000000))*(sj14)*(x2365)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2366))));
evalcond[3]=((((cj9)*(r00)*(x2364)))+(x2369)+(((IkReal(-1.00000000000000))*(r01)*(x2363)*(x2366)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x2363)*(x2370)))+(((x2364)*(x2365)))+(((sj11)*(x2362))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2372=((cj11)*(r20));
IkReal x2373=((IkReal(1.00000000000000))*(cj13));
IkReal x2374=((r21)*(sj14));
IkReal x2375=((r22)*(sj13));
IkReal x2376=((r20)*(sj11));
IkReal x2377=((cj14)*(r21));
if( IKabs(((gconst48)*(((((IkReal(-1.00000000000000))*(sj11)*(x2373)*(x2374)))+(((sj14)*(x2372)))+(((cj11)*(x2377)))+(((cj13)*(cj14)*(x2376)))+(((sj11)*(x2375))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((sj11)*(x2377)))+(((sj14)*(x2376)))+(((cj11)*(cj13)*(x2374)))+(((IkReal(-1.00000000000000))*(cj11)*(x2375)))+(((IkReal(-1.00000000000000))*(cj14)*(x2372)*(x2373))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst48)*(((((IkReal(-1.00000000000000))*(sj11)*(x2373)*(x2374)))+(((sj14)*(x2372)))+(((cj11)*(x2377)))+(((cj13)*(cj14)*(x2376)))+(((sj11)*(x2375)))))), ((gconst48)*(((((sj11)*(x2377)))+(((sj14)*(x2376)))+(((cj11)*(cj13)*(x2374)))+(((IkReal(-1.00000000000000))*(cj11)*(x2375)))+(((IkReal(-1.00000000000000))*(cj14)*(x2372)*(x2373)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2378=IKsin(j10);
IkReal x2379=IKcos(j10);
IkReal x2380=((cj13)*(sj14));
IkReal x2381=((cj13)*(cj14));
IkReal x2382=((r10)*(sj9));
IkReal x2383=((IkReal(1.00000000000000))*(cj9));
IkReal x2384=((sj11)*(x2378));
IkReal x2385=((IkReal(1.00000000000000))*(x2379));
IkReal x2386=((cj11)*(x2378));
IkReal x2387=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2388=((cj11)*(x2385));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x2385)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2386))));
evalcond[1]=((x2384)+(((IkReal(-1.00000000000000))*(r20)*(x2381)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2388)))+(((r21)*(x2380))));
evalcond[2]=((x2384)+(((IkReal(-1.00000000000000))*(x2388)))+(((IkReal(-1.00000000000000))*(sj14)*(x2382)))+(((IkReal(-1.00000000000000))*(cj14)*(x2387)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2383)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2383))));
evalcond[3]=((x2386)+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x2380)*(x2383)))+(((IkReal(-1.00000000000000))*(x2380)*(x2387)))+(((x2381)*(x2382)))+(((cj9)*(r00)*(x2381)))+(((sj11)*(x2379))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2389=((cj13)*(sj14));
IkReal x2390=((sj14)*(sj9));
IkReal x2391=((r11)*(sj13));
IkReal x2392=((cj13)*(r02));
IkReal x2393=((sj13)*(sj14));
IkReal x2394=((r01)*(sj9));
IkReal x2395=((cj9)*(sj13));
IkReal x2396=((IkReal(1.00000000000000))*(cj9));
IkReal x2397=((r01)*(sj13));
IkReal x2398=((cj14)*(sj13));
IkReal x2399=((IkReal(1.00000000000000))*(npx));
IkReal x2400=((cj14)*(r00));
IkReal x2401=((IkReal(1.00000000000000))*(sj9));
IkReal x2402=((cj14)*(r10));
IkReal x2403=((sj14)*(x2396));
IkReal x2404=((cj13)*(x2401));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((npy)*(x2389)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(x2399)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x2403)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2396)))+(((cj14)*(x2394)))+(((r00)*(x2390))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x2398)))+(((r21)*(x2393)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0950000000000000))+(((npy)*(x2393)))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(x2398)*(x2399)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[6]=((((x2389)*(x2394)))+(((r12)*(x2395)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x2401)))+(((IkReal(-1.00000000000000))*(r11)*(x2389)*(x2396)))+(((IkReal(-1.00000000000000))*(x2400)*(x2404)))+(((cj13)*(cj9)*(x2402))));
evalcond[7]=((IkReal(-1.00000000000000))+(((x2390)*(x2397)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2396)))+(((IkReal(-1.00000000000000))*(r00)*(x2398)*(x2401)))+(((sj9)*(x2392)))+(((IkReal(-1.00000000000000))*(x2391)*(x2403)))+(((x2395)*(x2402))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x2390)*(x2391)))+(((IkReal(-1.00000000000000))*(r12)*(x2404)))+(((IkReal(-1.00000000000000))*(r01)*(x2393)*(x2396)))+(((IkReal(-1.00000000000000))*(x2392)*(x2396)))+(((x2395)*(x2400)))+(((r10)*(sj9)*(x2398))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2405=((IkReal(1.00000000000000))*(cj14));
IkReal x2406=((sj11)*(sj9));
IkReal x2407=((cj9)*(r01));
IkReal x2408=((cj11)*(cj14));
IkReal x2409=((cj9)*(r00));
IkReal x2410=((r10)*(sj14));
IkReal x2411=((cj11)*(sj14));
IkReal x2412=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(sj11)*(x2405)*(x2407)))+(((IkReal(-1.00000000000000))*(x2409)*(x2412)))+(((IkReal(-1.00000000000000))*(x2406)*(x2410)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x2405)))+(((IkReal(-1.00000000000000))*(r11)*(x2405)*(x2406)))+(((IkReal(-1.00000000000000))*(r20)*(x2411))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((cj11)*(sj9)*(x2410)))+(((x2407)*(x2408)))+(((r11)*(sj9)*(x2408)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x2405)))+(((x2409)*(x2411)))+(((IkReal(-1.00000000000000))*(r20)*(x2412))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(sj11)*(x2405)*(x2407)))+(((IkReal(-1.00000000000000))*(x2409)*(x2412)))+(((IkReal(-1.00000000000000))*(x2406)*(x2410)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x2405)))+(((IkReal(-1.00000000000000))*(r11)*(x2405)*(x2406)))+(((IkReal(-1.00000000000000))*(r20)*(x2411)))))), ((gconst51)*(((((cj11)*(sj9)*(x2410)))+(((x2407)*(x2408)))+(((r11)*(sj9)*(x2408)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x2405)))+(((x2409)*(x2411)))+(((IkReal(-1.00000000000000))*(r20)*(x2412)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2413=IKsin(j10);
IkReal x2414=IKcos(j10);
IkReal x2415=((cj14)*(sj9));
IkReal x2416=((IkReal(1.00000000000000))*(r11));
IkReal x2417=((cj13)*(sj14));
IkReal x2418=((IkReal(1.00000000000000))*(cj9));
IkReal x2419=((cj13)*(cj14));
IkReal x2420=((cj11)*(x2413));
IkReal x2421=((sj11)*(x2414));
IkReal x2422=((cj11)*(x2414));
IkReal x2423=((sj11)*(x2413));
IkReal x2424=((x2420)+(x2421));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x2424));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2422)))+(x2423)+(((IkReal(-1.00000000000000))*(r20)*(x2419)))+(((r21)*(x2417))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x2423)))+(((IkReal(-1.00000000000000))*(x2415)*(x2416)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2418)))+(x2422)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2418))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2417)*(x2418)))+(((cj9)*(r00)*(x2419)))+(((IkReal(-1.00000000000000))*(sj9)*(x2416)*(x2417)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(x2424)+(((cj13)*(r10)*(x2415))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2425=((cj13)*(sj11));
IkReal x2426=((r21)*(sj14));
IkReal x2427=((cj14)*(r20));
IkReal x2428=((cj11)*(cj13));
IkReal x2429=((r22)*(sj13));
IkReal x2430=((r20)*(sj14));
IkReal x2431=((cj14)*(r21));
if( IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(sj11)*(x2429)))+(((IkReal(-1.00000000000000))*(x2425)*(x2427)))+(((cj11)*(x2430)))+(((cj11)*(x2431)))+(((x2425)*(x2426))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((cj11)*(x2429)))+(((IkReal(-1.00000000000000))*(x2426)*(x2428)))+(((x2427)*(x2428)))+(((sj11)*(x2430)))+(((sj11)*(x2431))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst50)*(((((IkReal(-1.00000000000000))*(sj11)*(x2429)))+(((IkReal(-1.00000000000000))*(x2425)*(x2427)))+(((cj11)*(x2430)))+(((cj11)*(x2431)))+(((x2425)*(x2426)))))), ((gconst50)*(((((cj11)*(x2429)))+(((IkReal(-1.00000000000000))*(x2426)*(x2428)))+(((x2427)*(x2428)))+(((sj11)*(x2430)))+(((sj11)*(x2431)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2432=IKsin(j10);
IkReal x2433=IKcos(j10);
IkReal x2434=((cj14)*(sj9));
IkReal x2435=((IkReal(1.00000000000000))*(r11));
IkReal x2436=((cj13)*(sj14));
IkReal x2437=((IkReal(1.00000000000000))*(cj9));
IkReal x2438=((cj13)*(cj14));
IkReal x2439=((cj11)*(x2432));
IkReal x2440=((sj11)*(x2433));
IkReal x2441=((cj11)*(x2433));
IkReal x2442=((sj11)*(x2432));
IkReal x2443=((x2440)+(x2439));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x2443));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2441)))+(((IkReal(-1.00000000000000))*(r20)*(x2438)))+(((r21)*(x2436)))+(x2442));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x2442)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2437)))+(x2441)+(((IkReal(-1.00000000000000))*(x2434)*(x2435)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2437))));
evalcond[3]=((((cj9)*(r00)*(x2438)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r10)*(x2434)))+(x2443)+(((IkReal(-1.00000000000000))*(r01)*(x2436)*(x2437)))+(((IkReal(-1.00000000000000))*(sj9)*(x2435)*(x2436))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2444=((IkReal(1.00000000000000))*(r11));
IkReal x2445=((cj14)*(sj9));
IkReal x2446=((cj13)*(sj14));
IkReal x2447=((sj14)*(sj9));
IkReal x2448=((cj9)*(sj14));
IkReal x2449=((IkReal(1.00000000000000))*(r10));
IkReal x2450=((r02)*(sj9));
IkReal x2451=((cj9)*(sj13));
IkReal x2452=((IkReal(1.00000000000000))*(cj14));
IkReal x2453=((IkReal(1.00000000000000))*(r00));
IkReal x2454=((IkReal(1.00000000000000))*(sj13));
IkReal x2455=((cj14)*(r10));
IkReal x2456=((cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(npz)*(x2454)))+(((IkReal(-1.00000000000000))*(cj13)*(npx)*(x2452)))+(((IkReal(0.0900000000000000))*(cj13)))+(((npy)*(x2446))));
evalcond[4]=((IkReal(1.00000000000000))+(((r00)*(x2447)))+(((r01)*(x2445)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2444)))+(((IkReal(-1.00000000000000))*(x2448)*(x2449))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((npy)*(sj13)*(sj14)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(npx)*(sj13)*(x2452))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2447)*(x2449)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2452)))+(((IkReal(-1.00000000000000))*(x2448)*(x2453)))+(((IkReal(-1.00000000000000))*(x2444)*(x2445))));
evalcond[7]=((((r12)*(x2451)))+(((x2455)*(x2456)))+(((IkReal(-1.00000000000000))*(x2450)*(x2454)))+(((IkReal(-1.00000000000000))*(cj13)*(x2445)*(x2453)))+(((r01)*(sj9)*(x2446)))+(((IkReal(-1.00000000000000))*(cj9)*(x2444)*(x2446))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r12)*(x2456)))+(((r01)*(sj13)*(x2447)))+(((IkReal(-1.00000000000000))*(sj13)*(x2445)*(x2453)))+(((x2451)*(x2455)))+(((IkReal(-1.00000000000000))*(sj13)*(x2444)*(x2448)))+(((cj13)*(x2450))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2457=((cj13)*(sj14));
IkReal x2458=((IkReal(1.00000000000000))*(cj11));
IkReal x2459=((r11)*(sj9));
IkReal x2460=((cj11)*(sj13));
IkReal x2461=((r12)*(sj9));
IkReal x2462=((r10)*(sj9));
IkReal x2463=((sj11)*(sj13));
IkReal x2464=((cj9)*(r02));
IkReal x2465=((cj9)*(r01));
IkReal x2466=((IkReal(1.00000000000000))*(sj11));
IkReal x2467=((cj9)*(r00));
IkReal x2468=((cj13)*(cj14)*(sj11));
IkReal x2469=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(x2457)*(x2458)*(x2459)))+(((x2462)*(x2469)))+(((x2460)*(x2461)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x2466)))+(((IkReal(-1.00000000000000))*(x2457)*(x2458)*(x2465)))+(((IkReal(-1.00000000000000))*(r22)*(x2463)))+(((x2467)*(x2469)))+(((r21)*(sj11)*(x2457)))+(((x2460)*(x2464))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((r22)*(x2460)))+(((x2462)*(x2468)))+(((IkReal(-1.00000000000000))*(x2457)*(x2459)*(x2466)))+(((r20)*(x2469)))+(((IkReal(-1.00000000000000))*(x2457)*(x2465)*(x2466)))+(((x2467)*(x2468)))+(((x2463)*(x2464)))+(((x2461)*(x2463)))+(((IkReal(-1.00000000000000))*(r21)*(x2457)*(x2458))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst53)*(((((IkReal(-1.00000000000000))*(x2457)*(x2458)*(x2459)))+(((x2462)*(x2469)))+(((x2460)*(x2461)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x2466)))+(((IkReal(-1.00000000000000))*(x2457)*(x2458)*(x2465)))+(((IkReal(-1.00000000000000))*(r22)*(x2463)))+(((x2467)*(x2469)))+(((r21)*(sj11)*(x2457)))+(((x2460)*(x2464)))))), ((gconst53)*(((((r22)*(x2460)))+(((x2462)*(x2468)))+(((IkReal(-1.00000000000000))*(x2457)*(x2459)*(x2466)))+(((r20)*(x2469)))+(((IkReal(-1.00000000000000))*(x2457)*(x2465)*(x2466)))+(((x2467)*(x2468)))+(((x2463)*(x2464)))+(((x2461)*(x2463)))+(((IkReal(-1.00000000000000))*(r21)*(x2457)*(x2458)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2470=IKsin(j10);
IkReal x2471=IKcos(j10);
IkReal x2472=((IkReal(1.00000000000000))*(sj13));
IkReal x2473=((r11)*(sj9));
IkReal x2474=((cj9)*(r01));
IkReal x2475=((r21)*(sj14));
IkReal x2476=((cj9)*(r02));
IkReal x2477=((sj13)*(sj9));
IkReal x2478=((cj14)*(r10));
IkReal x2479=((IkReal(1.00000000000000))*(cj13));
IkReal x2480=((cj14)*(r20));
IkReal x2481=((cj11)*(x2470));
IkReal x2482=((sj11)*(x2471));
IkReal x2483=((sj14)*(x2479));
IkReal x2484=((sj11)*(x2470));
IkReal x2485=((cj11)*(x2471));
IkReal x2486=((cj14)*(cj9)*(r00));
IkReal x2487=((x2482)+(x2481));
evalcond[0]=((x2484)+(((cj13)*(x2475)))+(((IkReal(-1.00000000000000))*(x2479)*(x2480)))+(((IkReal(-1.00000000000000))*(r22)*(x2472)))+(((IkReal(-1.00000000000000))*(x2485))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2472)*(x2480)))+(x2487)+(((sj13)*(x2475)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2473)*(x2483)))+(((r12)*(x2477)))+(((sj13)*(x2476)))+(((IkReal(-1.00000000000000))*(x2474)*(x2483)))+(((cj13)*(sj9)*(x2478)))+(x2487)+(((cj13)*(x2486))));
evalcond[3]=((((x2477)*(x2478)))+(((IkReal(-1.00000000000000))*(sj14)*(x2472)*(x2473)))+(x2485)+(((IkReal(-1.00000000000000))*(sj14)*(x2472)*(x2474)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2479)))+(((sj13)*(x2486)))+(((IkReal(-1.00000000000000))*(x2484)))+(((IkReal(-1.00000000000000))*(x2476)*(x2479))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2488=((cj13)*(sj11));
IkReal x2489=((r21)*(sj14));
IkReal x2490=((cj11)*(cj13));
IkReal x2491=((cj11)*(sj13));
IkReal x2492=((sj11)*(sj13));
IkReal x2493=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(r22)*(x2492)))+(((x2489)*(x2491)))+(((x2488)*(x2489)))+(((r22)*(x2490)))+(((IkReal(-1.00000000000000))*(x2488)*(x2493)))+(((IkReal(-1.00000000000000))*(x2491)*(x2493))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((r22)*(x2491)))+(((IkReal(-1.00000000000000))*(x2492)*(x2493)))+(((r22)*(x2488)))+(((cj14)*(r20)*(x2490)))+(((x2489)*(x2492)))+(((IkReal(-1.00000000000000))*(x2489)*(x2490))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst52)*(((((IkReal(-1.00000000000000))*(r22)*(x2492)))+(((x2489)*(x2491)))+(((x2488)*(x2489)))+(((r22)*(x2490)))+(((IkReal(-1.00000000000000))*(x2488)*(x2493)))+(((IkReal(-1.00000000000000))*(x2491)*(x2493)))))), ((gconst52)*(((((r22)*(x2491)))+(((IkReal(-1.00000000000000))*(x2492)*(x2493)))+(((r22)*(x2488)))+(((cj14)*(r20)*(x2490)))+(((x2489)*(x2492)))+(((IkReal(-1.00000000000000))*(x2489)*(x2490)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2494=IKsin(j10);
IkReal x2495=IKcos(j10);
IkReal x2496=((IkReal(1.00000000000000))*(sj13));
IkReal x2497=((r11)*(sj9));
IkReal x2498=((cj9)*(r01));
IkReal x2499=((r21)*(sj14));
IkReal x2500=((cj9)*(r02));
IkReal x2501=((sj13)*(sj9));
IkReal x2502=((cj14)*(r10));
IkReal x2503=((IkReal(1.00000000000000))*(cj13));
IkReal x2504=((cj14)*(r20));
IkReal x2505=((cj11)*(x2494));
IkReal x2506=((sj11)*(x2495));
IkReal x2507=((sj14)*(x2503));
IkReal x2508=((sj11)*(x2494));
IkReal x2509=((cj11)*(x2495));
IkReal x2510=((cj14)*(cj9)*(r00));
IkReal x2511=((x2506)+(x2505));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2496)))+(((cj13)*(x2499)))+(((IkReal(-1.00000000000000))*(x2509)))+(x2508)+(((IkReal(-1.00000000000000))*(x2503)*(x2504))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2496)*(x2504)))+(((sj13)*(x2499)))+(x2511)+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x2502)))+(((sj13)*(x2500)))+(((IkReal(-1.00000000000000))*(x2497)*(x2507)))+(((r12)*(x2501)))+(((cj13)*(x2510)))+(x2511)+(((IkReal(-1.00000000000000))*(x2498)*(x2507))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x2496)*(x2497)))+(((IkReal(-1.00000000000000))*(sj14)*(x2496)*(x2498)))+(((IkReal(-1.00000000000000))*(x2500)*(x2503)))+(((x2501)*(x2502)))+(x2509)+(((IkReal(-1.00000000000000))*(x2508)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2503)))+(((sj13)*(x2510))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2512=((IkReal(1.00000000000000))*(r11));
IkReal x2513=((cj14)*(sj9));
IkReal x2514=((cj13)*(sj14));
IkReal x2515=((sj14)*(sj9));
IkReal x2516=((cj9)*(sj14));
IkReal x2517=((IkReal(1.00000000000000))*(r10));
IkReal x2518=((r02)*(sj9));
IkReal x2519=((cj9)*(sj13));
IkReal x2520=((IkReal(1.00000000000000))*(cj14));
IkReal x2521=((IkReal(1.00000000000000))*(r00));
IkReal x2522=((IkReal(1.00000000000000))*(sj13));
IkReal x2523=((cj14)*(r10));
IkReal x2524=((cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x2522)))+(((IkReal(-1.00000000000000))*(cj13)*(npx)*(x2520)))+(((npy)*(x2514))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2516)*(x2517)))+(((r00)*(x2515)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2512)))+(((r01)*(x2513))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((npy)*(sj13)*(sj14)))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(npx)*(sj13)*(x2520)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2512)*(x2513)))+(((IkReal(-1.00000000000000))*(x2516)*(x2521)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2520)))+(((IkReal(-1.00000000000000))*(x2515)*(x2517))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj13)*(x2513)*(x2521)))+(((r12)*(x2519)))+(((x2523)*(x2524)))+(((IkReal(-1.00000000000000))*(x2518)*(x2522)))+(((r01)*(sj9)*(x2514)))+(((IkReal(-1.00000000000000))*(cj9)*(x2512)*(x2514))));
evalcond[8]=((((r01)*(sj13)*(x2515)))+(((x2519)*(x2523)))+(((IkReal(-1.00000000000000))*(sj13)*(x2513)*(x2521)))+(((cj13)*(x2518)))+(((IkReal(-1.00000000000000))*(r12)*(x2524)))+(((IkReal(-1.00000000000000))*(sj13)*(x2512)*(x2516))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2525=((cj13)*(sj14));
IkReal x2526=((IkReal(1.00000000000000))*(cj11));
IkReal x2527=((r11)*(sj9));
IkReal x2528=((IkReal(1.00000000000000))*(sj11));
IkReal x2529=((cj13)*(cj14));
IkReal x2530=((cj11)*(sj13));
IkReal x2531=((r12)*(sj9));
IkReal x2532=((cj9)*(r01));
IkReal x2533=((sj11)*(sj13));
IkReal x2534=((cj9)*(r02));
IkReal x2535=((r10)*(sj9));
IkReal x2536=((cj9)*(r00));
if( IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(r20)*(x2528)*(x2529)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2528)))+(((cj11)*(x2529)*(x2536)))+(((x2530)*(x2534)))+(((cj11)*(x2529)*(x2535)))+(((IkReal(-1.00000000000000))*(x2525)*(x2526)*(x2527)))+(((IkReal(-1.00000000000000))*(x2525)*(x2526)*(x2532)))+(((x2530)*(x2531)))+(((r21)*(sj11)*(x2525))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(x2525)*(x2527)*(x2528)))+(((sj11)*(x2529)*(x2536)))+(((IkReal(-1.00000000000000))*(r21)*(x2525)*(x2526)))+(((r22)*(x2530)))+(((cj11)*(r20)*(x2529)))+(((IkReal(-1.00000000000000))*(x2525)*(x2528)*(x2532)))+(((x2533)*(x2534)))+(((x2531)*(x2533)))+(((sj11)*(x2529)*(x2535))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst55)*(((((IkReal(-1.00000000000000))*(r20)*(x2528)*(x2529)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2528)))+(((cj11)*(x2529)*(x2536)))+(((x2530)*(x2534)))+(((cj11)*(x2529)*(x2535)))+(((IkReal(-1.00000000000000))*(x2525)*(x2526)*(x2527)))+(((IkReal(-1.00000000000000))*(x2525)*(x2526)*(x2532)))+(((x2530)*(x2531)))+(((r21)*(sj11)*(x2525)))))), ((gconst55)*(((((IkReal(-1.00000000000000))*(x2525)*(x2527)*(x2528)))+(((sj11)*(x2529)*(x2536)))+(((IkReal(-1.00000000000000))*(r21)*(x2525)*(x2526)))+(((r22)*(x2530)))+(((cj11)*(r20)*(x2529)))+(((IkReal(-1.00000000000000))*(x2525)*(x2528)*(x2532)))+(((x2533)*(x2534)))+(((x2531)*(x2533)))+(((sj11)*(x2529)*(x2535)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2537=IKsin(j10);
IkReal x2538=IKcos(j10);
IkReal x2539=((IkReal(1.00000000000000))*(sj13));
IkReal x2540=((r11)*(sj9));
IkReal x2541=((cj9)*(r01));
IkReal x2542=((IkReal(1.00000000000000))*(cj11));
IkReal x2543=((r21)*(sj14));
IkReal x2544=((cj9)*(r02));
IkReal x2545=((sj13)*(sj9));
IkReal x2546=((cj14)*(r10));
IkReal x2547=((IkReal(1.00000000000000))*(cj13));
IkReal x2548=((cj14)*(r20));
IkReal x2549=((sj11)*(x2537));
IkReal x2550=((sj14)*(x2547));
IkReal x2551=((sj11)*(x2538));
IkReal x2552=((cj14)*(cj9)*(r00));
IkReal x2553=((x2538)*(x2542));
evalcond[0]=((((cj13)*(x2543)))+(((IkReal(-1.00000000000000))*(r22)*(x2539)))+(((IkReal(-1.00000000000000))*(x2553)))+(x2549)+(((IkReal(-1.00000000000000))*(x2547)*(x2548))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2551)))+(((IkReal(-1.00000000000000))*(x2539)*(x2548)))+(((sj13)*(x2543)))+(((IkReal(-1.00000000000000))*(x2537)*(x2542)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(x2552)))+(x2551)+(((cj11)*(x2537)))+(((sj13)*(x2544)))+(((IkReal(-1.00000000000000))*(x2540)*(x2550)))+(((r12)*(x2545)))+(((cj13)*(sj9)*(x2546)))+(((IkReal(-1.00000000000000))*(x2541)*(x2550))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2547)))+(((x2545)*(x2546)))+(((IkReal(-1.00000000000000))*(sj14)*(x2539)*(x2541)))+(((IkReal(-1.00000000000000))*(x2544)*(x2547)))+(((IkReal(-1.00000000000000))*(x2553)))+(x2549)+(((IkReal(-1.00000000000000))*(sj14)*(x2539)*(x2540)))+(((sj13)*(x2552))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2554=((cj13)*(sj11));
IkReal x2555=((r21)*(sj14));
IkReal x2556=((cj11)*(cj13));
IkReal x2557=((IkReal(1.00000000000000))*(sj13));
IkReal x2558=((sj11)*(sj13));
IkReal x2559=((cj14)*(r20));
if( IKabs(((gconst54)*(((((r22)*(x2558)))+(((x2554)*(x2559)))+(((cj11)*(sj13)*(x2555)))+(((r22)*(x2556)))+(((IkReal(-1.00000000000000))*(cj11)*(x2557)*(x2559)))+(((IkReal(-1.00000000000000))*(x2554)*(x2555))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((r22)*(x2554)))+(((x2555)*(x2556)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x2557)))+(((x2555)*(x2558)))+(((IkReal(-1.00000000000000))*(sj11)*(x2557)*(x2559)))+(((IkReal(-1.00000000000000))*(x2556)*(x2559))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst54)*(((((r22)*(x2558)))+(((x2554)*(x2559)))+(((cj11)*(sj13)*(x2555)))+(((r22)*(x2556)))+(((IkReal(-1.00000000000000))*(cj11)*(x2557)*(x2559)))+(((IkReal(-1.00000000000000))*(x2554)*(x2555)))))), ((gconst54)*(((((r22)*(x2554)))+(((x2555)*(x2556)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x2557)))+(((x2555)*(x2558)))+(((IkReal(-1.00000000000000))*(sj11)*(x2557)*(x2559)))+(((IkReal(-1.00000000000000))*(x2556)*(x2559)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2560=IKsin(j10);
IkReal x2561=IKcos(j10);
IkReal x2562=((IkReal(1.00000000000000))*(sj13));
IkReal x2563=((r11)*(sj9));
IkReal x2564=((cj9)*(r01));
IkReal x2565=((IkReal(1.00000000000000))*(cj11));
IkReal x2566=((r21)*(sj14));
IkReal x2567=((cj9)*(r02));
IkReal x2568=((sj13)*(sj9));
IkReal x2569=((cj14)*(r10));
IkReal x2570=((IkReal(1.00000000000000))*(cj13));
IkReal x2571=((cj14)*(r20));
IkReal x2572=((sj11)*(x2560));
IkReal x2573=((sj14)*(x2570));
IkReal x2574=((sj11)*(x2561));
IkReal x2575=((cj14)*(cj9)*(r00));
IkReal x2576=((x2561)*(x2565));
evalcond[0]=((((cj13)*(x2566)))+(((IkReal(-1.00000000000000))*(x2576)))+(((IkReal(-1.00000000000000))*(r22)*(x2562)))+(((IkReal(-1.00000000000000))*(x2570)*(x2571)))+(x2572));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2562)*(x2571)))+(((IkReal(-1.00000000000000))*(x2560)*(x2565)))+(((sj13)*(x2566)))+(((IkReal(-1.00000000000000))*(x2574)))+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x2567)))+(((r12)*(x2568)))+(((cj13)*(sj9)*(x2569)))+(((IkReal(-1.00000000000000))*(x2564)*(x2573)))+(((cj11)*(x2560)))+(((cj13)*(x2575)))+(x2574)+(((IkReal(-1.00000000000000))*(x2563)*(x2573))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2570)))+(((IkReal(-1.00000000000000))*(sj14)*(x2562)*(x2564)))+(((IkReal(-1.00000000000000))*(x2576)))+(((sj13)*(x2575)))+(((IkReal(-1.00000000000000))*(x2567)*(x2570)))+(((x2568)*(x2569)))+(((IkReal(-1.00000000000000))*(sj14)*(x2562)*(x2563)))+(x2572));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2577=((r21)*(sj14));
IkReal x2578=((cj12)*(cj13));
IkReal x2579=((sj11)*(sj13));
IkReal x2580=((cj14)*(r20));
IkReal x2581=((IkReal(1.00000000000000))*(sj11));
IkReal x2582=((cj12)*(r22));
IkReal x2583=((IkReal(1.00000000000000))*(cj11));
IkReal x2584=((cj13)*(r22));
IkReal x2585=((sj13)*(x2583));
if( IKabs(((gconst47)*(((((sj11)*(x2578)*(x2580)))+(((IkReal(-1.00000000000000))*(x2583)*(x2584)))+(((IkReal(-1.00000000000000))*(x2577)*(x2578)*(x2581)))+(((cj11)*(sj13)*(x2580)))+(((x2579)*(x2582)))+(((IkReal(-1.00000000000000))*(x2577)*(x2585))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x2581)*(x2584)))+(((IkReal(-1.00000000000000))*(x2582)*(x2585)))+(((IkReal(-1.00000000000000))*(x2578)*(x2580)*(x2583)))+(((cj11)*(x2577)*(x2578)))+(((x2579)*(x2580)))+(((IkReal(-1.00000000000000))*(x2577)*(x2579))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst47)*(((((sj11)*(x2578)*(x2580)))+(((IkReal(-1.00000000000000))*(x2583)*(x2584)))+(((IkReal(-1.00000000000000))*(x2577)*(x2578)*(x2581)))+(((cj11)*(sj13)*(x2580)))+(((x2579)*(x2582)))+(((IkReal(-1.00000000000000))*(x2577)*(x2585)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(x2581)*(x2584)))+(((IkReal(-1.00000000000000))*(x2582)*(x2585)))+(((IkReal(-1.00000000000000))*(x2578)*(x2580)*(x2583)))+(((cj11)*(x2577)*(x2578)))+(((x2579)*(x2580)))+(((IkReal(-1.00000000000000))*(x2577)*(x2579)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x2586=IKsin(j10);
IkReal x2587=IKcos(j10);
IkReal x2588=((IkReal(1.00000000000000))*(cj13));
IkReal x2589=((cj9)*(r02));
IkReal x2590=((IkReal(1.00000000000000))*(sj13));
IkReal x2591=((r11)*(sj9));
IkReal x2592=((IkReal(1.00000000000000))*(cj14));
IkReal x2593=((cj9)*(r01));
IkReal x2594=((r21)*(sj14));
IkReal x2595=((IkReal(1.00000000000000))*(sj12));
IkReal x2596=((r10)*(sj9));
IkReal x2597=((cj14)*(sj13));
IkReal x2598=((cj14)*(r20));
IkReal x2599=((IkReal(1.00000000000000))*(sj14));
IkReal x2600=((r12)*(sj9));
IkReal x2601=((cj13)*(cj14));
IkReal x2602=((cj9)*(r00));
IkReal x2603=((sj11)*(x2586));
IkReal x2604=((cj11)*(x2586));
IkReal x2605=((sj11)*(x2587));
IkReal x2606=((cj11)*(x2587));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2595)*(x2604)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2595)*(x2605)))+(((cj14)*(r21))));
evalcond[1]=((((cj13)*(x2594)))+(((IkReal(-1.00000000000000))*(r22)*(x2590)))+(x2603)+(((IkReal(-1.00000000000000))*(x2588)*(x2598)))+(((IkReal(-1.00000000000000))*(x2606))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2590)*(x2598)))+(((cj12)*(x2604)))+(((sj13)*(x2594)))+(((cj12)*(x2605)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2591)*(x2592)))+(((IkReal(-1.00000000000000))*(x2596)*(x2599)))+(((sj12)*(x2603)))+(((IkReal(-1.00000000000000))*(x2592)*(x2593)))+(((IkReal(-1.00000000000000))*(x2599)*(x2602)))+(((IkReal(-1.00000000000000))*(x2595)*(x2606))));
evalcond[4]=((((x2601)*(x2602)))+(((IkReal(-1.00000000000000))*(sj14)*(x2588)*(x2591)))+(((sj13)*(x2600)))+(x2604)+(x2605)+(((sj13)*(x2589)))+(((IkReal(-1.00000000000000))*(sj14)*(x2588)*(x2593)))+(((x2596)*(x2601))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2588)*(x2589)))+(((IkReal(-1.00000000000000))*(cj12)*(x2603)))+(((IkReal(-1.00000000000000))*(sj14)*(x2590)*(x2593)))+(((x2596)*(x2597)))+(((IkReal(-1.00000000000000))*(sj14)*(x2590)*(x2591)))+(((cj12)*(x2606)))+(((IkReal(-1.00000000000000))*(x2588)*(x2600)))+(((x2597)*(x2602))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2607=((cj11)*(sj12));
IkReal x2608=((r22)*(sj13));
IkReal x2609=((r20)*(sj14));
IkReal x2610=((cj14)*(sj11));
IkReal x2611=((cj13)*(r20));
IkReal x2612=((sj11)*(sj12));
IkReal x2613=((cj13)*(r21)*(sj14));
if( IKabs(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((x2608)*(x2612)))+(((sj12)*(x2610)*(x2611)))+(((cj11)*(x2609)))+(((IkReal(-1.00000000000000))*(x2612)*(x2613))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(cj14)*(x2607)*(x2611)))+(((IkReal(-1.00000000000000))*(x2607)*(x2608)))+(((x2607)*(x2613)))+(((r21)*(x2610)))+(((sj11)*(x2609))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((x2608)*(x2612)))+(((sj12)*(x2610)*(x2611)))+(((cj11)*(x2609)))+(((IkReal(-1.00000000000000))*(x2612)*(x2613)))))), ((gconst46)*(((((IkReal(-1.00000000000000))*(cj14)*(x2607)*(x2611)))+(((IkReal(-1.00000000000000))*(x2607)*(x2608)))+(((x2607)*(x2613)))+(((r21)*(x2610)))+(((sj11)*(x2609)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x2614=IKsin(j10);
IkReal x2615=IKcos(j10);
IkReal x2616=((IkReal(1.00000000000000))*(cj13));
IkReal x2617=((cj9)*(r02));
IkReal x2618=((IkReal(1.00000000000000))*(sj13));
IkReal x2619=((r11)*(sj9));
IkReal x2620=((IkReal(1.00000000000000))*(cj14));
IkReal x2621=((cj9)*(r01));
IkReal x2622=((r21)*(sj14));
IkReal x2623=((IkReal(1.00000000000000))*(sj12));
IkReal x2624=((r10)*(sj9));
IkReal x2625=((cj14)*(sj13));
IkReal x2626=((cj14)*(r20));
IkReal x2627=((IkReal(1.00000000000000))*(sj14));
IkReal x2628=((r12)*(sj9));
IkReal x2629=((cj13)*(cj14));
IkReal x2630=((cj9)*(r00));
IkReal x2631=((sj11)*(x2614));
IkReal x2632=((cj11)*(x2614));
IkReal x2633=((sj11)*(x2615));
IkReal x2634=((cj11)*(x2615));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2623)*(x2632)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2623)*(x2633))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2634)))+(((IkReal(-1.00000000000000))*(x2616)*(x2626)))+(x2631)+(((IkReal(-1.00000000000000))*(r22)*(x2618)))+(((cj13)*(x2622))));
evalcond[2]=((((sj13)*(x2622)))+(((cj12)*(x2633)))+(((cj12)*(x2632)))+(((IkReal(-1.00000000000000))*(x2618)*(x2626)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2619)*(x2620)))+(((IkReal(-1.00000000000000))*(x2623)*(x2634)))+(((sj12)*(x2631)))+(((IkReal(-1.00000000000000))*(x2620)*(x2621)))+(((IkReal(-1.00000000000000))*(x2624)*(x2627)))+(((IkReal(-1.00000000000000))*(x2627)*(x2630))));
evalcond[4]=((((x2629)*(x2630)))+(x2633)+(x2632)+(((x2624)*(x2629)))+(((IkReal(-1.00000000000000))*(sj14)*(x2616)*(x2619)))+(((IkReal(-1.00000000000000))*(sj14)*(x2616)*(x2621)))+(((sj13)*(x2617)))+(((sj13)*(x2628))));
evalcond[5]=((((x2625)*(x2630)))+(((IkReal(-1.00000000000000))*(x2616)*(x2617)))+(((IkReal(-1.00000000000000))*(sj14)*(x2618)*(x2621)))+(((IkReal(-1.00000000000000))*(cj12)*(x2631)))+(((x2624)*(x2625)))+(((IkReal(-1.00000000000000))*(sj14)*(x2618)*(x2619)))+(((cj12)*(x2634)))+(((IkReal(-1.00000000000000))*(x2616)*(x2628))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2635=((IkReal(4.00000000000000))*(sj14));
IkReal x2636=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(npy)*(x2636)))+(((IkReal(-1.00000000000000))*(npx)*(x2635)))+(((IkReal(0.380000000000000))*(cj12)))+(((IkReal(0.120000000000000))*(sj12))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x2636)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2635)))+(((IkReal(4.00000000000000))*(npz)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(npy)*(x2636)))+(((IkReal(-1.00000000000000))*(npx)*(x2635)))+(((IkReal(0.380000000000000))*(cj12)))+(((IkReal(0.120000000000000))*(sj12)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x2636)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2635)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(npy)*(x2636)))+(((IkReal(-1.00000000000000))*(npx)*(x2635)))+(((IkReal(0.380000000000000))*(cj12)))+(((IkReal(0.120000000000000))*(sj12)))))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x2636)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2635)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x2637=IKsin(j11);
IkReal x2638=((IkReal(1.00000000000000))*(sj13));
IkReal x2639=((npy)*(sj14));
IkReal x2640=((cj14)*(npx));
IkReal x2641=((IkReal(0.250000000000000))*(x2637));
evalcond[0]=((((cj14)*(npy)))+(((IkReal(-0.0950000000000000))*(cj12)))+(((sj12)*(x2641)))+(((npx)*(sj14)))+(((IkReal(-0.0300000000000000))*(sj12))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x2638)))+(((IkReal(-1.00000000000000))*(cj13)*(x2640)))+(((cj13)*(x2639))));
evalcond[2]=((((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(x2638)*(x2640)))+(((IkReal(-1.00000000000000))*(cj12)*(x2641)))+(((IkReal(0.0300000000000000))*(cj12)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-0.0950000000000000))*(sj12)))+(((sj13)*(x2639))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11))))));
dummyeval[0]=((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2642=((cj13)*(sj14));
IkReal x2643=((sj14)*(sj9));
IkReal x2644=((r11)*(sj13));
IkReal x2645=((cj13)*(r02));
IkReal x2646=((sj13)*(sj14));
IkReal x2647=((r01)*(sj9));
IkReal x2648=((cj9)*(sj13));
IkReal x2649=((IkReal(1.00000000000000))*(cj9));
IkReal x2650=((r01)*(sj13));
IkReal x2651=((cj14)*(sj13));
IkReal x2652=((IkReal(1.00000000000000))*(npx));
IkReal x2653=((cj14)*(r00));
IkReal x2654=((IkReal(1.00000000000000))*(sj9));
IkReal x2655=((cj14)*(r10));
IkReal x2656=((sj14)*(x2649));
IkReal x2657=((cj13)*(x2654));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(x2652)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((npy)*(x2642))));
evalcond[3]=((((r00)*(x2643)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2649)))+(((IkReal(-1.00000000000000))*(r10)*(x2656)))+(((cj14)*(x2647))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x2651)))+(((r21)*(x2646)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((npy)*(x2646)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2651)*(x2652))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r02)*(sj13)*(x2654)))+(((cj13)*(cj9)*(x2655)))+(((r12)*(x2648)))+(((IkReal(-1.00000000000000))*(r11)*(x2642)*(x2649)))+(((x2642)*(x2647)))+(((IkReal(-1.00000000000000))*(x2653)*(x2657))));
evalcond[7]=((IkReal(1.00000000000000))+(((x2648)*(x2655)))+(((x2643)*(x2650)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2649)))+(((IkReal(-1.00000000000000))*(x2644)*(x2656)))+(((IkReal(-1.00000000000000))*(r00)*(x2651)*(x2654)))+(((sj9)*(x2645))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x2645)*(x2649)))+(((IkReal(-1.00000000000000))*(r01)*(x2646)*(x2649)))+(((x2648)*(x2653)))+(((r10)*(sj9)*(x2651)))+(((IkReal(-1.00000000000000))*(x2643)*(x2644)))+(((IkReal(-1.00000000000000))*(r12)*(x2657))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2658=((IkReal(1.00000000000000))*(cj11));
IkReal x2659=((r20)*(sj14));
IkReal x2660=((cj14)*(r21));
IkReal x2661=((cj14)*(cj9)*(r01));
IkReal x2662=((r10)*(sj14)*(sj9));
IkReal x2663=((cj9)*(r00)*(sj14));
IkReal x2664=((cj14)*(r11)*(sj9));
if( IKabs(((gconst49)*(((((cj11)*(x2660)))+(((sj11)*(x2661)))+(((sj11)*(x2664)))+(((sj11)*(x2662)))+(((sj11)*(x2663)))+(((cj11)*(x2659))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(x2658)*(x2663)))+(((IkReal(-1.00000000000000))*(x2658)*(x2664)))+(((IkReal(-1.00000000000000))*(x2658)*(x2662)))+(((sj11)*(x2660)))+(((IkReal(-1.00000000000000))*(x2658)*(x2661)))+(((sj11)*(x2659))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst49)*(((((cj11)*(x2660)))+(((sj11)*(x2661)))+(((sj11)*(x2664)))+(((sj11)*(x2662)))+(((sj11)*(x2663)))+(((cj11)*(x2659)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(x2658)*(x2663)))+(((IkReal(-1.00000000000000))*(x2658)*(x2664)))+(((IkReal(-1.00000000000000))*(x2658)*(x2662)))+(((sj11)*(x2660)))+(((IkReal(-1.00000000000000))*(x2658)*(x2661)))+(((sj11)*(x2659)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2665=IKsin(j10);
IkReal x2666=IKcos(j10);
IkReal x2667=((cj13)*(sj14));
IkReal x2668=((cj13)*(cj14));
IkReal x2669=((r10)*(sj9));
IkReal x2670=((IkReal(1.00000000000000))*(cj9));
IkReal x2671=((sj11)*(x2665));
IkReal x2672=((IkReal(1.00000000000000))*(x2666));
IkReal x2673=((cj11)*(x2665));
IkReal x2674=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2675=((cj11)*(x2672));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2673)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x2672))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x2668)))+(((r21)*(x2667)))+(x2671)+(((IkReal(-1.00000000000000))*(x2675))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x2674)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2670)))+(x2671)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2670)))+(((IkReal(-1.00000000000000))*(x2675)))+(((IkReal(-1.00000000000000))*(sj14)*(x2669))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2667)*(x2670)))+(((sj11)*(x2666)))+(((IkReal(-1.00000000000000))*(x2667)*(x2674)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((x2668)*(x2669)))+(x2673)+(((cj9)*(r00)*(x2668))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2676=((cj11)*(r20));
IkReal x2677=((IkReal(1.00000000000000))*(cj13));
IkReal x2678=((r21)*(sj14));
IkReal x2679=((r22)*(sj13));
IkReal x2680=((r20)*(sj11));
IkReal x2681=((cj14)*(r21));
if( IKabs(((gconst48)*(((((cj11)*(x2681)))+(((IkReal(-1.00000000000000))*(sj11)*(x2677)*(x2678)))+(((sj11)*(x2679)))+(((sj14)*(x2676)))+(((cj13)*(cj14)*(x2680))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((IkReal(-1.00000000000000))*(cj11)*(x2679)))+(((sj14)*(x2680)))+(((cj11)*(cj13)*(x2678)))+(((IkReal(-1.00000000000000))*(cj14)*(x2676)*(x2677)))+(((sj11)*(x2681))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst48)*(((((cj11)*(x2681)))+(((IkReal(-1.00000000000000))*(sj11)*(x2677)*(x2678)))+(((sj11)*(x2679)))+(((sj14)*(x2676)))+(((cj13)*(cj14)*(x2680)))))), ((gconst48)*(((((IkReal(-1.00000000000000))*(cj11)*(x2679)))+(((sj14)*(x2680)))+(((cj11)*(cj13)*(x2678)))+(((IkReal(-1.00000000000000))*(cj14)*(x2676)*(x2677)))+(((sj11)*(x2681)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2682=IKsin(j10);
IkReal x2683=IKcos(j10);
IkReal x2684=((cj13)*(sj14));
IkReal x2685=((cj13)*(cj14));
IkReal x2686=((r10)*(sj9));
IkReal x2687=((IkReal(1.00000000000000))*(cj9));
IkReal x2688=((sj11)*(x2682));
IkReal x2689=((IkReal(1.00000000000000))*(x2683));
IkReal x2690=((cj11)*(x2682));
IkReal x2691=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2692=((cj11)*(x2689));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2690)))+(((IkReal(-1.00000000000000))*(sj11)*(x2689))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2692)))+(((IkReal(-1.00000000000000))*(r20)*(x2685)))+(((r21)*(x2684)))+(x2688));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2692)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2687)))+(((IkReal(-1.00000000000000))*(sj14)*(x2686)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2687)))+(x2688)+(((IkReal(-1.00000000000000))*(cj14)*(x2691))));
evalcond[3]=((x2690)+(((x2685)*(x2686)))+(((IkReal(-1.00000000000000))*(r01)*(x2684)*(x2687)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x2684)*(x2691)))+(((cj9)*(r00)*(x2685)))+(((sj11)*(x2683))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2693=((cj13)*(sj14));
IkReal x2694=((sj14)*(sj9));
IkReal x2695=((r11)*(sj13));
IkReal x2696=((cj13)*(r02));
IkReal x2697=((sj13)*(sj14));
IkReal x2698=((r01)*(sj9));
IkReal x2699=((cj9)*(sj13));
IkReal x2700=((IkReal(1.00000000000000))*(cj9));
IkReal x2701=((r01)*(sj13));
IkReal x2702=((cj14)*(sj13));
IkReal x2703=((IkReal(1.00000000000000))*(npx));
IkReal x2704=((cj14)*(r00));
IkReal x2705=((IkReal(1.00000000000000))*(sj9));
IkReal x2706=((cj14)*(r10));
IkReal x2707=((sj14)*(x2700));
IkReal x2708=((cj13)*(x2705));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(x2703)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((npy)*(x2693))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2700)))+(((IkReal(-1.00000000000000))*(r10)*(x2707)))+(((r00)*(x2694)))+(((cj14)*(x2698))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x2702)))+(((r21)*(x2697)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0950000000000000))+(((npy)*(x2697)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x2702)*(x2703))));
evalcond[6]=((((r12)*(x2699)))+(((IkReal(-1.00000000000000))*(r11)*(x2693)*(x2700)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x2705)))+(((x2693)*(x2698)))+(((cj13)*(cj9)*(x2706)))+(((IkReal(-1.00000000000000))*(x2704)*(x2708))));
evalcond[7]=((IkReal(-1.00000000000000))+(((sj9)*(x2696)))+(((IkReal(-1.00000000000000))*(x2695)*(x2707)))+(((IkReal(-1.00000000000000))*(r00)*(x2702)*(x2705)))+(((x2694)*(x2701)))+(((x2699)*(x2706)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x2700))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x2696)*(x2700)))+(((IkReal(-1.00000000000000))*(x2694)*(x2695)))+(((r10)*(sj9)*(x2702)))+(((x2699)*(x2704)))+(((IkReal(-1.00000000000000))*(r12)*(x2708)))+(((IkReal(-1.00000000000000))*(r01)*(x2697)*(x2700))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2709=((IkReal(1.00000000000000))*(cj14));
IkReal x2710=((sj11)*(sj9));
IkReal x2711=((cj9)*(r01));
IkReal x2712=((cj11)*(cj14));
IkReal x2713=((cj9)*(r00));
IkReal x2714=((r10)*(sj14));
IkReal x2715=((cj11)*(sj14));
IkReal x2716=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(cj11)*(r21)*(x2709)))+(((IkReal(-1.00000000000000))*(x2713)*(x2716)))+(((IkReal(-1.00000000000000))*(x2710)*(x2714)))+(((IkReal(-1.00000000000000))*(r11)*(x2709)*(x2710)))+(((IkReal(-1.00000000000000))*(sj11)*(x2709)*(x2711)))+(((IkReal(-1.00000000000000))*(r20)*(x2715))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((r11)*(sj9)*(x2712)))+(((x2711)*(x2712)))+(((IkReal(-1.00000000000000))*(r20)*(x2716)))+(((cj11)*(sj9)*(x2714)))+(((x2713)*(x2715)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x2709))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(cj11)*(r21)*(x2709)))+(((IkReal(-1.00000000000000))*(x2713)*(x2716)))+(((IkReal(-1.00000000000000))*(x2710)*(x2714)))+(((IkReal(-1.00000000000000))*(r11)*(x2709)*(x2710)))+(((IkReal(-1.00000000000000))*(sj11)*(x2709)*(x2711)))+(((IkReal(-1.00000000000000))*(r20)*(x2715)))))), ((gconst51)*(((((r11)*(sj9)*(x2712)))+(((x2711)*(x2712)))+(((IkReal(-1.00000000000000))*(r20)*(x2716)))+(((cj11)*(sj9)*(x2714)))+(((x2713)*(x2715)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x2709)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2717=IKsin(j10);
IkReal x2718=IKcos(j10);
IkReal x2719=((cj14)*(sj9));
IkReal x2720=((IkReal(1.00000000000000))*(r11));
IkReal x2721=((cj13)*(sj14));
IkReal x2722=((IkReal(1.00000000000000))*(cj9));
IkReal x2723=((cj13)*(cj14));
IkReal x2724=((cj11)*(x2717));
IkReal x2725=((sj11)*(x2718));
IkReal x2726=((cj11)*(x2718));
IkReal x2727=((sj11)*(x2717));
IkReal x2728=((x2725)+(x2724));
evalcond[0]=((((r20)*(sj14)))+(x2728)+(((cj14)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x2727)+(((r21)*(x2721)))+(((IkReal(-1.00000000000000))*(r20)*(x2723)))+(((IkReal(-1.00000000000000))*(x2726))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2719)*(x2720)))+(((IkReal(-1.00000000000000))*(x2727)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(x2726)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2722)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2722))));
evalcond[3]=((x2728)+(((IkReal(-1.00000000000000))*(r01)*(x2721)*(x2722)))+(((cj13)*(r10)*(x2719)))+(((cj9)*(r00)*(x2723)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(sj9)*(x2720)*(x2721))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2729=((cj13)*(sj11));
IkReal x2730=((r21)*(sj14));
IkReal x2731=((cj14)*(r20));
IkReal x2732=((cj11)*(cj13));
IkReal x2733=((r22)*(sj13));
IkReal x2734=((r20)*(sj14));
IkReal x2735=((cj14)*(r21));
if( IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(sj11)*(x2733)))+(((IkReal(-1.00000000000000))*(x2729)*(x2731)))+(((x2729)*(x2730)))+(((cj11)*(x2735)))+(((cj11)*(x2734))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((sj11)*(x2735)))+(((IkReal(-1.00000000000000))*(x2730)*(x2732)))+(((sj11)*(x2734)))+(((x2731)*(x2732)))+(((cj11)*(x2733))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst50)*(((((IkReal(-1.00000000000000))*(sj11)*(x2733)))+(((IkReal(-1.00000000000000))*(x2729)*(x2731)))+(((x2729)*(x2730)))+(((cj11)*(x2735)))+(((cj11)*(x2734)))))), ((gconst50)*(((((sj11)*(x2735)))+(((IkReal(-1.00000000000000))*(x2730)*(x2732)))+(((sj11)*(x2734)))+(((x2731)*(x2732)))+(((cj11)*(x2733)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2736=IKsin(j10);
IkReal x2737=IKcos(j10);
IkReal x2738=((cj14)*(sj9));
IkReal x2739=((IkReal(1.00000000000000))*(r11));
IkReal x2740=((cj13)*(sj14));
IkReal x2741=((IkReal(1.00000000000000))*(cj9));
IkReal x2742=((cj13)*(cj14));
IkReal x2743=((cj11)*(x2736));
IkReal x2744=((sj11)*(x2737));
IkReal x2745=((cj11)*(x2737));
IkReal x2746=((sj11)*(x2736));
IkReal x2747=((x2743)+(x2744));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x2747));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x2745)))+(((IkReal(-1.00000000000000))*(r20)*(x2742)))+(((r21)*(x2740)))+(x2746));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2741)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2741)))+(((IkReal(-1.00000000000000))*(x2746)))+(((IkReal(-1.00000000000000))*(x2738)*(x2739)))+(x2745));
evalcond[3]=((((cj9)*(r00)*(x2742)))+(((cj13)*(r10)*(x2738)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(sj9)*(x2739)*(x2740)))+(x2747)+(((IkReal(-1.00000000000000))*(r01)*(x2740)*(x2741))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2748=((IkReal(1.00000000000000))*(r11));
IkReal x2749=((cj14)*(sj9));
IkReal x2750=((cj13)*(sj14));
IkReal x2751=((sj14)*(sj9));
IkReal x2752=((cj9)*(sj14));
IkReal x2753=((IkReal(1.00000000000000))*(r10));
IkReal x2754=((r02)*(sj9));
IkReal x2755=((cj9)*(sj13));
IkReal x2756=((IkReal(1.00000000000000))*(cj14));
IkReal x2757=((IkReal(1.00000000000000))*(r00));
IkReal x2758=((IkReal(1.00000000000000))*(sj13));
IkReal x2759=((cj14)*(r10));
IkReal x2760=((cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(x2758)))+(((npy)*(x2750)))+(((IkReal(-1.00000000000000))*(cj13)*(npx)*(x2756))));
evalcond[4]=((IkReal(1.00000000000000))+(((r01)*(x2749)))+(((r00)*(x2751)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2748)))+(((IkReal(-1.00000000000000))*(x2752)*(x2753))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((npy)*(sj13)*(sj14)))+(((IkReal(-1.00000000000000))*(npx)*(sj13)*(x2756)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2751)*(x2753)))+(((IkReal(-1.00000000000000))*(x2752)*(x2757)))+(((IkReal(-1.00000000000000))*(x2748)*(x2749)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2756))));
evalcond[7]=((((r12)*(x2755)))+(((r01)*(sj9)*(x2750)))+(((IkReal(-1.00000000000000))*(cj9)*(x2748)*(x2750)))+(((x2759)*(x2760)))+(((IkReal(-1.00000000000000))*(cj13)*(x2749)*(x2757)))+(((IkReal(-1.00000000000000))*(x2754)*(x2758))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r12)*(x2760)))+(((IkReal(-1.00000000000000))*(sj13)*(x2748)*(x2752)))+(((cj13)*(x2754)))+(((r01)*(sj13)*(x2751)))+(((x2755)*(x2759)))+(((IkReal(-1.00000000000000))*(sj13)*(x2749)*(x2757))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2761=((cj13)*(sj14));
IkReal x2762=((IkReal(1.00000000000000))*(cj11));
IkReal x2763=((r11)*(sj9));
IkReal x2764=((cj11)*(sj13));
IkReal x2765=((r12)*(sj9));
IkReal x2766=((r10)*(sj9));
IkReal x2767=((sj11)*(sj13));
IkReal x2768=((cj9)*(r02));
IkReal x2769=((cj9)*(r01));
IkReal x2770=((IkReal(1.00000000000000))*(sj11));
IkReal x2771=((cj9)*(r00));
IkReal x2772=((cj13)*(cj14)*(sj11));
IkReal x2773=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst53)*(((((x2771)*(x2773)))+(((r21)*(sj11)*(x2761)))+(((x2764)*(x2768)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x2770)))+(((x2764)*(x2765)))+(((IkReal(-1.00000000000000))*(r22)*(x2767)))+(((IkReal(-1.00000000000000))*(x2761)*(x2762)*(x2763)))+(((x2766)*(x2773)))+(((IkReal(-1.00000000000000))*(x2761)*(x2762)*(x2769))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((x2767)*(x2768)))+(((IkReal(-1.00000000000000))*(x2761)*(x2763)*(x2770)))+(((r20)*(x2773)))+(((r22)*(x2764)))+(((x2765)*(x2767)))+(((IkReal(-1.00000000000000))*(x2761)*(x2769)*(x2770)))+(((x2766)*(x2772)))+(((IkReal(-1.00000000000000))*(r21)*(x2761)*(x2762)))+(((x2771)*(x2772))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst53)*(((((x2771)*(x2773)))+(((r21)*(sj11)*(x2761)))+(((x2764)*(x2768)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x2770)))+(((x2764)*(x2765)))+(((IkReal(-1.00000000000000))*(r22)*(x2767)))+(((IkReal(-1.00000000000000))*(x2761)*(x2762)*(x2763)))+(((x2766)*(x2773)))+(((IkReal(-1.00000000000000))*(x2761)*(x2762)*(x2769)))))), ((gconst53)*(((((x2767)*(x2768)))+(((IkReal(-1.00000000000000))*(x2761)*(x2763)*(x2770)))+(((r20)*(x2773)))+(((r22)*(x2764)))+(((x2765)*(x2767)))+(((IkReal(-1.00000000000000))*(x2761)*(x2769)*(x2770)))+(((x2766)*(x2772)))+(((IkReal(-1.00000000000000))*(r21)*(x2761)*(x2762)))+(((x2771)*(x2772)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2774=IKsin(j10);
IkReal x2775=IKcos(j10);
IkReal x2776=((IkReal(1.00000000000000))*(sj13));
IkReal x2777=((r11)*(sj9));
IkReal x2778=((cj9)*(r01));
IkReal x2779=((r21)*(sj14));
IkReal x2780=((cj9)*(r02));
IkReal x2781=((sj13)*(sj9));
IkReal x2782=((cj14)*(r10));
IkReal x2783=((IkReal(1.00000000000000))*(cj13));
IkReal x2784=((cj14)*(r20));
IkReal x2785=((cj11)*(x2774));
IkReal x2786=((sj11)*(x2775));
IkReal x2787=((sj14)*(x2783));
IkReal x2788=((sj11)*(x2774));
IkReal x2789=((cj11)*(x2775));
IkReal x2790=((cj14)*(cj9)*(r00));
IkReal x2791=((x2785)+(x2786));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2776)))+(((cj13)*(x2779)))+(((IkReal(-1.00000000000000))*(x2783)*(x2784)))+(x2788)+(((IkReal(-1.00000000000000))*(x2789))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2776)*(x2784)))+(((sj13)*(x2779)))+(x2791)+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x2780)))+(((cj13)*(x2790)))+(((r12)*(x2781)))+(x2791)+(((cj13)*(sj9)*(x2782)))+(((IkReal(-1.00000000000000))*(x2778)*(x2787)))+(((IkReal(-1.00000000000000))*(x2777)*(x2787))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2788)))+(((x2781)*(x2782)))+(((IkReal(-1.00000000000000))*(sj14)*(x2776)*(x2777)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2783)))+(((IkReal(-1.00000000000000))*(x2780)*(x2783)))+(((IkReal(-1.00000000000000))*(sj14)*(x2776)*(x2778)))+(x2789)+(((sj13)*(x2790))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2792=((cj13)*(sj11));
IkReal x2793=((r21)*(sj14));
IkReal x2794=((cj11)*(cj13));
IkReal x2795=((cj11)*(sj13));
IkReal x2796=((sj11)*(sj13));
IkReal x2797=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(x2795)*(x2797)))+(((IkReal(-1.00000000000000))*(r22)*(x2796)))+(((IkReal(-1.00000000000000))*(x2792)*(x2797)))+(((x2792)*(x2793)))+(((x2793)*(x2795)))+(((r22)*(x2794))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((r22)*(x2792)))+(((IkReal(-1.00000000000000))*(x2796)*(x2797)))+(((IkReal(-1.00000000000000))*(x2793)*(x2794)))+(((r22)*(x2795)))+(((cj14)*(r20)*(x2794)))+(((x2793)*(x2796))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst52)*(((((IkReal(-1.00000000000000))*(x2795)*(x2797)))+(((IkReal(-1.00000000000000))*(r22)*(x2796)))+(((IkReal(-1.00000000000000))*(x2792)*(x2797)))+(((x2792)*(x2793)))+(((x2793)*(x2795)))+(((r22)*(x2794)))))), ((gconst52)*(((((r22)*(x2792)))+(((IkReal(-1.00000000000000))*(x2796)*(x2797)))+(((IkReal(-1.00000000000000))*(x2793)*(x2794)))+(((r22)*(x2795)))+(((cj14)*(r20)*(x2794)))+(((x2793)*(x2796)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2798=IKsin(j10);
IkReal x2799=IKcos(j10);
IkReal x2800=((IkReal(1.00000000000000))*(sj13));
IkReal x2801=((r11)*(sj9));
IkReal x2802=((cj9)*(r01));
IkReal x2803=((r21)*(sj14));
IkReal x2804=((cj9)*(r02));
IkReal x2805=((sj13)*(sj9));
IkReal x2806=((cj14)*(r10));
IkReal x2807=((IkReal(1.00000000000000))*(cj13));
IkReal x2808=((cj14)*(r20));
IkReal x2809=((cj11)*(x2798));
IkReal x2810=((sj11)*(x2799));
IkReal x2811=((sj14)*(x2807));
IkReal x2812=((sj11)*(x2798));
IkReal x2813=((cj11)*(x2799));
IkReal x2814=((cj14)*(cj9)*(r00));
IkReal x2815=((x2810)+(x2809));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2800)))+(((IkReal(-1.00000000000000))*(x2807)*(x2808)))+(((cj13)*(x2803)))+(x2812)+(((IkReal(-1.00000000000000))*(x2813))));
evalcond[1]=((x2815)+(((IkReal(-1.00000000000000))*(x2800)*(x2808)))+(((sj13)*(x2803)))+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(x2814)))+(((IkReal(-1.00000000000000))*(x2801)*(x2811)))+(((r12)*(x2805)))+(((cj13)*(sj9)*(x2806)))+(x2815)+(((sj13)*(x2804)))+(((IkReal(-1.00000000000000))*(x2802)*(x2811))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x2800)*(x2802)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2807)))+(((x2805)*(x2806)))+(((sj13)*(x2814)))+(((IkReal(-1.00000000000000))*(sj14)*(x2800)*(x2801)))+(((IkReal(-1.00000000000000))*(x2804)*(x2807)))+(x2813)+(((IkReal(-1.00000000000000))*(x2812))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2816=((IkReal(1.00000000000000))*(r11));
IkReal x2817=((cj14)*(sj9));
IkReal x2818=((cj13)*(sj14));
IkReal x2819=((sj14)*(sj9));
IkReal x2820=((cj9)*(sj14));
IkReal x2821=((IkReal(1.00000000000000))*(r10));
IkReal x2822=((r02)*(sj9));
IkReal x2823=((cj9)*(sj13));
IkReal x2824=((IkReal(1.00000000000000))*(cj14));
IkReal x2825=((IkReal(1.00000000000000))*(r00));
IkReal x2826=((IkReal(1.00000000000000))*(sj13));
IkReal x2827=((cj14)*(r10));
IkReal x2828=((cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((npy)*(x2818)))+(((IkReal(-1.00000000000000))*(npz)*(x2826)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npx)*(x2824))));
evalcond[4]=((IkReal(-1.00000000000000))+(((r01)*(x2817)))+(((r00)*(x2819)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2816)))+(((IkReal(-1.00000000000000))*(x2820)*(x2821))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((npy)*(sj13)*(sj14)))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(npx)*(sj13)*(x2824)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2824)))+(((IkReal(-1.00000000000000))*(x2819)*(x2821)))+(((IkReal(-1.00000000000000))*(x2820)*(x2825)))+(((IkReal(-1.00000000000000))*(x2816)*(x2817))));
evalcond[7]=((((r01)*(sj9)*(x2818)))+(((x2827)*(x2828)))+(((IkReal(-1.00000000000000))*(cj13)*(x2817)*(x2825)))+(((IkReal(-1.00000000000000))*(cj9)*(x2816)*(x2818)))+(((r12)*(x2823)))+(((IkReal(-1.00000000000000))*(x2822)*(x2826))));
evalcond[8]=((((cj13)*(x2822)))+(((x2823)*(x2827)))+(((IkReal(-1.00000000000000))*(sj13)*(x2816)*(x2820)))+(((r01)*(sj13)*(x2819)))+(((IkReal(-1.00000000000000))*(sj13)*(x2817)*(x2825)))+(((IkReal(-1.00000000000000))*(r12)*(x2828))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2829=((cj13)*(sj14));
IkReal x2830=((IkReal(1.00000000000000))*(cj11));
IkReal x2831=((r11)*(sj9));
IkReal x2832=((IkReal(1.00000000000000))*(sj11));
IkReal x2833=((cj13)*(cj14));
IkReal x2834=((cj11)*(sj13));
IkReal x2835=((r12)*(sj9));
IkReal x2836=((cj9)*(r01));
IkReal x2837=((sj11)*(sj13));
IkReal x2838=((cj9)*(r02));
IkReal x2839=((r10)*(sj9));
IkReal x2840=((cj9)*(r00));
if( IKabs(((gconst55)*(((((cj11)*(x2833)*(x2840)))+(((x2834)*(x2838)))+(((cj11)*(x2833)*(x2839)))+(((IkReal(-1.00000000000000))*(r20)*(x2832)*(x2833)))+(((r21)*(sj11)*(x2829)))+(((IkReal(-1.00000000000000))*(x2829)*(x2830)*(x2836)))+(((IkReal(-1.00000000000000))*(x2829)*(x2830)*(x2831)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2832)))+(((x2834)*(x2835))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(x2829)*(x2831)*(x2832)))+(((r22)*(x2834)))+(((IkReal(-1.00000000000000))*(x2829)*(x2832)*(x2836)))+(((sj11)*(x2833)*(x2840)))+(((sj11)*(x2833)*(x2839)))+(((x2837)*(x2838)))+(((cj11)*(r20)*(x2833)))+(((x2835)*(x2837)))+(((IkReal(-1.00000000000000))*(r21)*(x2829)*(x2830))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst55)*(((((cj11)*(x2833)*(x2840)))+(((x2834)*(x2838)))+(((cj11)*(x2833)*(x2839)))+(((IkReal(-1.00000000000000))*(r20)*(x2832)*(x2833)))+(((r21)*(sj11)*(x2829)))+(((IkReal(-1.00000000000000))*(x2829)*(x2830)*(x2836)))+(((IkReal(-1.00000000000000))*(x2829)*(x2830)*(x2831)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x2832)))+(((x2834)*(x2835)))))), ((gconst55)*(((((IkReal(-1.00000000000000))*(x2829)*(x2831)*(x2832)))+(((r22)*(x2834)))+(((IkReal(-1.00000000000000))*(x2829)*(x2832)*(x2836)))+(((sj11)*(x2833)*(x2840)))+(((sj11)*(x2833)*(x2839)))+(((x2837)*(x2838)))+(((cj11)*(r20)*(x2833)))+(((x2835)*(x2837)))+(((IkReal(-1.00000000000000))*(r21)*(x2829)*(x2830)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2841=IKsin(j10);
IkReal x2842=IKcos(j10);
IkReal x2843=((IkReal(1.00000000000000))*(sj13));
IkReal x2844=((r11)*(sj9));
IkReal x2845=((cj9)*(r01));
IkReal x2846=((IkReal(1.00000000000000))*(cj11));
IkReal x2847=((r21)*(sj14));
IkReal x2848=((cj9)*(r02));
IkReal x2849=((sj13)*(sj9));
IkReal x2850=((cj14)*(r10));
IkReal x2851=((IkReal(1.00000000000000))*(cj13));
IkReal x2852=((cj14)*(r20));
IkReal x2853=((sj11)*(x2841));
IkReal x2854=((sj14)*(x2851));
IkReal x2855=((sj11)*(x2842));
IkReal x2856=((cj14)*(cj9)*(r00));
IkReal x2857=((x2842)*(x2846));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2843)))+(((IkReal(-1.00000000000000))*(x2857)))+(x2853)+(((cj13)*(x2847)))+(((IkReal(-1.00000000000000))*(x2851)*(x2852))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2855)))+(((IkReal(-1.00000000000000))*(x2841)*(x2846)))+(((IkReal(-1.00000000000000))*(x2843)*(x2852)))+(((sj13)*(x2847)))+(((cj13)*(r22))));
evalcond[2]=((((cj11)*(x2841)))+(((r12)*(x2849)))+(x2855)+(((sj13)*(x2848)))+(((IkReal(-1.00000000000000))*(x2844)*(x2854)))+(((cj13)*(x2856)))+(((IkReal(-1.00000000000000))*(x2845)*(x2854)))+(((cj13)*(sj9)*(x2850))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x2843)*(x2845)))+(((IkReal(-1.00000000000000))*(x2848)*(x2851)))+(((IkReal(-1.00000000000000))*(x2857)))+(x2853)+(((x2849)*(x2850)))+(((sj13)*(x2856)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2851)))+(((IkReal(-1.00000000000000))*(sj14)*(x2843)*(x2844))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2858=((cj13)*(sj11));
IkReal x2859=((r21)*(sj14));
IkReal x2860=((cj11)*(cj13));
IkReal x2861=((IkReal(1.00000000000000))*(sj13));
IkReal x2862=((sj11)*(sj13));
IkReal x2863=((cj14)*(r20));
if( IKabs(((gconst54)*(((((x2858)*(x2863)))+(((r22)*(x2860)))+(((IkReal(-1.00000000000000))*(cj11)*(x2861)*(x2863)))+(((r22)*(x2862)))+(((IkReal(-1.00000000000000))*(x2858)*(x2859)))+(((cj11)*(sj13)*(x2859))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((x2859)*(x2862)))+(((IkReal(-1.00000000000000))*(sj11)*(x2861)*(x2863)))+(((IkReal(-1.00000000000000))*(x2860)*(x2863)))+(((r22)*(x2858)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x2861)))+(((x2859)*(x2860))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst54)*(((((x2858)*(x2863)))+(((r22)*(x2860)))+(((IkReal(-1.00000000000000))*(cj11)*(x2861)*(x2863)))+(((r22)*(x2862)))+(((IkReal(-1.00000000000000))*(x2858)*(x2859)))+(((cj11)*(sj13)*(x2859)))))), ((gconst54)*(((((x2859)*(x2862)))+(((IkReal(-1.00000000000000))*(sj11)*(x2861)*(x2863)))+(((IkReal(-1.00000000000000))*(x2860)*(x2863)))+(((r22)*(x2858)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x2861)))+(((x2859)*(x2860)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2864=IKsin(j10);
IkReal x2865=IKcos(j10);
IkReal x2866=((IkReal(1.00000000000000))*(sj13));
IkReal x2867=((r11)*(sj9));
IkReal x2868=((cj9)*(r01));
IkReal x2869=((IkReal(1.00000000000000))*(cj11));
IkReal x2870=((r21)*(sj14));
IkReal x2871=((cj9)*(r02));
IkReal x2872=((sj13)*(sj9));
IkReal x2873=((cj14)*(r10));
IkReal x2874=((IkReal(1.00000000000000))*(cj13));
IkReal x2875=((cj14)*(r20));
IkReal x2876=((sj11)*(x2864));
IkReal x2877=((sj14)*(x2874));
IkReal x2878=((sj11)*(x2865));
IkReal x2879=((cj14)*(cj9)*(r00));
IkReal x2880=((x2865)*(x2869));
evalcond[0]=((x2876)+(((IkReal(-1.00000000000000))*(r22)*(x2866)))+(((IkReal(-1.00000000000000))*(x2874)*(x2875)))+(((cj13)*(x2870)))+(((IkReal(-1.00000000000000))*(x2880))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2878)))+(((IkReal(-1.00000000000000))*(x2866)*(x2875)))+(((IkReal(-1.00000000000000))*(x2864)*(x2869)))+(((sj13)*(x2870)))+(((cj13)*(r22))));
evalcond[2]=((x2878)+(((IkReal(-1.00000000000000))*(x2868)*(x2877)))+(((cj13)*(x2879)))+(((cj13)*(sj9)*(x2873)))+(((IkReal(-1.00000000000000))*(x2867)*(x2877)))+(((r12)*(x2872)))+(((cj11)*(x2864)))+(((sj13)*(x2871))));
evalcond[3]=((((sj13)*(x2879)))+(x2876)+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x2874)))+(((x2872)*(x2873)))+(((IkReal(-1.00000000000000))*(sj14)*(x2866)*(x2868)))+(((IkReal(-1.00000000000000))*(sj14)*(x2866)*(x2867)))+(((IkReal(-1.00000000000000))*(x2871)*(x2874)))+(((IkReal(-1.00000000000000))*(x2880))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2881=((r21)*(sj14));
IkReal x2882=((cj12)*(cj13));
IkReal x2883=((sj11)*(sj13));
IkReal x2884=((cj14)*(r20));
IkReal x2885=((IkReal(1.00000000000000))*(sj11));
IkReal x2886=((cj12)*(r22));
IkReal x2887=((IkReal(1.00000000000000))*(cj11));
IkReal x2888=((cj13)*(r22));
IkReal x2889=((sj13)*(x2887));
if( IKabs(((gconst47)*(((((sj11)*(x2882)*(x2884)))+(((IkReal(-1.00000000000000))*(x2881)*(x2889)))+(((IkReal(-1.00000000000000))*(x2887)*(x2888)))+(((IkReal(-1.00000000000000))*(x2881)*(x2882)*(x2885)))+(((cj11)*(sj13)*(x2884)))+(((x2883)*(x2886))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x2886)*(x2889)))+(((IkReal(-1.00000000000000))*(x2881)*(x2883)))+(((IkReal(-1.00000000000000))*(x2882)*(x2884)*(x2887)))+(((x2883)*(x2884)))+(((IkReal(-1.00000000000000))*(x2885)*(x2888)))+(((cj11)*(x2881)*(x2882))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst47)*(((((sj11)*(x2882)*(x2884)))+(((IkReal(-1.00000000000000))*(x2881)*(x2889)))+(((IkReal(-1.00000000000000))*(x2887)*(x2888)))+(((IkReal(-1.00000000000000))*(x2881)*(x2882)*(x2885)))+(((cj11)*(sj13)*(x2884)))+(((x2883)*(x2886)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(x2886)*(x2889)))+(((IkReal(-1.00000000000000))*(x2881)*(x2883)))+(((IkReal(-1.00000000000000))*(x2882)*(x2884)*(x2887)))+(((x2883)*(x2884)))+(((IkReal(-1.00000000000000))*(x2885)*(x2888)))+(((cj11)*(x2881)*(x2882)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x2890=IKsin(j10);
IkReal x2891=IKcos(j10);
IkReal x2892=((IkReal(1.00000000000000))*(cj13));
IkReal x2893=((cj9)*(r02));
IkReal x2894=((IkReal(1.00000000000000))*(sj13));
IkReal x2895=((r11)*(sj9));
IkReal x2896=((IkReal(1.00000000000000))*(cj14));
IkReal x2897=((cj9)*(r01));
IkReal x2898=((r21)*(sj14));
IkReal x2899=((IkReal(1.00000000000000))*(sj12));
IkReal x2900=((r10)*(sj9));
IkReal x2901=((cj14)*(sj13));
IkReal x2902=((cj14)*(r20));
IkReal x2903=((IkReal(1.00000000000000))*(sj14));
IkReal x2904=((r12)*(sj9));
IkReal x2905=((cj13)*(cj14));
IkReal x2906=((cj9)*(r00));
IkReal x2907=((sj11)*(x2890));
IkReal x2908=((cj11)*(x2890));
IkReal x2909=((sj11)*(x2891));
IkReal x2910=((cj11)*(x2891));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2899)*(x2908)))+(((IkReal(-1.00000000000000))*(x2899)*(x2909)))+(((cj14)*(r21))));
evalcond[1]=((((cj13)*(x2898)))+(((IkReal(-1.00000000000000))*(x2892)*(x2902)))+(x2907)+(((IkReal(-1.00000000000000))*(r22)*(x2894)))+(((IkReal(-1.00000000000000))*(x2910))));
evalcond[2]=((((cj12)*(x2909)))+(((cj12)*(x2908)))+(((sj13)*(x2898)))+(((IkReal(-1.00000000000000))*(x2894)*(x2902)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2895)*(x2896)))+(((IkReal(-1.00000000000000))*(x2896)*(x2897)))+(((IkReal(-1.00000000000000))*(x2899)*(x2910)))+(((IkReal(-1.00000000000000))*(x2900)*(x2903)))+(((sj12)*(x2907)))+(((IkReal(-1.00000000000000))*(x2903)*(x2906))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj14)*(x2892)*(x2897)))+(((sj13)*(x2893)))+(((x2900)*(x2905)))+(((IkReal(-1.00000000000000))*(sj14)*(x2892)*(x2895)))+(x2909)+(x2908)+(((x2905)*(x2906)))+(((sj13)*(x2904))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2892)*(x2904)))+(((cj12)*(x2910)))+(((IkReal(-1.00000000000000))*(x2892)*(x2893)))+(((x2901)*(x2906)))+(((IkReal(-1.00000000000000))*(sj14)*(x2894)*(x2897)))+(((IkReal(-1.00000000000000))*(sj14)*(x2894)*(x2895)))+(((x2900)*(x2901)))+(((IkReal(-1.00000000000000))*(cj12)*(x2907))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2911=((cj11)*(sj12));
IkReal x2912=((r22)*(sj13));
IkReal x2913=((r20)*(sj14));
IkReal x2914=((cj14)*(sj11));
IkReal x2915=((cj13)*(r20));
IkReal x2916=((sj11)*(sj12));
IkReal x2917=((cj13)*(r21)*(sj14));
if( IKabs(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((x2912)*(x2916)))+(((IkReal(-1.00000000000000))*(x2916)*(x2917)))+(((cj11)*(x2913)))+(((sj12)*(x2914)*(x2915))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((r21)*(x2914)))+(((sj11)*(x2913)))+(((IkReal(-1.00000000000000))*(cj14)*(x2911)*(x2915)))+(((IkReal(-1.00000000000000))*(x2911)*(x2912)))+(((x2911)*(x2917))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((x2912)*(x2916)))+(((IkReal(-1.00000000000000))*(x2916)*(x2917)))+(((cj11)*(x2913)))+(((sj12)*(x2914)*(x2915)))))), ((gconst46)*(((((r21)*(x2914)))+(((sj11)*(x2913)))+(((IkReal(-1.00000000000000))*(cj14)*(x2911)*(x2915)))+(((IkReal(-1.00000000000000))*(x2911)*(x2912)))+(((x2911)*(x2917)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x2918=IKsin(j10);
IkReal x2919=IKcos(j10);
IkReal x2920=((IkReal(1.00000000000000))*(cj13));
IkReal x2921=((cj9)*(r02));
IkReal x2922=((IkReal(1.00000000000000))*(sj13));
IkReal x2923=((r11)*(sj9));
IkReal x2924=((IkReal(1.00000000000000))*(cj14));
IkReal x2925=((cj9)*(r01));
IkReal x2926=((r21)*(sj14));
IkReal x2927=((IkReal(1.00000000000000))*(sj12));
IkReal x2928=((r10)*(sj9));
IkReal x2929=((cj14)*(sj13));
IkReal x2930=((cj14)*(r20));
IkReal x2931=((IkReal(1.00000000000000))*(sj14));
IkReal x2932=((r12)*(sj9));
IkReal x2933=((cj13)*(cj14));
IkReal x2934=((cj9)*(r00));
IkReal x2935=((sj11)*(x2918));
IkReal x2936=((cj11)*(x2918));
IkReal x2937=((sj11)*(x2919));
IkReal x2938=((cj11)*(x2919));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2927)*(x2936)))+(((IkReal(-1.00000000000000))*(x2927)*(x2937)))+(((cj14)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2920)*(x2930)))+(x2935)+(((IkReal(-1.00000000000000))*(x2938)))+(((cj13)*(x2926)))+(((IkReal(-1.00000000000000))*(r22)*(x2922))));
evalcond[2]=((((cj12)*(x2936)))+(((cj12)*(x2937)))+(((IkReal(-1.00000000000000))*(x2922)*(x2930)))+(((sj13)*(x2926)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2924)*(x2925)))+(((sj12)*(x2935)))+(((IkReal(-1.00000000000000))*(x2931)*(x2934)))+(((IkReal(-1.00000000000000))*(x2927)*(x2938)))+(((IkReal(-1.00000000000000))*(x2923)*(x2924)))+(((IkReal(-1.00000000000000))*(x2928)*(x2931))));
evalcond[4]=((((sj13)*(x2932)))+(x2936)+(x2937)+(((x2928)*(x2933)))+(((sj13)*(x2921)))+(((x2933)*(x2934)))+(((IkReal(-1.00000000000000))*(sj14)*(x2920)*(x2923)))+(((IkReal(-1.00000000000000))*(sj14)*(x2920)*(x2925))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj12)*(x2935)))+(((IkReal(-1.00000000000000))*(sj14)*(x2922)*(x2925)))+(((x2929)*(x2934)))+(((cj12)*(x2938)))+(((IkReal(-1.00000000000000))*(x2920)*(x2932)))+(((x2928)*(x2929)))+(((IkReal(-1.00000000000000))*(sj14)*(x2922)*(x2923)))+(((IkReal(-1.00000000000000))*(x2920)*(x2921))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x2939=((cj12)*(cj13));
IkReal x2940=((cj12)*(sj13));
IkReal x2941=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(r11)*(x2939)*(x2941)))+(((cj14)*(r10)*(x2939)))+(((r12)*(x2940))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((cj14)*(r00)*(x2939)))+(((IkReal(-1.00000000000000))*(r01)*(x2939)*(x2941)))+(((r02)*(x2940))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j9array[0]=IKatan2(((gconst0)*(((((IkReal(-1.00000000000000))*(r11)*(x2939)*(x2941)))+(((cj14)*(r10)*(x2939)))+(((r12)*(x2940)))))), ((gconst0)*(((((cj14)*(r00)*(x2939)))+(((IkReal(-1.00000000000000))*(r01)*(x2939)*(x2941)))+(((r02)*(x2940)))))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[3];
IkReal x2942=IKsin(j9);
IkReal x2943=IKcos(j9);
IkReal x2944=((IkReal(1.00000000000000))*(sj14));
IkReal x2945=((sj13)*(x2943));
IkReal x2946=((cj13)*(x2942));
IkReal x2947=((IkReal(1.00000000000000))*(cj14)*(r00));
IkReal x2948=((r01)*(x2942));
IkReal x2949=((r10)*(x2943));
IkReal x2950=((sj13)*(x2942));
IkReal x2951=((cj13)*(x2943));
evalcond[0]=((((cj14)*(x2948)))+(cj12)+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2943)))+(((r00)*(sj14)*(x2942)))+(((IkReal(-1.00000000000000))*(x2944)*(x2949))));
evalcond[1]=((((r01)*(sj14)*(x2946)))+(((IkReal(-1.00000000000000))*(r11)*(x2944)*(x2951)))+(((cj13)*(cj14)*(x2949)))+(((r12)*(x2945)))+(((IkReal(-1.00000000000000))*(x2946)*(x2947)))+(((IkReal(-1.00000000000000))*(r02)*(x2950))));
evalcond[2]=((((cj14)*(r10)*(x2945)))+(((r02)*(x2946)))+(((IkReal(-1.00000000000000))*(r12)*(x2951)))+(((sj13)*(sj14)*(x2948)))+(((IkReal(-1.00000000000000))*(r11)*(x2944)*(x2945)))+(sj12)+(((IkReal(-1.00000000000000))*(x2947)*(x2950))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2952=((r11)*(sj13));
IkReal x2953=((cj13)*(sj9));
IkReal x2954=((sj13)*(sj14));
IkReal x2955=((cj9)*(sj13));
IkReal x2956=((r01)*(sj9));
IkReal x2957=((cj13)*(cj9));
IkReal x2958=((IkReal(1.00000000000000))*(r02));
IkReal x2959=((cj14)*(sj13));
IkReal x2960=((cj14)*(r00));
IkReal x2961=((IkReal(1.00000000000000))*(r12));
IkReal x2962=((r00)*(sj9));
IkReal x2963=((cj14)*(r10));
IkReal x2964=((IkReal(1.00000000000000))*(cj9)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((sj14)*(x2962)))+(((cj14)*(x2956)))+(((IkReal(-1.00000000000000))*(r10)*(x2964)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11))));
evalcond[2]=((((r21)*(x2954)))+(((IkReal(-1.00000000000000))*(r20)*(x2959)))+(((cj13)*(r22))));
evalcond[3]=((IkReal(-0.0950000000000000))+(((npy)*(x2954)))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(npx)*(x2959)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2957)))+(((r01)*(sj14)*(x2953)))+(((IkReal(-1.00000000000000))*(sj13)*(sj9)*(x2958)))+(((x2957)*(x2963)))+(((IkReal(-1.00000000000000))*(x2953)*(x2960)))+(((r12)*(x2955))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x2959)*(x2962)))+(((IkReal(-1.00000000000000))*(x2952)*(x2964)))+(((x2955)*(x2963)))+(((IkReal(-1.00000000000000))*(x2957)*(x2961)))+(((r02)*(x2953)))+(((x2954)*(x2956))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj14)*(sj9)*(x2952)))+(((r10)*(sj9)*(x2959)))+(((IkReal(-1.00000000000000))*(x2953)*(x2961)))+(((IkReal(-1.00000000000000))*(x2957)*(x2958)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2954)))+(((x2955)*(x2960))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2965=((IkReal(4.00000000000000))*(sj14));
IkReal x2966=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x2965)))+(((IkReal(-1.00000000000000))*(npy)*(x2966))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x2966)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2965))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x2965)))+(((IkReal(-1.00000000000000))*(npy)*(x2966)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x2966)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2965)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x2965)))+(((IkReal(-1.00000000000000))*(npy)*(x2966)))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x2966)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x2965)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((IkReal(0.250000000000000))*(IKsin(j11))))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(npx)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((cj13)*(npy)*(sj14))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst57;
gconst57=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2967=((IkReal(1.00000000000000))*(cj11));
IkReal x2968=((r20)*(sj14));
IkReal x2969=((cj14)*(r21));
IkReal x2970=((cj14)*(cj9)*(r01));
IkReal x2971=((r10)*(sj14)*(sj9));
IkReal x2972=((cj9)*(r00)*(sj14));
IkReal x2973=((cj14)*(r11)*(sj9));
if( IKabs(((gconst57)*(((((cj11)*(x2968)))+(((sj11)*(x2971)))+(((sj11)*(x2970)))+(((cj11)*(x2969)))+(((sj11)*(x2973)))+(((sj11)*(x2972))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst57)*(((((IkReal(-1.00000000000000))*(x2967)*(x2971)))+(((sj11)*(x2969)))+(((IkReal(-1.00000000000000))*(x2967)*(x2973)))+(((IkReal(-1.00000000000000))*(x2967)*(x2972)))+(((sj11)*(x2968)))+(((IkReal(-1.00000000000000))*(x2967)*(x2970))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst57)*(((((cj11)*(x2968)))+(((sj11)*(x2971)))+(((sj11)*(x2970)))+(((cj11)*(x2969)))+(((sj11)*(x2973)))+(((sj11)*(x2972)))))), ((gconst57)*(((((IkReal(-1.00000000000000))*(x2967)*(x2971)))+(((sj11)*(x2969)))+(((IkReal(-1.00000000000000))*(x2967)*(x2973)))+(((IkReal(-1.00000000000000))*(x2967)*(x2972)))+(((sj11)*(x2968)))+(((IkReal(-1.00000000000000))*(x2967)*(x2970)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2974=IKsin(j10);
IkReal x2975=IKcos(j10);
IkReal x2976=((cj13)*(sj14));
IkReal x2977=((cj13)*(cj14));
IkReal x2978=((r10)*(sj9));
IkReal x2979=((IkReal(1.00000000000000))*(cj9));
IkReal x2980=((sj11)*(x2974));
IkReal x2981=((IkReal(1.00000000000000))*(x2975));
IkReal x2982=((cj11)*(x2974));
IkReal x2983=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x2984=((cj11)*(x2981));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj11)*(x2981)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2982)))+(((cj14)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2984)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x2976)))+(x2980)+(((IkReal(-1.00000000000000))*(r20)*(x2977))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2984)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2979)))+(((IkReal(-1.00000000000000))*(cj14)*(x2983)))+(x2980)+(((IkReal(-1.00000000000000))*(sj14)*(x2978)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2979))));
evalcond[3]=((((x2977)*(x2978)))+(x2982)+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x2976)*(x2979)))+(((cj9)*(r00)*(x2977)))+(((IkReal(-1.00000000000000))*(x2976)*(x2983)))+(((sj11)*(x2975))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x2985=((r20)*(sj14));
IkReal x2986=((IkReal(1.00000000000000))*(cj13));
IkReal x2987=((cj14)*(r20));
IkReal x2988=((r21)*(sj14));
IkReal x2989=((r22)*(sj13));
IkReal x2990=((cj14)*(r21));
if( IKabs(((gconst56)*(((((cj11)*(x2990)))+(((cj13)*(sj11)*(x2987)))+(((cj11)*(x2985)))+(((IkReal(-1.00000000000000))*(sj11)*(x2986)*(x2988)))+(((sj11)*(x2989))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((sj11)*(x2985)))+(((sj11)*(x2990)))+(((IkReal(-1.00000000000000))*(cj11)*(x2989)))+(((IkReal(-1.00000000000000))*(cj11)*(x2986)*(x2987)))+(((cj11)*(cj13)*(x2988))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst56)*(((((cj11)*(x2990)))+(((cj13)*(sj11)*(x2987)))+(((cj11)*(x2985)))+(((IkReal(-1.00000000000000))*(sj11)*(x2986)*(x2988)))+(((sj11)*(x2989)))))), ((gconst56)*(((((sj11)*(x2985)))+(((sj11)*(x2990)))+(((IkReal(-1.00000000000000))*(cj11)*(x2989)))+(((IkReal(-1.00000000000000))*(cj11)*(x2986)*(x2987)))+(((cj11)*(cj13)*(x2988)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x2991=IKsin(j10);
IkReal x2992=IKcos(j10);
IkReal x2993=((cj13)*(sj14));
IkReal x2994=((cj13)*(cj14));
IkReal x2995=((r10)*(sj9));
IkReal x2996=((IkReal(1.00000000000000))*(cj9));
IkReal x2997=((sj11)*(x2991));
IkReal x2998=((IkReal(1.00000000000000))*(x2992));
IkReal x2999=((cj11)*(x2991));
IkReal x3000=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x3001=((cj11)*(x2998));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x2998)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x2999))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x2997)+(((IkReal(-1.00000000000000))*(x3001)))+(((IkReal(-1.00000000000000))*(r20)*(x2994)))+(((r21)*(x2993))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2996)))+(((IkReal(-1.00000000000000))*(sj14)*(x2995)))+(x2997)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2996)))+(((IkReal(-1.00000000000000))*(x3001)))+(((IkReal(-1.00000000000000))*(cj14)*(x3000))));
evalcond[3]=((x2999)+(((IkReal(-1.00000000000000))*(r01)*(x2993)*(x2996)))+(((cj9)*(r00)*(x2994)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((x2994)*(x2995)))+(((sj11)*(x2992)))+(((IkReal(-1.00000000000000))*(x2993)*(x3000))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x3002=((r11)*(sj13));
IkReal x3003=((cj13)*(sj9));
IkReal x3004=((sj13)*(sj14));
IkReal x3005=((cj9)*(sj13));
IkReal x3006=((r01)*(sj9));
IkReal x3007=((cj13)*(cj9));
IkReal x3008=((IkReal(1.00000000000000))*(r02));
IkReal x3009=((cj14)*(sj13));
IkReal x3010=((cj14)*(r00));
IkReal x3011=((IkReal(1.00000000000000))*(r12));
IkReal x3012=((r00)*(sj9));
IkReal x3013=((cj14)*(r10));
IkReal x3014=((IkReal(1.00000000000000))*(cj9)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x3014)))+(((cj14)*(x3006)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((sj14)*(x3012))));
evalcond[2]=((((r21)*(x3004)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x3009))));
evalcond[3]=((IkReal(0.0950000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x3009)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((npy)*(x3004))));
evalcond[4]=((((r12)*(x3005)))+(((IkReal(-1.00000000000000))*(x3003)*(x3010)))+(((x3007)*(x3013)))+(((IkReal(-1.00000000000000))*(sj13)*(sj9)*(x3008)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3007)))+(((r01)*(sj14)*(x3003))));
evalcond[5]=((IkReal(-1.00000000000000))+(((x3005)*(x3013)))+(((IkReal(-1.00000000000000))*(x3009)*(x3012)))+(((IkReal(-1.00000000000000))*(x3007)*(x3011)))+(((x3004)*(x3006)))+(((IkReal(-1.00000000000000))*(x3002)*(x3014)))+(((r02)*(x3003))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3004)))+(((IkReal(-1.00000000000000))*(x3003)*(x3011)))+(((r10)*(sj9)*(x3009)))+(((IkReal(-1.00000000000000))*(sj14)*(sj9)*(x3002)))+(((x3005)*(x3010)))+(((IkReal(-1.00000000000000))*(x3007)*(x3008))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x3015=((IkReal(4.00000000000000))*(sj14));
IkReal x3016=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((IkReal(0.120000000000000))+(((npx)*(x3015)))+(((npy)*(x3016))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x3015)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x3016))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((npx)*(x3015)))+(((npy)*(x3016)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x3015)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x3016)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((npx)*(x3015)))+(((npy)*(x3016)))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x3015)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))+(((cj13)*(npx)*(x3016)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0300000000000000))+(((cj14)*(npy)))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((npx)*(sj14))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(npx)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((cj13)*(npy)*(sj14))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst58;
gconst58=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3017=((IkReal(1.00000000000000))*(cj14));
IkReal x3018=((sj11)*(sj9));
IkReal x3019=((cj9)*(r01));
IkReal x3020=((cj11)*(cj14));
IkReal x3021=((cj9)*(r00));
IkReal x3022=((r10)*(sj14));
IkReal x3023=((cj11)*(sj14));
IkReal x3024=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(r11)*(x3017)*(x3018)))+(((IkReal(-1.00000000000000))*(sj11)*(x3017)*(x3019)))+(((IkReal(-1.00000000000000))*(x3018)*(x3022)))+(((IkReal(-1.00000000000000))*(r20)*(x3023)))+(((IkReal(-1.00000000000000))*(x3021)*(x3024)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x3017))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(((((cj11)*(sj9)*(x3022)))+(((x3021)*(x3023)))+(((IkReal(-1.00000000000000))*(r20)*(x3024)))+(((r11)*(sj9)*(x3020)))+(((x3019)*(x3020)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x3017))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst59)*(((((IkReal(-1.00000000000000))*(r11)*(x3017)*(x3018)))+(((IkReal(-1.00000000000000))*(sj11)*(x3017)*(x3019)))+(((IkReal(-1.00000000000000))*(x3018)*(x3022)))+(((IkReal(-1.00000000000000))*(r20)*(x3023)))+(((IkReal(-1.00000000000000))*(x3021)*(x3024)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x3017)))))), ((gconst59)*(((((cj11)*(sj9)*(x3022)))+(((x3021)*(x3023)))+(((IkReal(-1.00000000000000))*(r20)*(x3024)))+(((r11)*(sj9)*(x3020)))+(((x3019)*(x3020)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x3017)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3025=IKsin(j10);
IkReal x3026=IKcos(j10);
IkReal x3027=((cj14)*(sj9));
IkReal x3028=((IkReal(1.00000000000000))*(r11));
IkReal x3029=((cj13)*(sj14));
IkReal x3030=((IkReal(1.00000000000000))*(cj9));
IkReal x3031=((cj13)*(cj14));
IkReal x3032=((cj11)*(x3025));
IkReal x3033=((sj11)*(x3026));
IkReal x3034=((cj11)*(x3026));
IkReal x3035=((sj11)*(x3025));
IkReal x3036=((x3032)+(x3033));
evalcond[0]=((((r20)*(sj14)))+(x3036)+(((cj14)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x3029)))+(x3035)+(((IkReal(-1.00000000000000))*(x3034)))+(((IkReal(-1.00000000000000))*(r20)*(x3031))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3035)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x3027)*(x3028)))+(x3034)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3030)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3030))));
evalcond[3]=((((cj9)*(r00)*(x3031)))+(x3036)+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(sj9)*(x3028)*(x3029)))+(((cj13)*(r10)*(x3027)))+(((IkReal(-1.00000000000000))*(r01)*(x3029)*(x3030))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3037=((cj13)*(sj11));
IkReal x3038=((r21)*(sj14));
IkReal x3039=((cj14)*(r20));
IkReal x3040=((cj11)*(cj13));
IkReal x3041=((r22)*(sj13));
IkReal x3042=((r20)*(sj14));
IkReal x3043=((cj14)*(r21));
if( IKabs(((gconst58)*(((((cj11)*(x3043)))+(((x3037)*(x3038)))+(((IkReal(-1.00000000000000))*(x3037)*(x3039)))+(((IkReal(-1.00000000000000))*(sj11)*(x3041)))+(((cj11)*(x3042))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst58)*(((((cj11)*(x3041)))+(((IkReal(-1.00000000000000))*(x3038)*(x3040)))+(((x3039)*(x3040)))+(((sj11)*(x3043)))+(((sj11)*(x3042))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst58)*(((((cj11)*(x3043)))+(((x3037)*(x3038)))+(((IkReal(-1.00000000000000))*(x3037)*(x3039)))+(((IkReal(-1.00000000000000))*(sj11)*(x3041)))+(((cj11)*(x3042)))))), ((gconst58)*(((((cj11)*(x3041)))+(((IkReal(-1.00000000000000))*(x3038)*(x3040)))+(((x3039)*(x3040)))+(((sj11)*(x3043)))+(((sj11)*(x3042)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3044=IKsin(j10);
IkReal x3045=IKcos(j10);
IkReal x3046=((cj14)*(sj9));
IkReal x3047=((IkReal(1.00000000000000))*(r11));
IkReal x3048=((cj13)*(sj14));
IkReal x3049=((IkReal(1.00000000000000))*(cj9));
IkReal x3050=((cj13)*(cj14));
IkReal x3051=((cj11)*(x3044));
IkReal x3052=((sj11)*(x3045));
IkReal x3053=((cj11)*(x3045));
IkReal x3054=((sj11)*(x3044));
IkReal x3055=((x3052)+(x3051));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x3055));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x3048)))+(((IkReal(-1.00000000000000))*(x3053)))+(x3054)+(((IkReal(-1.00000000000000))*(r20)*(x3050))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3054)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3049)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(x3046)*(x3047)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3049)))+(x3053));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj9)*(x3047)*(x3048)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(x3055)+(((IkReal(-1.00000000000000))*(r01)*(x3048)*(x3049)))+(((cj13)*(r10)*(x3046)))+(((cj9)*(r00)*(x3050))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x3056=((cj13)*(sj9));
IkReal x3057=((r01)*(sj14));
IkReal x3058=((cj9)*(sj13));
IkReal x3059=((sj13)*(sj9));
IkReal x3060=((cj14)*(r01));
IkReal x3061=((cj14)*(r10));
IkReal x3062=((cj13)*(cj9));
IkReal x3063=((IkReal(1.00000000000000))*(cj9));
IkReal x3064=((sj14)*(sj9));
IkReal x3065=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3066=((sj14)*(x3063));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(1.00000000000000))+(((sj9)*(x3060)))+(((r00)*(x3064)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3063)))+(((IkReal(-1.00000000000000))*(r10)*(x3066))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x3066)))+(((IkReal(-1.00000000000000))*(r10)*(x3064)))+(((IkReal(-1.00000000000000))*(r11)*(x3065)))+(((IkReal(-1.00000000000000))*(x3060)*(x3063))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x3059)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x3056)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3062)))+(((x3056)*(x3057)))+(((r12)*(x3058)))+(((x3061)*(x3062))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x3062)))+(((x3057)*(x3059)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3058)))+(((r02)*(x3056)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x3059)))+(((x3058)*(x3061))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x3067=((IkReal(4.00000000000000))*(cj13));
IkReal x3068=((npy)*(sj14));
IkReal x3069=((IkReal(4.00000000000000))*(sj13));
IkReal x3070=((cj14)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((x3068)*(x3069)))+(((IkReal(-1.00000000000000))*(x3069)*(x3070)))+(((npz)*(x3067)))+(((IkReal(0.360000000000000))*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((npz)*(x3069)))+(((IkReal(-1.00000000000000))*(x3067)*(x3068)))+(((x3067)*(x3070))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((x3068)*(x3069)))+(((IkReal(-1.00000000000000))*(x3069)*(x3070)))+(((npz)*(x3067)))+(((IkReal(0.360000000000000))*(sj13)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((npz)*(x3069)))+(((IkReal(-1.00000000000000))*(x3067)*(x3068)))+(((x3067)*(x3070)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((x3068)*(x3069)))+(((IkReal(-1.00000000000000))*(x3069)*(x3070)))+(((npz)*(x3067)))+(((IkReal(0.360000000000000))*(sj13)))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((npz)*(x3069)))+(((IkReal(-1.00000000000000))*(x3067)*(x3068)))+(((x3067)*(x3070)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x3071=((npy)*(sj14));
IkReal x3072=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(cj13)*(x3072)))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((cj13)*(x3071))));
evalcond[1]=((IkReal(0.0300000000000000))+(((sj13)*(x3071)))+(((cj13)*(npz)))+(((IkReal(-0.250000000000000))*(IKsin(j11))))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(sj13)*(x3072))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst60;
gconst60=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3073=((cj13)*(sj14));
IkReal x3074=((IkReal(1.00000000000000))*(cj11));
IkReal x3075=((r11)*(sj9));
IkReal x3076=((IkReal(1.00000000000000))*(sj11));
IkReal x3077=((cj13)*(cj14));
IkReal x3078=((cj11)*(sj13));
IkReal x3079=((r12)*(sj9));
IkReal x3080=((cj9)*(r01));
IkReal x3081=((sj11)*(sj13));
IkReal x3082=((cj9)*(r02));
IkReal x3083=((r10)*(sj9));
IkReal x3084=((cj9)*(r00));
if( IKabs(((gconst61)*(((((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3076)))+(((IkReal(-1.00000000000000))*(x3073)*(x3074)*(x3075)))+(((cj11)*(x3077)*(x3084)))+(((x3078)*(x3082)))+(((IkReal(-1.00000000000000))*(x3073)*(x3074)*(x3080)))+(((cj11)*(x3077)*(x3083)))+(((x3078)*(x3079)))+(((IkReal(-1.00000000000000))*(r20)*(x3076)*(x3077)))+(((r21)*(sj11)*(x3073))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst61)*(((((x3081)*(x3082)))+(((r22)*(x3078)))+(((sj11)*(x3077)*(x3084)))+(((sj11)*(x3077)*(x3083)))+(((IkReal(-1.00000000000000))*(x3073)*(x3076)*(x3080)))+(((IkReal(-1.00000000000000))*(x3073)*(x3075)*(x3076)))+(((x3079)*(x3081)))+(((cj11)*(r20)*(x3077)))+(((IkReal(-1.00000000000000))*(r21)*(x3073)*(x3074))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst61)*(((((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3076)))+(((IkReal(-1.00000000000000))*(x3073)*(x3074)*(x3075)))+(((cj11)*(x3077)*(x3084)))+(((x3078)*(x3082)))+(((IkReal(-1.00000000000000))*(x3073)*(x3074)*(x3080)))+(((cj11)*(x3077)*(x3083)))+(((x3078)*(x3079)))+(((IkReal(-1.00000000000000))*(r20)*(x3076)*(x3077)))+(((r21)*(sj11)*(x3073)))))), ((gconst61)*(((((x3081)*(x3082)))+(((r22)*(x3078)))+(((sj11)*(x3077)*(x3084)))+(((sj11)*(x3077)*(x3083)))+(((IkReal(-1.00000000000000))*(x3073)*(x3076)*(x3080)))+(((IkReal(-1.00000000000000))*(x3073)*(x3075)*(x3076)))+(((x3079)*(x3081)))+(((cj11)*(r20)*(x3077)))+(((IkReal(-1.00000000000000))*(r21)*(x3073)*(x3074)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3085=IKsin(j10);
IkReal x3086=IKcos(j10);
IkReal x3087=((IkReal(1.00000000000000))*(sj13));
IkReal x3088=((r11)*(sj9));
IkReal x3089=((cj9)*(r01));
IkReal x3090=((r21)*(sj14));
IkReal x3091=((cj9)*(r02));
IkReal x3092=((sj13)*(sj9));
IkReal x3093=((cj14)*(r10));
IkReal x3094=((IkReal(1.00000000000000))*(cj13));
IkReal x3095=((cj14)*(r20));
IkReal x3096=((cj11)*(x3085));
IkReal x3097=((sj11)*(x3086));
IkReal x3098=((sj14)*(x3094));
IkReal x3099=((sj11)*(x3085));
IkReal x3100=((cj11)*(x3086));
IkReal x3101=((cj14)*(cj9)*(r00));
IkReal x3102=((x3096)+(x3097));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3094)*(x3095)))+(((IkReal(-1.00000000000000))*(r22)*(x3087)))+(x3099)+(((IkReal(-1.00000000000000))*(x3100)))+(((cj13)*(x3090))));
evalcond[1]=((x3102)+(((sj13)*(x3090)))+(((IkReal(-1.00000000000000))*(x3087)*(x3095)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3089)*(x3098)))+(((cj13)*(sj9)*(x3093)))+(x3102)+(((IkReal(-1.00000000000000))*(x3088)*(x3098)))+(((r12)*(x3092)))+(((cj13)*(x3101)))+(((sj13)*(x3091))));
evalcond[3]=((x3100)+(((sj13)*(x3101)))+(((IkReal(-1.00000000000000))*(x3091)*(x3094)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3094)))+(((IkReal(-1.00000000000000))*(sj14)*(x3087)*(x3088)))+(((x3092)*(x3093)))+(((IkReal(-1.00000000000000))*(x3099)))+(((IkReal(-1.00000000000000))*(sj14)*(x3087)*(x3089))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3103=((cj13)*(sj11));
IkReal x3104=((r21)*(sj14));
IkReal x3105=((cj11)*(cj13));
IkReal x3106=((cj11)*(sj13));
IkReal x3107=((sj11)*(sj13));
IkReal x3108=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst60)*(((((x3104)*(x3106)))+(((r22)*(x3105)))+(((IkReal(-1.00000000000000))*(x3106)*(x3108)))+(((IkReal(-1.00000000000000))*(r22)*(x3107)))+(((IkReal(-1.00000000000000))*(x3103)*(x3108)))+(((x3103)*(x3104))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((r22)*(x3103)))+(((IkReal(-1.00000000000000))*(x3104)*(x3105)))+(((cj14)*(r20)*(x3105)))+(((r22)*(x3106)))+(((x3104)*(x3107)))+(((IkReal(-1.00000000000000))*(x3107)*(x3108))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst60)*(((((x3104)*(x3106)))+(((r22)*(x3105)))+(((IkReal(-1.00000000000000))*(x3106)*(x3108)))+(((IkReal(-1.00000000000000))*(r22)*(x3107)))+(((IkReal(-1.00000000000000))*(x3103)*(x3108)))+(((x3103)*(x3104)))))), ((gconst60)*(((((r22)*(x3103)))+(((IkReal(-1.00000000000000))*(x3104)*(x3105)))+(((cj14)*(r20)*(x3105)))+(((r22)*(x3106)))+(((x3104)*(x3107)))+(((IkReal(-1.00000000000000))*(x3107)*(x3108)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3109=IKsin(j10);
IkReal x3110=IKcos(j10);
IkReal x3111=((IkReal(1.00000000000000))*(sj13));
IkReal x3112=((r11)*(sj9));
IkReal x3113=((cj9)*(r01));
IkReal x3114=((r21)*(sj14));
IkReal x3115=((cj9)*(r02));
IkReal x3116=((sj13)*(sj9));
IkReal x3117=((cj14)*(r10));
IkReal x3118=((IkReal(1.00000000000000))*(cj13));
IkReal x3119=((cj14)*(r20));
IkReal x3120=((cj11)*(x3109));
IkReal x3121=((sj11)*(x3110));
IkReal x3122=((sj14)*(x3118));
IkReal x3123=((sj11)*(x3109));
IkReal x3124=((cj11)*(x3110));
IkReal x3125=((cj14)*(cj9)*(r00));
IkReal x3126=((x3120)+(x3121));
evalcond[0]=((((cj13)*(x3114)))+(((IkReal(-1.00000000000000))*(x3124)))+(((IkReal(-1.00000000000000))*(x3118)*(x3119)))+(x3123)+(((IkReal(-1.00000000000000))*(r22)*(x3111))));
evalcond[1]=((((sj13)*(x3114)))+(((IkReal(-1.00000000000000))*(x3111)*(x3119)))+(x3126)+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x3116)))+(((sj13)*(x3115)))+(((IkReal(-1.00000000000000))*(x3113)*(x3122)))+(((IkReal(-1.00000000000000))*(x3112)*(x3122)))+(((cj13)*(sj9)*(x3117)))+(((cj13)*(x3125)))+(x3126));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x3111)*(x3113)))+(((x3116)*(x3117)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3118)))+(((IkReal(-1.00000000000000))*(sj14)*(x3111)*(x3112)))+(((IkReal(-1.00000000000000))*(x3123)))+(((IkReal(-1.00000000000000))*(x3115)*(x3118)))+(((sj13)*(x3125)))+(x3124));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x3127=((cj13)*(sj9));
IkReal x3128=((r01)*(sj14));
IkReal x3129=((cj9)*(sj13));
IkReal x3130=((sj13)*(sj9));
IkReal x3131=((cj14)*(r01));
IkReal x3132=((cj14)*(r10));
IkReal x3133=((cj13)*(cj9));
IkReal x3134=((IkReal(1.00000000000000))*(cj9));
IkReal x3135=((sj14)*(sj9));
IkReal x3136=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3137=((sj14)*(x3134));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(-1.00000000000000))+(((r00)*(x3135)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3134)))+(((IkReal(-1.00000000000000))*(r10)*(x3137)))+(((sj9)*(x3131))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r11)*(x3136)))+(((IkReal(-1.00000000000000))*(r00)*(x3137)))+(((IkReal(-1.00000000000000))*(r10)*(x3135)))+(((IkReal(-1.00000000000000))*(x3131)*(x3134))));
evalcond[5]=((((r12)*(x3129)))+(((IkReal(-1.00000000000000))*(r02)*(x3130)))+(((x3132)*(x3133)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3133)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x3127)))+(((x3127)*(x3128))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x3133)))+(((x3129)*(x3132)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3129)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x3130)))+(((x3128)*(x3130)))+(((r02)*(x3127))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x3138=((IkReal(4.00000000000000))*(cj13));
IkReal x3139=((npy)*(sj14));
IkReal x3140=((cj14)*(npx));
IkReal x3141=((IkReal(4.00000000000000))*(sj13));
if( IKabs(((IkReal(0.120000000000000))+(((x3140)*(x3141)))+(((IkReal(-1.00000000000000))*(npz)*(x3138)))+(((IkReal(-0.360000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3139)*(x3141))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x3138)*(x3139)))+(((npz)*(x3141)))+(((x3138)*(x3140))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((x3140)*(x3141)))+(((IkReal(-1.00000000000000))*(npz)*(x3138)))+(((IkReal(-0.360000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3139)*(x3141)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x3138)*(x3139)))+(((npz)*(x3141)))+(((x3138)*(x3140)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.120000000000000))+(((x3140)*(x3141)))+(((IkReal(-1.00000000000000))*(npz)*(x3138)))+(((IkReal(-0.360000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3139)*(x3141)))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(x3138)*(x3139)))+(((npz)*(x3141)))+(((x3138)*(x3140)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x3142=((npy)*(sj14));
IkReal x3143=((IkReal(1.00000000000000))*(cj14)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((cj13)*(x3142)))+(((IkReal(-1.00000000000000))*(cj13)*(x3143)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj13)*(npz)))+(((IkReal(-1.00000000000000))*(sj13)*(x3143)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(IKsin(j11))))+(((sj13)*(x3142))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst63;
gconst63=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3144=((cj13)*(sj14));
IkReal x3145=((IkReal(1.00000000000000))*(cj11));
IkReal x3146=((r11)*(sj9));
IkReal x3147=((IkReal(1.00000000000000))*(sj11));
IkReal x3148=((cj13)*(cj14));
IkReal x3149=((cj11)*(sj13));
IkReal x3150=((r12)*(sj9));
IkReal x3151=((cj9)*(r01));
IkReal x3152=((sj11)*(sj13));
IkReal x3153=((r10)*(sj9));
IkReal x3154=((cj9)*(r00));
IkReal x3155=((cj9)*(r02));
if( IKabs(((gconst63)*(((((x3149)*(x3150)))+(((IkReal(-1.00000000000000))*(r20)*(x3147)*(x3148)))+(((cj11)*(x3148)*(x3154)))+(((r21)*(sj11)*(x3144)))+(((cj11)*(x3148)*(x3153)))+(((x3149)*(x3155)))+(((IkReal(-1.00000000000000))*(x3144)*(x3145)*(x3146)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3147)))+(((IkReal(-1.00000000000000))*(x3144)*(x3145)*(x3151))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*(((((IkReal(-1.00000000000000))*(x3144)*(x3146)*(x3147)))+(((sj11)*(x3148)*(x3154)))+(((cj11)*(r20)*(x3148)))+(((r22)*(x3149)))+(((x3152)*(x3155)))+(((IkReal(-1.00000000000000))*(r21)*(x3144)*(x3145)))+(((x3150)*(x3152)))+(((IkReal(-1.00000000000000))*(x3144)*(x3147)*(x3151)))+(((sj11)*(x3148)*(x3153))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst63)*(((((x3149)*(x3150)))+(((IkReal(-1.00000000000000))*(r20)*(x3147)*(x3148)))+(((cj11)*(x3148)*(x3154)))+(((r21)*(sj11)*(x3144)))+(((cj11)*(x3148)*(x3153)))+(((x3149)*(x3155)))+(((IkReal(-1.00000000000000))*(x3144)*(x3145)*(x3146)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3147)))+(((IkReal(-1.00000000000000))*(x3144)*(x3145)*(x3151)))))), ((gconst63)*(((((IkReal(-1.00000000000000))*(x3144)*(x3146)*(x3147)))+(((sj11)*(x3148)*(x3154)))+(((cj11)*(r20)*(x3148)))+(((r22)*(x3149)))+(((x3152)*(x3155)))+(((IkReal(-1.00000000000000))*(r21)*(x3144)*(x3145)))+(((x3150)*(x3152)))+(((IkReal(-1.00000000000000))*(x3144)*(x3147)*(x3151)))+(((sj11)*(x3148)*(x3153)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3156=IKsin(j10);
IkReal x3157=IKcos(j10);
IkReal x3158=((IkReal(1.00000000000000))*(sj13));
IkReal x3159=((r11)*(sj9));
IkReal x3160=((cj9)*(r01));
IkReal x3161=((IkReal(1.00000000000000))*(cj11));
IkReal x3162=((r21)*(sj14));
IkReal x3163=((cj9)*(r02));
IkReal x3164=((sj13)*(sj9));
IkReal x3165=((cj14)*(r10));
IkReal x3166=((IkReal(1.00000000000000))*(cj13));
IkReal x3167=((cj14)*(r20));
IkReal x3168=((sj11)*(x3156));
IkReal x3169=((sj14)*(x3166));
IkReal x3170=((sj11)*(x3157));
IkReal x3171=((cj14)*(cj9)*(r00));
IkReal x3172=((x3157)*(x3161));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3166)*(x3167)))+(((IkReal(-1.00000000000000))*(x3172)))+(((IkReal(-1.00000000000000))*(r22)*(x3158)))+(x3168)+(((cj13)*(x3162))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3170)))+(((IkReal(-1.00000000000000))*(x3158)*(x3167)))+(((sj13)*(x3162)))+(((IkReal(-1.00000000000000))*(x3156)*(x3161)))+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x3164)))+(((IkReal(-1.00000000000000))*(x3160)*(x3169)))+(((sj13)*(x3163)))+(x3170)+(((cj11)*(x3156)))+(((cj13)*(x3171)))+(((IkReal(-1.00000000000000))*(x3159)*(x3169)))+(((cj13)*(sj9)*(x3165))));
evalcond[3]=((((x3164)*(x3165)))+(((IkReal(-1.00000000000000))*(sj14)*(x3158)*(x3159)))+(((IkReal(-1.00000000000000))*(x3172)))+(((IkReal(-1.00000000000000))*(x3163)*(x3166)))+(((IkReal(-1.00000000000000))*(sj14)*(x3158)*(x3160)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3166)))+(x3168)+(((sj13)*(x3171))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3173=((cj13)*(sj11));
IkReal x3174=((cj11)*(cj13));
IkReal x3175=((r21)*(sj14));
IkReal x3176=((cj11)*(sj13));
IkReal x3177=((sj11)*(sj13));
IkReal x3178=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst62)*(((((IkReal(-1.00000000000000))*(x3173)*(x3175)))+(((IkReal(-1.00000000000000))*(x3176)*(x3178)))+(((x3175)*(x3176)))+(((r22)*(x3177)))+(((cj14)*(r20)*(x3173)))+(((r22)*(x3174))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*(((((r22)*(x3173)))+(((x3175)*(x3177)))+(((IkReal(-1.00000000000000))*(r22)*(x3176)))+(((IkReal(-1.00000000000000))*(x3174)*(x3178)))+(((x3174)*(x3175)))+(((IkReal(-1.00000000000000))*(x3177)*(x3178))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst62)*(((((IkReal(-1.00000000000000))*(x3173)*(x3175)))+(((IkReal(-1.00000000000000))*(x3176)*(x3178)))+(((x3175)*(x3176)))+(((r22)*(x3177)))+(((cj14)*(r20)*(x3173)))+(((r22)*(x3174)))))), ((gconst62)*(((((r22)*(x3173)))+(((x3175)*(x3177)))+(((IkReal(-1.00000000000000))*(r22)*(x3176)))+(((IkReal(-1.00000000000000))*(x3174)*(x3178)))+(((x3174)*(x3175)))+(((IkReal(-1.00000000000000))*(x3177)*(x3178)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3179=IKsin(j10);
IkReal x3180=IKcos(j10);
IkReal x3181=((IkReal(1.00000000000000))*(sj13));
IkReal x3182=((r11)*(sj9));
IkReal x3183=((cj9)*(r01));
IkReal x3184=((IkReal(1.00000000000000))*(cj11));
IkReal x3185=((r21)*(sj14));
IkReal x3186=((cj9)*(r02));
IkReal x3187=((sj13)*(sj9));
IkReal x3188=((cj14)*(r10));
IkReal x3189=((IkReal(1.00000000000000))*(cj13));
IkReal x3190=((cj14)*(r20));
IkReal x3191=((sj11)*(x3179));
IkReal x3192=((sj14)*(x3189));
IkReal x3193=((sj11)*(x3180));
IkReal x3194=((cj14)*(cj9)*(r00));
IkReal x3195=((x3180)*(x3184));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3195)))+(x3191)+(((IkReal(-1.00000000000000))*(r22)*(x3181)))+(((cj13)*(x3185)))+(((IkReal(-1.00000000000000))*(x3189)*(x3190))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3181)*(x3190)))+(((sj13)*(x3185)))+(((IkReal(-1.00000000000000))*(x3179)*(x3184)))+(((IkReal(-1.00000000000000))*(x3193)))+(((cj13)*(r22))));
evalcond[2]=((((cj11)*(x3179)))+(((cj13)*(x3194)))+(x3193)+(((cj13)*(sj9)*(x3188)))+(((IkReal(-1.00000000000000))*(x3182)*(x3192)))+(((r12)*(x3187)))+(((IkReal(-1.00000000000000))*(x3183)*(x3192)))+(((sj13)*(x3186))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3195)))+(((IkReal(-1.00000000000000))*(sj14)*(x3181)*(x3183)))+(((sj13)*(x3194)))+(((IkReal(-1.00000000000000))*(x3186)*(x3189)))+(x3191)+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3189)))+(((x3187)*(x3188)))+(((IkReal(-1.00000000000000))*(sj14)*(x3181)*(x3182))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x3196=((IkReal(4.00000000000000))*(cj13));
IkReal x3197=((npy)*(sj14));
IkReal x3198=((IkReal(4.00000000000000))*(sj13));
IkReal x3199=((cj14)*(npx));
if( IKabs(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((x3197)*(x3198)))+(((IkReal(-1.00000000000000))*(x3198)*(x3199)))+(((IkReal(0.120000000000000))*(cj12)))+(((IkReal(-0.380000000000000))*(sj12)))+(((IkReal(0.360000000000000))*(sj13)))+(((npz)*(x3196))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((x3196)*(x3199)))+(((IkReal(-1.00000000000000))*(x3196)*(x3197)))+(((npz)*(x3198))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((x3197)*(x3198)))+(((IkReal(-1.00000000000000))*(x3198)*(x3199)))+(((IkReal(0.120000000000000))*(cj12)))+(((IkReal(-0.380000000000000))*(sj12)))+(((IkReal(0.360000000000000))*(sj13)))+(((npz)*(x3196)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((x3196)*(x3199)))+(((IkReal(-1.00000000000000))*(x3196)*(x3197)))+(((npz)*(x3198)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30))*(((((x3197)*(x3198)))+(((IkReal(-1.00000000000000))*(x3198)*(x3199)))+(((IkReal(0.120000000000000))*(cj12)))+(((IkReal(-0.380000000000000))*(sj12)))+(((IkReal(0.360000000000000))*(sj13)))+(((npz)*(x3196)))))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((x3196)*(x3199)))+(((IkReal(-1.00000000000000))*(x3196)*(x3197)))+(((npz)*(x3198)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x3200=IKsin(j11);
IkReal x3201=((IkReal(1.00000000000000))*(sj13));
IkReal x3202=((npy)*(sj14));
IkReal x3203=((cj14)*(npx));
IkReal x3204=((IkReal(0.250000000000000))*(x3200));
evalcond[0]=((((cj14)*(npy)))+(((sj12)*(x3204)))+(((IkReal(-0.0950000000000000))*(cj12)))+(((npx)*(sj14)))+(((IkReal(-0.0300000000000000))*(sj12))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x3203)))+(((IkReal(-1.00000000000000))*(npz)*(x3201)))+(((cj13)*(x3202))));
evalcond[2]=((((sj13)*(x3202)))+(((IkReal(-1.00000000000000))*(x3201)*(x3203)))+(((IkReal(-1.00000000000000))*(cj12)*(x3204)))+(((cj13)*(npz)))+(((IkReal(0.0300000000000000))*(cj12)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-0.0950000000000000))*(sj12))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11))))));
dummyeval[0]=((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3205=((cj13)*(sj14));
IkReal x3206=((sj14)*(sj9));
IkReal x3207=((r11)*(sj13));
IkReal x3208=((cj13)*(r02));
IkReal x3209=((sj13)*(sj14));
IkReal x3210=((r01)*(sj9));
IkReal x3211=((cj9)*(sj13));
IkReal x3212=((IkReal(1.00000000000000))*(cj9));
IkReal x3213=((r01)*(sj13));
IkReal x3214=((cj14)*(sj13));
IkReal x3215=((IkReal(1.00000000000000))*(npx));
IkReal x3216=((cj14)*(r00));
IkReal x3217=((IkReal(1.00000000000000))*(sj9));
IkReal x3218=((cj14)*(r10));
IkReal x3219=((sj14)*(x3212));
IkReal x3220=((cj13)*(x3217));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(x3215)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((npy)*(x3205)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
evalcond[3]=((((cj14)*(x3210)))+(((r00)*(x3206)))+(((IkReal(-1.00000000000000))*(r10)*(x3219)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3212))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x3214)))+(((r21)*(x3209)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((IkReal(-1.00000000000000))*(x3214)*(x3215)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((npy)*(x3209))));
evalcond[6]=((((cj13)*(cj9)*(x3218)))+(((r12)*(x3211)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x3217)))+(((IkReal(-1.00000000000000))*(r11)*(x3205)*(x3212)))+(((IkReal(-1.00000000000000))*(x3216)*(x3220)))+(((x3205)*(x3210))));
evalcond[7]=((IkReal(1.00000000000000))+(((sj9)*(x3208)))+(((x3211)*(x3218)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3212)))+(((IkReal(-1.00000000000000))*(r00)*(x3214)*(x3217)))+(((x3206)*(x3213)))+(((IkReal(-1.00000000000000))*(x3207)*(x3219))));
evalcond[8]=((((x3211)*(x3216)))+(((IkReal(-1.00000000000000))*(x3206)*(x3207)))+(((IkReal(-1.00000000000000))*(x3208)*(x3212)))+(((r10)*(sj9)*(x3214)))+(((IkReal(-1.00000000000000))*(r01)*(x3209)*(x3212)))+(((IkReal(-1.00000000000000))*(r12)*(x3220))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3221=((IkReal(1.00000000000000))*(cj11));
IkReal x3222=((r20)*(sj14));
IkReal x3223=((cj14)*(r21));
IkReal x3224=((cj14)*(cj9)*(r01));
IkReal x3225=((r10)*(sj14)*(sj9));
IkReal x3226=((cj9)*(r00)*(sj14));
IkReal x3227=((cj14)*(r11)*(sj9));
if( IKabs(((gconst49)*(((((sj11)*(x3226)))+(((cj11)*(x3223)))+(((sj11)*(x3225)))+(((sj11)*(x3227)))+(((cj11)*(x3222)))+(((sj11)*(x3224))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((sj11)*(x3223)))+(((sj11)*(x3222)))+(((IkReal(-1.00000000000000))*(x3221)*(x3227)))+(((IkReal(-1.00000000000000))*(x3221)*(x3226)))+(((IkReal(-1.00000000000000))*(x3221)*(x3225)))+(((IkReal(-1.00000000000000))*(x3221)*(x3224))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst49)*(((((sj11)*(x3226)))+(((cj11)*(x3223)))+(((sj11)*(x3225)))+(((sj11)*(x3227)))+(((cj11)*(x3222)))+(((sj11)*(x3224)))))), ((gconst49)*(((((sj11)*(x3223)))+(((sj11)*(x3222)))+(((IkReal(-1.00000000000000))*(x3221)*(x3227)))+(((IkReal(-1.00000000000000))*(x3221)*(x3226)))+(((IkReal(-1.00000000000000))*(x3221)*(x3225)))+(((IkReal(-1.00000000000000))*(x3221)*(x3224)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3228=IKsin(j10);
IkReal x3229=IKcos(j10);
IkReal x3230=((cj13)*(sj14));
IkReal x3231=((cj13)*(cj14));
IkReal x3232=((r10)*(sj9));
IkReal x3233=((IkReal(1.00000000000000))*(cj9));
IkReal x3234=((sj11)*(x3228));
IkReal x3235=((IkReal(1.00000000000000))*(x3229));
IkReal x3236=((cj11)*(x3228));
IkReal x3237=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x3238=((cj11)*(x3235));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj11)*(x3235)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x3236))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x3231)))+(x3234)+(((IkReal(-1.00000000000000))*(x3238)))+(((r21)*(x3230))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x3232)))+(x3234)+(((IkReal(-1.00000000000000))*(x3238)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3233)))+(((IkReal(-1.00000000000000))*(cj14)*(x3237)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3233))));
evalcond[3]=((((x3231)*(x3232)))+(x3236)+(((IkReal(-1.00000000000000))*(x3230)*(x3237)))+(((sj11)*(x3229)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x3230)*(x3233)))+(((cj9)*(r00)*(x3231))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3239=((cj11)*(r20));
IkReal x3240=((IkReal(1.00000000000000))*(cj13));
IkReal x3241=((r21)*(sj14));
IkReal x3242=((r22)*(sj13));
IkReal x3243=((r20)*(sj11));
IkReal x3244=((cj14)*(r21));
if( IKabs(((gconst48)*(((((IkReal(-1.00000000000000))*(sj11)*(x3240)*(x3241)))+(((sj14)*(x3239)))+(((cj13)*(cj14)*(x3243)))+(((cj11)*(x3244)))+(((sj11)*(x3242))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((cj11)*(cj13)*(x3241)))+(((IkReal(-1.00000000000000))*(cj14)*(x3239)*(x3240)))+(((sj14)*(x3243)))+(((sj11)*(x3244)))+(((IkReal(-1.00000000000000))*(cj11)*(x3242))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst48)*(((((IkReal(-1.00000000000000))*(sj11)*(x3240)*(x3241)))+(((sj14)*(x3239)))+(((cj13)*(cj14)*(x3243)))+(((cj11)*(x3244)))+(((sj11)*(x3242)))))), ((gconst48)*(((((cj11)*(cj13)*(x3241)))+(((IkReal(-1.00000000000000))*(cj14)*(x3239)*(x3240)))+(((sj14)*(x3243)))+(((sj11)*(x3244)))+(((IkReal(-1.00000000000000))*(cj11)*(x3242)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3245=IKsin(j10);
IkReal x3246=IKcos(j10);
IkReal x3247=((cj13)*(sj14));
IkReal x3248=((cj13)*(cj14));
IkReal x3249=((r10)*(sj9));
IkReal x3250=((IkReal(1.00000000000000))*(cj9));
IkReal x3251=((sj11)*(x3245));
IkReal x3252=((IkReal(1.00000000000000))*(x3246));
IkReal x3253=((cj11)*(x3245));
IkReal x3254=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x3255=((cj11)*(x3252));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj11)*(x3252)))+(((r20)*(sj14)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x3253))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x3251)+(((r21)*(x3247)))+(((IkReal(-1.00000000000000))*(r20)*(x3248)))+(((IkReal(-1.00000000000000))*(x3255))));
evalcond[2]=((x3251)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3250)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3250)))+(((IkReal(-1.00000000000000))*(cj14)*(x3254)))+(((IkReal(-1.00000000000000))*(x3255)))+(((IkReal(-1.00000000000000))*(sj14)*(x3249))));
evalcond[3]=((((sj11)*(x3246)))+(x3253)+(((IkReal(-1.00000000000000))*(r01)*(x3247)*(x3250)))+(((IkReal(-1.00000000000000))*(x3247)*(x3254)))+(((x3248)*(x3249)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x3248))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3256=((cj13)*(sj14));
IkReal x3257=((sj14)*(sj9));
IkReal x3258=((r11)*(sj13));
IkReal x3259=((cj13)*(r02));
IkReal x3260=((sj13)*(sj14));
IkReal x3261=((r01)*(sj9));
IkReal x3262=((cj9)*(sj13));
IkReal x3263=((IkReal(1.00000000000000))*(cj9));
IkReal x3264=((r01)*(sj13));
IkReal x3265=((cj14)*(sj13));
IkReal x3266=((IkReal(1.00000000000000))*(npx));
IkReal x3267=((cj14)*(r00));
IkReal x3268=((IkReal(1.00000000000000))*(sj9));
IkReal x3269=((cj14)*(r10));
IkReal x3270=((sj14)*(x3263));
IkReal x3271=((cj13)*(x3268));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(x3266)))+(((IkReal(-1.00000000000000))*(npz)*(sj13)))+(((npy)*(x3256))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3263)))+(((r00)*(x3257)))+(((IkReal(-1.00000000000000))*(r10)*(x3270)))+(((cj14)*(x3261))));
evalcond[4]=((((r21)*(x3260)))+(((IkReal(-1.00000000000000))*(r20)*(x3265)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0950000000000000))+(((npy)*(x3260)))+(((IkReal(-1.00000000000000))*(x3265)*(x3266)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3267)*(x3271)))+(((IkReal(-1.00000000000000))*(r11)*(x3256)*(x3263)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x3268)))+(((x3256)*(x3261)))+(((cj13)*(cj9)*(x3269)))+(((r12)*(x3262))));
evalcond[7]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x3258)*(x3270)))+(((x3257)*(x3264)))+(((x3262)*(x3269)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3263)))+(((sj9)*(x3259)))+(((IkReal(-1.00000000000000))*(r00)*(x3265)*(x3268))));
evalcond[8]=((((x3262)*(x3267)))+(((IkReal(-1.00000000000000))*(r01)*(x3260)*(x3263)))+(((r10)*(sj9)*(x3265)))+(((IkReal(-1.00000000000000))*(x3257)*(x3258)))+(((IkReal(-1.00000000000000))*(r12)*(x3271)))+(((IkReal(-1.00000000000000))*(x3259)*(x3263))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3272=((IkReal(1.00000000000000))*(cj14));
IkReal x3273=((sj11)*(sj9));
IkReal x3274=((cj9)*(r01));
IkReal x3275=((cj11)*(cj14));
IkReal x3276=((cj9)*(r00));
IkReal x3277=((r10)*(sj14));
IkReal x3278=((cj11)*(sj14));
IkReal x3279=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(r11)*(x3272)*(x3273)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x3272)))+(((IkReal(-1.00000000000000))*(x3276)*(x3279)))+(((IkReal(-1.00000000000000))*(sj11)*(x3272)*(x3274)))+(((IkReal(-1.00000000000000))*(r20)*(x3278)))+(((IkReal(-1.00000000000000))*(x3273)*(x3277))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(r21)*(sj11)*(x3272)))+(((x3276)*(x3278)))+(((r11)*(sj9)*(x3275)))+(((x3274)*(x3275)))+(((IkReal(-1.00000000000000))*(r20)*(x3279)))+(((cj11)*(sj9)*(x3277))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(r11)*(x3272)*(x3273)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x3272)))+(((IkReal(-1.00000000000000))*(x3276)*(x3279)))+(((IkReal(-1.00000000000000))*(sj11)*(x3272)*(x3274)))+(((IkReal(-1.00000000000000))*(r20)*(x3278)))+(((IkReal(-1.00000000000000))*(x3273)*(x3277)))))), ((gconst51)*(((((IkReal(-1.00000000000000))*(r21)*(sj11)*(x3272)))+(((x3276)*(x3278)))+(((r11)*(sj9)*(x3275)))+(((x3274)*(x3275)))+(((IkReal(-1.00000000000000))*(r20)*(x3279)))+(((cj11)*(sj9)*(x3277)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3280=IKsin(j10);
IkReal x3281=IKcos(j10);
IkReal x3282=((cj14)*(sj9));
IkReal x3283=((IkReal(1.00000000000000))*(r11));
IkReal x3284=((cj13)*(sj14));
IkReal x3285=((IkReal(1.00000000000000))*(cj9));
IkReal x3286=((cj13)*(cj14));
IkReal x3287=((cj11)*(x3280));
IkReal x3288=((sj11)*(x3281));
IkReal x3289=((cj11)*(x3281));
IkReal x3290=((sj11)*(x3280));
IkReal x3291=((x3288)+(x3287));
evalcond[0]=((((r20)*(sj14)))+(x3291)+(((cj14)*(r21))));
evalcond[1]=((((r21)*(x3284)))+(x3290)+(((IkReal(-1.00000000000000))*(x3289)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x3286))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3285)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3285)))+(x3289)+(((IkReal(-1.00000000000000))*(x3282)*(x3283)))+(((IkReal(-1.00000000000000))*(x3290))));
evalcond[3]=((((cj9)*(r00)*(x3286)))+(x3291)+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r10)*(x3282)))+(((IkReal(-1.00000000000000))*(sj9)*(x3283)*(x3284)))+(((IkReal(-1.00000000000000))*(r01)*(x3284)*(x3285))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3292=((cj13)*(sj11));
IkReal x3293=((r21)*(sj14));
IkReal x3294=((cj14)*(r20));
IkReal x3295=((cj11)*(cj13));
IkReal x3296=((r22)*(sj13));
IkReal x3297=((r20)*(sj14));
IkReal x3298=((cj14)*(r21));
if( IKabs(((gconst50)*(((((cj11)*(x3297)))+(((cj11)*(x3298)))+(((x3292)*(x3293)))+(((IkReal(-1.00000000000000))*(sj11)*(x3296)))+(((IkReal(-1.00000000000000))*(x3292)*(x3294))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((cj11)*(x3296)))+(((sj11)*(x3298)))+(((x3294)*(x3295)))+(((IkReal(-1.00000000000000))*(x3293)*(x3295)))+(((sj11)*(x3297))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst50)*(((((cj11)*(x3297)))+(((cj11)*(x3298)))+(((x3292)*(x3293)))+(((IkReal(-1.00000000000000))*(sj11)*(x3296)))+(((IkReal(-1.00000000000000))*(x3292)*(x3294)))))), ((gconst50)*(((((cj11)*(x3296)))+(((sj11)*(x3298)))+(((x3294)*(x3295)))+(((IkReal(-1.00000000000000))*(x3293)*(x3295)))+(((sj11)*(x3297)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3299=IKsin(j10);
IkReal x3300=IKcos(j10);
IkReal x3301=((cj14)*(sj9));
IkReal x3302=((IkReal(1.00000000000000))*(r11));
IkReal x3303=((cj13)*(sj14));
IkReal x3304=((IkReal(1.00000000000000))*(cj9));
IkReal x3305=((cj13)*(cj14));
IkReal x3306=((cj11)*(x3299));
IkReal x3307=((sj11)*(x3300));
IkReal x3308=((cj11)*(x3300));
IkReal x3309=((sj11)*(x3299));
IkReal x3310=((x3306)+(x3307));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x3310));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x3308)))+(((r21)*(x3303)))+(((IkReal(-1.00000000000000))*(r20)*(x3305)))+(x3309));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3304)))+(((IkReal(-1.00000000000000))*(x3309)))+(x3308)+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3304)))+(((IkReal(-1.00000000000000))*(x3301)*(x3302))));
evalcond[3]=((((cj13)*(r10)*(x3301)))+(x3310)+(((r12)*(sj13)*(sj9)))+(((cj9)*(r00)*(x3305)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x3303)*(x3304)))+(((IkReal(-1.00000000000000))*(sj9)*(x3302)*(x3303))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3311=((IkReal(1.00000000000000))*(r11));
IkReal x3312=((cj14)*(sj9));
IkReal x3313=((cj13)*(sj14));
IkReal x3314=((sj14)*(sj9));
IkReal x3315=((cj9)*(sj14));
IkReal x3316=((IkReal(1.00000000000000))*(r10));
IkReal x3317=((r02)*(sj9));
IkReal x3318=((cj9)*(sj13));
IkReal x3319=((IkReal(1.00000000000000))*(cj14));
IkReal x3320=((IkReal(1.00000000000000))*(r00));
IkReal x3321=((IkReal(1.00000000000000))*(sj13));
IkReal x3322=((cj14)*(r10));
IkReal x3323=((cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npx)*(x3319)))+(((npy)*(x3313)))+(((IkReal(-1.00000000000000))*(npz)*(x3321))));
evalcond[4]=((IkReal(1.00000000000000))+(((r00)*(x3314)))+(((r01)*(x3312)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x3311)))+(((IkReal(-1.00000000000000))*(x3315)*(x3316))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((npy)*(sj13)*(sj14)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(npx)*(sj13)*(x3319))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3319)))+(((IkReal(-1.00000000000000))*(x3314)*(x3316)))+(((IkReal(-1.00000000000000))*(x3315)*(x3320)))+(((IkReal(-1.00000000000000))*(x3311)*(x3312))));
evalcond[7]=((((r12)*(x3318)))+(((IkReal(-1.00000000000000))*(cj9)*(x3311)*(x3313)))+(((x3322)*(x3323)))+(((r01)*(sj9)*(x3313)))+(((IkReal(-1.00000000000000))*(cj13)*(x3312)*(x3320)))+(((IkReal(-1.00000000000000))*(x3317)*(x3321))));
evalcond[8]=((((r01)*(sj13)*(x3314)))+(((IkReal(-1.00000000000000))*(r12)*(x3323)))+(((IkReal(-1.00000000000000))*(sj13)*(x3311)*(x3315)))+(((IkReal(-1.00000000000000))*(sj13)*(x3312)*(x3320)))+(((x3318)*(x3322)))+(((cj13)*(x3317))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3324=((cj13)*(sj14));
IkReal x3325=((IkReal(1.00000000000000))*(cj11));
IkReal x3326=((r11)*(sj9));
IkReal x3327=((cj11)*(sj13));
IkReal x3328=((r12)*(sj9));
IkReal x3329=((r10)*(sj9));
IkReal x3330=((sj11)*(sj13));
IkReal x3331=((cj9)*(r02));
IkReal x3332=((cj9)*(r01));
IkReal x3333=((IkReal(1.00000000000000))*(sj11));
IkReal x3334=((cj9)*(r00));
IkReal x3335=((cj13)*(cj14)*(sj11));
IkReal x3336=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst53)*(((((x3327)*(x3328)))+(((x3329)*(x3336)))+(((IkReal(-1.00000000000000))*(x3324)*(x3325)*(x3326)))+(((x3327)*(x3331)))+(((x3334)*(x3336)))+(((IkReal(-1.00000000000000))*(x3324)*(x3325)*(x3332)))+(((r21)*(sj11)*(x3324)))+(((IkReal(-1.00000000000000))*(r22)*(x3330)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x3333))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(x3324)*(x3332)*(x3333)))+(((x3334)*(x3335)))+(((IkReal(-1.00000000000000))*(x3324)*(x3326)*(x3333)))+(((IkReal(-1.00000000000000))*(r21)*(x3324)*(x3325)))+(((x3329)*(x3335)))+(((r20)*(x3336)))+(((r22)*(x3327)))+(((x3330)*(x3331)))+(((x3328)*(x3330))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst53)*(((((x3327)*(x3328)))+(((x3329)*(x3336)))+(((IkReal(-1.00000000000000))*(x3324)*(x3325)*(x3326)))+(((x3327)*(x3331)))+(((x3334)*(x3336)))+(((IkReal(-1.00000000000000))*(x3324)*(x3325)*(x3332)))+(((r21)*(sj11)*(x3324)))+(((IkReal(-1.00000000000000))*(r22)*(x3330)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x3333)))))), ((gconst53)*(((((IkReal(-1.00000000000000))*(x3324)*(x3332)*(x3333)))+(((x3334)*(x3335)))+(((IkReal(-1.00000000000000))*(x3324)*(x3326)*(x3333)))+(((IkReal(-1.00000000000000))*(r21)*(x3324)*(x3325)))+(((x3329)*(x3335)))+(((r20)*(x3336)))+(((r22)*(x3327)))+(((x3330)*(x3331)))+(((x3328)*(x3330)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3337=IKsin(j10);
IkReal x3338=IKcos(j10);
IkReal x3339=((IkReal(1.00000000000000))*(sj13));
IkReal x3340=((r11)*(sj9));
IkReal x3341=((cj9)*(r01));
IkReal x3342=((r21)*(sj14));
IkReal x3343=((cj9)*(r02));
IkReal x3344=((sj13)*(sj9));
IkReal x3345=((cj14)*(r10));
IkReal x3346=((IkReal(1.00000000000000))*(cj13));
IkReal x3347=((cj14)*(r20));
IkReal x3348=((cj11)*(x3337));
IkReal x3349=((sj11)*(x3338));
IkReal x3350=((sj14)*(x3346));
IkReal x3351=((sj11)*(x3337));
IkReal x3352=((cj11)*(x3338));
IkReal x3353=((cj14)*(cj9)*(r00));
IkReal x3354=((x3348)+(x3349));
evalcond[0]=((((cj13)*(x3342)))+(((IkReal(-1.00000000000000))*(x3346)*(x3347)))+(x3351)+(((IkReal(-1.00000000000000))*(r22)*(x3339)))+(((IkReal(-1.00000000000000))*(x3352))));
evalcond[1]=((x3354)+(((sj13)*(x3342)))+(((IkReal(-1.00000000000000))*(x3339)*(x3347)))+(((cj13)*(r22))));
evalcond[2]=((x3354)+(((sj13)*(x3343)))+(((r12)*(x3344)))+(((cj13)*(x3353)))+(((cj13)*(sj9)*(x3345)))+(((IkReal(-1.00000000000000))*(x3341)*(x3350)))+(((IkReal(-1.00000000000000))*(x3340)*(x3350))));
evalcond[3]=((((sj13)*(x3353)))+(((IkReal(-1.00000000000000))*(x3343)*(x3346)))+(x3352)+(((IkReal(-1.00000000000000))*(x3351)))+(((x3344)*(x3345)))+(((IkReal(-1.00000000000000))*(sj14)*(x3339)*(x3340)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3346)))+(((IkReal(-1.00000000000000))*(sj14)*(x3339)*(x3341))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3355=((cj13)*(sj11));
IkReal x3356=((r21)*(sj14));
IkReal x3357=((cj11)*(cj13));
IkReal x3358=((cj11)*(sj13));
IkReal x3359=((sj11)*(sj13));
IkReal x3360=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(r22)*(x3359)))+(((IkReal(-1.00000000000000))*(x3358)*(x3360)))+(((x3356)*(x3358)))+(((x3355)*(x3356)))+(((IkReal(-1.00000000000000))*(x3355)*(x3360)))+(((r22)*(x3357))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((r22)*(x3355)))+(((IkReal(-1.00000000000000))*(x3359)*(x3360)))+(((IkReal(-1.00000000000000))*(x3356)*(x3357)))+(((x3356)*(x3359)))+(((cj14)*(r20)*(x3357)))+(((r22)*(x3358))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst52)*(((((IkReal(-1.00000000000000))*(r22)*(x3359)))+(((IkReal(-1.00000000000000))*(x3358)*(x3360)))+(((x3356)*(x3358)))+(((x3355)*(x3356)))+(((IkReal(-1.00000000000000))*(x3355)*(x3360)))+(((r22)*(x3357)))))), ((gconst52)*(((((r22)*(x3355)))+(((IkReal(-1.00000000000000))*(x3359)*(x3360)))+(((IkReal(-1.00000000000000))*(x3356)*(x3357)))+(((x3356)*(x3359)))+(((cj14)*(r20)*(x3357)))+(((r22)*(x3358)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3361=IKsin(j10);
IkReal x3362=IKcos(j10);
IkReal x3363=((IkReal(1.00000000000000))*(sj13));
IkReal x3364=((r11)*(sj9));
IkReal x3365=((cj9)*(r01));
IkReal x3366=((r21)*(sj14));
IkReal x3367=((cj9)*(r02));
IkReal x3368=((sj13)*(sj9));
IkReal x3369=((cj14)*(r10));
IkReal x3370=((IkReal(1.00000000000000))*(cj13));
IkReal x3371=((cj14)*(r20));
IkReal x3372=((cj11)*(x3361));
IkReal x3373=((sj11)*(x3362));
IkReal x3374=((sj14)*(x3370));
IkReal x3375=((sj11)*(x3361));
IkReal x3376=((cj11)*(x3362));
IkReal x3377=((cj14)*(cj9)*(r00));
IkReal x3378=((x3373)+(x3372));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3376)))+(((IkReal(-1.00000000000000))*(x3370)*(x3371)))+(((IkReal(-1.00000000000000))*(r22)*(x3363)))+(x3375)+(((cj13)*(x3366))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3363)*(x3371)))+(((sj13)*(x3366)))+(x3378)+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(x3377)))+(((cj13)*(sj9)*(x3369)))+(((IkReal(-1.00000000000000))*(x3365)*(x3374)))+(((r12)*(x3368)))+(((sj13)*(x3367)))+(((IkReal(-1.00000000000000))*(x3364)*(x3374)))+(x3378));
evalcond[3]=((((x3368)*(x3369)))+(((IkReal(-1.00000000000000))*(sj14)*(x3363)*(x3365)))+(((IkReal(-1.00000000000000))*(x3367)*(x3370)))+(((IkReal(-1.00000000000000))*(sj14)*(x3363)*(x3364)))+(((IkReal(-1.00000000000000))*(x3375)))+(((sj13)*(x3377)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3370)))+(x3376));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3379=((IkReal(1.00000000000000))*(r11));
IkReal x3380=((cj14)*(sj9));
IkReal x3381=((cj13)*(sj14));
IkReal x3382=((sj14)*(sj9));
IkReal x3383=((cj9)*(sj14));
IkReal x3384=((IkReal(1.00000000000000))*(r10));
IkReal x3385=((r02)*(sj9));
IkReal x3386=((cj9)*(sj13));
IkReal x3387=((IkReal(1.00000000000000))*(cj14));
IkReal x3388=((IkReal(1.00000000000000))*(r00));
IkReal x3389=((IkReal(1.00000000000000))*(sj13));
IkReal x3390=((cj14)*(r10));
IkReal x3391=((cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(cj13)*(npx)*(x3387)))+(((IkReal(0.0900000000000000))*(cj13)))+(((npy)*(x3381)))+(((IkReal(-1.00000000000000))*(npz)*(x3389))));
evalcond[4]=((IkReal(-1.00000000000000))+(((r01)*(x3380)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x3379)))+(((r00)*(x3382)))+(((IkReal(-1.00000000000000))*(x3383)*(x3384))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((npy)*(sj13)*(sj14)))+(((IkReal(-1.00000000000000))*(npx)*(sj13)*(x3387)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3382)*(x3384)))+(((IkReal(-1.00000000000000))*(x3383)*(x3388)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3387)))+(((IkReal(-1.00000000000000))*(x3379)*(x3380))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x3385)*(x3389)))+(((x3390)*(x3391)))+(((r01)*(sj9)*(x3381)))+(((r12)*(x3386)))+(((IkReal(-1.00000000000000))*(cj9)*(x3379)*(x3381)))+(((IkReal(-1.00000000000000))*(cj13)*(x3380)*(x3388))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r12)*(x3391)))+(((cj13)*(x3385)))+(((r01)*(sj13)*(x3382)))+(((IkReal(-1.00000000000000))*(sj13)*(x3380)*(x3388)))+(((IkReal(-1.00000000000000))*(sj13)*(x3379)*(x3383)))+(((x3386)*(x3390))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3392=((cj13)*(sj14));
IkReal x3393=((IkReal(1.00000000000000))*(cj11));
IkReal x3394=((r11)*(sj9));
IkReal x3395=((IkReal(1.00000000000000))*(sj11));
IkReal x3396=((cj13)*(cj14));
IkReal x3397=((cj11)*(sj13));
IkReal x3398=((r12)*(sj9));
IkReal x3399=((cj9)*(r01));
IkReal x3400=((sj11)*(sj13));
IkReal x3401=((cj9)*(r02));
IkReal x3402=((r10)*(sj9));
IkReal x3403=((cj9)*(r00));
if( IKabs(((gconst55)*(((((cj11)*(x3396)*(x3403)))+(((IkReal(-1.00000000000000))*(r20)*(x3395)*(x3396)))+(((x3397)*(x3398)))+(((x3397)*(x3401)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3395)))+(((IkReal(-1.00000000000000))*(x3392)*(x3393)*(x3399)))+(((r21)*(sj11)*(x3392)))+(((cj11)*(x3396)*(x3402)))+(((IkReal(-1.00000000000000))*(x3392)*(x3393)*(x3394))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((sj11)*(x3396)*(x3402)))+(((r22)*(x3397)))+(((x3400)*(x3401)))+(((sj11)*(x3396)*(x3403)))+(((cj11)*(r20)*(x3396)))+(((IkReal(-1.00000000000000))*(r21)*(x3392)*(x3393)))+(((IkReal(-1.00000000000000))*(x3392)*(x3395)*(x3399)))+(((IkReal(-1.00000000000000))*(x3392)*(x3394)*(x3395)))+(((x3398)*(x3400))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst55)*(((((cj11)*(x3396)*(x3403)))+(((IkReal(-1.00000000000000))*(r20)*(x3395)*(x3396)))+(((x3397)*(x3398)))+(((x3397)*(x3401)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3395)))+(((IkReal(-1.00000000000000))*(x3392)*(x3393)*(x3399)))+(((r21)*(sj11)*(x3392)))+(((cj11)*(x3396)*(x3402)))+(((IkReal(-1.00000000000000))*(x3392)*(x3393)*(x3394)))))), ((gconst55)*(((((sj11)*(x3396)*(x3402)))+(((r22)*(x3397)))+(((x3400)*(x3401)))+(((sj11)*(x3396)*(x3403)))+(((cj11)*(r20)*(x3396)))+(((IkReal(-1.00000000000000))*(r21)*(x3392)*(x3393)))+(((IkReal(-1.00000000000000))*(x3392)*(x3395)*(x3399)))+(((IkReal(-1.00000000000000))*(x3392)*(x3394)*(x3395)))+(((x3398)*(x3400)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3404=IKsin(j10);
IkReal x3405=IKcos(j10);
IkReal x3406=((IkReal(1.00000000000000))*(sj13));
IkReal x3407=((r11)*(sj9));
IkReal x3408=((cj9)*(r01));
IkReal x3409=((IkReal(1.00000000000000))*(cj11));
IkReal x3410=((r21)*(sj14));
IkReal x3411=((cj9)*(r02));
IkReal x3412=((sj13)*(sj9));
IkReal x3413=((cj14)*(r10));
IkReal x3414=((IkReal(1.00000000000000))*(cj13));
IkReal x3415=((cj14)*(r20));
IkReal x3416=((sj11)*(x3404));
IkReal x3417=((sj14)*(x3414));
IkReal x3418=((sj11)*(x3405));
IkReal x3419=((cj14)*(cj9)*(r00));
IkReal x3420=((x3405)*(x3409));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3414)*(x3415)))+(x3416)+(((IkReal(-1.00000000000000))*(x3420)))+(((cj13)*(x3410)))+(((IkReal(-1.00000000000000))*(r22)*(x3406))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3406)*(x3415)))+(((IkReal(-1.00000000000000))*(x3418)))+(((sj13)*(x3410)))+(((IkReal(-1.00000000000000))*(x3404)*(x3409)))+(((cj13)*(r22))));
evalcond[2]=((((sj13)*(x3411)))+(((IkReal(-1.00000000000000))*(x3407)*(x3417)))+(((r12)*(x3412)))+(x3418)+(((cj13)*(x3419)))+(((cj11)*(x3404)))+(((cj13)*(sj9)*(x3413)))+(((IkReal(-1.00000000000000))*(x3408)*(x3417))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3414)))+(x3416)+(((sj13)*(x3419)))+(((IkReal(-1.00000000000000))*(x3411)*(x3414)))+(((IkReal(-1.00000000000000))*(x3420)))+(((x3412)*(x3413)))+(((IkReal(-1.00000000000000))*(sj14)*(x3406)*(x3407)))+(((IkReal(-1.00000000000000))*(sj14)*(x3406)*(x3408))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3421=((cj13)*(sj11));
IkReal x3422=((r21)*(sj14));
IkReal x3423=((cj11)*(cj13));
IkReal x3424=((IkReal(1.00000000000000))*(sj13));
IkReal x3425=((sj11)*(sj13));
IkReal x3426=((cj14)*(r20));
if( IKabs(((gconst54)*(((((cj11)*(sj13)*(x3422)))+(((IkReal(-1.00000000000000))*(x3421)*(x3422)))+(((IkReal(-1.00000000000000))*(cj11)*(x3424)*(x3426)))+(((r22)*(x3423)))+(((r22)*(x3425)))+(((x3421)*(x3426))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(x3423)*(x3426)))+(((x3422)*(x3425)))+(((r22)*(x3421)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x3424)))+(((IkReal(-1.00000000000000))*(sj11)*(x3424)*(x3426)))+(((x3422)*(x3423))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst54)*(((((cj11)*(sj13)*(x3422)))+(((IkReal(-1.00000000000000))*(x3421)*(x3422)))+(((IkReal(-1.00000000000000))*(cj11)*(x3424)*(x3426)))+(((r22)*(x3423)))+(((r22)*(x3425)))+(((x3421)*(x3426)))))), ((gconst54)*(((((IkReal(-1.00000000000000))*(x3423)*(x3426)))+(((x3422)*(x3425)))+(((r22)*(x3421)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x3424)))+(((IkReal(-1.00000000000000))*(sj11)*(x3424)*(x3426)))+(((x3422)*(x3423)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3427=IKsin(j10);
IkReal x3428=IKcos(j10);
IkReal x3429=((IkReal(1.00000000000000))*(sj13));
IkReal x3430=((r11)*(sj9));
IkReal x3431=((cj9)*(r01));
IkReal x3432=((IkReal(1.00000000000000))*(cj11));
IkReal x3433=((r21)*(sj14));
IkReal x3434=((cj9)*(r02));
IkReal x3435=((sj13)*(sj9));
IkReal x3436=((cj14)*(r10));
IkReal x3437=((IkReal(1.00000000000000))*(cj13));
IkReal x3438=((cj14)*(r20));
IkReal x3439=((sj11)*(x3427));
IkReal x3440=((sj14)*(x3437));
IkReal x3441=((sj11)*(x3428));
IkReal x3442=((cj14)*(cj9)*(r00));
IkReal x3443=((x3428)*(x3432));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3443)))+(((IkReal(-1.00000000000000))*(r22)*(x3429)))+(((IkReal(-1.00000000000000))*(x3437)*(x3438)))+(x3439)+(((cj13)*(x3433))));
evalcond[1]=((((sj13)*(x3433)))+(((IkReal(-1.00000000000000))*(x3427)*(x3432)))+(((IkReal(-1.00000000000000))*(x3441)))+(((IkReal(-1.00000000000000))*(x3429)*(x3438)))+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x3435)))+(((cj13)*(sj9)*(x3436)))+(x3441)+(((cj11)*(x3427)))+(((cj13)*(x3442)))+(((IkReal(-1.00000000000000))*(x3430)*(x3440)))+(((IkReal(-1.00000000000000))*(x3431)*(x3440)))+(((sj13)*(x3434))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3443)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3437)))+(((x3435)*(x3436)))+(((IkReal(-1.00000000000000))*(sj14)*(x3429)*(x3431)))+(((IkReal(-1.00000000000000))*(x3434)*(x3437)))+(x3439)+(((sj13)*(x3442)))+(((IkReal(-1.00000000000000))*(sj14)*(x3429)*(x3430))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3444=((r21)*(sj14));
IkReal x3445=((cj12)*(cj13));
IkReal x3446=((sj11)*(sj13));
IkReal x3447=((cj14)*(r20));
IkReal x3448=((IkReal(1.00000000000000))*(sj11));
IkReal x3449=((cj12)*(r22));
IkReal x3450=((IkReal(1.00000000000000))*(cj11));
IkReal x3451=((cj13)*(r22));
IkReal x3452=((sj13)*(x3450));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x3444)*(x3452)))+(((x3446)*(x3449)))+(((cj11)*(sj13)*(x3447)))+(((IkReal(-1.00000000000000))*(x3450)*(x3451)))+(((IkReal(-1.00000000000000))*(x3444)*(x3445)*(x3448)))+(((sj11)*(x3445)*(x3447))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x3449)*(x3452)))+(((x3446)*(x3447)))+(((IkReal(-1.00000000000000))*(x3444)*(x3446)))+(((cj11)*(x3444)*(x3445)))+(((IkReal(-1.00000000000000))*(x3445)*(x3447)*(x3450)))+(((IkReal(-1.00000000000000))*(x3448)*(x3451))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(x3444)*(x3452)))+(((x3446)*(x3449)))+(((cj11)*(sj13)*(x3447)))+(((IkReal(-1.00000000000000))*(x3450)*(x3451)))+(((IkReal(-1.00000000000000))*(x3444)*(x3445)*(x3448)))+(((sj11)*(x3445)*(x3447)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(x3449)*(x3452)))+(((x3446)*(x3447)))+(((IkReal(-1.00000000000000))*(x3444)*(x3446)))+(((cj11)*(x3444)*(x3445)))+(((IkReal(-1.00000000000000))*(x3445)*(x3447)*(x3450)))+(((IkReal(-1.00000000000000))*(x3448)*(x3451)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x3453=IKsin(j10);
IkReal x3454=IKcos(j10);
IkReal x3455=((IkReal(1.00000000000000))*(cj13));
IkReal x3456=((cj9)*(r02));
IkReal x3457=((IkReal(1.00000000000000))*(sj13));
IkReal x3458=((r11)*(sj9));
IkReal x3459=((IkReal(1.00000000000000))*(cj14));
IkReal x3460=((cj9)*(r01));
IkReal x3461=((r21)*(sj14));
IkReal x3462=((IkReal(1.00000000000000))*(sj12));
IkReal x3463=((r10)*(sj9));
IkReal x3464=((cj14)*(sj13));
IkReal x3465=((cj14)*(r20));
IkReal x3466=((IkReal(1.00000000000000))*(sj14));
IkReal x3467=((r12)*(sj9));
IkReal x3468=((cj13)*(cj14));
IkReal x3469=((cj9)*(r00));
IkReal x3470=((sj11)*(x3453));
IkReal x3471=((cj11)*(x3453));
IkReal x3472=((sj11)*(x3454));
IkReal x3473=((cj11)*(x3454));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3462)*(x3471)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x3462)*(x3472))));
evalcond[1]=((((cj13)*(x3461)))+(((IkReal(-1.00000000000000))*(r22)*(x3457)))+(((IkReal(-1.00000000000000))*(x3473)))+(((IkReal(-1.00000000000000))*(x3455)*(x3465)))+(x3470));
evalcond[2]=((((cj12)*(x3471)))+(((cj12)*(x3472)))+(((sj13)*(x3461)))+(((IkReal(-1.00000000000000))*(x3457)*(x3465)))+(((cj13)*(r22))));
evalcond[3]=((((sj12)*(x3470)))+(((IkReal(-1.00000000000000))*(x3462)*(x3473)))+(((IkReal(-1.00000000000000))*(x3459)*(x3460)))+(((IkReal(-1.00000000000000))*(x3458)*(x3459)))+(((IkReal(-1.00000000000000))*(x3463)*(x3466)))+(((IkReal(-1.00000000000000))*(x3466)*(x3469))));
evalcond[4]=((((sj13)*(x3456)))+(((x3463)*(x3468)))+(((sj13)*(x3467)))+(((IkReal(-1.00000000000000))*(sj14)*(x3455)*(x3458)))+(x3471)+(x3472)+(((IkReal(-1.00000000000000))*(sj14)*(x3455)*(x3460)))+(((x3468)*(x3469))));
evalcond[5]=((((cj12)*(x3473)))+(((IkReal(-1.00000000000000))*(cj12)*(x3470)))+(((IkReal(-1.00000000000000))*(sj14)*(x3457)*(x3458)))+(((IkReal(-1.00000000000000))*(x3455)*(x3456)))+(((IkReal(-1.00000000000000))*(x3455)*(x3467)))+(((IkReal(-1.00000000000000))*(sj14)*(x3457)*(x3460)))+(((x3463)*(x3464)))+(((x3464)*(x3469))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3474=((cj11)*(sj12));
IkReal x3475=((r22)*(sj13));
IkReal x3476=((r20)*(sj14));
IkReal x3477=((cj14)*(sj11));
IkReal x3478=((cj13)*(r20));
IkReal x3479=((sj11)*(sj12));
IkReal x3480=((cj13)*(r21)*(sj14));
if( IKabs(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((x3475)*(x3479)))+(((sj12)*(x3477)*(x3478)))+(((cj11)*(x3476)))+(((IkReal(-1.00000000000000))*(x3479)*(x3480))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(x3474)*(x3475)))+(((IkReal(-1.00000000000000))*(cj14)*(x3474)*(x3478)))+(((sj11)*(x3476)))+(((r21)*(x3477)))+(((x3474)*(x3480))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((x3475)*(x3479)))+(((sj12)*(x3477)*(x3478)))+(((cj11)*(x3476)))+(((IkReal(-1.00000000000000))*(x3479)*(x3480)))))), ((gconst46)*(((((IkReal(-1.00000000000000))*(x3474)*(x3475)))+(((IkReal(-1.00000000000000))*(cj14)*(x3474)*(x3478)))+(((sj11)*(x3476)))+(((r21)*(x3477)))+(((x3474)*(x3480)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x3481=IKsin(j10);
IkReal x3482=IKcos(j10);
IkReal x3483=((IkReal(1.00000000000000))*(cj13));
IkReal x3484=((cj9)*(r02));
IkReal x3485=((IkReal(1.00000000000000))*(sj13));
IkReal x3486=((r11)*(sj9));
IkReal x3487=((IkReal(1.00000000000000))*(cj14));
IkReal x3488=((cj9)*(r01));
IkReal x3489=((r21)*(sj14));
IkReal x3490=((IkReal(1.00000000000000))*(sj12));
IkReal x3491=((r10)*(sj9));
IkReal x3492=((cj14)*(sj13));
IkReal x3493=((cj14)*(r20));
IkReal x3494=((IkReal(1.00000000000000))*(sj14));
IkReal x3495=((r12)*(sj9));
IkReal x3496=((cj13)*(cj14));
IkReal x3497=((cj9)*(r00));
IkReal x3498=((sj11)*(x3481));
IkReal x3499=((cj11)*(x3481));
IkReal x3500=((sj11)*(x3482));
IkReal x3501=((cj11)*(x3482));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3490)*(x3499)))+(((IkReal(-1.00000000000000))*(x3490)*(x3500)))+(((cj14)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3501)))+(((cj13)*(x3489)))+(x3498)+(((IkReal(-1.00000000000000))*(x3483)*(x3493)))+(((IkReal(-1.00000000000000))*(r22)*(x3485))));
evalcond[2]=((((cj12)*(x3499)))+(((sj13)*(x3489)))+(((cj12)*(x3500)))+(((IkReal(-1.00000000000000))*(x3485)*(x3493)))+(((cj13)*(r22))));
evalcond[3]=((((sj12)*(x3498)))+(((IkReal(-1.00000000000000))*(x3486)*(x3487)))+(((IkReal(-1.00000000000000))*(x3487)*(x3488)))+(((IkReal(-1.00000000000000))*(x3490)*(x3501)))+(((IkReal(-1.00000000000000))*(x3494)*(x3497)))+(((IkReal(-1.00000000000000))*(x3491)*(x3494))));
evalcond[4]=((((x3491)*(x3496)))+(((sj13)*(x3495)))+(x3500)+(x3499)+(((IkReal(-1.00000000000000))*(sj14)*(x3483)*(x3486)))+(((IkReal(-1.00000000000000))*(sj14)*(x3483)*(x3488)))+(((sj13)*(x3484)))+(((x3496)*(x3497))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3483)*(x3484)))+(((x3491)*(x3492)))+(((x3492)*(x3497)))+(((IkReal(-1.00000000000000))*(x3483)*(x3495)))+(((IkReal(-1.00000000000000))*(cj12)*(x3498)))+(((cj12)*(x3501)))+(((IkReal(-1.00000000000000))*(sj14)*(x3485)*(x3488)))+(((IkReal(-1.00000000000000))*(sj14)*(x3485)*(x3486))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x3502=((IkReal(4.00000000000000))*(sj14));
IkReal x3503=((IkReal(4.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(npy)*(x3503)))+(((IkReal(0.380000000000000))*(cj12)))+(((IkReal(0.120000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(npx)*(x3502))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x3503)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x3502)))+(((IkReal(4.00000000000000))*(npz)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(npy)*(x3503)))+(((IkReal(0.380000000000000))*(cj12)))+(((IkReal(0.120000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(npx)*(x3502)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x3503)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x3502)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(npy)*(x3503)))+(((IkReal(0.380000000000000))*(cj12)))+(((IkReal(0.120000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(npx)*(x3502)))))), ((IkReal(-0.940000000000000))+(((IkReal(-0.360000000000000))*(cj13)))+(((cj13)*(npx)*(x3503)))+(((IkReal(-1.00000000000000))*(cj13)*(npy)*(x3502)))+(((IkReal(4.00000000000000))*(npz)*(sj13)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x3504=IKsin(j11);
IkReal x3505=((IkReal(1.00000000000000))*(sj13));
IkReal x3506=((npy)*(sj14));
IkReal x3507=((cj14)*(npx));
IkReal x3508=((IkReal(0.250000000000000))*(x3504));
evalcond[0]=((((cj14)*(npy)))+(((sj12)*(x3508)))+(((IkReal(-0.0950000000000000))*(cj12)))+(((npx)*(sj14)))+(((IkReal(-0.0300000000000000))*(sj12))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j11))))+(((IkReal(-1.00000000000000))*(cj13)*(x3507)))+(((IkReal(0.0900000000000000))*(cj13)))+(((cj13)*(x3506)))+(((IkReal(-1.00000000000000))*(npz)*(x3505))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3505)*(x3507)))+(((cj13)*(npz)))+(((sj13)*(x3506)))+(((IkReal(0.0300000000000000))*(cj12)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-0.0950000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(cj12)*(x3508))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11))))));
dummyeval[0]=((((sj12)*((cj11)*(cj11))))+(((sj12)*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11))))));
dummyeval[0]=((((cj12)*((sj11)*(sj11))))+(((cj12)*((cj11)*(cj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3509=((cj13)*(sj14));
IkReal x3510=((sj14)*(sj9));
IkReal x3511=((r11)*(sj13));
IkReal x3512=((cj13)*(r02));
IkReal x3513=((sj13)*(sj14));
IkReal x3514=((r01)*(sj9));
IkReal x3515=((cj9)*(sj13));
IkReal x3516=((IkReal(1.00000000000000))*(cj9));
IkReal x3517=((r01)*(sj13));
IkReal x3518=((cj14)*(sj13));
IkReal x3519=((IkReal(1.00000000000000))*(npx));
IkReal x3520=((cj14)*(r00));
IkReal x3521=((IkReal(1.00000000000000))*(sj9));
IkReal x3522=((cj14)*(r10));
IkReal x3523=((sj14)*(x3516));
IkReal x3524=((cj13)*(x3521));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj14)*(npy)))+(((npx)*(sj14)))+(((IkReal(0.250000000000000))*(sj11))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(x3519)))+(((IkReal(0.0900000000000000))*(cj13)))+(((npy)*(x3509)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
evalcond[3]=((((r00)*(x3510)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3516)))+(((IkReal(-1.00000000000000))*(r10)*(x3523)))+(((cj14)*(x3514))));
evalcond[4]=((((r21)*(x3513)))+(((IkReal(-1.00000000000000))*(r20)*(x3518)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((IkReal(-1.00000000000000))*(x3518)*(x3519)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((npy)*(x3513))));
evalcond[6]=((((cj13)*(cj9)*(x3522)))+(((IkReal(-1.00000000000000))*(r11)*(x3509)*(x3516)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x3521)))+(((x3509)*(x3514)))+(((IkReal(-1.00000000000000))*(x3520)*(x3524)))+(((r12)*(x3515))));
evalcond[7]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x3518)*(x3521)))+(((IkReal(-1.00000000000000))*(x3511)*(x3523)))+(((x3510)*(x3517)))+(((x3515)*(x3522)))+(((sj9)*(x3512)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3516))));
evalcond[8]=((((r10)*(sj9)*(x3518)))+(((IkReal(-1.00000000000000))*(r12)*(x3524)))+(((IkReal(-1.00000000000000))*(x3512)*(x3516)))+(((x3515)*(x3520)))+(((IkReal(-1.00000000000000))*(r01)*(x3513)*(x3516)))+(((IkReal(-1.00000000000000))*(x3510)*(x3511))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3525=((IkReal(1.00000000000000))*(cj11));
IkReal x3526=((r20)*(sj14));
IkReal x3527=((cj14)*(r21));
IkReal x3528=((cj14)*(cj9)*(r01));
IkReal x3529=((r10)*(sj14)*(sj9));
IkReal x3530=((cj9)*(r00)*(sj14));
IkReal x3531=((cj14)*(r11)*(sj9));
if( IKabs(((gconst49)*(((((sj11)*(x3528)))+(((cj11)*(x3527)))+(((cj11)*(x3526)))+(((sj11)*(x3531)))+(((sj11)*(x3529)))+(((sj11)*(x3530))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(x3525)*(x3530)))+(((sj11)*(x3527)))+(((sj11)*(x3526)))+(((IkReal(-1.00000000000000))*(x3525)*(x3531)))+(((IkReal(-1.00000000000000))*(x3525)*(x3528)))+(((IkReal(-1.00000000000000))*(x3525)*(x3529))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst49)*(((((sj11)*(x3528)))+(((cj11)*(x3527)))+(((cj11)*(x3526)))+(((sj11)*(x3531)))+(((sj11)*(x3529)))+(((sj11)*(x3530)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(x3525)*(x3530)))+(((sj11)*(x3527)))+(((sj11)*(x3526)))+(((IkReal(-1.00000000000000))*(x3525)*(x3531)))+(((IkReal(-1.00000000000000))*(x3525)*(x3528)))+(((IkReal(-1.00000000000000))*(x3525)*(x3529)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3532=IKsin(j10);
IkReal x3533=IKcos(j10);
IkReal x3534=((cj13)*(sj14));
IkReal x3535=((cj13)*(cj14));
IkReal x3536=((r10)*(sj9));
IkReal x3537=((IkReal(1.00000000000000))*(cj9));
IkReal x3538=((sj11)*(x3532));
IkReal x3539=((IkReal(1.00000000000000))*(x3533));
IkReal x3540=((cj11)*(x3532));
IkReal x3541=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x3542=((cj11)*(x3539));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3540)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x3539))));
evalcond[1]=((((r21)*(x3534)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x3535)))+(((IkReal(-1.00000000000000))*(x3542)))+(x3538));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3537)))+(((IkReal(-1.00000000000000))*(sj14)*(x3536)))+(((IkReal(-1.00000000000000))*(cj14)*(x3541)))+(((IkReal(-1.00000000000000))*(x3542)))+(x3538)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3537))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x3534)*(x3537)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(x3534)*(x3541)))+(((cj9)*(r02)*(sj13)))+(((cj9)*(r00)*(x3535)))+(((sj11)*(x3533)))+(((x3535)*(x3536)))+(x3540));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3543=((cj11)*(r20));
IkReal x3544=((IkReal(1.00000000000000))*(cj13));
IkReal x3545=((r21)*(sj14));
IkReal x3546=((r22)*(sj13));
IkReal x3547=((r20)*(sj11));
IkReal x3548=((cj14)*(r21));
if( IKabs(((gconst48)*(((((sj14)*(x3543)))+(((sj11)*(x3546)))+(((IkReal(-1.00000000000000))*(sj11)*(x3544)*(x3545)))+(((cj11)*(x3548)))+(((cj13)*(cj14)*(x3547))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((sj11)*(x3548)))+(((IkReal(-1.00000000000000))*(cj11)*(x3546)))+(((IkReal(-1.00000000000000))*(cj14)*(x3543)*(x3544)))+(((sj14)*(x3547)))+(((cj11)*(cj13)*(x3545))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst48)*(((((sj14)*(x3543)))+(((sj11)*(x3546)))+(((IkReal(-1.00000000000000))*(sj11)*(x3544)*(x3545)))+(((cj11)*(x3548)))+(((cj13)*(cj14)*(x3547)))))), ((gconst48)*(((((sj11)*(x3548)))+(((IkReal(-1.00000000000000))*(cj11)*(x3546)))+(((IkReal(-1.00000000000000))*(cj14)*(x3543)*(x3544)))+(((sj14)*(x3547)))+(((cj11)*(cj13)*(x3545)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3549=IKsin(j10);
IkReal x3550=IKcos(j10);
IkReal x3551=((cj13)*(sj14));
IkReal x3552=((cj13)*(cj14));
IkReal x3553=((r10)*(sj9));
IkReal x3554=((IkReal(1.00000000000000))*(cj9));
IkReal x3555=((sj11)*(x3549));
IkReal x3556=((IkReal(1.00000000000000))*(x3550));
IkReal x3557=((cj11)*(x3549));
IkReal x3558=((IkReal(1.00000000000000))*(r11)*(sj9));
IkReal x3559=((cj11)*(x3556));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3557)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj11)*(x3556))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x3552)))+(((r21)*(x3551)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x3555)+(((IkReal(-1.00000000000000))*(x3559))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x3553)))+(x3555)+(((IkReal(-1.00000000000000))*(x3559)))+(((IkReal(-1.00000000000000))*(cj14)*(x3558)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3554)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3554))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x3551)*(x3554)))+(((cj9)*(r00)*(x3552)))+(x3557)+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((sj11)*(x3550)))+(((IkReal(-1.00000000000000))*(x3551)*(x3558)))+(((x3552)*(x3553))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3560=((cj13)*(sj14));
IkReal x3561=((sj14)*(sj9));
IkReal x3562=((r11)*(sj13));
IkReal x3563=((cj13)*(r02));
IkReal x3564=((sj13)*(sj14));
IkReal x3565=((r01)*(sj9));
IkReal x3566=((cj9)*(sj13));
IkReal x3567=((IkReal(1.00000000000000))*(cj9));
IkReal x3568=((r01)*(sj13));
IkReal x3569=((cj14)*(sj13));
IkReal x3570=((IkReal(1.00000000000000))*(npx));
IkReal x3571=((cj14)*(r00));
IkReal x3572=((IkReal(1.00000000000000))*(sj9));
IkReal x3573=((cj14)*(r10));
IkReal x3574=((sj14)*(x3567));
IkReal x3575=((cj13)*(x3572));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(cj14)*(x3570)))+(((npy)*(x3560)))+(((IkReal(-1.00000000000000))*(npz)*(sj13))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3567)))+(((IkReal(-1.00000000000000))*(r10)*(x3574)))+(((r00)*(x3561)))+(((cj14)*(x3565))));
evalcond[4]=((((r21)*(x3564)))+(((IkReal(-1.00000000000000))*(r20)*(x3569)))+(((cj13)*(r22))));
evalcond[5]=((IkReal(0.0950000000000000))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(x3569)*(x3570)))+(((npy)*(x3564))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r02)*(sj13)*(x3572)))+(((IkReal(-1.00000000000000))*(x3571)*(x3575)))+(((r12)*(x3566)))+(((x3560)*(x3565)))+(((cj13)*(cj9)*(x3573)))+(((IkReal(-1.00000000000000))*(r11)*(x3560)*(x3567))));
evalcond[7]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x3569)*(x3572)))+(((x3561)*(x3568)))+(((sj9)*(x3563)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3567)))+(((IkReal(-1.00000000000000))*(x3562)*(x3574)))+(((x3566)*(x3573))));
evalcond[8]=((((r10)*(sj9)*(x3569)))+(((IkReal(-1.00000000000000))*(x3561)*(x3562)))+(((IkReal(-1.00000000000000))*(r12)*(x3575)))+(((IkReal(-1.00000000000000))*(r01)*(x3564)*(x3567)))+(((IkReal(-1.00000000000000))*(x3563)*(x3567)))+(((x3566)*(x3571))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3576=((IkReal(1.00000000000000))*(cj14));
IkReal x3577=((sj11)*(sj9));
IkReal x3578=((cj9)*(r01));
IkReal x3579=((cj11)*(cj14));
IkReal x3580=((cj9)*(r00));
IkReal x3581=((r10)*(sj14));
IkReal x3582=((cj11)*(sj14));
IkReal x3583=((IkReal(1.00000000000000))*(sj11)*(sj14));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(sj11)*(x3576)*(x3578)))+(((IkReal(-1.00000000000000))*(r11)*(x3576)*(x3577)))+(((IkReal(-1.00000000000000))*(r20)*(x3582)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x3576)))+(((IkReal(-1.00000000000000))*(x3580)*(x3583)))+(((IkReal(-1.00000000000000))*(x3577)*(x3581))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((r11)*(sj9)*(x3579)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x3576)))+(((x3580)*(x3582)))+(((cj11)*(sj9)*(x3581)))+(((x3578)*(x3579)))+(((IkReal(-1.00000000000000))*(r20)*(x3583))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(sj11)*(x3576)*(x3578)))+(((IkReal(-1.00000000000000))*(r11)*(x3576)*(x3577)))+(((IkReal(-1.00000000000000))*(r20)*(x3582)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x3576)))+(((IkReal(-1.00000000000000))*(x3580)*(x3583)))+(((IkReal(-1.00000000000000))*(x3577)*(x3581)))))), ((gconst51)*(((((r11)*(sj9)*(x3579)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x3576)))+(((x3580)*(x3582)))+(((cj11)*(sj9)*(x3581)))+(((x3578)*(x3579)))+(((IkReal(-1.00000000000000))*(r20)*(x3583)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3584=IKsin(j10);
IkReal x3585=IKcos(j10);
IkReal x3586=((cj14)*(sj9));
IkReal x3587=((IkReal(1.00000000000000))*(r11));
IkReal x3588=((cj13)*(sj14));
IkReal x3589=((IkReal(1.00000000000000))*(cj9));
IkReal x3590=((cj13)*(cj14));
IkReal x3591=((cj11)*(x3584));
IkReal x3592=((sj11)*(x3585));
IkReal x3593=((cj11)*(x3585));
IkReal x3594=((sj11)*(x3584));
IkReal x3595=((x3592)+(x3591));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x3595));
evalcond[1]=((((r21)*(x3588)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r20)*(x3590)))+(((IkReal(-1.00000000000000))*(x3593)))+(x3594));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3594)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3589)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(x3593)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3589)))+(((IkReal(-1.00000000000000))*(x3586)*(x3587))));
evalcond[3]=((((cj9)*(r00)*(x3590)))+(((r12)*(sj13)*(sj9)))+(x3595)+(((cj9)*(r02)*(sj13)))+(((cj13)*(r10)*(x3586)))+(((IkReal(-1.00000000000000))*(r01)*(x3588)*(x3589)))+(((IkReal(-1.00000000000000))*(sj9)*(x3587)*(x3588))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3596=((cj13)*(sj11));
IkReal x3597=((r21)*(sj14));
IkReal x3598=((cj14)*(r20));
IkReal x3599=((cj11)*(cj13));
IkReal x3600=((r22)*(sj13));
IkReal x3601=((r20)*(sj14));
IkReal x3602=((cj14)*(r21));
if( IKabs(((gconst50)*(((((cj11)*(x3601)))+(((IkReal(-1.00000000000000))*(x3596)*(x3598)))+(((x3596)*(x3597)))+(((cj11)*(x3602)))+(((IkReal(-1.00000000000000))*(sj11)*(x3600))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((sj11)*(x3602)))+(((cj11)*(x3600)))+(((sj11)*(x3601)))+(((IkReal(-1.00000000000000))*(x3597)*(x3599)))+(((x3598)*(x3599))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst50)*(((((cj11)*(x3601)))+(((IkReal(-1.00000000000000))*(x3596)*(x3598)))+(((x3596)*(x3597)))+(((cj11)*(x3602)))+(((IkReal(-1.00000000000000))*(sj11)*(x3600)))))), ((gconst50)*(((((sj11)*(x3602)))+(((cj11)*(x3600)))+(((sj11)*(x3601)))+(((IkReal(-1.00000000000000))*(x3597)*(x3599)))+(((x3598)*(x3599)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3603=IKsin(j10);
IkReal x3604=IKcos(j10);
IkReal x3605=((cj14)*(sj9));
IkReal x3606=((IkReal(1.00000000000000))*(r11));
IkReal x3607=((cj13)*(sj14));
IkReal x3608=((IkReal(1.00000000000000))*(cj9));
IkReal x3609=((cj13)*(cj14));
IkReal x3610=((cj11)*(x3603));
IkReal x3611=((sj11)*(x3604));
IkReal x3612=((cj11)*(x3604));
IkReal x3613=((sj11)*(x3603));
IkReal x3614=((x3610)+(x3611));
evalcond[0]=((((r20)*(sj14)))+(((cj14)*(r21)))+(x3614));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x3609)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r21)*(x3607)))+(x3613)+(((IkReal(-1.00000000000000))*(x3612))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3608)))+(((IkReal(-1.00000000000000))*(x3613)))+(x3612)+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3608)))+(((IkReal(-1.00000000000000))*(x3605)*(x3606))));
evalcond[3]=((((cj13)*(r10)*(x3605)))+(((r12)*(sj13)*(sj9)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(sj9)*(x3606)*(x3607)))+(x3614)+(((cj9)*(r00)*(x3609)))+(((IkReal(-1.00000000000000))*(r01)*(x3607)*(x3608))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3615=((IkReal(1.00000000000000))*(r11));
IkReal x3616=((cj14)*(sj9));
IkReal x3617=((cj13)*(sj14));
IkReal x3618=((sj14)*(sj9));
IkReal x3619=((cj9)*(sj14));
IkReal x3620=((IkReal(1.00000000000000))*(r10));
IkReal x3621=((r02)*(sj9));
IkReal x3622=((cj9)*(sj13));
IkReal x3623=((IkReal(1.00000000000000))*(cj14));
IkReal x3624=((IkReal(1.00000000000000))*(r00));
IkReal x3625=((IkReal(1.00000000000000))*(sj13));
IkReal x3626=((cj14)*(r10));
IkReal x3627=((cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((npy)*(x3617)))+(((IkReal(-1.00000000000000))*(npz)*(x3625)))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(0.0900000000000000))*(cj13)))+(((IkReal(-1.00000000000000))*(cj13)*(npx)*(x3623))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x3619)*(x3620)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x3615)))+(((r01)*(x3616)))+(((r00)*(x3618))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj11)))+(((npy)*(sj13)*(sj14)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(-1.00000000000000))*(npx)*(sj13)*(x3623))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3623)))+(((IkReal(-1.00000000000000))*(x3615)*(x3616)))+(((IkReal(-1.00000000000000))*(x3619)*(x3624)))+(((IkReal(-1.00000000000000))*(x3618)*(x3620))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj13)*(x3616)*(x3624)))+(((x3626)*(x3627)))+(((r01)*(sj9)*(x3617)))+(((IkReal(-1.00000000000000))*(cj9)*(x3615)*(x3617)))+(((IkReal(-1.00000000000000))*(x3621)*(x3625)))+(((r12)*(x3622))));
evalcond[8]=((((r01)*(sj13)*(x3618)))+(((IkReal(-1.00000000000000))*(sj13)*(x3616)*(x3624)))+(((IkReal(-1.00000000000000))*(sj13)*(x3615)*(x3619)))+(((IkReal(-1.00000000000000))*(r12)*(x3627)))+(((x3622)*(x3626)))+(((cj13)*(x3621))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3628=((cj13)*(sj14));
IkReal x3629=((IkReal(1.00000000000000))*(cj11));
IkReal x3630=((r11)*(sj9));
IkReal x3631=((cj11)*(sj13));
IkReal x3632=((r12)*(sj9));
IkReal x3633=((r10)*(sj9));
IkReal x3634=((sj11)*(sj13));
IkReal x3635=((cj9)*(r02));
IkReal x3636=((cj9)*(r01));
IkReal x3637=((IkReal(1.00000000000000))*(sj11));
IkReal x3638=((cj9)*(r00));
IkReal x3639=((cj13)*(cj14)*(sj11));
IkReal x3640=((cj11)*(cj13)*(cj14));
if( IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x3637)))+(((x3633)*(x3640)))+(((IkReal(-1.00000000000000))*(x3628)*(x3629)*(x3636)))+(((IkReal(-1.00000000000000))*(r22)*(x3634)))+(((x3638)*(x3640)))+(((r21)*(sj11)*(x3628)))+(((x3631)*(x3635)))+(((x3631)*(x3632)))+(((IkReal(-1.00000000000000))*(x3628)*(x3629)*(x3630))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((x3632)*(x3634)))+(((r20)*(x3640)))+(((IkReal(-1.00000000000000))*(r21)*(x3628)*(x3629)))+(((IkReal(-1.00000000000000))*(x3628)*(x3630)*(x3637)))+(((r22)*(x3631)))+(((IkReal(-1.00000000000000))*(x3628)*(x3636)*(x3637)))+(((x3634)*(x3635)))+(((x3638)*(x3639)))+(((x3633)*(x3639))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst53)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)*(x3637)))+(((x3633)*(x3640)))+(((IkReal(-1.00000000000000))*(x3628)*(x3629)*(x3636)))+(((IkReal(-1.00000000000000))*(r22)*(x3634)))+(((x3638)*(x3640)))+(((r21)*(sj11)*(x3628)))+(((x3631)*(x3635)))+(((x3631)*(x3632)))+(((IkReal(-1.00000000000000))*(x3628)*(x3629)*(x3630)))))), ((gconst53)*(((((x3632)*(x3634)))+(((r20)*(x3640)))+(((IkReal(-1.00000000000000))*(r21)*(x3628)*(x3629)))+(((IkReal(-1.00000000000000))*(x3628)*(x3630)*(x3637)))+(((r22)*(x3631)))+(((IkReal(-1.00000000000000))*(x3628)*(x3636)*(x3637)))+(((x3634)*(x3635)))+(((x3638)*(x3639)))+(((x3633)*(x3639)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3641=IKsin(j10);
IkReal x3642=IKcos(j10);
IkReal x3643=((IkReal(1.00000000000000))*(sj13));
IkReal x3644=((r11)*(sj9));
IkReal x3645=((cj9)*(r01));
IkReal x3646=((r21)*(sj14));
IkReal x3647=((cj9)*(r02));
IkReal x3648=((sj13)*(sj9));
IkReal x3649=((cj14)*(r10));
IkReal x3650=((IkReal(1.00000000000000))*(cj13));
IkReal x3651=((cj14)*(r20));
IkReal x3652=((cj11)*(x3641));
IkReal x3653=((sj11)*(x3642));
IkReal x3654=((sj14)*(x3650));
IkReal x3655=((sj11)*(x3641));
IkReal x3656=((cj11)*(x3642));
IkReal x3657=((cj14)*(cj9)*(r00));
IkReal x3658=((x3652)+(x3653));
evalcond[0]=((((cj13)*(x3646)))+(((IkReal(-1.00000000000000))*(r22)*(x3643)))+(((IkReal(-1.00000000000000))*(x3650)*(x3651)))+(((IkReal(-1.00000000000000))*(x3656)))+(x3655));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3643)*(x3651)))+(x3658)+(((sj13)*(x3646)))+(((cj13)*(r22))));
evalcond[2]=((((r12)*(x3648)))+(((cj13)*(x3657)))+(((IkReal(-1.00000000000000))*(x3644)*(x3654)))+(((sj13)*(x3647)))+(x3658)+(((cj13)*(sj9)*(x3649)))+(((IkReal(-1.00000000000000))*(x3645)*(x3654))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3647)*(x3650)))+(((IkReal(-1.00000000000000))*(sj14)*(x3643)*(x3645)))+(((x3648)*(x3649)))+(((IkReal(-1.00000000000000))*(x3655)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3650)))+(((IkReal(-1.00000000000000))*(sj14)*(x3643)*(x3644)))+(((sj13)*(x3657)))+(x3656));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3659=((cj13)*(sj11));
IkReal x3660=((r21)*(sj14));
IkReal x3661=((cj11)*(cj13));
IkReal x3662=((cj11)*(sj13));
IkReal x3663=((sj11)*(sj13));
IkReal x3664=((IkReal(1.00000000000000))*(cj14)*(r20));
if( IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(x3659)*(x3664)))+(((IkReal(-1.00000000000000))*(x3662)*(x3664)))+(((r22)*(x3661)))+(((x3660)*(x3662)))+(((IkReal(-1.00000000000000))*(r22)*(x3663)))+(((x3659)*(x3660))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(x3663)*(x3664)))+(((r22)*(x3662)))+(((IkReal(-1.00000000000000))*(x3660)*(x3661)))+(((x3660)*(x3663)))+(((cj14)*(r20)*(x3661)))+(((r22)*(x3659))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst52)*(((((IkReal(-1.00000000000000))*(x3659)*(x3664)))+(((IkReal(-1.00000000000000))*(x3662)*(x3664)))+(((r22)*(x3661)))+(((x3660)*(x3662)))+(((IkReal(-1.00000000000000))*(r22)*(x3663)))+(((x3659)*(x3660)))))), ((gconst52)*(((((IkReal(-1.00000000000000))*(x3663)*(x3664)))+(((r22)*(x3662)))+(((IkReal(-1.00000000000000))*(x3660)*(x3661)))+(((x3660)*(x3663)))+(((cj14)*(r20)*(x3661)))+(((r22)*(x3659)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3665=IKsin(j10);
IkReal x3666=IKcos(j10);
IkReal x3667=((IkReal(1.00000000000000))*(sj13));
IkReal x3668=((r11)*(sj9));
IkReal x3669=((cj9)*(r01));
IkReal x3670=((r21)*(sj14));
IkReal x3671=((cj9)*(r02));
IkReal x3672=((sj13)*(sj9));
IkReal x3673=((cj14)*(r10));
IkReal x3674=((IkReal(1.00000000000000))*(cj13));
IkReal x3675=((cj14)*(r20));
IkReal x3676=((cj11)*(x3665));
IkReal x3677=((sj11)*(x3666));
IkReal x3678=((sj14)*(x3674));
IkReal x3679=((sj11)*(x3665));
IkReal x3680=((cj11)*(x3666));
IkReal x3681=((cj14)*(cj9)*(r00));
IkReal x3682=((x3676)+(x3677));
evalcond[0]=((x3679)+(((IkReal(-1.00000000000000))*(x3674)*(x3675)))+(((IkReal(-1.00000000000000))*(r22)*(x3667)))+(((IkReal(-1.00000000000000))*(x3680)))+(((cj13)*(x3670))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3667)*(x3675)))+(((sj13)*(x3670)))+(x3682)+(((cj13)*(r22))));
evalcond[2]=((((cj13)*(sj9)*(x3673)))+(((IkReal(-1.00000000000000))*(x3669)*(x3678)))+(((r12)*(x3672)))+(((cj13)*(x3681)))+(((sj13)*(x3671)))+(((IkReal(-1.00000000000000))*(x3668)*(x3678)))+(x3682));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3671)*(x3674)))+(((x3672)*(x3673)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3674)))+(((IkReal(-1.00000000000000))*(sj14)*(x3667)*(x3668)))+(((sj13)*(x3681)))+(((IkReal(-1.00000000000000))*(x3679)))+(x3680)+(((IkReal(-1.00000000000000))*(sj14)*(x3667)*(x3669))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3683=((IkReal(1.00000000000000))*(r11));
IkReal x3684=((cj14)*(sj9));
IkReal x3685=((cj13)*(sj14));
IkReal x3686=((sj14)*(sj9));
IkReal x3687=((cj9)*(sj14));
IkReal x3688=((IkReal(1.00000000000000))*(r10));
IkReal x3689=((r02)*(sj9));
IkReal x3690=((cj9)*(sj13));
IkReal x3691=((IkReal(1.00000000000000))*(cj14));
IkReal x3692=((IkReal(1.00000000000000))*(r00));
IkReal x3693=((IkReal(1.00000000000000))*(sj13));
IkReal x3694=((cj14)*(r10));
IkReal x3695=((cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj14)*(npy)))+(((npx)*(sj14))));
evalcond[2]=((((r20)*(sj14)))+(((cj14)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(cj13)*(npx)*(x3691)))+(((IkReal(-1.00000000000000))*(npz)*(x3693)))+(((IkReal(0.0900000000000000))*(cj13)))+(((npy)*(x3685))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x3687)*(x3688)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x3683)))+(((r00)*(x3686)))+(((r01)*(x3684))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((npy)*(sj13)*(sj14)))+(((cj13)*(npz)))+(((IkReal(0.0900000000000000))*(sj13)))+(((IkReal(0.250000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(npx)*(sj13)*(x3691))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3691)))+(((IkReal(-1.00000000000000))*(x3683)*(x3684)))+(((IkReal(-1.00000000000000))*(x3687)*(x3692)))+(((IkReal(-1.00000000000000))*(x3686)*(x3688))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj13)*(x3684)*(x3692)))+(((IkReal(-1.00000000000000))*(cj9)*(x3683)*(x3685)))+(((IkReal(-1.00000000000000))*(x3689)*(x3693)))+(((r12)*(x3690)))+(((x3694)*(x3695)))+(((r01)*(sj9)*(x3685))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj13)*(x3684)*(x3692)))+(((x3690)*(x3694)))+(((cj13)*(x3689)))+(((IkReal(-1.00000000000000))*(r12)*(x3695)))+(((IkReal(-1.00000000000000))*(sj13)*(x3683)*(x3687)))+(((r01)*(sj13)*(x3686))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj11)*(cj11))))+(((IkReal(-1.00000000000000))*((sj11)*(sj11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3696=((cj13)*(sj14));
IkReal x3697=((IkReal(1.00000000000000))*(cj11));
IkReal x3698=((r11)*(sj9));
IkReal x3699=((IkReal(1.00000000000000))*(sj11));
IkReal x3700=((cj13)*(cj14));
IkReal x3701=((cj11)*(sj13));
IkReal x3702=((r12)*(sj9));
IkReal x3703=((cj9)*(r01));
IkReal x3704=((sj11)*(sj13));
IkReal x3705=((cj9)*(r02));
IkReal x3706=((r10)*(sj9));
IkReal x3707=((cj9)*(r00));
if( IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(x3696)*(x3697)*(x3698)))+(((x3701)*(x3702)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3699)))+(((cj11)*(x3700)*(x3706)))+(((IkReal(-1.00000000000000))*(x3696)*(x3697)*(x3703)))+(((IkReal(-1.00000000000000))*(r20)*(x3699)*(x3700)))+(((cj11)*(x3700)*(x3707)))+(((x3701)*(x3705)))+(((r21)*(sj11)*(x3696))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(x3696)*(x3698)*(x3699)))+(((r22)*(x3701)))+(((x3704)*(x3705)))+(((x3702)*(x3704)))+(((sj11)*(x3700)*(x3706)))+(((cj11)*(r20)*(x3700)))+(((sj11)*(x3700)*(x3707)))+(((IkReal(-1.00000000000000))*(r21)*(x3696)*(x3697)))+(((IkReal(-1.00000000000000))*(x3696)*(x3699)*(x3703))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst55)*(((((IkReal(-1.00000000000000))*(x3696)*(x3697)*(x3698)))+(((x3701)*(x3702)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3699)))+(((cj11)*(x3700)*(x3706)))+(((IkReal(-1.00000000000000))*(x3696)*(x3697)*(x3703)))+(((IkReal(-1.00000000000000))*(r20)*(x3699)*(x3700)))+(((cj11)*(x3700)*(x3707)))+(((x3701)*(x3705)))+(((r21)*(sj11)*(x3696)))))), ((gconst55)*(((((IkReal(-1.00000000000000))*(x3696)*(x3698)*(x3699)))+(((r22)*(x3701)))+(((x3704)*(x3705)))+(((x3702)*(x3704)))+(((sj11)*(x3700)*(x3706)))+(((cj11)*(r20)*(x3700)))+(((sj11)*(x3700)*(x3707)))+(((IkReal(-1.00000000000000))*(r21)*(x3696)*(x3697)))+(((IkReal(-1.00000000000000))*(x3696)*(x3699)*(x3703)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3708=IKsin(j10);
IkReal x3709=IKcos(j10);
IkReal x3710=((IkReal(1.00000000000000))*(sj13));
IkReal x3711=((r11)*(sj9));
IkReal x3712=((cj9)*(r01));
IkReal x3713=((IkReal(1.00000000000000))*(cj11));
IkReal x3714=((r21)*(sj14));
IkReal x3715=((cj9)*(r02));
IkReal x3716=((sj13)*(sj9));
IkReal x3717=((cj14)*(r10));
IkReal x3718=((IkReal(1.00000000000000))*(cj13));
IkReal x3719=((cj14)*(r20));
IkReal x3720=((sj11)*(x3708));
IkReal x3721=((sj14)*(x3718));
IkReal x3722=((sj11)*(x3709));
IkReal x3723=((cj14)*(cj9)*(r00));
IkReal x3724=((x3709)*(x3713));
evalcond[0]=((x3720)+(((IkReal(-1.00000000000000))*(x3718)*(x3719)))+(((cj13)*(x3714)))+(((IkReal(-1.00000000000000))*(x3724)))+(((IkReal(-1.00000000000000))*(r22)*(x3710))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3722)))+(((IkReal(-1.00000000000000))*(x3708)*(x3713)))+(((sj13)*(x3714)))+(((IkReal(-1.00000000000000))*(x3710)*(x3719)))+(((cj13)*(r22))));
evalcond[2]=((x3722)+(((cj11)*(x3708)))+(((sj13)*(x3715)))+(((IkReal(-1.00000000000000))*(x3712)*(x3721)))+(((cj13)*(x3723)))+(((r12)*(x3716)))+(((cj13)*(sj9)*(x3717)))+(((IkReal(-1.00000000000000))*(x3711)*(x3721))));
evalcond[3]=((x3720)+(((x3716)*(x3717)))+(((sj13)*(x3723)))+(((IkReal(-1.00000000000000))*(sj14)*(x3710)*(x3712)))+(((IkReal(-1.00000000000000))*(x3724)))+(((IkReal(-1.00000000000000))*(sj14)*(x3710)*(x3711)))+(((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3718)))+(((IkReal(-1.00000000000000))*(x3715)*(x3718))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3725=((cj13)*(sj11));
IkReal x3726=((r21)*(sj14));
IkReal x3727=((cj11)*(cj13));
IkReal x3728=((IkReal(1.00000000000000))*(sj13));
IkReal x3729=((sj11)*(sj13));
IkReal x3730=((cj14)*(r20));
if( IKabs(((gconst54)*(((((cj11)*(sj13)*(x3726)))+(((IkReal(-1.00000000000000))*(cj11)*(x3728)*(x3730)))+(((r22)*(x3729)))+(((r22)*(x3727)))+(((IkReal(-1.00000000000000))*(x3725)*(x3726)))+(((x3725)*(x3730))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((x3726)*(x3729)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x3728)))+(((IkReal(-1.00000000000000))*(x3727)*(x3730)))+(((IkReal(-1.00000000000000))*(sj11)*(x3728)*(x3730)))+(((x3726)*(x3727)))+(((r22)*(x3725))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst54)*(((((cj11)*(sj13)*(x3726)))+(((IkReal(-1.00000000000000))*(cj11)*(x3728)*(x3730)))+(((r22)*(x3729)))+(((r22)*(x3727)))+(((IkReal(-1.00000000000000))*(x3725)*(x3726)))+(((x3725)*(x3730)))))), ((gconst54)*(((((x3726)*(x3729)))+(((IkReal(-1.00000000000000))*(cj11)*(r22)*(x3728)))+(((IkReal(-1.00000000000000))*(x3727)*(x3730)))+(((IkReal(-1.00000000000000))*(sj11)*(x3728)*(x3730)))+(((x3726)*(x3727)))+(((r22)*(x3725)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x3731=IKsin(j10);
IkReal x3732=IKcos(j10);
IkReal x3733=((IkReal(1.00000000000000))*(sj13));
IkReal x3734=((r11)*(sj9));
IkReal x3735=((cj9)*(r01));
IkReal x3736=((IkReal(1.00000000000000))*(cj11));
IkReal x3737=((r21)*(sj14));
IkReal x3738=((cj9)*(r02));
IkReal x3739=((sj13)*(sj9));
IkReal x3740=((cj14)*(r10));
IkReal x3741=((IkReal(1.00000000000000))*(cj13));
IkReal x3742=((cj14)*(r20));
IkReal x3743=((sj11)*(x3731));
IkReal x3744=((sj14)*(x3741));
IkReal x3745=((sj11)*(x3732));
IkReal x3746=((cj14)*(cj9)*(r00));
IkReal x3747=((x3732)*(x3736));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x3733)))+(((IkReal(-1.00000000000000))*(x3741)*(x3742)))+(x3743)+(((cj13)*(x3737)))+(((IkReal(-1.00000000000000))*(x3747))));
evalcond[1]=((((sj13)*(x3737)))+(((IkReal(-1.00000000000000))*(x3731)*(x3736)))+(((IkReal(-1.00000000000000))*(x3745)))+(((IkReal(-1.00000000000000))*(x3733)*(x3742)))+(((cj13)*(r22))));
evalcond[2]=((((cj11)*(x3731)))+(((cj13)*(sj9)*(x3740)))+(((sj13)*(x3738)))+(((cj13)*(x3746)))+(((IkReal(-1.00000000000000))*(x3734)*(x3744)))+(((r12)*(x3739)))+(x3745)+(((IkReal(-1.00000000000000))*(x3735)*(x3744))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj9)*(x3741)))+(((x3739)*(x3740)))+(((IkReal(-1.00000000000000))*(sj14)*(x3733)*(x3734)))+(((sj13)*(x3746)))+(((IkReal(-1.00000000000000))*(sj14)*(x3733)*(x3735)))+(((IkReal(-1.00000000000000))*(x3738)*(x3741)))+(x3743)+(((IkReal(-1.00000000000000))*(x3747))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3748=((r21)*(sj14));
IkReal x3749=((cj12)*(cj13));
IkReal x3750=((sj11)*(sj13));
IkReal x3751=((cj14)*(r20));
IkReal x3752=((IkReal(1.00000000000000))*(sj11));
IkReal x3753=((cj12)*(r22));
IkReal x3754=((IkReal(1.00000000000000))*(cj11));
IkReal x3755=((cj13)*(r22));
IkReal x3756=((sj13)*(x3754));
if( IKabs(((gconst47)*(((((sj11)*(x3749)*(x3751)))+(((cj11)*(sj13)*(x3751)))+(((IkReal(-1.00000000000000))*(x3748)*(x3756)))+(((IkReal(-1.00000000000000))*(x3754)*(x3755)))+(((IkReal(-1.00000000000000))*(x3748)*(x3749)*(x3752)))+(((x3750)*(x3753))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((cj11)*(x3748)*(x3749)))+(((IkReal(-1.00000000000000))*(x3748)*(x3750)))+(((IkReal(-1.00000000000000))*(x3753)*(x3756)))+(((IkReal(-1.00000000000000))*(x3752)*(x3755)))+(((x3750)*(x3751)))+(((IkReal(-1.00000000000000))*(x3749)*(x3751)*(x3754))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst47)*(((((sj11)*(x3749)*(x3751)))+(((cj11)*(sj13)*(x3751)))+(((IkReal(-1.00000000000000))*(x3748)*(x3756)))+(((IkReal(-1.00000000000000))*(x3754)*(x3755)))+(((IkReal(-1.00000000000000))*(x3748)*(x3749)*(x3752)))+(((x3750)*(x3753)))))), ((gconst47)*(((((cj11)*(x3748)*(x3749)))+(((IkReal(-1.00000000000000))*(x3748)*(x3750)))+(((IkReal(-1.00000000000000))*(x3753)*(x3756)))+(((IkReal(-1.00000000000000))*(x3752)*(x3755)))+(((x3750)*(x3751)))+(((IkReal(-1.00000000000000))*(x3749)*(x3751)*(x3754)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x3757=IKsin(j10);
IkReal x3758=IKcos(j10);
IkReal x3759=((IkReal(1.00000000000000))*(cj13));
IkReal x3760=((cj9)*(r02));
IkReal x3761=((IkReal(1.00000000000000))*(sj13));
IkReal x3762=((r11)*(sj9));
IkReal x3763=((IkReal(1.00000000000000))*(cj14));
IkReal x3764=((cj9)*(r01));
IkReal x3765=((r21)*(sj14));
IkReal x3766=((IkReal(1.00000000000000))*(sj12));
IkReal x3767=((r10)*(sj9));
IkReal x3768=((cj14)*(sj13));
IkReal x3769=((cj14)*(r20));
IkReal x3770=((IkReal(1.00000000000000))*(sj14));
IkReal x3771=((r12)*(sj9));
IkReal x3772=((cj13)*(cj14));
IkReal x3773=((cj9)*(r00));
IkReal x3774=((sj11)*(x3757));
IkReal x3775=((cj11)*(x3757));
IkReal x3776=((sj11)*(x3758));
IkReal x3777=((cj11)*(x3758));
evalcond[0]=((((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3766)*(x3775)))+(((IkReal(-1.00000000000000))*(x3766)*(x3776)))+(((cj14)*(r21))));
evalcond[1]=((((cj13)*(x3765)))+(((IkReal(-1.00000000000000))*(r22)*(x3761)))+(((IkReal(-1.00000000000000))*(x3759)*(x3769)))+(x3774)+(((IkReal(-1.00000000000000))*(x3777))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3761)*(x3769)))+(((cj12)*(x3775)))+(((sj13)*(x3765)))+(((cj12)*(x3776)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3770)*(x3773)))+(((IkReal(-1.00000000000000))*(x3767)*(x3770)))+(((sj12)*(x3774)))+(((IkReal(-1.00000000000000))*(x3762)*(x3763)))+(((IkReal(-1.00000000000000))*(x3763)*(x3764)))+(((IkReal(-1.00000000000000))*(x3766)*(x3777))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj14)*(x3759)*(x3764)))+(((sj13)*(x3771)))+(((x3772)*(x3773)))+(((IkReal(-1.00000000000000))*(sj14)*(x3759)*(x3762)))+(((sj13)*(x3760)))+(((x3767)*(x3772)))+(x3776)+(x3775));
evalcond[5]=((((cj12)*(x3777)))+(((x3768)*(x3773)))+(((IkReal(-1.00000000000000))*(x3759)*(x3760)))+(((IkReal(-1.00000000000000))*(sj14)*(x3761)*(x3762)))+(((x3767)*(x3768)))+(((IkReal(-1.00000000000000))*(sj14)*(x3761)*(x3764)))+(((IkReal(-1.00000000000000))*(x3759)*(x3771)))+(((IkReal(-1.00000000000000))*(cj12)*(x3774))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x3778=((cj11)*(sj12));
IkReal x3779=((r22)*(sj13));
IkReal x3780=((r20)*(sj14));
IkReal x3781=((cj14)*(sj11));
IkReal x3782=((cj13)*(r20));
IkReal x3783=((sj11)*(sj12));
IkReal x3784=((cj13)*(r21)*(sj14));
if( IKabs(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((sj12)*(x3781)*(x3782)))+(((cj11)*(x3780)))+(((x3779)*(x3783)))+(((IkReal(-1.00000000000000))*(x3783)*(x3784))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((sj11)*(x3780)))+(((x3778)*(x3784)))+(((IkReal(-1.00000000000000))*(cj14)*(x3778)*(x3782)))+(((r21)*(x3781)))+(((IkReal(-1.00000000000000))*(x3778)*(x3779))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst46)*(((((cj11)*(cj14)*(r21)))+(((sj12)*(x3781)*(x3782)))+(((cj11)*(x3780)))+(((x3779)*(x3783)))+(((IkReal(-1.00000000000000))*(x3783)*(x3784)))))), ((gconst46)*(((((sj11)*(x3780)))+(((x3778)*(x3784)))+(((IkReal(-1.00000000000000))*(cj14)*(x3778)*(x3782)))+(((r21)*(x3781)))+(((IkReal(-1.00000000000000))*(x3778)*(x3779)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x3785=IKsin(j10);
IkReal x3786=IKcos(j10);
IkReal x3787=((IkReal(1.00000000000000))*(cj13));
IkReal x3788=((cj9)*(r02));
IkReal x3789=((IkReal(1.00000000000000))*(sj13));
IkReal x3790=((r11)*(sj9));
IkReal x3791=((IkReal(1.00000000000000))*(cj14));
IkReal x3792=((cj9)*(r01));
IkReal x3793=((r21)*(sj14));
IkReal x3794=((IkReal(1.00000000000000))*(sj12));
IkReal x3795=((r10)*(sj9));
IkReal x3796=((cj14)*(sj13));
IkReal x3797=((cj14)*(r20));
IkReal x3798=((IkReal(1.00000000000000))*(sj14));
IkReal x3799=((r12)*(sj9));
IkReal x3800=((cj13)*(cj14));
IkReal x3801=((cj9)*(r00));
IkReal x3802=((sj11)*(x3785));
IkReal x3803=((cj11)*(x3785));
IkReal x3804=((sj11)*(x3786));
IkReal x3805=((cj11)*(x3786));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3794)*(x3803)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3794)*(x3804)))+(((cj14)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3805)))+(((cj13)*(x3793)))+(x3802)+(((IkReal(-1.00000000000000))*(r22)*(x3789)))+(((IkReal(-1.00000000000000))*(x3787)*(x3797))));
evalcond[2]=((((sj13)*(x3793)))+(((IkReal(-1.00000000000000))*(x3789)*(x3797)))+(((cj12)*(x3803)))+(((cj12)*(x3804)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3795)*(x3798)))+(((IkReal(-1.00000000000000))*(x3798)*(x3801)))+(((IkReal(-1.00000000000000))*(x3794)*(x3805)))+(((IkReal(-1.00000000000000))*(x3790)*(x3791)))+(((IkReal(-1.00000000000000))*(x3791)*(x3792)))+(((sj12)*(x3802))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj14)*(x3787)*(x3792)))+(((x3795)*(x3800)))+(((IkReal(-1.00000000000000))*(sj14)*(x3787)*(x3790)))+(x3804)+(x3803)+(((sj13)*(x3788)))+(((sj13)*(x3799)))+(((x3800)*(x3801))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3787)*(x3788)))+(((IkReal(-1.00000000000000))*(x3787)*(x3799)))+(((IkReal(-1.00000000000000))*(sj14)*(x3789)*(x3792)))+(((IkReal(-1.00000000000000))*(cj12)*(x3802)))+(((IkReal(-1.00000000000000))*(sj14)*(x3789)*(x3790)))+(((x3796)*(x3801)))+(((cj12)*(x3805)))+(((x3795)*(x3796))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - main_withHands (14707e2e4bf64614375cb20f7fca0006)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
