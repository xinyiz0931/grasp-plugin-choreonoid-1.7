/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2015-04-22 02:05:18.793119
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#else
#ifndef isnan
#define isnan(x) std::isnan(x)
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKcos(j[2]);
x3=IKsin(j[1]);
x4=IKsin(j[2]);
x5=IKsin(j[3]);
x6=IKcos(j[3]);
x7=IKsin(j[0]);
x8=IKsin(j[4]);
x9=IKcos(j[4]);
x10=IKsin(j[5]);
x11=IKcos(j[5]);
x12=((IkReal(1.00000000000000))*(x9));
x13=((IkReal(0.00776462480902323))*(x7));
x14=((IkReal(0.965925348838040))*(x9));
x15=((IkReal(1.00000000000000))*(x5));
x16=((IkReal(0.0990000000000000))*(x0));
x17=((IkReal(0.0990000000000000))*(x7));
x18=((IkReal(0.258820826967441))*(x10));
x19=((IkReal(0.965925348838040))*(x10));
x20=((IkReal(0.258820826967441))*(x11));
x21=((IkReal(0.965925348838040))*(x11));
x22=((IkReal(0.0900000000000000))*(x0));
x23=((IkReal(0.0900000000000000))*(x7));
x24=((IkReal(0.0300000000000000))*(x0));
x25=((IkReal(1.00000000000000))*(x8));
x26=((IkReal(0.965925348838040))*(x8));
x27=((IkReal(0.258820826967441))*(x8));
x28=((IkReal(1.00000000000000))*(x7));
x29=((IkReal(0.258820826967441))*(x9));
x30=((IkReal(1.00000000000000))*(x2));
x31=((IkReal(0.0900000000000000))*(x2));
x32=((IkReal(0.0900000000000000))*(x6));
x33=((IkReal(1.00000000000000))*(x0));
x34=((IkReal(1.00000000000000))*(x6));
x35=((IkReal(0.0289777604651412))*(x7));
x36=((x3)*(x4));
x37=((x1)*(x2));
x38=((x1)*(x4));
x39=((IkReal(-0.0990000000000000))*(x6));
x40=((x3)*(x7));
x41=((x0)*(x5));
x42=((x2)*(x3));
x43=((x15)*(x7));
x44=((x28)*(x6));
x45=((x29)*(x6));
x46=((x0)*(x42));
x47=((x33)*(x36));
x48=((x28)*(x36));
x49=((x36)+(((IkReal(-1.00000000000000))*(x1)*(x30))));
x50=((((IkReal(0.0900000000000000))*(x36)))+(((IkReal(-1.00000000000000))*(x1)*(x31))));
x51=((((IkReal(-0.0990000000000000))*(x36)))+(((IkReal(0.0990000000000000))*(x37))));
x52=((((IkReal(1.00000000000000))*(x38)))+(((x3)*(x30))));
x53=((IkReal(-1.00000000000000))*(x52));
x54=((((IkReal(0.0900000000000000))*(x38)))+(((x3)*(x31))));
x55=((((IkReal(0.0990000000000000))*(x42)))+(((IkReal(0.0990000000000000))*(x38))));
x56=((IkReal(0.258820826967441))*(x53));
x57=((((IkReal(-1.00000000000000))*(x47)))+(((x0)*(x37))));
x58=((((IkReal(-1.00000000000000))*(x48)))+(((x37)*(x7))));
x59=((x54)*(x6));
x60=((x5)*(x52));
x61=((x47)+(((IkReal(-1.00000000000000))*(x0)*(x1)*(x30))));
x62=((x48)+(((IkReal(-1.00000000000000))*(x28)*(x37))));
x63=((((IkReal(-1.00000000000000))*(x0)*(x3)*(x30)))+(((IkReal(-1.00000000000000))*(x33)*(x38))));
x64=((x28)*(((((IkReal(-1.00000000000000))*(x42)))+(((IkReal(-1.00000000000000))*(x38))))));
x65=((x17)*(((x42)+(x38))));
x66=((x23)*(((((IkReal(-1.00000000000000))*(x42)))+(((IkReal(-1.00000000000000))*(x38))))));
x67=((x58)*(x6));
x68=((x10)*(x5)*(x53));
x69=((x57)*(x6));
x70=((x5)*(x61));
x71=((x67)+(x41));
x72=((((x5)*(x62)))+(((x0)*(x6))));
x73=((((IkReal(-1.00000000000000))*(x15)*(x62)))+(((IkReal(-1.00000000000000))*(x33)*(x6))));
x74=((((IkReal(-1.00000000000000))*(x25)*(x52)*(x6)))+(((IkReal(-1.00000000000000))*(x12)*(x49))));
x75=((((IkReal(-1.00000000000000))*(x12)*(x63)))+(((x25)*(((((x34)*(x57)))+(((IkReal(-1.00000000000000))*(x43))))))));
x76=((((x25)*(((((x34)*(x58)))+(((x0)*(x15)))))))+(((IkReal(-1.00000000000000))*(x12)*(x64))));
eerot[0]=((((x63)*(x8)))+(((x9)*(((x69)+(((IkReal(-1.00000000000000))*(x43))))))));
eerot[1]=((((x10)*(x75)))+(((x11)*(((((IkReal(-1.00000000000000))*(x44)))+(x70))))));
eerot[2]=((((x11)*(x75)))+(((x10)*(((((IkReal(-1.00000000000000))*(x15)*(x61)))+(x44))))));
IkReal x77=((IkReal(1.00000000000000))*(x22));
eetrans[0]=((((x8)*(((((IkReal(-1.00000000000000))*(x32)*(x57)))+(((x23)*(x5)))))))+(((x9)*(((((IkReal(-1.00000000000000))*(x38)*(x77)))+(((IkReal(-1.00000000000000))*(x42)*(x77)))))))+(((x8)*(((((x16)*(x38)))+(((x16)*(x42)))))))+(((IkReal(-1.00000000000000))*(x24)*(x37)))+(((x24)*(x36)))+(((IkReal(-0.235000000000000))*(x46)))+(((x9)*(((((x39)*(x57)))+(((x17)*(x5)))))))+(((IkReal(-0.250000000000000))*(x0)*(x3)))+(((IkReal(-0.235000000000000))*(x0)*(x38)))+(((IkReal(0.0950000000000000))*(x7))));
eerot[3]=((((IkReal(-1.00000000000000))*(x27)*(x49)))+(((x26)*(x64)))+(((x14)*(x71)))+(((IkReal(-1.00000000000000))*(x45)*(x53))));
eerot[4]=((((IkReal(-1.00000000000000))*(x18)*(x74)))+(((IkReal(-1.00000000000000))*(x20)*(x60)))+(((x19)*(x76)))+(((x21)*(x72))));
eerot[5]=((((IkReal(-1.00000000000000))*(x18)*(x5)*(x53)))+(((x21)*(x76)))+(((x19)*(x73)))+(((IkReal(-1.00000000000000))*(x20)*(x74))));
IkReal x78=((IkReal(1.00000000000000))*(x27));
eetrans[1]=((IkReal(-0.145000000000000))+(((IkReal(-0.226992456976939))*(x2)*(x40)))+(((IkReal(-0.0917629081396138))*(x0)))+(((IkReal(-0.00776462480902323))*(x42)))+(((IkReal(-0.241481337209510))*(x40)))+(((x14)*(((((IkReal(-0.0990000000000000))*(x67)))+(((IkReal(-1.00000000000000))*(x16)*(x5)))))))+(((IkReal(0.0647052067418602))*(x1)))+(((IkReal(-0.00776462480902323))*(x38)))+(((IkReal(-1.00000000000000))*(x45)*(x55)))+(((IkReal(-1.00000000000000))*(x29)*(x50)))+(((IkReal(-0.226992456976939))*(x38)*(x7)))+(((IkReal(0.0608228943373486))*(x37)))+(((IkReal(-0.0608228943373486))*(x36)))+(((IkReal(-1.00000000000000))*(x35)*(x37)))+(((x26)*(x65)))+(((x26)*(((((IkReal(-0.0900000000000000))*(x67)))+(((IkReal(-0.0900000000000000))*(x41)))))))+(((IkReal(-1.00000000000000))*(x51)*(x78)))+(((x14)*(x66)))+(((IkReal(-1.00000000000000))*(x59)*(x78)))+(((x35)*(x36))));
eerot[6]=((((x29)*(x71)))+(((x26)*(x49)))+(((x27)*(x64)))+(((x14)*(x53)*(x6))));
eerot[7]=((((x20)*(x72)))+(((x18)*(x76)))+(((x21)*(x60)))+(((x19)*(x74))));
eerot[8]=((((x20)*(x76)))+(((x21)*(x74)))+(((x19)*(x5)*(x53)))+(((x18)*(x73))));
eetrans[2]=((IkReal(0.370296000000000))+(((IkReal(-0.0608228943373486))*(x38)*(x7)))+(((IkReal(-0.0647052067418602))*(x40)))+(((x13)*(x36)))+(((IkReal(-0.241481337209510))*(x1)))+(((x26)*(x51)))+(((IkReal(0.0289777604651412))*(x38)))+(((x14)*(x50)))+(((IkReal(0.226992456976939))*(x36)))+(((x29)*(((((x39)*(x58)))+(((IkReal(-0.0990000000000000))*(x41)))))))+(((IkReal(-1.00000000000000))*(x13)*(x37)))+(((x27)*(((((IkReal(-1.00000000000000))*(x32)*(x58)))+(((IkReal(-1.00000000000000))*(x22)*(x5)))))))+(((IkReal(0.0289777604651412))*(x42)))+(((x27)*(x65)))+(((x14)*(x55)*(x6)))+(((x26)*(x59)))+(((IkReal(-0.226992456976939))*(x37)))+(((IkReal(-0.0245879785619069))*(x0)))+(((IkReal(-0.0608228943373486))*(x2)*(x40)))+(((x29)*(x66))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,j7,cj7,sj7,htj7,j8,cj8,sj8,htj8,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6,_ij7[2], _nj7,_ij8[2], _nj8;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1; j7=numeric_limits<IkReal>::quiet_NaN(); _ij7[0] = -1; _ij7[1] = -1; _nj7 = -1; j8=numeric_limits<IkReal>::quiet_NaN(); _ij8[0] = -1; _ij8[1] = -1; _nj8 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((IkReal(-1.00000000000000))*(r02));
new_r01=r01;
new_r02=r00;
new_px=((((IkReal(0.0990000000000000))*(r00)))+(px));
new_r10=((((IkReal(-0.965925348838040))*(r12)))+(((IkReal(-0.258820826967441))*(r22))));
new_r11=((((IkReal(0.258820826967441))*(r21)))+(((IkReal(0.965925348838040))*(r11))));
new_r12=((((IkReal(0.258820826967441))*(r20)))+(((IkReal(0.965925348838040))*(r10))));
new_py=((IkReal(0.0442188586387804))+(((IkReal(0.0956266095349660))*(r10)))+(((IkReal(0.965925348838040))*(py)))+(((IkReal(0.0256232618697767))*(r20)))+(((IkReal(0.258820826967441))*(pz))));
new_r20=((((IkReal(0.258820826967441))*(r12)))+(((IkReal(-0.965925348838040))*(r22))));
new_r21=((((IkReal(0.965925348838040))*(r21)))+(((IkReal(-0.258820826967441))*(r11))));
new_r22=((((IkReal(-0.258820826967441))*(r10)))+(((IkReal(0.965925348838040))*(r20))));
new_pz=((IkReal(-0.395207312883610))+(((IkReal(0.0956266095349660))*(r20)))+(((IkReal(-0.258820826967441))*(py)))+(((IkReal(-0.0256232618697767))*(r10)))+(((IkReal(0.965925348838040))*(pz))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((pz)*(pz))+((py)*(py)));
npx=((((py)*(r10)))+(((pz)*(r20)))+(((px)*(r00))));
npy=((((px)*(r01)))+(((pz)*(r21)))+(((py)*(r11))));
npz=((((py)*(r12)))+(((pz)*(r22)))+(((px)*(r02))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((py)*(r00)))+(((IkReal(-1.00000000000000))*(px)*(r10))));
rxp1_0=((((pz)*(r11)))+(((IkReal(-1.00000000000000))*(py)*(r21))));
rxp1_1=((((IkReal(-1.00000000000000))*(pz)*(r01)))+(((px)*(r21))));
rxp1_2=((((py)*(r01)))+(((IkReal(-1.00000000000000))*(px)*(r11))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((py)*(r02)))+(((IkReal(-1.00000000000000))*(px)*(r12))));
IkReal op[72], zeror[48];
int numroots;
IkReal x79=((IkReal(0.650000000000000))*(npx));
IkReal x80=((IkReal(1.00000000000000))*(pp));
IkReal x81=((IkReal(0.0600000000000000))*(npz));
IkReal x82=((IkReal(0.0600000000000000))*(npy));
IkReal x83=((IkReal(0.0950000000000000))*(r22));
IkReal x84=((IkReal(0.120000000000000))*(npx));
IkReal x85=((IkReal(0.0950000000000000))*(r21));
IkReal x86=((IkReal(1.00000000000000))*(rxp0_2));
IkReal x87=((IkReal(0.190000000000000))*(r20));
IkReal x88=((IkReal(2.00000000000000))*(rxp1_2));
IkReal x89=((IkReal(0.940000000000000))*(npz));
IkReal x90=((IkReal(2.00000000000000))*(rxp2_2));
IkReal x91=((IkReal(0.180000000000000))*(r21));
IkReal x92=((IkReal(0.360000000000000))*(r20));
IkReal x93=((IkReal(0.380000000000000))*(r21));
IkReal x94=((IkReal(0.290000000000000))*(npx));
IkReal x95=((IkReal(-0.00570000000000000))+(((IkReal(-1.00000000000000))*(x82))));
IkReal x96=((IkReal(0.580000000000000))*(npy));
IkReal x97=((IkReal(0.00570000000000000))+(((IkReal(-1.00000000000000))*(x82))));
IkReal x98=((rxp0_2)+(((IkReal(-1.00000000000000))*(x83))));
IkReal x99=((IkReal(-1.30000000000000))*(npy));
IkReal x100=((IkReal(-0.0950000000000000))*(r21));
IkReal x101=((IkReal(-0.00570000000000000))+(x82));
IkReal x102=((rxp0_2)+(x83));
IkReal x103=((((IkReal(-1.00000000000000))*(x86)))+(x83));
IkReal x104=((IkReal(0.00570000000000000))+(x82));
IkReal x105=((IkReal(-2.00000000000000))*(rxp1_2));
IkReal x106=((IkReal(-0.0108000000000000))+(x89));
IkReal x107=((IkReal(-0.0350000000000000))+(x81));
IkReal x108=((IkReal(0.0496000000000000))+(x81));
IkReal x109=((IkReal(0.0108000000000000))+(x89));
IkReal x110=((x80)+(x81));
IkReal x111=((((IkReal(-1.00000000000000))*(x86)))+(((IkReal(-1.00000000000000))*(x83))));
IkReal x112=((x80)+(x94));
IkReal x113=((x91)+(x90));
op[0]=((IkReal(-0.0350000000000000))+(x79)+(((IkReal(-1.00000000000000))*(x110))));
op[1]=x101;
op[2]=x99;
op[3]=x84;
op[4]=((IkReal(-0.0350000000000000))+(((IkReal(-1.00000000000000))*(x79)))+(((IkReal(-1.00000000000000))*(x110))));
op[5]=x95;
op[6]=x111;
op[7]=x85;
op[8]=x88;
op[9]=x87;
op[10]=x98;
op[11]=x100;
op[12]=x104;
op[13]=((x79)+(((IkReal(-1.00000000000000))*(x80)))+(x107));
op[14]=x84;
op[15]=x99;
op[16]=x97;
op[17]=((((IkReal(-1.00000000000000))*(x79)))+(((IkReal(-1.00000000000000))*(x80)))+(x107));
op[18]=x85;
op[19]=x103;
op[20]=x87;
op[21]=x88;
op[22]=x100;
op[23]=x102;
op[24]=((x106)+(x84));
op[25]=IkReal(0);
op[26]=((IkReal(-0.240000000000000))*(npy));
op[27]=IkReal(0);
op[28]=((((IkReal(-1.00000000000000))*(x84)))+(x106));
op[29]=IkReal(0);
op[30]=((((IkReal(-1.00000000000000))*(x90)))+(x87)+(x91));
op[31]=IkReal(0);
op[32]=((((IkReal(-1.00000000000000))*(x93)))+(x92));
op[33]=IkReal(0);
op[34]=((((IkReal(-1.00000000000000))*(x113)))+(((IkReal(-1.00000000000000))*(x87))));
op[35]=IkReal(0);
op[36]=IkReal(0);
op[37]=((((IkReal(-1.00000000000000))*(x84)))+(x109));
op[38]=IkReal(0);
op[39]=((IkReal(0.240000000000000))*(npy));
op[40]=IkReal(0);
op[41]=((x109)+(x84));
op[42]=IkReal(0);
op[43]=((((IkReal(-1.00000000000000))*(x90)))+(x91)+(((IkReal(-1.00000000000000))*(x87))));
op[44]=IkReal(0);
op[45]=((x93)+(x92));
op[46]=IkReal(0);
op[47]=((((IkReal(-1.00000000000000))*(x113)))+(x87));
op[48]=((((IkReal(-1.00000000000000))*(x112)))+(x108));
op[49]=x101;
op[50]=x96;
op[51]=x84;
op[52]=((((IkReal(-1.00000000000000))*(x80)))+(x108)+(x94));
op[53]=x95;
op[54]=x102;
op[55]=x85;
op[56]=x105;
op[57]=x87;
op[58]=x103;
op[59]=x100;
op[60]=x104;
op[61]=((IkReal(0.0496000000000000))+(((IkReal(-1.00000000000000))*(x94)))+(((IkReal(-1.00000000000000))*(x110))));
op[62]=x84;
op[63]=x96;
op[64]=x97;
op[65]=((IkReal(0.0496000000000000))+(((IkReal(-1.00000000000000))*(x110)))+(x94));
op[66]=x85;
op[67]=x98;
op[68]=x87;
op[69]=x105;
op[70]=x100;
op[71]=x111;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j7array[16], cj7array[16], sj7array[16], j8array[16], cj8array[16], sj8array[16], j6array[16], cj6array[16], sj6array[16];
int numsolutions = 0;
for(int ij7 = 0; ij7 < numroots; ij7 += 3)
{
IkReal htj7 = zeror[ij7+0], htj8 = zeror[ij7+1], htj6 = zeror[ij7+2];
j7array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj7)));
j8array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj8)));
j6array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj6)));
IkReal x114=(htj7)*(htj7);
IkReal x115=(htj8)*(htj8);
IkReal x116=(htj6)*(htj6);
cj7array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x114))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x114)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x114))))));
cj8array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x115))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x115)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x115))))));
cj6array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x116))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x116)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x116))))));
sj7array[numsolutions]=((IkReal(2.00000000000000))*(htj7)*(((IKabs(((IkReal(1.00000000000000))+((htj7)*(htj7)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj7)*(htj7))))):(IkReal)1.0e30)));
sj8array[numsolutions]=((IkReal(2.00000000000000))*(htj8)*(((IKabs(((IkReal(1.00000000000000))+((htj8)*(htj8)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj8)*(htj8))))):(IkReal)1.0e30)));
sj6array[numsolutions]=((IkReal(2.00000000000000))*(htj6)*(((IKabs(((IkReal(1.00000000000000))+((htj6)*(htj6)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj6)*(htj6))))):(IkReal)1.0e30)));
if( j7array[numsolutions] > IKPI )
{
    j7array[numsolutions]-=IK2PI;
}
else if( j7array[numsolutions] < -IKPI )
{
    j7array[numsolutions]+=IK2PI;
}
if( j8array[numsolutions] > IKPI )
{
    j8array[numsolutions]-=IK2PI;
}
else if( j8array[numsolutions] < -IKPI )
{
    j8array[numsolutions]+=IK2PI;
}
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j7valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj7 = 16;
_nj8 = 1;
_nj6 = 1;
for(int ij7 = 0; ij7 < numsolutions; ++ij7)
    {
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
_ij8[0] = 0; _ij8[1] = -1;
_ij6[0] = 0; _ij6[1] = -1;
for(int iij7 = ij7+1; iij7 < numsolutions; ++iij7)
{
if( !j7valid[iij7] ) { continue; }
if( IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(cj8array[ij7]-cj8array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij7]-sj8array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(cj6array[ij7]-cj6array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij7]-sj6array[iij7]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j7valid[iij7]=false; _ij7[1] = iij7; _ij8[1] = 0; _ij6[1] = 0;  break; 
}
}
    j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];

    j8 = j8array[ij7]; cj8 = cj8array[ij7]; sj8 = sj8array[ij7];

    j6 = j6array[ij7]; cj6 = cj6array[ij7]; sj6 = sj6array[ij7];

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x117=(cj8)*(cj8);
IkReal x118=(sj8)*(sj8);
IkReal x119=((r00)*(r11));
IkReal x120=((r02)*(sj7));
IkReal x121=((cj7)*(x117));
IkReal x122=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x123=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x124=((cj7)*(x118));
gconst0=IKsign(((((r10)*(sj8)*(x120)))+(((x119)*(x121)))+(((IkReal(-1.00000000000000))*(x121)*(x123)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x122)))+(((x119)*(x124)))+(((cj8)*(r11)*(x120)))+(((IkReal(-1.00000000000000))*(x123)*(x124)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x122)))));
IkReal x125=(cj8)*(cj8);
IkReal x126=(sj8)*(sj8);
IkReal x127=((r00)*(r11));
IkReal x128=((r02)*(sj7));
IkReal x129=((cj7)*(x125));
IkReal x130=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x131=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x132=((cj7)*(x126));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(sj8)*(x130)))+(((cj8)*(r11)*(x128)))+(((r10)*(sj8)*(x128)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x130)))+(((IkReal(-1.00000000000000))*(x129)*(x131)))+(((IkReal(-1.00000000000000))*(x131)*(x132)))+(((x127)*(x129)))+(((x127)*(x132))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x133=(sj8)*(sj8);
IkReal x134=(cj8)*(cj8);
IkReal x135=((IkReal(1.00000000000000))*(r10));
IkReal x136=((cj7)*(sj8));
IkReal x137=((r00)*(r11));
IkReal x138=((cj7)*(cj8));
IkReal x139=((sj7)*(x133));
IkReal x140=((sj7)*(x134));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(r02)*(x135)*(x136)))+(((r01)*(r12)*(x138)))+(((r00)*(r12)*(x136)))+(((IkReal(-1.00000000000000))*(r01)*(x135)*(x140)))+(((x137)*(x140)))+(((x137)*(x139)))+(((IkReal(-1.00000000000000))*(r01)*(x135)*(x139)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x138)))));
IkReal x141=(sj8)*(sj8);
IkReal x142=(cj8)*(cj8);
IkReal x143=((IkReal(1.00000000000000))*(r10));
IkReal x144=((cj7)*(sj8));
IkReal x145=((r00)*(r11));
IkReal x146=((cj7)*(cj8));
IkReal x147=((sj7)*(x141));
IkReal x148=((sj7)*(x142));
dummyeval[0]=((((r00)*(r12)*(x144)))+(((IkReal(-1.00000000000000))*(r01)*(x143)*(x147)))+(((x145)*(x148)))+(((r01)*(r12)*(x146)))+(((IkReal(-1.00000000000000))*(r02)*(x143)*(x144)))+(((x145)*(x147)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x146)))+(((IkReal(-1.00000000000000))*(r01)*(x143)*(x148))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x149=((IkReal(4.00000000000000))*(sj7));
IkReal x150=((npy)*(sj8));
IkReal x151=((IkReal(4.00000000000000))*(cj7));
IkReal x152=((cj8)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((npz)*(x151)))+(((x149)*(x150)))+(((IkReal(-1.00000000000000))*(x149)*(x152)))+(((IkReal(0.360000000000000))*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((npz)*(x149)))+(((IkReal(-1.00000000000000))*(x150)*(x151)))+(((x151)*(x152)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((npz)*(x151)))+(((x149)*(x150)))+(((IkReal(-1.00000000000000))*(x149)*(x152)))+(((IkReal(0.360000000000000))*(sj7)))))+IKsqr(((IkReal(-0.940000000000000))+(((npz)*(x149)))+(((IkReal(-1.00000000000000))*(x150)*(x151)))+(((x151)*(x152)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((npz)*(x151)))+(((x149)*(x150)))+(((IkReal(-1.00000000000000))*(x149)*(x152)))+(((IkReal(0.360000000000000))*(sj7)))), ((IkReal(-0.940000000000000))+(((npz)*(x149)))+(((IkReal(-1.00000000000000))*(x150)*(x151)))+(((x151)*(x152)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x153=((IkReal(1.00000000000000))*(sj7));
IkReal x154=((npy)*(sj8));
IkReal x155=((cj8)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(npz)*(x153)))+(((cj7)*(x154)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x155))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-1.00000000000000))*(x153)*(x155)))+(((cj7)*(npz)))+(((sj7)*(x154)))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-0.250000000000000))*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst66;
IkReal x156=(cj8)*(cj8);
IkReal x157=(sj8)*(sj8);
IkReal x158=((IkReal(2.00000000000000))*(cj8)*(sj8));
gconst66=IKsign(((((x157)*((r00)*(r00))))+(((x157)*((r10)*(r10))))+(((r00)*(r01)*(x158)))+(((r10)*(r11)*(x158)))+(((x156)*((r11)*(r11))))+(((x156)*((r01)*(r01))))));
IkReal x159=(cj8)*(cj8);
IkReal x160=(sj8)*(sj8);
IkReal x161=((IkReal(2.00000000000000))*(cj8)*(sj8));
dummyeval[0]=((((x159)*((r11)*(r11))))+(((r10)*(r11)*(x161)))+(((r00)*(r01)*(x161)))+(((x160)*((r00)*(r00))))+(((x160)*((r10)*(r10))))+(((x159)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst68;
gconst68=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst67;
IkReal x162=(cj8)*(cj8);
IkReal x163=(sj8)*(sj8);
IkReal x164=((r00)*(r11));
IkReal x165=((r02)*(sj7));
IkReal x166=((cj7)*(x162));
IkReal x167=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x168=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x169=((cj7)*(x163));
gconst67=IKsign(((((IkReal(-1.00000000000000))*(x166)*(x168)))+(((cj8)*(r11)*(x165)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x167)))+(((r10)*(sj8)*(x165)))+(((x164)*(x166)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x167)))+(((IkReal(-1.00000000000000))*(x168)*(x169)))+(((x164)*(x169)))));
IkReal x170=(cj8)*(cj8);
IkReal x171=(sj8)*(sj8);
IkReal x172=((r00)*(r11));
IkReal x173=((r02)*(sj7));
IkReal x174=((cj7)*(x170));
IkReal x175=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x176=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x177=((cj7)*(x171));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x175)))+(((x172)*(x177)))+(((cj8)*(r11)*(x173)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x175)))+(((x172)*(x174)))+(((IkReal(-1.00000000000000))*(x176)*(x177)))+(((IkReal(-1.00000000000000))*(x174)*(x176)))+(((r10)*(sj8)*(x173))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x178=((cj7)*(cj8));
IkReal x179=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst67)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x179)))+(((r10)*(x178))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst67)*(((((r00)*(x178)))+(((IkReal(-1.00000000000000))*(r01)*(x179)))+(((r02)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst67)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x179)))+(((r10)*(x178)))))), ((gconst67)*(((((r00)*(x178)))+(((IkReal(-1.00000000000000))*(r01)*(x179)))+(((r02)*(sj7)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x180=IKsin(j3);
IkReal x181=IKcos(j3);
IkReal x182=((IkReal(1.00000000000000))*(sj8));
IkReal x183=((IkReal(1.00000000000000))*(cj8));
IkReal x184=((r01)*(sj8));
IkReal x185=((cj8)*(r10));
IkReal x186=((sj7)*(x181));
IkReal x187=((cj7)*(x180));
IkReal x188=((r00)*(x180));
IkReal x189=((sj7)*(x180));
IkReal x190=((cj7)*(x181));
evalcond[0]=((IkReal(1.00000000000000))+(((cj8)*(r01)*(x180)))+(((IkReal(-1.00000000000000))*(r11)*(x181)*(x183)))+(((sj8)*(x188)))+(((IkReal(-1.00000000000000))*(r10)*(x181)*(x182))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x180)*(x183)))+(((IkReal(-1.00000000000000))*(r00)*(x181)*(x182)))+(((IkReal(-1.00000000000000))*(r10)*(x180)*(x182)))+(((IkReal(-1.00000000000000))*(r01)*(x181)*(x183))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x189)))+(((IkReal(-1.00000000000000))*(r11)*(x182)*(x190)))+(((IkReal(-1.00000000000000))*(r00)*(x183)*(x187)))+(((x185)*(x190)))+(((r12)*(x186)))+(((x184)*(x187))));
evalcond[3]=((((x184)*(x189)))+(((IkReal(-1.00000000000000))*(r11)*(x182)*(x186)))+(((IkReal(-1.00000000000000))*(sj7)*(x183)*(x188)))+(((IkReal(-1.00000000000000))*(r12)*(x190)))+(((r02)*(x187)))+(((x185)*(x186))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst69;
gconst69=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst70;
gconst70=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x191=((cj3)*(cj5));
IkReal x192=((r02)*(sj7));
IkReal x193=((cj3)*(sj5));
IkReal x194=((cj5)*(sj3));
IkReal x195=((cj7)*(cj8));
IkReal x196=((sj5)*(sj7));
IkReal x197=((sj3)*(sj5));
IkReal x198=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst70)*(((((IkReal(-1.00000000000000))*(r11)*(x194)*(x198)))+(((IkReal(-1.00000000000000))*(r22)*(x196)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x195)))+(((r12)*(sj7)*(x194)))+(((x191)*(x192)))+(((r00)*(x191)*(x195)))+(((r10)*(x194)*(x195)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r01)*(x191)*(x198))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((r10)*(x195)*(x197)))+(((IkReal(-1.00000000000000))*(r11)*(x197)*(x198)))+(((r00)*(x193)*(x195)))+(((cj5)*(r20)*(x195)))+(((IkReal(-1.00000000000000))*(r01)*(x193)*(x198)))+(((r12)*(sj3)*(x196)))+(((cj5)*(r22)*(sj7)))+(((x192)*(x193)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x198))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst70)*(((((IkReal(-1.00000000000000))*(r11)*(x194)*(x198)))+(((IkReal(-1.00000000000000))*(r22)*(x196)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x195)))+(((r12)*(sj7)*(x194)))+(((x191)*(x192)))+(((r00)*(x191)*(x195)))+(((r10)*(x194)*(x195)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r01)*(x191)*(x198)))))), ((gconst70)*(((((r10)*(x195)*(x197)))+(((IkReal(-1.00000000000000))*(r11)*(x197)*(x198)))+(((r00)*(x193)*(x195)))+(((cj5)*(r20)*(x195)))+(((IkReal(-1.00000000000000))*(r01)*(x193)*(x198)))+(((r12)*(sj3)*(x196)))+(((cj5)*(r22)*(sj7)))+(((x192)*(x193)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x198)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x199=IKsin(j4);
IkReal x200=IKcos(j4);
IkReal x201=((IkReal(1.00000000000000))*(cj7));
IkReal x202=((cj8)*(r20));
IkReal x203=((cj3)*(r02));
IkReal x204=((IkReal(1.00000000000000))*(sj7));
IkReal x205=((sj3)*(sj7));
IkReal x206=((r21)*(sj8));
IkReal x207=((cj8)*(r10));
IkReal x208=((cj5)*(x199));
IkReal x209=((sj5)*(x200));
IkReal x210=((r11)*(sj3)*(sj8));
IkReal x211=((cj3)*(cj8)*(r00));
IkReal x212=((cj5)*(x200));
IkReal x213=((cj3)*(r01)*(sj8));
IkReal x214=((sj5)*(x199));
IkReal x215=((x209)+(x208));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x204)))+(((IkReal(-1.00000000000000))*(x201)*(x202)))+(((IkReal(-1.00000000000000))*(x212)))+(x214)+(((cj7)*(x206))));
evalcond[1]=((((cj7)*(r22)))+(x215)+(((sj7)*(x206)))+(((IkReal(-1.00000000000000))*(x202)*(x204))));
evalcond[2]=((((cj7)*(sj3)*(x207)))+(((IkReal(-1.00000000000000))*(x201)*(x210)))+(x215)+(((cj7)*(x211)))+(((IkReal(-1.00000000000000))*(x201)*(x213)))+(((r12)*(x205)))+(((sj7)*(x203))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x201)))+(((x205)*(x207)))+(x212)+(((IkReal(-1.00000000000000))*(x201)*(x203)))+(((IkReal(-1.00000000000000))*(x204)*(x210)))+(((IkReal(-1.00000000000000))*(x214)))+(((IkReal(-1.00000000000000))*(x204)*(x213)))+(((sj7)*(x211))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x216=((sj5)*(sj7));
IkReal x217=((r21)*(sj8));
IkReal x218=((cj7)*(sj5));
IkReal x219=((cj5)*(sj7));
IkReal x220=((cj5)*(cj7));
IkReal x221=((IkReal(1.00000000000000))*(cj8)*(r20));
if( IKabs(((gconst69)*(((((IkReal(-1.00000000000000))*(r22)*(x216)))+(((x217)*(x218)))+(((IkReal(-1.00000000000000))*(x219)*(x221)))+(((r22)*(x220)))+(((IkReal(-1.00000000000000))*(x218)*(x221)))+(((x217)*(x219))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst69)*(((((r22)*(x219)))+(((r22)*(x218)))+(((x216)*(x217)))+(((IkReal(-1.00000000000000))*(x216)*(x221)))+(((IkReal(-1.00000000000000))*(x217)*(x220)))+(((cj8)*(r20)*(x220))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst69)*(((((IkReal(-1.00000000000000))*(r22)*(x216)))+(((x217)*(x218)))+(((IkReal(-1.00000000000000))*(x219)*(x221)))+(((r22)*(x220)))+(((IkReal(-1.00000000000000))*(x218)*(x221)))+(((x217)*(x219)))))), ((gconst69)*(((((r22)*(x219)))+(((r22)*(x218)))+(((x216)*(x217)))+(((IkReal(-1.00000000000000))*(x216)*(x221)))+(((IkReal(-1.00000000000000))*(x217)*(x220)))+(((cj8)*(r20)*(x220)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x222=IKsin(j4);
IkReal x223=IKcos(j4);
IkReal x224=((IkReal(1.00000000000000))*(cj7));
IkReal x225=((cj8)*(r20));
IkReal x226=((cj3)*(r02));
IkReal x227=((IkReal(1.00000000000000))*(sj7));
IkReal x228=((sj3)*(sj7));
IkReal x229=((r21)*(sj8));
IkReal x230=((cj8)*(r10));
IkReal x231=((cj5)*(x222));
IkReal x232=((sj5)*(x223));
IkReal x233=((r11)*(sj3)*(sj8));
IkReal x234=((cj3)*(cj8)*(r00));
IkReal x235=((cj5)*(x223));
IkReal x236=((cj3)*(r01)*(sj8));
IkReal x237=((sj5)*(x222));
IkReal x238=((x232)+(x231));
evalcond[0]=((((cj7)*(x229)))+(x237)+(((IkReal(-1.00000000000000))*(x235)))+(((IkReal(-1.00000000000000))*(r22)*(x227)))+(((IkReal(-1.00000000000000))*(x224)*(x225))));
evalcond[1]=((((sj7)*(x229)))+(((cj7)*(r22)))+(x238)+(((IkReal(-1.00000000000000))*(x225)*(x227))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x224)*(x233)))+(((cj7)*(x234)))+(x238)+(((IkReal(-1.00000000000000))*(x224)*(x236)))+(((r12)*(x228)))+(((sj7)*(x226)))+(((cj7)*(sj3)*(x230))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x224)))+(((x228)*(x230)))+(x235)+(((IkReal(-1.00000000000000))*(x224)*(x226)))+(((IkReal(-1.00000000000000))*(x227)*(x233)))+(((IkReal(-1.00000000000000))*(x227)*(x236)))+(((IkReal(-1.00000000000000))*(x237)))+(((sj7)*(x234))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x239=((sj5)*(sj7));
IkReal x240=((r21)*(sj8));
IkReal x241=((cj7)*(sj5));
IkReal x242=((cj8)*(r20));
IkReal x243=((cj5)*(cj7));
IkReal x244=((cj5)*(sj7));
if( IKabs(((gconst68)*(((((IkReal(-1.00000000000000))*(r22)*(x239)))+(((IkReal(-1.00000000000000))*(x242)*(x244)))+(((r22)*(x243)))+(((x240)*(x244)))+(((x240)*(x241)))+(((IkReal(-1.00000000000000))*(x241)*(x242))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst68)*(((((IkReal(-1.00000000000000))*(x239)*(x242)))+(((IkReal(-1.00000000000000))*(x240)*(x243)))+(((x239)*(x240)))+(((r22)*(x244)))+(((x242)*(x243)))+(((r22)*(x241))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst68)*(((((IkReal(-1.00000000000000))*(r22)*(x239)))+(((IkReal(-1.00000000000000))*(x242)*(x244)))+(((r22)*(x243)))+(((x240)*(x244)))+(((x240)*(x241)))+(((IkReal(-1.00000000000000))*(x241)*(x242)))))), ((gconst68)*(((((IkReal(-1.00000000000000))*(x239)*(x242)))+(((IkReal(-1.00000000000000))*(x240)*(x243)))+(((x239)*(x240)))+(((r22)*(x244)))+(((x242)*(x243)))+(((r22)*(x241)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x245=IKsin(j4);
IkReal x246=IKcos(j4);
IkReal x247=((r21)*(sj8));
IkReal x248=((IkReal(1.00000000000000))*(cj8)*(r20));
evalcond[0]=((((sj5)*(x245)))+(((IkReal(-1.00000000000000))*(cj5)*(x246)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x248)))+(((cj7)*(x247))));
evalcond[1]=((((cj7)*(r22)))+(((sj5)*(x246)))+(((sj7)*(x247)))+(((cj5)*(x245)))+(((IkReal(-1.00000000000000))*(sj7)*(x248))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst71;
IkReal x249=(cj8)*(cj8);
IkReal x250=(sj8)*(sj8);
IkReal x251=((IkReal(2.00000000000000))*(cj8)*(sj8));
gconst71=IKsign(((((x250)*((r00)*(r00))))+(((r00)*(r01)*(x251)))+(((x250)*((r10)*(r10))))+(((x249)*((r11)*(r11))))+(((x249)*((r01)*(r01))))+(((r10)*(r11)*(x251)))));
IkReal x252=(cj8)*(cj8);
IkReal x253=(sj8)*(sj8);
IkReal x254=((IkReal(2.00000000000000))*(cj8)*(sj8));
dummyeval[0]=((((r10)*(r11)*(x254)))+(((r00)*(r01)*(x254)))+(((x253)*((r10)*(r10))))+(((x252)*((r11)*(r11))))+(((x252)*((r01)*(r01))))+(((x253)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst72;
IkReal x255=(cj8)*(cj8);
IkReal x256=(sj8)*(sj8);
IkReal x257=((r00)*(r11));
IkReal x258=((r02)*(sj7));
IkReal x259=((cj7)*(x255));
IkReal x260=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x261=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x262=((cj7)*(x256));
gconst72=IKsign(((((IkReal(-1.00000000000000))*(x261)*(x262)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x260)))+(((x257)*(x259)))+(((x257)*(x262)))+(((r10)*(sj8)*(x258)))+(((cj8)*(r11)*(x258)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x260)))+(((IkReal(-1.00000000000000))*(x259)*(x261)))));
IkReal x263=(cj8)*(cj8);
IkReal x264=(sj8)*(sj8);
IkReal x265=((r00)*(r11));
IkReal x266=((r02)*(sj7));
IkReal x267=((cj7)*(x263));
IkReal x268=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x269=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x270=((cj7)*(x264));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x268)))+(((r10)*(sj8)*(x266)))+(((cj8)*(r11)*(x266)))+(((IkReal(-1.00000000000000))*(x267)*(x269)))+(((x265)*(x270)))+(((x265)*(x267)))+(((IkReal(-1.00000000000000))*(x269)*(x270)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x268))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x271=((cj7)*(cj8));
IkReal x272=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst72)*(((((r12)*(sj7)))+(((r10)*(x271)))+(((IkReal(-1.00000000000000))*(r11)*(x272))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst72)*(((((IkReal(-1.00000000000000))*(r01)*(x272)))+(((r02)*(sj7)))+(((r00)*(x271))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst72)*(((((r12)*(sj7)))+(((r10)*(x271)))+(((IkReal(-1.00000000000000))*(r11)*(x272)))))), ((gconst72)*(((((IkReal(-1.00000000000000))*(r01)*(x272)))+(((r02)*(sj7)))+(((r00)*(x271)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x273=IKsin(j3);
IkReal x274=IKcos(j3);
IkReal x275=((r01)*(sj8));
IkReal x276=((cj8)*(r00));
IkReal x277=((r00)*(sj8));
IkReal x278=((cj8)*(r11));
IkReal x279=((r11)*(sj8));
IkReal x280=((r10)*(sj8));
IkReal x281=((cj8)*(r10));
IkReal x282=((cj7)*(x273));
IkReal x283=((sj7)*(x274));
IkReal x284=((IkReal(1.00000000000000))*(x273));
IkReal x285=((IkReal(1.00000000000000))*(x274));
IkReal x286=((cj8)*(x273));
IkReal x287=((IkReal(1.00000000000000))*(x279));
IkReal x288=((sj7)*(x273));
IkReal x289=((cj7)*(x274));
evalcond[0]=((IkReal(1.00000000000000))+(((x273)*(x277)))+(((r01)*(x286)))+(((IkReal(-1.00000000000000))*(x280)*(x285)))+(((IkReal(-1.00000000000000))*(x278)*(x285))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x285)))+(((IkReal(-1.00000000000000))*(x280)*(x284)))+(((IkReal(-1.00000000000000))*(x278)*(x284)))+(((IkReal(-1.00000000000000))*(x277)*(x285))));
evalcond[2]=((((x281)*(x289)))+(((r12)*(x283)))+(((IkReal(-1.00000000000000))*(cj7)*(x279)*(x285)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x284)))+(((x275)*(x282)))+(((IkReal(-1.00000000000000))*(x276)*(x282))));
evalcond[3]=((((x281)*(x283)))+(((IkReal(-1.00000000000000))*(x283)*(x287)))+(((IkReal(-1.00000000000000))*(sj7)*(x276)*(x284)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x285)))+(((r02)*(x282)))+(((x275)*(x288))));
evalcond[4]=((((x281)*(x282)))+(((cj5)*(sj4)))+(((r12)*(x288)))+(((x276)*(x289)))+(((IkReal(-1.00000000000000))*(x282)*(x287)))+(((r02)*(x283)))+(((IkReal(-1.00000000000000))*(cj7)*(x275)*(x285)))+(((cj4)*(sj5))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x279)*(x284)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x285)))+(((x276)*(x283)))+(((IkReal(-1.00000000000000))*(r12)*(x282)))+(((IkReal(-1.00000000000000))*(x275)*(x283)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5)))+(((x281)*(x288)))+(((cj4)*(cj5))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst71)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst71)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst71)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst71)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x290=IKsin(j3);
IkReal x291=IKcos(j3);
IkReal x292=((r01)*(sj8));
IkReal x293=((cj8)*(r00));
IkReal x294=((r00)*(sj8));
IkReal x295=((cj8)*(r11));
IkReal x296=((r11)*(sj8));
IkReal x297=((r10)*(sj8));
IkReal x298=((cj8)*(r10));
IkReal x299=((cj7)*(x290));
IkReal x300=((sj7)*(x291));
IkReal x301=((IkReal(1.00000000000000))*(x290));
IkReal x302=((IkReal(1.00000000000000))*(x291));
IkReal x303=((cj8)*(x290));
IkReal x304=((IkReal(1.00000000000000))*(x296));
IkReal x305=((sj7)*(x290));
IkReal x306=((cj7)*(x291));
evalcond[0]=((IkReal(1.00000000000000))+(((x290)*(x294)))+(((r01)*(x303)))+(((IkReal(-1.00000000000000))*(x295)*(x302)))+(((IkReal(-1.00000000000000))*(x297)*(x302))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x295)*(x301)))+(((IkReal(-1.00000000000000))*(x297)*(x301)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x302)))+(((IkReal(-1.00000000000000))*(x294)*(x302))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x293)*(x299)))+(((r12)*(x300)))+(((IkReal(-1.00000000000000))*(cj7)*(x296)*(x302)))+(((x298)*(x306)))+(((x292)*(x299)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x301))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj7)*(r12)*(x302)))+(((r02)*(x299)))+(((IkReal(-1.00000000000000))*(x300)*(x304)))+(((IkReal(-1.00000000000000))*(sj7)*(x293)*(x301)))+(((x292)*(x305)))+(((x298)*(x300))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x299)*(x304)))+(((cj5)*(sj4)))+(((x293)*(x306)))+(((x298)*(x299)))+(((r12)*(x305)))+(((IkReal(-1.00000000000000))*(cj7)*(x292)*(x302)))+(((cj4)*(sj5)))+(((r02)*(x300))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x296)*(x301)))+(((x293)*(x300)))+(((IkReal(-1.00000000000000))*(r12)*(x299)))+(((x298)*(x305)))+(((IkReal(-1.00000000000000))*(x292)*(x300)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x302)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5)))+(((cj4)*(cj5))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst66)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst66)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst66)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst66)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x307=IKsin(j3);
IkReal x308=IKcos(j3);
IkReal x309=((IkReal(1.00000000000000))*(sj8));
IkReal x310=((IkReal(1.00000000000000))*(cj8));
IkReal x311=((r01)*(sj8));
IkReal x312=((cj8)*(r10));
IkReal x313=((sj7)*(x308));
IkReal x314=((cj7)*(x307));
IkReal x315=((r00)*(x307));
IkReal x316=((sj7)*(x307));
IkReal x317=((cj7)*(x308));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x308)*(x310)))+(((IkReal(-1.00000000000000))*(r10)*(x308)*(x309)))+(((sj8)*(x315)))+(((cj8)*(r01)*(x307))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x307)*(x309)))+(((IkReal(-1.00000000000000))*(r01)*(x308)*(x310)))+(((IkReal(-1.00000000000000))*(r11)*(x307)*(x310)))+(((IkReal(-1.00000000000000))*(r00)*(x308)*(x309))));
evalcond[2]=((((x312)*(x317)))+(((IkReal(-1.00000000000000))*(r00)*(x310)*(x314)))+(((IkReal(-1.00000000000000))*(r02)*(x316)))+(((IkReal(-1.00000000000000))*(r11)*(x309)*(x317)))+(((r12)*(x313)))+(((x311)*(x314))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(x317)))+(((r02)*(x314)))+(((IkReal(-1.00000000000000))*(sj7)*(x310)*(x315)))+(((x312)*(x313)))+(((x311)*(x316)))+(((IkReal(-1.00000000000000))*(r11)*(x309)*(x313))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst69;
gconst69=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst70;
gconst70=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x318=((cj3)*(cj5));
IkReal x319=((r02)*(sj7));
IkReal x320=((cj3)*(sj5));
IkReal x321=((cj5)*(sj3));
IkReal x322=((cj7)*(cj8));
IkReal x323=((sj5)*(sj7));
IkReal x324=((sj3)*(sj5));
IkReal x325=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst70)*(((((r12)*(sj7)*(x321)))+(((IkReal(-1.00000000000000))*(r22)*(x323)))+(((x318)*(x319)))+(((r00)*(x318)*(x322)))+(((IkReal(-1.00000000000000))*(r01)*(x318)*(x325)))+(((r10)*(x321)*(x322)))+(((IkReal(-1.00000000000000))*(r11)*(x321)*(x325)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x322)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((r10)*(x322)*(x324)))+(((x319)*(x320)))+(((IkReal(-1.00000000000000))*(r01)*(x320)*(x325)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x325)))+(((r00)*(x320)*(x322)))+(((r12)*(sj3)*(x323)))+(((cj5)*(r22)*(sj7)))+(((cj5)*(r20)*(x322)))+(((IkReal(-1.00000000000000))*(r11)*(x324)*(x325))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst70)*(((((r12)*(sj7)*(x321)))+(((IkReal(-1.00000000000000))*(r22)*(x323)))+(((x318)*(x319)))+(((r00)*(x318)*(x322)))+(((IkReal(-1.00000000000000))*(r01)*(x318)*(x325)))+(((r10)*(x321)*(x322)))+(((IkReal(-1.00000000000000))*(r11)*(x321)*(x325)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x322)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst70)*(((((r10)*(x322)*(x324)))+(((x319)*(x320)))+(((IkReal(-1.00000000000000))*(r01)*(x320)*(x325)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x325)))+(((r00)*(x320)*(x322)))+(((r12)*(sj3)*(x323)))+(((cj5)*(r22)*(sj7)))+(((cj5)*(r20)*(x322)))+(((IkReal(-1.00000000000000))*(r11)*(x324)*(x325)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x326=IKsin(j4);
IkReal x327=IKcos(j4);
IkReal x328=((IkReal(1.00000000000000))*(cj7));
IkReal x329=((cj8)*(r20));
IkReal x330=((cj3)*(r02));
IkReal x331=((IkReal(1.00000000000000))*(sj7));
IkReal x332=((sj3)*(sj7));
IkReal x333=((r21)*(sj8));
IkReal x334=((cj8)*(r10));
IkReal x335=((cj5)*(x326));
IkReal x336=((sj5)*(x327));
IkReal x337=((r11)*(sj3)*(sj8));
IkReal x338=((cj3)*(cj8)*(r00));
IkReal x339=((cj5)*(x327));
IkReal x340=((cj3)*(r01)*(sj8));
IkReal x341=((sj5)*(x326));
IkReal x342=((x336)+(x335));
evalcond[0]=((((IkReal(-1.00000000000000))*(x328)*(x329)))+(((IkReal(-1.00000000000000))*(x339)))+(x341)+(((IkReal(-1.00000000000000))*(r22)*(x331)))+(((cj7)*(x333))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x329)*(x331)))+(x342)+(((sj7)*(x333))));
evalcond[2]=((((r12)*(x332)))+(((sj7)*(x330)))+(((cj7)*(x338)))+(((IkReal(-1.00000000000000))*(x328)*(x337)))+(x342)+(((cj7)*(sj3)*(x334)))+(((IkReal(-1.00000000000000))*(x328)*(x340))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x328)))+(((x332)*(x334)))+(((IkReal(-1.00000000000000))*(x341)))+(((IkReal(-1.00000000000000))*(x331)*(x340)))+(((IkReal(-1.00000000000000))*(x328)*(x330)))+(x339)+(((sj7)*(x338)))+(((IkReal(-1.00000000000000))*(x331)*(x337))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x343=((sj5)*(sj7));
IkReal x344=((r21)*(sj8));
IkReal x345=((cj7)*(sj5));
IkReal x346=((cj5)*(sj7));
IkReal x347=((cj5)*(cj7));
IkReal x348=((IkReal(1.00000000000000))*(cj8)*(r20));
if( IKabs(((gconst69)*(((((IkReal(-1.00000000000000))*(x346)*(x348)))+(((IkReal(-1.00000000000000))*(x345)*(x348)))+(((x344)*(x345)))+(((IkReal(-1.00000000000000))*(r22)*(x343)))+(((x344)*(x346)))+(((r22)*(x347))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst69)*(((((cj8)*(r20)*(x347)))+(((r22)*(x345)))+(((x343)*(x344)))+(((IkReal(-1.00000000000000))*(x343)*(x348)))+(((IkReal(-1.00000000000000))*(x344)*(x347)))+(((r22)*(x346))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst69)*(((((IkReal(-1.00000000000000))*(x346)*(x348)))+(((IkReal(-1.00000000000000))*(x345)*(x348)))+(((x344)*(x345)))+(((IkReal(-1.00000000000000))*(r22)*(x343)))+(((x344)*(x346)))+(((r22)*(x347)))))), ((gconst69)*(((((cj8)*(r20)*(x347)))+(((r22)*(x345)))+(((x343)*(x344)))+(((IkReal(-1.00000000000000))*(x343)*(x348)))+(((IkReal(-1.00000000000000))*(x344)*(x347)))+(((r22)*(x346)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x349=IKsin(j4);
IkReal x350=IKcos(j4);
IkReal x351=((IkReal(1.00000000000000))*(cj7));
IkReal x352=((cj8)*(r20));
IkReal x353=((cj3)*(r02));
IkReal x354=((IkReal(1.00000000000000))*(sj7));
IkReal x355=((sj3)*(sj7));
IkReal x356=((r21)*(sj8));
IkReal x357=((cj8)*(r10));
IkReal x358=((cj5)*(x349));
IkReal x359=((sj5)*(x350));
IkReal x360=((r11)*(sj3)*(sj8));
IkReal x361=((cj3)*(cj8)*(r00));
IkReal x362=((cj5)*(x350));
IkReal x363=((cj3)*(r01)*(sj8));
IkReal x364=((sj5)*(x349));
IkReal x365=((x359)+(x358));
evalcond[0]=((((IkReal(-1.00000000000000))*(x351)*(x352)))+(x364)+(((cj7)*(x356)))+(((IkReal(-1.00000000000000))*(r22)*(x354)))+(((IkReal(-1.00000000000000))*(x362))));
evalcond[1]=((((cj7)*(r22)))+(x365)+(((IkReal(-1.00000000000000))*(x352)*(x354)))+(((sj7)*(x356))));
evalcond[2]=((((r12)*(x355)))+(((cj7)*(sj3)*(x357)))+(((cj7)*(x361)))+(x365)+(((IkReal(-1.00000000000000))*(x351)*(x360)))+(((IkReal(-1.00000000000000))*(x351)*(x363)))+(((sj7)*(x353))));
evalcond[3]=((((sj7)*(x361)))+(((x355)*(x357)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x351)))+(x362)+(((IkReal(-1.00000000000000))*(x354)*(x363)))+(((IkReal(-1.00000000000000))*(x351)*(x353)))+(((IkReal(-1.00000000000000))*(x364)))+(((IkReal(-1.00000000000000))*(x354)*(x360))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x366=((IkReal(4.00000000000000))*(sj7));
IkReal x367=((npy)*(sj8));
IkReal x368=((IkReal(4.00000000000000))*(cj7));
IkReal x369=((cj8)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x366)*(x367)))+(((IkReal(-0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(npz)*(x368)))+(((x366)*(x369))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((npz)*(x366)))+(((x368)*(x369)))+(((IkReal(-0.360000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x367)*(x368))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x366)*(x367)))+(((IkReal(-0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(npz)*(x368)))+(((x366)*(x369)))))+IKsqr(((IkReal(-0.940000000000000))+(((npz)*(x366)))+(((x368)*(x369)))+(((IkReal(-0.360000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x367)*(x368)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x366)*(x367)))+(((IkReal(-0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(npz)*(x368)))+(((x366)*(x369)))), ((IkReal(-0.940000000000000))+(((npz)*(x366)))+(((x368)*(x369)))+(((IkReal(-0.360000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x367)*(x368)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x370=((IkReal(1.00000000000000))*(sj7));
IkReal x371=((npy)*(sj8));
IkReal x372=((cj8)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((cj7)*(x371)))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(npz)*(x370)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x372))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj7)*(npz)))+(((IkReal(0.250000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(x370)*(x372)))+(((sj7)*(x371)))+(((IkReal(0.0900000000000000))*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst75;
IkReal x373=(cj8)*(cj8);
IkReal x374=(sj8)*(sj8);
IkReal x375=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x376=((IkReal(1.00000000000000))*(x373));
IkReal x377=((IkReal(1.00000000000000))*(x374));
gconst75=IKsign(((((IkReal(-1.00000000000000))*(x376)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x377)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x375)))+(((IkReal(-1.00000000000000))*(x376)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x377)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x375)))));
IkReal x378=(cj8)*(cj8);
IkReal x379=(sj8)*(sj8);
IkReal x380=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x381=((IkReal(1.00000000000000))*(x378));
IkReal x382=((IkReal(1.00000000000000))*(x379));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r01)*(x380)))+(((IkReal(-1.00000000000000))*(x382)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x381)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x382)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x380)))+(((IkReal(-1.00000000000000))*(x381)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst77;
gconst77=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst76;
IkReal x383=(sj8)*(sj8);
IkReal x384=(cj8)*(cj8);
IkReal x385=((sj7)*(sj8));
IkReal x386=((IkReal(1.00000000000000))*(r02));
IkReal x387=((r01)*(r10));
IkReal x388=((cj8)*(sj7));
IkReal x389=((cj7)*(x383));
IkReal x390=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x391=((cj7)*(x384));
gconst76=IKsign(((((IkReal(-1.00000000000000))*(x389)*(x390)))+(((r01)*(r12)*(x388)))+(((x387)*(x391)))+(((r00)*(r12)*(x385)))+(((IkReal(-1.00000000000000))*(r10)*(x385)*(x386)))+(((IkReal(-1.00000000000000))*(x390)*(x391)))+(((IkReal(-1.00000000000000))*(r11)*(x386)*(x388)))+(((x387)*(x389)))));
IkReal x392=(sj8)*(sj8);
IkReal x393=(cj8)*(cj8);
IkReal x394=((sj7)*(sj8));
IkReal x395=((IkReal(1.00000000000000))*(r02));
IkReal x396=((r01)*(r10));
IkReal x397=((cj8)*(sj7));
IkReal x398=((cj7)*(x392));
IkReal x399=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x400=((cj7)*(x393));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x399)*(x400)))+(((r00)*(r12)*(x394)))+(((IkReal(-1.00000000000000))*(r10)*(x394)*(x395)))+(((x396)*(x398)))+(((IkReal(-1.00000000000000))*(r11)*(x395)*(x397)))+(((IkReal(-1.00000000000000))*(x398)*(x399)))+(((x396)*(x400)))+(((r01)*(r12)*(x397))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x401=((cj7)*(cj8));
IkReal x402=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst76)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x402)))+(((r10)*(x401))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst76)*(((((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x402)))+(((r00)*(x401))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst76)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x402)))+(((r10)*(x401)))))), ((gconst76)*(((((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x402)))+(((r00)*(x401)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x403=IKsin(j3);
IkReal x404=IKcos(j3);
IkReal x405=((IkReal(1.00000000000000))*(sj8));
IkReal x406=((IkReal(1.00000000000000))*(cj8));
IkReal x407=((r01)*(sj8));
IkReal x408=((cj8)*(r10));
IkReal x409=((sj7)*(x404));
IkReal x410=((cj7)*(x403));
IkReal x411=((r00)*(x403));
IkReal x412=((sj7)*(x403));
IkReal x413=((cj7)*(x404));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x404)*(x406)))+(((cj8)*(r01)*(x403)))+(((sj8)*(x411)))+(((IkReal(-1.00000000000000))*(r10)*(x404)*(x405))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x404)*(x406)))+(((IkReal(-1.00000000000000))*(r10)*(x403)*(x405)))+(((IkReal(-1.00000000000000))*(r11)*(x403)*(x406)))+(((IkReal(-1.00000000000000))*(r00)*(x404)*(x405))));
evalcond[2]=((((r12)*(x409)))+(((x407)*(x410)))+(((x408)*(x413)))+(((IkReal(-1.00000000000000))*(r02)*(x412)))+(((IkReal(-1.00000000000000))*(r11)*(x405)*(x413)))+(((IkReal(-1.00000000000000))*(r00)*(x406)*(x410))));
evalcond[3]=((((x408)*(x409)))+(((IkReal(-1.00000000000000))*(r12)*(x413)))+(((IkReal(-1.00000000000000))*(sj7)*(x406)*(x411)))+(((r02)*(x410)))+(((IkReal(-1.00000000000000))*(r11)*(x405)*(x409)))+(((x407)*(x412))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst78;
gconst78=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst79;
gconst79=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x414=((cj3)*(cj5));
IkReal x415=((r02)*(sj7));
IkReal x416=((cj8)*(r00));
IkReal x417=((cj5)*(sj3));
IkReal x418=((cj7)*(cj8));
IkReal x419=((sj5)*(sj7));
IkReal x420=((sj3)*(sj5));
IkReal x421=((cj3)*(cj7)*(sj5));
IkReal x422=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst79)*(((((x414)*(x415)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x418)))+(((IkReal(-1.00000000000000))*(r01)*(x414)*(x422)))+(((IkReal(-1.00000000000000))*(r22)*(x419)))+(((cj7)*(x414)*(x416)))+(((IkReal(-1.00000000000000))*(r11)*(x417)*(x422)))+(((r12)*(sj7)*(x417)))+(((r10)*(x417)*(x418)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst79)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x422)))+(((cj3)*(sj5)*(x415)))+(((cj5)*(r20)*(x418)))+(((IkReal(-1.00000000000000))*(r11)*(x420)*(x422)))+(((r10)*(x418)*(x420)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x421)))+(((r12)*(sj3)*(x419)))+(((x416)*(x421)))+(((cj5)*(r22)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst79)*(((((x414)*(x415)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x418)))+(((IkReal(-1.00000000000000))*(r01)*(x414)*(x422)))+(((IkReal(-1.00000000000000))*(r22)*(x419)))+(((cj7)*(x414)*(x416)))+(((IkReal(-1.00000000000000))*(r11)*(x417)*(x422)))+(((r12)*(sj7)*(x417)))+(((r10)*(x417)*(x418)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst79)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x422)))+(((cj3)*(sj5)*(x415)))+(((cj5)*(r20)*(x418)))+(((IkReal(-1.00000000000000))*(r11)*(x420)*(x422)))+(((r10)*(x418)*(x420)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x421)))+(((r12)*(sj3)*(x419)))+(((x416)*(x421)))+(((cj5)*(r22)*(sj7)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x423=IKcos(j4);
IkReal x424=IKsin(j4);
IkReal x425=((IkReal(1.00000000000000))*(cj7));
IkReal x426=((cj8)*(r20));
IkReal x427=((cj3)*(r02));
IkReal x428=((IkReal(1.00000000000000))*(sj7));
IkReal x429=((sj3)*(sj7));
IkReal x430=((r21)*(sj8));
IkReal x431=((IkReal(1.00000000000000))*(cj5));
IkReal x432=((cj8)*(r10));
IkReal x433=((sj5)*(x424));
IkReal x434=((sj5)*(x423));
IkReal x435=((r11)*(sj3)*(sj8));
IkReal x436=((cj3)*(cj8)*(r00));
IkReal x437=((cj3)*(r01)*(sj8));
IkReal x438=((x423)*(x431));
evalcond[0]=((x433)+(((IkReal(-1.00000000000000))*(x438)))+(((IkReal(-1.00000000000000))*(r22)*(x428)))+(((IkReal(-1.00000000000000))*(x425)*(x426)))+(((cj7)*(x430))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x434)))+(((sj7)*(x430)))+(((IkReal(-1.00000000000000))*(x426)*(x428)))+(((IkReal(-1.00000000000000))*(x424)*(x431))));
evalcond[2]=((((cj7)*(sj3)*(x432)))+(x434)+(((sj7)*(x427)))+(((cj7)*(x436)))+(((IkReal(-1.00000000000000))*(x425)*(x437)))+(((cj5)*(x424)))+(((IkReal(-1.00000000000000))*(x425)*(x435)))+(((r12)*(x429))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x425)*(x427)))+(x433)+(((IkReal(-1.00000000000000))*(x428)*(x437)))+(((sj7)*(x436)))+(((IkReal(-1.00000000000000))*(x428)*(x435)))+(((IkReal(-1.00000000000000))*(x438)))+(((x429)*(x432)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x425))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x439=((cj7)*(sj5));
IkReal x440=((r21)*(sj8));
IkReal x441=((cj5)*(cj7));
IkReal x442=((cj8)*(r20));
IkReal x443=((IkReal(1.00000000000000))*(sj7));
IkReal x444=((sj5)*(sj7));
IkReal x445=((IkReal(1.00000000000000))*(cj5)*(x442));
if( IKabs(((gconst78)*(((((r22)*(x441)))+(((r22)*(x444)))+(((IkReal(-1.00000000000000))*(cj5)*(x442)*(x443)))+(((cj5)*(sj7)*(x440)))+(((IkReal(-1.00000000000000))*(x439)*(x440)))+(((x439)*(x442))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst78)*(((((IkReal(-1.00000000000000))*(x441)*(x442)))+(((x440)*(x441)))+(((x440)*(x444)))+(((IkReal(-1.00000000000000))*(sj5)*(x442)*(x443)))+(((r22)*(x439)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)*(x443))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst78)*(((((r22)*(x441)))+(((r22)*(x444)))+(((IkReal(-1.00000000000000))*(cj5)*(x442)*(x443)))+(((cj5)*(sj7)*(x440)))+(((IkReal(-1.00000000000000))*(x439)*(x440)))+(((x439)*(x442)))))), ((gconst78)*(((((IkReal(-1.00000000000000))*(x441)*(x442)))+(((x440)*(x441)))+(((x440)*(x444)))+(((IkReal(-1.00000000000000))*(sj5)*(x442)*(x443)))+(((r22)*(x439)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)*(x443)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x446=IKcos(j4);
IkReal x447=IKsin(j4);
IkReal x448=((IkReal(1.00000000000000))*(cj7));
IkReal x449=((cj8)*(r20));
IkReal x450=((cj3)*(r02));
IkReal x451=((IkReal(1.00000000000000))*(sj7));
IkReal x452=((sj3)*(sj7));
IkReal x453=((r21)*(sj8));
IkReal x454=((IkReal(1.00000000000000))*(cj5));
IkReal x455=((cj8)*(r10));
IkReal x456=((sj5)*(x447));
IkReal x457=((sj5)*(x446));
IkReal x458=((r11)*(sj3)*(sj8));
IkReal x459=((cj3)*(cj8)*(r00));
IkReal x460=((cj3)*(r01)*(sj8));
IkReal x461=((x446)*(x454));
evalcond[0]=((((IkReal(-1.00000000000000))*(x448)*(x449)))+(x456)+(((IkReal(-1.00000000000000))*(x461)))+(((cj7)*(x453)))+(((IkReal(-1.00000000000000))*(r22)*(x451))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x447)*(x454)))+(((sj7)*(x453)))+(((IkReal(-1.00000000000000))*(x449)*(x451)))+(((IkReal(-1.00000000000000))*(x457))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x448)*(x460)))+(x457)+(((cj7)*(x459)))+(((r12)*(x452)))+(((cj5)*(x447)))+(((cj7)*(sj3)*(x455)))+(((IkReal(-1.00000000000000))*(x448)*(x458)))+(((sj7)*(x450))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x448)))+(((IkReal(-1.00000000000000))*(x448)*(x450)))+(((IkReal(-1.00000000000000))*(x451)*(x458)))+(x456)+(((IkReal(-1.00000000000000))*(x461)))+(((sj7)*(x459)))+(((x452)*(x455)))+(((IkReal(-1.00000000000000))*(x451)*(x460))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x462=((cj7)*(sj5));
IkReal x463=((r21)*(sj8));
IkReal x464=((cj5)*(cj7));
IkReal x465=((cj8)*(r20));
IkReal x466=((sj5)*(sj7));
IkReal x467=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst77)*(((((r22)*(x464)))+(((x462)*(x465)))+(((cj5)*(sj7)*(x463)))+(((r22)*(x466)))+(((IkReal(-1.00000000000000))*(x462)*(x463)))+(((IkReal(-1.00000000000000))*(x465)*(x467))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst77)*(((((x463)*(x464)))+(((IkReal(-1.00000000000000))*(r22)*(x467)))+(((IkReal(-1.00000000000000))*(x464)*(x465)))+(((x463)*(x466)))+(((r22)*(x462)))+(((IkReal(-1.00000000000000))*(x465)*(x466))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst77)*(((((r22)*(x464)))+(((x462)*(x465)))+(((cj5)*(sj7)*(x463)))+(((r22)*(x466)))+(((IkReal(-1.00000000000000))*(x462)*(x463)))+(((IkReal(-1.00000000000000))*(x465)*(x467)))))), ((gconst77)*(((((x463)*(x464)))+(((IkReal(-1.00000000000000))*(r22)*(x467)))+(((IkReal(-1.00000000000000))*(x464)*(x465)))+(((x463)*(x466)))+(((r22)*(x462)))+(((IkReal(-1.00000000000000))*(x465)*(x466)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x468=IKcos(j4);
IkReal x469=IKsin(j4);
IkReal x470=((IkReal(1.00000000000000))*(cj5));
IkReal x471=((r21)*(sj8));
IkReal x472=((IkReal(1.00000000000000))*(cj8)*(r20));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj7)*(x472)))+(((IkReal(-1.00000000000000))*(x468)*(x470)))+(((sj5)*(x469)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x471))));
evalcond[1]=((((sj7)*(x471)))+(((IkReal(-1.00000000000000))*(sj5)*(x468)))+(((IkReal(-1.00000000000000))*(sj7)*(x472)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x469)*(x470))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst80;
IkReal x473=(cj8)*(cj8);
IkReal x474=(sj8)*(sj8);
IkReal x475=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x476=((IkReal(1.00000000000000))*(x473));
IkReal x477=((IkReal(1.00000000000000))*(x474));
gconst80=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x475)))+(((IkReal(-1.00000000000000))*(x477)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x476)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x475)))+(((IkReal(-1.00000000000000))*(x476)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x477)*((r00)*(r00))))));
IkReal x478=(cj8)*(cj8);
IkReal x479=(sj8)*(sj8);
IkReal x480=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x481=((IkReal(1.00000000000000))*(x478));
IkReal x482=((IkReal(1.00000000000000))*(x479));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x481)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x480)))+(((IkReal(-1.00000000000000))*(x482)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x481)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x482)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x480))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst81;
IkReal x483=(sj8)*(sj8);
IkReal x484=(cj8)*(cj8);
IkReal x485=((sj7)*(sj8));
IkReal x486=((IkReal(1.00000000000000))*(r02));
IkReal x487=((r01)*(r10));
IkReal x488=((cj8)*(sj7));
IkReal x489=((cj7)*(x483));
IkReal x490=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x491=((cj7)*(x484));
gconst81=IKsign(((((IkReal(-1.00000000000000))*(x489)*(x490)))+(((x487)*(x489)))+(((r00)*(r12)*(x485)))+(((IkReal(-1.00000000000000))*(r11)*(x486)*(x488)))+(((IkReal(-1.00000000000000))*(x490)*(x491)))+(((IkReal(-1.00000000000000))*(r10)*(x485)*(x486)))+(((r01)*(r12)*(x488)))+(((x487)*(x491)))));
IkReal x492=(sj8)*(sj8);
IkReal x493=(cj8)*(cj8);
IkReal x494=((sj7)*(sj8));
IkReal x495=((IkReal(1.00000000000000))*(r02));
IkReal x496=((r01)*(r10));
IkReal x497=((cj8)*(sj7));
IkReal x498=((cj7)*(x492));
IkReal x499=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x500=((cj7)*(x493));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(x494)*(x495)))+(((r00)*(r12)*(x494)))+(((x496)*(x500)))+(((IkReal(-1.00000000000000))*(x499)*(x500)))+(((IkReal(-1.00000000000000))*(r11)*(x495)*(x497)))+(((x496)*(x498)))+(((IkReal(-1.00000000000000))*(x498)*(x499)))+(((r01)*(r12)*(x497))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x501=((cj7)*(cj8));
IkReal x502=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst81)*(((((r12)*(sj7)))+(((r10)*(x501)))+(((IkReal(-1.00000000000000))*(r11)*(x502))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst81)*(((((r00)*(x501)))+(((IkReal(-1.00000000000000))*(r01)*(x502)))+(((r02)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst81)*(((((r12)*(sj7)))+(((r10)*(x501)))+(((IkReal(-1.00000000000000))*(r11)*(x502)))))), ((gconst81)*(((((r00)*(x501)))+(((IkReal(-1.00000000000000))*(r01)*(x502)))+(((r02)*(sj7)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x503=IKsin(j3);
IkReal x504=IKcos(j3);
IkReal x505=((r01)*(sj8));
IkReal x506=((cj8)*(r00));
IkReal x507=((r00)*(sj8));
IkReal x508=((cj8)*(r11));
IkReal x509=((r11)*(sj8));
IkReal x510=((r10)*(sj8));
IkReal x511=((cj8)*(r10));
IkReal x512=((cj7)*(x503));
IkReal x513=((sj7)*(x504));
IkReal x514=((IkReal(1.00000000000000))*(x503));
IkReal x515=((IkReal(1.00000000000000))*(x504));
IkReal x516=((cj8)*(x503));
IkReal x517=((IkReal(1.00000000000000))*(x509));
IkReal x518=((sj7)*(x503));
IkReal x519=((cj7)*(x504));
evalcond[0]=((IkReal(-1.00000000000000))+(((r01)*(x516)))+(((IkReal(-1.00000000000000))*(x510)*(x515)))+(((x503)*(x507)))+(((IkReal(-1.00000000000000))*(x508)*(x515))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x515)))+(((IkReal(-1.00000000000000))*(x508)*(x514)))+(((IkReal(-1.00000000000000))*(x510)*(x514)))+(((IkReal(-1.00000000000000))*(x507)*(x515))));
evalcond[2]=((((x511)*(x519)))+(((IkReal(-1.00000000000000))*(x506)*(x512)))+(((x505)*(x512)))+(((IkReal(-1.00000000000000))*(cj7)*(x509)*(x515)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x514)))+(((r12)*(x513))));
evalcond[3]=((((x511)*(x513)))+(((r02)*(x512)))+(((IkReal(-1.00000000000000))*(sj7)*(x506)*(x514)))+(((IkReal(-1.00000000000000))*(x513)*(x517)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x515)))+(((x505)*(x518))));
evalcond[4]=((((cj5)*(sj4)))+(((x506)*(x519)))+(((IkReal(-1.00000000000000))*(x512)*(x517)))+(((x511)*(x512)))+(((r02)*(x513)))+(((r12)*(x518)))+(((cj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj7)*(x505)*(x515))));
evalcond[5]=((((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x515)))+(((x511)*(x518)))+(((IkReal(-1.00000000000000))*(r12)*(x512)))+(((x506)*(x513)))+(((IkReal(-1.00000000000000))*(x505)*(x513)))+(((IkReal(-1.00000000000000))*(sj7)*(x509)*(x514))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst80)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst80)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst80)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst80)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x520=IKsin(j3);
IkReal x521=IKcos(j3);
IkReal x522=((r01)*(sj8));
IkReal x523=((cj8)*(r00));
IkReal x524=((r00)*(sj8));
IkReal x525=((cj8)*(r11));
IkReal x526=((r11)*(sj8));
IkReal x527=((r10)*(sj8));
IkReal x528=((cj8)*(r10));
IkReal x529=((cj7)*(x520));
IkReal x530=((sj7)*(x521));
IkReal x531=((IkReal(1.00000000000000))*(x520));
IkReal x532=((IkReal(1.00000000000000))*(x521));
IkReal x533=((cj8)*(x520));
IkReal x534=((IkReal(1.00000000000000))*(x526));
IkReal x535=((sj7)*(x520));
IkReal x536=((cj7)*(x521));
evalcond[0]=((IkReal(-1.00000000000000))+(((x520)*(x524)))+(((r01)*(x533)))+(((IkReal(-1.00000000000000))*(x525)*(x532)))+(((IkReal(-1.00000000000000))*(x527)*(x532))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x527)*(x531)))+(((IkReal(-1.00000000000000))*(x524)*(x532)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x532)))+(((IkReal(-1.00000000000000))*(x525)*(x531))));
evalcond[2]=((((x522)*(x529)))+(((IkReal(-1.00000000000000))*(cj7)*(x526)*(x532)))+(((IkReal(-1.00000000000000))*(x523)*(x529)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x531)))+(((x528)*(x536)))+(((r12)*(x530))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x530)*(x534)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x532)))+(((r02)*(x529)))+(((x528)*(x530)))+(((IkReal(-1.00000000000000))*(sj7)*(x523)*(x531)))+(((x522)*(x535))));
evalcond[4]=((((r02)*(x530)))+(((r12)*(x535)))+(((x528)*(x529)))+(((cj5)*(sj4)))+(((x523)*(x536)))+(((IkReal(-1.00000000000000))*(x529)*(x534)))+(((IkReal(-1.00000000000000))*(cj7)*(x522)*(x532)))+(((cj4)*(sj5))));
evalcond[5]=((((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(r12)*(x529)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(sj7)*(x526)*(x531)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x532)))+(((IkReal(-1.00000000000000))*(x522)*(x530)))+(((x528)*(x535)))+(((x523)*(x530))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst75)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst75)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst75)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst75)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x537=IKsin(j3);
IkReal x538=IKcos(j3);
IkReal x539=((IkReal(1.00000000000000))*(sj8));
IkReal x540=((IkReal(1.00000000000000))*(cj8));
IkReal x541=((r01)*(sj8));
IkReal x542=((cj8)*(r10));
IkReal x543=((sj7)*(x538));
IkReal x544=((cj7)*(x537));
IkReal x545=((r00)*(x537));
IkReal x546=((sj7)*(x537));
IkReal x547=((cj7)*(x538));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x538)*(x540)))+(((cj8)*(r01)*(x537)))+(((IkReal(-1.00000000000000))*(r10)*(x538)*(x539)))+(((sj8)*(x545))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x537)*(x540)))+(((IkReal(-1.00000000000000))*(r00)*(x538)*(x539)))+(((IkReal(-1.00000000000000))*(r10)*(x537)*(x539)))+(((IkReal(-1.00000000000000))*(r01)*(x538)*(x540))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x540)*(x544)))+(((r12)*(x543)))+(((x542)*(x547)))+(((IkReal(-1.00000000000000))*(r11)*(x539)*(x547)))+(((x541)*(x544)))+(((IkReal(-1.00000000000000))*(r02)*(x546))));
evalcond[3]=((((x541)*(x546)))+(((IkReal(-1.00000000000000))*(sj7)*(x540)*(x545)))+(((x542)*(x543)))+(((IkReal(-1.00000000000000))*(r12)*(x547)))+(((IkReal(-1.00000000000000))*(r11)*(x539)*(x543)))+(((r02)*(x544))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst78;
gconst78=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst79;
gconst79=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x548=((cj3)*(cj5));
IkReal x549=((r02)*(sj7));
IkReal x550=((cj8)*(r00));
IkReal x551=((cj5)*(sj3));
IkReal x552=((cj7)*(cj8));
IkReal x553=((sj5)*(sj7));
IkReal x554=((sj3)*(sj5));
IkReal x555=((cj3)*(cj7)*(sj5));
IkReal x556=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst79)*(((((IkReal(-1.00000000000000))*(r01)*(x548)*(x556)))+(((x548)*(x549)))+(((IkReal(-1.00000000000000))*(r22)*(x553)))+(((cj7)*(x548)*(x550)))+(((r10)*(x551)*(x552)))+(((r12)*(sj7)*(x551)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x552)))+(((IkReal(-1.00000000000000))*(r11)*(x551)*(x556)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst79)*(((((x550)*(x555)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x556)))+(((IkReal(-1.00000000000000))*(r11)*(x554)*(x556)))+(((r12)*(sj3)*(x553)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x555)))+(((cj5)*(r22)*(sj7)))+(((cj5)*(r20)*(x552)))+(((r10)*(x552)*(x554)))+(((cj3)*(sj5)*(x549))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst79)*(((((IkReal(-1.00000000000000))*(r01)*(x548)*(x556)))+(((x548)*(x549)))+(((IkReal(-1.00000000000000))*(r22)*(x553)))+(((cj7)*(x548)*(x550)))+(((r10)*(x551)*(x552)))+(((r12)*(sj7)*(x551)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x552)))+(((IkReal(-1.00000000000000))*(r11)*(x551)*(x556)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst79)*(((((x550)*(x555)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x556)))+(((IkReal(-1.00000000000000))*(r11)*(x554)*(x556)))+(((r12)*(sj3)*(x553)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x555)))+(((cj5)*(r22)*(sj7)))+(((cj5)*(r20)*(x552)))+(((r10)*(x552)*(x554)))+(((cj3)*(sj5)*(x549)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x557=IKcos(j4);
IkReal x558=IKsin(j4);
IkReal x559=((IkReal(1.00000000000000))*(cj7));
IkReal x560=((cj8)*(r20));
IkReal x561=((cj3)*(r02));
IkReal x562=((IkReal(1.00000000000000))*(sj7));
IkReal x563=((sj3)*(sj7));
IkReal x564=((r21)*(sj8));
IkReal x565=((IkReal(1.00000000000000))*(cj5));
IkReal x566=((cj8)*(r10));
IkReal x567=((sj5)*(x558));
IkReal x568=((sj5)*(x557));
IkReal x569=((r11)*(sj3)*(sj8));
IkReal x570=((cj3)*(cj8)*(r00));
IkReal x571=((cj3)*(r01)*(sj8));
IkReal x572=((x557)*(x565));
evalcond[0]=((((IkReal(-1.00000000000000))*(x559)*(x560)))+(x567)+(((IkReal(-1.00000000000000))*(r22)*(x562)))+(((IkReal(-1.00000000000000))*(x572)))+(((cj7)*(x564))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x558)*(x565)))+(((IkReal(-1.00000000000000))*(x568)))+(((sj7)*(x564)))+(((IkReal(-1.00000000000000))*(x560)*(x562))));
evalcond[2]=((((cj5)*(x558)))+(((IkReal(-1.00000000000000))*(x559)*(x569)))+(x568)+(((cj7)*(sj3)*(x566)))+(((IkReal(-1.00000000000000))*(x559)*(x571)))+(((cj7)*(x570)))+(((r12)*(x563)))+(((sj7)*(x561))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x562)*(x569)))+(x567)+(((x563)*(x566)))+(((sj7)*(x570)))+(((IkReal(-1.00000000000000))*(x572)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x559)))+(((IkReal(-1.00000000000000))*(x562)*(x571)))+(((IkReal(-1.00000000000000))*(x559)*(x561))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x573=((cj7)*(sj5));
IkReal x574=((r21)*(sj8));
IkReal x575=((cj5)*(cj7));
IkReal x576=((cj8)*(r20));
IkReal x577=((IkReal(1.00000000000000))*(sj7));
IkReal x578=((sj5)*(sj7));
IkReal x579=((IkReal(1.00000000000000))*(cj5)*(x576));
if( IKabs(((gconst78)*(((((x573)*(x576)))+(((r22)*(x578)))+(((IkReal(-1.00000000000000))*(x573)*(x574)))+(((r22)*(x575)))+(((IkReal(-1.00000000000000))*(cj5)*(x576)*(x577)))+(((cj5)*(sj7)*(x574))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst78)*(((((IkReal(-1.00000000000000))*(x575)*(x576)))+(((IkReal(-1.00000000000000))*(sj5)*(x576)*(x577)))+(((x574)*(x575)))+(((r22)*(x573)))+(((x574)*(x578)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)*(x577))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst78)*(((((x573)*(x576)))+(((r22)*(x578)))+(((IkReal(-1.00000000000000))*(x573)*(x574)))+(((r22)*(x575)))+(((IkReal(-1.00000000000000))*(cj5)*(x576)*(x577)))+(((cj5)*(sj7)*(x574)))))), ((gconst78)*(((((IkReal(-1.00000000000000))*(x575)*(x576)))+(((IkReal(-1.00000000000000))*(sj5)*(x576)*(x577)))+(((x574)*(x575)))+(((r22)*(x573)))+(((x574)*(x578)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)*(x577)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x580=IKcos(j4);
IkReal x581=IKsin(j4);
IkReal x582=((IkReal(1.00000000000000))*(cj7));
IkReal x583=((cj8)*(r20));
IkReal x584=((cj3)*(r02));
IkReal x585=((IkReal(1.00000000000000))*(sj7));
IkReal x586=((sj3)*(sj7));
IkReal x587=((r21)*(sj8));
IkReal x588=((IkReal(1.00000000000000))*(cj5));
IkReal x589=((cj8)*(r10));
IkReal x590=((sj5)*(x581));
IkReal x591=((sj5)*(x580));
IkReal x592=((r11)*(sj3)*(sj8));
IkReal x593=((cj3)*(cj8)*(r00));
IkReal x594=((cj3)*(r01)*(sj8));
IkReal x595=((x580)*(x588));
evalcond[0]=((((IkReal(-1.00000000000000))*(x595)))+(((IkReal(-1.00000000000000))*(r22)*(x585)))+(((IkReal(-1.00000000000000))*(x582)*(x583)))+(x590)+(((cj7)*(x587))));
evalcond[1]=((((cj7)*(r22)))+(((sj7)*(x587)))+(((IkReal(-1.00000000000000))*(x583)*(x585)))+(((IkReal(-1.00000000000000))*(x591)))+(((IkReal(-1.00000000000000))*(x581)*(x588))));
evalcond[2]=((((r12)*(x586)))+(((cj7)*(sj3)*(x589)))+(((cj7)*(x593)))+(((cj5)*(x581)))+(((sj7)*(x584)))+(((IkReal(-1.00000000000000))*(x582)*(x592)))+(((IkReal(-1.00000000000000))*(x582)*(x594)))+(x591));
evalcond[3]=((((sj7)*(x593)))+(((IkReal(-1.00000000000000))*(x582)*(x584)))+(((IkReal(-1.00000000000000))*(x595)))+(((IkReal(-1.00000000000000))*(x585)*(x592)))+(((IkReal(-1.00000000000000))*(x585)*(x594)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x582)))+(((x586)*(x589)))+(x590));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x596=((IkReal(4.00000000000000))*(npx));
IkReal x597=((IkReal(4.00000000000000))*(npy));
if( IKabs(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(-0.380000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(cj8)*(x597)))+(((IkReal(-1.00000000000000))*(sj8)*(x596)))+(((IkReal(0.120000000000000))*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x597)))+(((cj7)*(cj8)*(x596)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(-0.380000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(cj8)*(x597)))+(((IkReal(-1.00000000000000))*(sj8)*(x596)))+(((IkReal(0.120000000000000))*(sj6)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x597)))+(((cj7)*(cj8)*(x596)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(-0.380000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(cj8)*(x597)))+(((IkReal(-1.00000000000000))*(sj8)*(x596)))+(((IkReal(0.120000000000000))*(sj6)))))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x597)))+(((cj7)*(cj8)*(x596)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x598=IKsin(j5);
IkReal x599=((IkReal(1.00000000000000))*(sj7));
IkReal x600=((npy)*(sj8));
IkReal x601=((cj8)*(npx));
IkReal x602=((IkReal(0.250000000000000))*(x598));
evalcond[0]=((((IkReal(0.0950000000000000))*(cj6)))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.0300000000000000))*(sj6)))+(((sj6)*(x602))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x601)))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((cj7)*(x600)))+(((IkReal(-1.00000000000000))*(npz)*(x599)))+(((IkReal(0.0900000000000000))*(cj7))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj6)*(x602)))+(((cj7)*(npz)))+(((IkReal(0.0300000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(x599)*(x601)))+(((IkReal(0.0900000000000000))*(sj7)))+(((sj7)*(x600)))+(((IkReal(0.0950000000000000))*(sj6))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5))))));
dummyeval[0]=((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x603=(cj8)*(cj8);
IkReal x604=(sj8)*(sj8);
IkReal x605=((r00)*(r11));
IkReal x606=((r02)*(sj7));
IkReal x607=((cj7)*(x603));
IkReal x608=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x609=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x610=((cj7)*(x604));
gconst2=IKsign(((((x605)*(x607)))+(((IkReal(-1.00000000000000))*(x609)*(x610)))+(((x605)*(x610)))+(((r10)*(sj8)*(x606)))+(((IkReal(-1.00000000000000))*(x607)*(x609)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x608)))+(((cj8)*(r11)*(x606)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x608)))));
IkReal x611=(cj8)*(cj8);
IkReal x612=(sj8)*(sj8);
IkReal x613=((r00)*(r11));
IkReal x614=((r02)*(sj7));
IkReal x615=((cj7)*(x611));
IkReal x616=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x617=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x618=((cj7)*(x612));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(sj8)*(x616)))+(((r10)*(sj8)*(x614)))+(((IkReal(-1.00000000000000))*(x615)*(x617)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x616)))+(((cj8)*(r11)*(x614)))+(((x613)*(x615)))+(((x613)*(x618)))+(((IkReal(-1.00000000000000))*(x617)*(x618))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x619=((IkReal(1.00000000000000))*(sj7));
IkReal x620=((npy)*(sj8));
IkReal x621=((cj8)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x621)))+(((IkReal(-1.00000000000000))*(npz)*(x619)))+(((IkReal(0.0900000000000000))*(cj7)))+(((cj7)*(x620)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((cj7)*(r22)))+(((r21)*(sj7)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x619))));
evalcond[4]=((IkReal(0.0950000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x619)*(x621)))+(((IkReal(0.0900000000000000))*(sj7)))+(((sj7)*(x620))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
IkReal x622=(sj8)*(sj8);
IkReal x623=(cj8)*(cj8);
IkReal x624=((cj7)*(r02));
IkReal x625=((IkReal(1.00000000000000))*(r00));
IkReal x626=((r11)*(sj7));
IkReal x627=((cj7)*(r12));
IkReal x628=((r01)*(r10)*(sj7));
gconst18=IKsign(((((IkReal(-1.00000000000000))*(x623)*(x625)*(x626)))+(((IkReal(-1.00000000000000))*(sj8)*(x625)*(x627)))+(((cj8)*(r11)*(x624)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x627)))+(((IkReal(-1.00000000000000))*(x622)*(x625)*(x626)))+(((x622)*(x628)))+(((r10)*(sj8)*(x624)))+(((x623)*(x628)))));
IkReal x629=(sj8)*(sj8);
IkReal x630=(cj8)*(cj8);
IkReal x631=((cj7)*(r02));
IkReal x632=((IkReal(1.00000000000000))*(r00));
IkReal x633=((r11)*(sj7));
IkReal x634=((cj7)*(r12));
IkReal x635=((r01)*(r10)*(sj7));
dummyeval[0]=((((cj8)*(r11)*(x631)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x634)))+(((x629)*(x635)))+(((IkReal(-1.00000000000000))*(sj8)*(x632)*(x634)))+(((x630)*(x635)))+(((IkReal(-1.00000000000000))*(x630)*(x632)*(x633)))+(((r10)*(sj8)*(x631)))+(((IkReal(-1.00000000000000))*(x629)*(x632)*(x633))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
IkReal x636=(cj7)*(cj7);
IkReal x637=(sj7)*(sj7);
IkReal x638=((r02)*(r11));
IkReal x639=((sj8)*(x637));
IkReal x640=((cj8)*(r00)*(r12));
IkReal x641=((IkReal(1.00000000000000))*(r01)*(r12));
IkReal x642=((sj8)*(x636));
IkReal x643=((IkReal(1.00000000000000))*(cj8)*(r02)*(r10));
gconst19=IKsign(((((x638)*(x642)))+(((x638)*(x639)))+(((IkReal(-1.00000000000000))*(x637)*(x643)))+(((IkReal(-1.00000000000000))*(x636)*(x643)))+(((x636)*(x640)))+(((x637)*(x640)))+(((IkReal(-1.00000000000000))*(x641)*(x642)))+(((IkReal(-1.00000000000000))*(x639)*(x641)))));
IkReal x644=(cj7)*(cj7);
IkReal x645=(sj7)*(sj7);
IkReal x646=((r02)*(r11));
IkReal x647=((sj8)*(x645));
IkReal x648=((cj8)*(r00)*(r12));
IkReal x649=((IkReal(1.00000000000000))*(r01)*(r12));
IkReal x650=((sj8)*(x644));
IkReal x651=x643;
dummyeval[0]=((((IkReal(-1.00000000000000))*(x645)*(x651)))+(((x644)*(x648)))+(((IkReal(-1.00000000000000))*(x644)*(x651)))+(((x646)*(x650)))+(((IkReal(-1.00000000000000))*(x649)*(x650)))+(((x646)*(x647)))+(((IkReal(-1.00000000000000))*(x647)*(x649)))+(((x645)*(x648))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x652=((cj7)*(cj8));
IkReal x653=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(r11)*(x653)))+(((r12)*(sj7)))+(((r10)*(x652))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(r01)*(x653)))+(((r02)*(sj7)))+(((r00)*(x652))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst19)*(((((IkReal(-1.00000000000000))*(r11)*(x653)))+(((r12)*(sj7)))+(((r10)*(x652)))))), ((gconst19)*(((((IkReal(-1.00000000000000))*(r01)*(x653)))+(((r02)*(sj7)))+(((r00)*(x652)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x654=IKsin(j3);
IkReal x655=IKcos(j3);
IkReal x656=((r01)*(sj8));
IkReal x657=((cj8)*(sj7));
IkReal x658=((IkReal(1.00000000000000))*(sj7));
IkReal x659=((IkReal(1.00000000000000))*(r12));
IkReal x660=((r11)*(sj8));
IkReal x661=((IkReal(1.00000000000000))*(r00));
IkReal x662=((cj7)*(x654));
IkReal x663=((r10)*(x655));
IkReal x664=((IkReal(1.00000000000000))*(cj7)*(x655));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x655)))+(((cj8)*(r01)*(x654)))+(((IkReal(-1.00000000000000))*(sj8)*(x663)))+(((r00)*(sj8)*(x654))));
evalcond[1]=((((cj7)*(cj8)*(x663)))+(((x656)*(x662)))+(((IkReal(-1.00000000000000))*(r02)*(x654)*(x658)))+(((IkReal(-1.00000000000000))*(cj8)*(x661)*(x662)))+(((IkReal(-1.00000000000000))*(x660)*(x664)))+(((r12)*(sj7)*(x655))));
evalcond[2]=((IkReal(1.00000000000000))+(((sj7)*(x654)*(x656)))+(((r02)*(x662)))+(((IkReal(-1.00000000000000))*(x655)*(x658)*(x660)))+(((IkReal(-1.00000000000000))*(x654)*(x657)*(x661)))+(((x657)*(x663)))+(((IkReal(-1.00000000000000))*(cj7)*(x655)*(x659))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x654)*(x658)*(x660)))+(((IkReal(-1.00000000000000))*(r02)*(x664)))+(((IkReal(-1.00000000000000))*(x659)*(x662)))+(((IkReal(-1.00000000000000))*(x655)*(x656)*(x658)))+(((r10)*(x654)*(x657)))+(((r00)*(x655)*(x657))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
gconst22=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x665=((cj8)*(sj5));
IkReal x666=((cj3)*(r01));
IkReal x667=((IkReal(1.00000000000000))*(cj5));
IkReal x668=((r11)*(sj3));
IkReal x669=((sj5)*(sj8));
IkReal x670=((r10)*(sj3));
IkReal x671=((cj3)*(r00)*(sj8));
if( IKabs(((gconst22)*(((((x669)*(x670)))+(((x665)*(x668)))+(((cj3)*(r00)*(x669)))+(((cj5)*(cj8)*(r21)))+(((x665)*(x666)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((r20)*(x669)))+(((IkReal(-1.00000000000000))*(cj8)*(x666)*(x667)))+(((IkReal(-1.00000000000000))*(x667)*(x671)))+(((IkReal(-1.00000000000000))*(sj8)*(x667)*(x670)))+(((IkReal(-1.00000000000000))*(cj8)*(x667)*(x668)))+(((r21)*(x665))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst22)*(((((x669)*(x670)))+(((x665)*(x668)))+(((cj3)*(r00)*(x669)))+(((cj5)*(cj8)*(r21)))+(((x665)*(x666)))+(((cj5)*(r20)*(sj8)))))), ((gconst22)*(((((r20)*(x669)))+(((IkReal(-1.00000000000000))*(cj8)*(x666)*(x667)))+(((IkReal(-1.00000000000000))*(x667)*(x671)))+(((IkReal(-1.00000000000000))*(sj8)*(x667)*(x670)))+(((IkReal(-1.00000000000000))*(cj8)*(x667)*(x668)))+(((r21)*(x665)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x672=IKsin(j4);
IkReal x673=IKcos(j4);
IkReal x674=((IkReal(1.00000000000000))*(cj8));
IkReal x675=((cj3)*(r01));
IkReal x676=((cj3)*(r00));
IkReal x677=((cj7)*(cj8));
IkReal x678=((IkReal(1.00000000000000))*(cj5));
IkReal x679=((IkReal(1.00000000000000))*(sj8));
IkReal x680=((r11)*(sj3));
IkReal x681=((r10)*(sj3));
IkReal x682=((sj5)*(x672));
IkReal x683=((sj5)*(x673));
IkReal x684=((x673)*(x678));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x683)))+(((IkReal(-1.00000000000000))*(x672)*(x678)))+(((r20)*(sj8))));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x674)))+(((IkReal(-1.00000000000000))*(x684)))+(x682));
evalcond[2]=((((IkReal(-1.00000000000000))*(x674)*(x675)))+(((IkReal(-1.00000000000000))*(x674)*(x680)))+(((IkReal(-1.00000000000000))*(x679)*(x681)))+(((IkReal(-1.00000000000000))*(x684)))+(x682)+(((IkReal(-1.00000000000000))*(x676)*(x679))));
evalcond[3]=((((cj5)*(x672)))+(((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x675)*(x679)))+(((x676)*(x677)))+(((r12)*(sj3)*(sj7)))+(((x677)*(x681)))+(((IkReal(-1.00000000000000))*(cj7)*(x679)*(x680)))+(x683));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x685=((cj8)*(sj5));
IkReal x686=((cj7)*(r20));
IkReal x687=((IkReal(1.00000000000000))*(cj5));
IkReal x688=((r22)*(sj7));
IkReal x689=((r20)*(sj8));
IkReal x690=((cj7)*(r21)*(sj8));
if( IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(sj5)*(x690)))+(((cj5)*(cj8)*(r21)))+(((cj5)*(x689)))+(((sj5)*(x688)))+(((x685)*(x686))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((cj5)*(x690)))+(((sj5)*(x689)))+(((IkReal(-1.00000000000000))*(cj8)*(x686)*(x687)))+(((r21)*(x685)))+(((IkReal(-1.00000000000000))*(x687)*(x688))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst21)*(((((IkReal(-1.00000000000000))*(sj5)*(x690)))+(((cj5)*(cj8)*(r21)))+(((cj5)*(x689)))+(((sj5)*(x688)))+(((x685)*(x686)))))), ((gconst21)*(((((cj5)*(x690)))+(((sj5)*(x689)))+(((IkReal(-1.00000000000000))*(cj8)*(x686)*(x687)))+(((r21)*(x685)))+(((IkReal(-1.00000000000000))*(x687)*(x688)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x691=IKsin(j4);
IkReal x692=IKcos(j4);
IkReal x693=((IkReal(1.00000000000000))*(cj8));
IkReal x694=((cj3)*(r01));
IkReal x695=((cj3)*(r00));
IkReal x696=((cj7)*(cj8));
IkReal x697=((IkReal(1.00000000000000))*(cj5));
IkReal x698=((IkReal(1.00000000000000))*(sj8));
IkReal x699=((r11)*(sj3));
IkReal x700=((r10)*(sj3));
IkReal x701=((sj5)*(x691));
IkReal x702=((sj5)*(x692));
IkReal x703=((x692)*(x697));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x691)*(x697)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x702))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x703)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x693)))+(x701));
evalcond[2]=((((IkReal(-1.00000000000000))*(x698)*(x700)))+(((IkReal(-1.00000000000000))*(x703)))+(((IkReal(-1.00000000000000))*(x693)*(x699)))+(((IkReal(-1.00000000000000))*(x695)*(x698)))+(x701)+(((IkReal(-1.00000000000000))*(x693)*(x694))));
evalcond[3]=((((x695)*(x696)))+(((cj3)*(r02)*(sj7)))+(((r12)*(sj3)*(sj7)))+(((cj5)*(x691)))+(((IkReal(-1.00000000000000))*(cj7)*(x694)*(x698)))+(x702)+(((IkReal(-1.00000000000000))*(cj7)*(x698)*(x699)))+(((x696)*(x700))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x704=((IkReal(1.00000000000000))*(cj8));
IkReal x705=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r10)*(x705)))+(((IkReal(-1.00000000000000))*(r11)*(x704))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r00)*(x705)))+(((IkReal(-1.00000000000000))*(r01)*(x704))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst18)*(((((IkReal(-1.00000000000000))*(r10)*(x705)))+(((IkReal(-1.00000000000000))*(r11)*(x704)))))), ((gconst18)*(((((IkReal(-1.00000000000000))*(r00)*(x705)))+(((IkReal(-1.00000000000000))*(r01)*(x704)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x706=IKsin(j3);
IkReal x707=IKcos(j3);
IkReal x708=((r01)*(sj8));
IkReal x709=((cj8)*(sj7));
IkReal x710=((IkReal(1.00000000000000))*(sj7));
IkReal x711=((IkReal(1.00000000000000))*(r12));
IkReal x712=((r11)*(sj8));
IkReal x713=((IkReal(1.00000000000000))*(r00));
IkReal x714=((cj7)*(x706));
IkReal x715=((r10)*(x707));
IkReal x716=((IkReal(1.00000000000000))*(cj7)*(x707));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x707)))+(((cj8)*(r01)*(x706)))+(((IkReal(-1.00000000000000))*(sj8)*(x715)))+(((r00)*(sj8)*(x706))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(x713)*(x714)))+(((x708)*(x714)))+(((IkReal(-1.00000000000000))*(r02)*(x706)*(x710)))+(((IkReal(-1.00000000000000))*(x712)*(x716)))+(((r12)*(sj7)*(x707)))+(((cj7)*(cj8)*(x715))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x707)*(x711)))+(((IkReal(-1.00000000000000))*(x707)*(x710)*(x712)))+(((r02)*(x714)))+(((IkReal(-1.00000000000000))*(x706)*(x709)*(x713)))+(((x709)*(x715)))+(((sj7)*(x706)*(x708))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x707)*(x708)*(x710)))+(((r00)*(x707)*(x709)))+(((IkReal(-1.00000000000000))*(r02)*(x716)))+(((IkReal(-1.00000000000000))*(x706)*(x710)*(x712)))+(((IkReal(-1.00000000000000))*(x711)*(x714)))+(((r10)*(x706)*(x709))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
gconst22=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x717=((cj8)*(sj5));
IkReal x718=((cj3)*(r01));
IkReal x719=((IkReal(1.00000000000000))*(cj5));
IkReal x720=((r11)*(sj3));
IkReal x721=((sj5)*(sj8));
IkReal x722=((r10)*(sj3));
IkReal x723=((cj3)*(r00)*(sj8));
if( IKabs(((gconst22)*(((((x717)*(x718)))+(((x717)*(x720)))+(((cj3)*(r00)*(x721)))+(((cj5)*(cj8)*(r21)))+(((x721)*(x722)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((r21)*(x717)))+(((r20)*(x721)))+(((IkReal(-1.00000000000000))*(cj8)*(x718)*(x719)))+(((IkReal(-1.00000000000000))*(x719)*(x723)))+(((IkReal(-1.00000000000000))*(cj8)*(x719)*(x720)))+(((IkReal(-1.00000000000000))*(sj8)*(x719)*(x722))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst22)*(((((x717)*(x718)))+(((x717)*(x720)))+(((cj3)*(r00)*(x721)))+(((cj5)*(cj8)*(r21)))+(((x721)*(x722)))+(((cj5)*(r20)*(sj8)))))), ((gconst22)*(((((r21)*(x717)))+(((r20)*(x721)))+(((IkReal(-1.00000000000000))*(cj8)*(x718)*(x719)))+(((IkReal(-1.00000000000000))*(x719)*(x723)))+(((IkReal(-1.00000000000000))*(cj8)*(x719)*(x720)))+(((IkReal(-1.00000000000000))*(sj8)*(x719)*(x722)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x724=IKsin(j4);
IkReal x725=IKcos(j4);
IkReal x726=((IkReal(1.00000000000000))*(cj8));
IkReal x727=((cj3)*(r01));
IkReal x728=((cj3)*(r00));
IkReal x729=((cj7)*(cj8));
IkReal x730=((IkReal(1.00000000000000))*(cj5));
IkReal x731=((IkReal(1.00000000000000))*(sj8));
IkReal x732=((r11)*(sj3));
IkReal x733=((r10)*(sj3));
IkReal x734=((sj5)*(x724));
IkReal x735=((sj5)*(x725));
IkReal x736=((x725)*(x730));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x724)*(x730)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x735))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x726)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x734)+(((IkReal(-1.00000000000000))*(x736))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x728)*(x731)))+(((IkReal(-1.00000000000000))*(x731)*(x733)))+(((IkReal(-1.00000000000000))*(x726)*(x727)))+(x734)+(((IkReal(-1.00000000000000))*(x736)))+(((IkReal(-1.00000000000000))*(x726)*(x732))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x728)*(x729)))+(((IkReal(-1.00000000000000))*(cj7)*(x727)*(x731)))+(((IkReal(-1.00000000000000))*(cj7)*(x731)*(x732)))+(((x729)*(x733)))+(((r12)*(sj3)*(sj7)))+(x735)+(((cj5)*(x724))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x737=((cj8)*(sj5));
IkReal x738=((cj7)*(r20));
IkReal x739=((IkReal(1.00000000000000))*(cj5));
IkReal x740=((r22)*(sj7));
IkReal x741=((r20)*(sj8));
IkReal x742=((cj7)*(r21)*(sj8));
if( IKabs(((gconst21)*(((((sj5)*(x740)))+(((cj5)*(x741)))+(((IkReal(-1.00000000000000))*(sj5)*(x742)))+(((x737)*(x738)))+(((cj5)*(cj8)*(r21))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((r21)*(x737)))+(((cj5)*(x742)))+(((sj5)*(x741)))+(((IkReal(-1.00000000000000))*(cj8)*(x738)*(x739)))+(((IkReal(-1.00000000000000))*(x739)*(x740))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst21)*(((((sj5)*(x740)))+(((cj5)*(x741)))+(((IkReal(-1.00000000000000))*(sj5)*(x742)))+(((x737)*(x738)))+(((cj5)*(cj8)*(r21)))))), ((gconst21)*(((((r21)*(x737)))+(((cj5)*(x742)))+(((sj5)*(x741)))+(((IkReal(-1.00000000000000))*(cj8)*(x738)*(x739)))+(((IkReal(-1.00000000000000))*(x739)*(x740)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x743=IKsin(j4);
IkReal x744=IKcos(j4);
IkReal x745=((IkReal(1.00000000000000))*(cj8));
IkReal x746=((cj3)*(r01));
IkReal x747=((cj3)*(r00));
IkReal x748=((cj7)*(cj8));
IkReal x749=((IkReal(1.00000000000000))*(cj5));
IkReal x750=((IkReal(1.00000000000000))*(sj8));
IkReal x751=((r11)*(sj3));
IkReal x752=((r10)*(sj3));
IkReal x753=((sj5)*(x743));
IkReal x754=((sj5)*(x744));
IkReal x755=((x744)*(x749));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x754)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x743)*(x749))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x745)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x753)+(((IkReal(-1.00000000000000))*(x755))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x750)*(x752)))+(((IkReal(-1.00000000000000))*(x745)*(x746)))+(x753)+(((IkReal(-1.00000000000000))*(x747)*(x750)))+(((IkReal(-1.00000000000000))*(x755)))+(((IkReal(-1.00000000000000))*(x745)*(x751))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x748)*(x752)))+(((IkReal(-1.00000000000000))*(cj7)*(x750)*(x751)))+(((IkReal(-1.00000000000000))*(cj7)*(x746)*(x750)))+(((r12)*(sj3)*(sj7)))+(((cj5)*(x743)))+(x754)+(((x747)*(x748))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x756=((sj5)*(sj8));
IkReal x757=((IkReal(1.00000000000000))*(cj7));
IkReal x758=((cj8)*(sj5));
IkReal x759=((r22)*(sj7));
IkReal x760=((cj5)*(cj8));
IkReal x761=((cj5)*(sj8));
if( IKabs(((gconst20)*(((((r21)*(x760)))+(((cj7)*(r20)*(x758)))+(((IkReal(-1.00000000000000))*(r21)*(x756)*(x757)))+(((r20)*(x761)))+(((sj5)*(x759))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((r20)*(x756)))+(((IkReal(-1.00000000000000))*(r20)*(x757)*(x760)))+(((cj7)*(r21)*(x761)))+(((IkReal(-1.00000000000000))*(cj5)*(x759)))+(((r21)*(x758))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst20)*(((((r21)*(x760)))+(((cj7)*(r20)*(x758)))+(((IkReal(-1.00000000000000))*(r21)*(x756)*(x757)))+(((r20)*(x761)))+(((sj5)*(x759)))))), ((gconst20)*(((((r20)*(x756)))+(((IkReal(-1.00000000000000))*(r20)*(x757)*(x760)))+(((cj7)*(r21)*(x761)))+(((IkReal(-1.00000000000000))*(cj5)*(x759)))+(((r21)*(x758)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x762=IKsin(j4);
IkReal x763=IKcos(j4);
IkReal x764=((IkReal(1.00000000000000))*(cj5));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x762)*(x764)))+(((IkReal(-1.00000000000000))*(sj5)*(x763))));
evalcond[1]=((((sj5)*(x762)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x763)*(x764)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(r20))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst24;
IkReal x765=(sj8)*(sj8);
IkReal x766=(cj8)*(cj8);
IkReal x767=((cj7)*(r02));
IkReal x768=((IkReal(1.00000000000000))*(r00));
IkReal x769=((r11)*(sj7));
IkReal x770=((cj7)*(r12));
IkReal x771=((r01)*(r10)*(sj7));
gconst24=IKsign(((((IkReal(-1.00000000000000))*(x766)*(x768)*(x769)))+(((r10)*(sj8)*(x767)))+(((IkReal(-1.00000000000000))*(x765)*(x768)*(x769)))+(((IkReal(-1.00000000000000))*(sj8)*(x768)*(x770)))+(((cj8)*(r11)*(x767)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x770)))+(((x765)*(x771)))+(((x766)*(x771)))));
IkReal x772=(sj8)*(sj8);
IkReal x773=(cj8)*(cj8);
IkReal x774=((cj7)*(r02));
IkReal x775=((IkReal(1.00000000000000))*(r00));
IkReal x776=((r11)*(sj7));
IkReal x777=((cj7)*(r12));
IkReal x778=((r01)*(r10)*(sj7));
dummyeval[0]=((((x772)*(x778)))+(((r10)*(sj8)*(x774)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x777)))+(((cj8)*(r11)*(x774)))+(((IkReal(-1.00000000000000))*(x772)*(x775)*(x776)))+(((IkReal(-1.00000000000000))*(sj8)*(x775)*(x777)))+(((IkReal(-1.00000000000000))*(x773)*(x775)*(x776)))+(((x773)*(x778))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst23;
IkReal x779=(cj8)*(cj8);
IkReal x780=(sj8)*(sj8);
IkReal x781=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x782=((IkReal(1.00000000000000))*(x779));
IkReal x783=((IkReal(1.00000000000000))*(x780));
gconst23=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x781)))+(((IkReal(-1.00000000000000))*(x782)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x781)))+(((IkReal(-1.00000000000000))*(x782)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x783)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x783)*((r10)*(r10))))));
IkReal x784=(cj8)*(cj8);
IkReal x785=(sj8)*(sj8);
IkReal x786=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x787=((IkReal(1.00000000000000))*(x784));
IkReal x788=((IkReal(1.00000000000000))*(x785));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x788)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x787)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x786)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x786)))+(((IkReal(-1.00000000000000))*(x787)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x788)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x789=((cj8)*(r01));
IkReal x790=((cj4)*(cj5));
IkReal x791=((r10)*(sj8));
IkReal x792=((cj8)*(r11));
IkReal x793=((r00)*(sj8));
IkReal x794=((IkReal(1.00000000000000))*(sj4)*(sj5));
if( IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(x792)*(x794)))+(((x790)*(x792)))+(((IkReal(-1.00000000000000))*(x791)*(x794)))+(((x790)*(x791))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((x789)*(x790)))+(((x790)*(x793)))+(((IkReal(-1.00000000000000))*(x789)*(x794)))+(((IkReal(-1.00000000000000))*(x793)*(x794))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst23)*(((((IkReal(-1.00000000000000))*(x792)*(x794)))+(((x790)*(x792)))+(((IkReal(-1.00000000000000))*(x791)*(x794)))+(((x790)*(x791)))))), ((gconst23)*(((((x789)*(x790)))+(((x790)*(x793)))+(((IkReal(-1.00000000000000))*(x789)*(x794)))+(((IkReal(-1.00000000000000))*(x793)*(x794)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x795=IKsin(j3);
IkReal x796=IKcos(j3);
IkReal x797=((r01)*(sj8));
IkReal x798=((cj8)*(r00));
IkReal x799=((r00)*(sj8));
IkReal x800=((cj8)*(r11));
IkReal x801=((r11)*(sj8));
IkReal x802=((r10)*(sj8));
IkReal x803=((cj8)*(r10));
IkReal x804=((cj7)*(x795));
IkReal x805=((sj7)*(x796));
IkReal x806=((IkReal(1.00000000000000))*(x795));
IkReal x807=((IkReal(1.00000000000000))*(x796));
IkReal x808=((cj8)*(x795));
IkReal x809=((IkReal(1.00000000000000))*(x801));
IkReal x810=((sj7)*(x795));
IkReal x811=((cj7)*(x796));
evalcond[0]=((((IkReal(-1.00000000000000))*(x800)*(x807)))+(((r01)*(x808)))+(((x795)*(x799)))+(((IkReal(-1.00000000000000))*(x802)*(x807))));
evalcond[1]=((((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x807)))+(((IkReal(-1.00000000000000))*(x800)*(x806)))+(((IkReal(-1.00000000000000))*(x799)*(x807)))+(((IkReal(-1.00000000000000))*(x802)*(x806))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x798)*(x804)))+(((x797)*(x804)))+(((IkReal(-1.00000000000000))*(cj7)*(x801)*(x807)))+(((r12)*(x805)))+(((x803)*(x811)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x806))));
evalcond[3]=((IkReal(1.00000000000000))+(((x803)*(x805)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x807)))+(((r02)*(x804)))+(((IkReal(-1.00000000000000))*(x805)*(x809)))+(((IkReal(-1.00000000000000))*(sj7)*(x798)*(x806)))+(((x797)*(x810))));
evalcond[4]=((((x803)*(x804)))+(((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(x804)*(x809)))+(((r12)*(x810)))+(((cj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj7)*(x797)*(x807)))+(((r02)*(x805)))+(((x798)*(x811))));
evalcond[5]=((((x798)*(x805)))+(((IkReal(-1.00000000000000))*(r12)*(x804)))+(((IkReal(-1.00000000000000))*(sj7)*(x801)*(x806)))+(((IkReal(-1.00000000000000))*(x797)*(x805)))+(((x803)*(x810)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x807))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x812=((IkReal(1.00000000000000))*(cj8));
IkReal x813=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r10)*(x813)))+(((IkReal(-1.00000000000000))*(r11)*(x812))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r01)*(x812)))+(((IkReal(-1.00000000000000))*(r00)*(x813))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst24)*(((((IkReal(-1.00000000000000))*(r10)*(x813)))+(((IkReal(-1.00000000000000))*(r11)*(x812)))))), ((gconst24)*(((((IkReal(-1.00000000000000))*(r01)*(x812)))+(((IkReal(-1.00000000000000))*(r00)*(x813)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x814=IKsin(j3);
IkReal x815=IKcos(j3);
IkReal x816=((r01)*(sj8));
IkReal x817=((cj8)*(r00));
IkReal x818=((r00)*(sj8));
IkReal x819=((cj8)*(r11));
IkReal x820=((r11)*(sj8));
IkReal x821=((r10)*(sj8));
IkReal x822=((cj8)*(r10));
IkReal x823=((cj7)*(x814));
IkReal x824=((sj7)*(x815));
IkReal x825=((IkReal(1.00000000000000))*(x814));
IkReal x826=((IkReal(1.00000000000000))*(x815));
IkReal x827=((cj8)*(x814));
IkReal x828=((IkReal(1.00000000000000))*(x820));
IkReal x829=((sj7)*(x814));
IkReal x830=((cj7)*(x815));
evalcond[0]=((((x814)*(x818)))+(((IkReal(-1.00000000000000))*(x821)*(x826)))+(((IkReal(-1.00000000000000))*(x819)*(x826)))+(((r01)*(x827))));
evalcond[1]=((((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(x819)*(x825)))+(((IkReal(-1.00000000000000))*(x821)*(x825)))+(((IkReal(-1.00000000000000))*(x818)*(x826)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x826))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj7)*(x820)*(x826)))+(((r12)*(x824)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x825)))+(((IkReal(-1.00000000000000))*(x817)*(x823)))+(((x816)*(x823)))+(((x822)*(x830))));
evalcond[3]=((IkReal(1.00000000000000))+(((r02)*(x823)))+(((IkReal(-1.00000000000000))*(x824)*(x828)))+(((x822)*(x824)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x826)))+(((IkReal(-1.00000000000000))*(sj7)*(x817)*(x825)))+(((x816)*(x829))));
evalcond[4]=((((x817)*(x830)))+(((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(cj7)*(x816)*(x826)))+(((x822)*(x823)))+(((IkReal(-1.00000000000000))*(x823)*(x828)))+(((r12)*(x829)))+(((cj4)*(sj5)))+(((r02)*(x824))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x816)*(x824)))+(((IkReal(-1.00000000000000))*(sj7)*(x820)*(x825)))+(((x817)*(x824)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x826)))+(((x822)*(x829)))+(((IkReal(-1.00000000000000))*(r12)*(x823))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x831=((IkReal(1.00000000000000))*(sj7));
IkReal x832=((npy)*(sj8));
IkReal x833=((cj8)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x831)))+(((IkReal(-1.00000000000000))*(cj7)*(x833)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5)))+(((cj7)*(x832))));
evalcond[3]=((((cj7)*(r22)))+(((r21)*(sj7)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x831))));
evalcond[4]=((IkReal(-0.0950000000000000))+(((cj7)*(npz)))+(((sj7)*(x832)))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x831)*(x833))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst27;
gconst27=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst25;
IkReal x834=(sj8)*(sj8);
IkReal x835=(cj8)*(cj8);
IkReal x836=((IkReal(1.00000000000000))*(r10));
IkReal x837=((cj7)*(sj8));
IkReal x838=((r00)*(r11));
IkReal x839=((cj7)*(cj8));
IkReal x840=((sj7)*(x834));
IkReal x841=((sj7)*(x835));
gconst25=IKsign(((((x838)*(x841)))+(((x838)*(x840)))+(((IkReal(-1.00000000000000))*(r02)*(x836)*(x837)))+(((IkReal(-1.00000000000000))*(r01)*(x836)*(x841)))+(((r00)*(r12)*(x837)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x839)))+(((IkReal(-1.00000000000000))*(r01)*(x836)*(x840)))+(((r01)*(r12)*(x839)))));
IkReal x842=(sj8)*(sj8);
IkReal x843=(cj8)*(cj8);
IkReal x844=((IkReal(1.00000000000000))*(r10));
IkReal x845=((cj7)*(sj8));
IkReal x846=((r00)*(r11));
IkReal x847=((cj7)*(cj8));
IkReal x848=((sj7)*(x842));
IkReal x849=((sj7)*(x843));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(x844)*(x845)))+(((x846)*(x848)))+(((x846)*(x849)))+(((r01)*(r12)*(x847)))+(((IkReal(-1.00000000000000))*(r01)*(x844)*(x849)))+(((IkReal(-1.00000000000000))*(r01)*(x844)*(x848)))+(((r00)*(r12)*(x845)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x847))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst26;
IkReal x850=(cj7)*(cj7);
IkReal x851=(sj7)*(sj7);
IkReal x852=((r02)*(r10));
IkReal x853=((r01)*(r12));
IkReal x854=((sj8)*(x851));
IkReal x855=((IkReal(1.00000000000000))*(r02)*(r11));
IkReal x856=((cj8)*(x850));
IkReal x857=((IkReal(1.00000000000000))*(r00)*(r12));
IkReal x858=((sj8)*(x850));
IkReal x859=((cj8)*(x851));
gconst26=IKsign(((((IkReal(-1.00000000000000))*(x855)*(x858)))+(((x852)*(x856)))+(((x852)*(x859)))+(((x853)*(x854)))+(((IkReal(-1.00000000000000))*(x856)*(x857)))+(((IkReal(-1.00000000000000))*(x857)*(x859)))+(((IkReal(-1.00000000000000))*(x854)*(x855)))+(((x853)*(x858)))));
IkReal x860=(cj7)*(cj7);
IkReal x861=(sj7)*(sj7);
IkReal x862=((r02)*(r10));
IkReal x863=((r01)*(r12));
IkReal x864=((sj8)*(x861));
IkReal x865=((IkReal(1.00000000000000))*(r02)*(r11));
IkReal x866=((cj8)*(x860));
IkReal x867=((IkReal(1.00000000000000))*(r00)*(r12));
IkReal x868=((sj8)*(x860));
IkReal x869=((cj8)*(x861));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x865)*(x868)))+(((x863)*(x864)))+(((IkReal(-1.00000000000000))*(x864)*(x865)))+(((IkReal(-1.00000000000000))*(x867)*(x869)))+(((IkReal(-1.00000000000000))*(x866)*(x867)))+(((x862)*(x869)))+(((x862)*(x866)))+(((x863)*(x868))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x870=((cj7)*(cj8));
IkReal x871=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst26)*(((((IkReal(-1.00000000000000))*(r11)*(x871)))+(((r12)*(sj7)))+(((r10)*(x870))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst26)*(((((r00)*(x870)))+(((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x871))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst26)*(((((IkReal(-1.00000000000000))*(r11)*(x871)))+(((r12)*(sj7)))+(((r10)*(x870)))))), ((gconst26)*(((((r00)*(x870)))+(((r02)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(x871)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x872=IKsin(j3);
IkReal x873=IKcos(j3);
IkReal x874=((r01)*(sj8));
IkReal x875=((cj8)*(sj7));
IkReal x876=((IkReal(1.00000000000000))*(sj7));
IkReal x877=((IkReal(1.00000000000000))*(r12));
IkReal x878=((r11)*(sj8));
IkReal x879=((IkReal(1.00000000000000))*(r00));
IkReal x880=((cj7)*(x872));
IkReal x881=((r10)*(x873));
IkReal x882=((IkReal(1.00000000000000))*(cj7)*(x873));
evalcond[0]=((((r00)*(sj8)*(x872)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x873)))+(((cj8)*(r01)*(x872)))+(((IkReal(-1.00000000000000))*(sj8)*(x881))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(x879)*(x880)))+(((IkReal(-1.00000000000000))*(r02)*(x872)*(x876)))+(((r12)*(sj7)*(x873)))+(((IkReal(-1.00000000000000))*(x878)*(x882)))+(((cj7)*(cj8)*(x881)))+(((x874)*(x880))));
evalcond[2]=((IkReal(-1.00000000000000))+(((r02)*(x880)))+(((IkReal(-1.00000000000000))*(x873)*(x876)*(x878)))+(((IkReal(-1.00000000000000))*(x872)*(x875)*(x879)))+(((x875)*(x881)))+(((sj7)*(x872)*(x874)))+(((IkReal(-1.00000000000000))*(cj7)*(x873)*(x877))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x873)*(x874)*(x876)))+(((r10)*(x872)*(x875)))+(((r00)*(x873)*(x875)))+(((IkReal(-1.00000000000000))*(r02)*(x882)))+(((IkReal(-1.00000000000000))*(x872)*(x876)*(x878)))+(((IkReal(-1.00000000000000))*(x877)*(x880))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x883=((IkReal(1.00000000000000))*(sj5));
IkReal x884=((r20)*(sj8));
IkReal x885=((cj5)*(cj8));
IkReal x886=((r11)*(sj3));
IkReal x887=((cj3)*(r01));
IkReal x888=((cj3)*(r00)*(sj8));
IkReal x889=((r10)*(sj3)*(sj8));
if( IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(cj8)*(x883)*(x886)))+(((IkReal(-1.00000000000000))*(r21)*(x885)))+(((IkReal(-1.00000000000000))*(cj5)*(x884)))+(((IkReal(-1.00000000000000))*(x883)*(x889)))+(((IkReal(-1.00000000000000))*(cj8)*(x883)*(x887)))+(((IkReal(-1.00000000000000))*(x883)*(x888))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((x885)*(x886)))+(((x885)*(x887)))+(((IkReal(-1.00000000000000))*(x883)*(x884)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x883)))+(((cj5)*(x888)))+(((cj5)*(x889))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst29)*(((((IkReal(-1.00000000000000))*(cj8)*(x883)*(x886)))+(((IkReal(-1.00000000000000))*(r21)*(x885)))+(((IkReal(-1.00000000000000))*(cj5)*(x884)))+(((IkReal(-1.00000000000000))*(x883)*(x889)))+(((IkReal(-1.00000000000000))*(cj8)*(x883)*(x887)))+(((IkReal(-1.00000000000000))*(x883)*(x888)))))), ((gconst29)*(((((x885)*(x886)))+(((x885)*(x887)))+(((IkReal(-1.00000000000000))*(x883)*(x884)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x883)))+(((cj5)*(x888)))+(((cj5)*(x889)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x890=IKsin(j4);
IkReal x891=IKcos(j4);
IkReal x892=((IkReal(1.00000000000000))*(cj8));
IkReal x893=((cj3)*(r01));
IkReal x894=((cj3)*(r00));
IkReal x895=((cj7)*(cj8));
IkReal x896=((r11)*(sj3));
IkReal x897=((IkReal(1.00000000000000))*(sj8));
IkReal x898=((r10)*(sj3));
IkReal x899=((cj5)*(x890));
IkReal x900=((sj5)*(x891));
IkReal x901=((cj5)*(x891));
IkReal x902=((sj5)*(x890));
IkReal x903=((x900)+(x899));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x903));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x902)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x892)))+(((IkReal(-1.00000000000000))*(x901))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x897)*(x898)))+(((IkReal(-1.00000000000000))*(x902)))+(x901)+(((IkReal(-1.00000000000000))*(x894)*(x897)))+(((IkReal(-1.00000000000000))*(x892)*(x893)))+(((IkReal(-1.00000000000000))*(x892)*(x896))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x894)*(x895)))+(((x895)*(x898)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x893)*(x897)))+(x903)+(((IkReal(-1.00000000000000))*(cj7)*(x896)*(x897))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x904=((r22)*(sj7));
IkReal x905=((cj8)*(sj5));
IkReal x906=((sj5)*(sj8));
IkReal x907=((cj7)*(r20));
IkReal x908=((cj5)*(cj8));
IkReal x909=((cj7)*(r21));
IkReal x910=((cj5)*(sj8));
if( IKabs(((gconst28)*(((((IkReal(-1.00000000000000))*(sj5)*(x904)))+(((x906)*(x909)))+(((r20)*(x910)))+(((r21)*(x908)))+(((IkReal(-1.00000000000000))*(x905)*(x907))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((cj5)*(x904)))+(((IkReal(-1.00000000000000))*(x909)*(x910)))+(((r20)*(x906)))+(((r21)*(x905)))+(((x907)*(x908))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst28)*(((((IkReal(-1.00000000000000))*(sj5)*(x904)))+(((x906)*(x909)))+(((r20)*(x910)))+(((r21)*(x908)))+(((IkReal(-1.00000000000000))*(x905)*(x907)))))), ((gconst28)*(((((cj5)*(x904)))+(((IkReal(-1.00000000000000))*(x909)*(x910)))+(((r20)*(x906)))+(((r21)*(x905)))+(((x907)*(x908)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x911=IKsin(j4);
IkReal x912=IKcos(j4);
IkReal x913=((IkReal(1.00000000000000))*(cj8));
IkReal x914=((cj3)*(r01));
IkReal x915=((cj3)*(r00));
IkReal x916=((cj7)*(cj8));
IkReal x917=((r11)*(sj3));
IkReal x918=((IkReal(1.00000000000000))*(sj8));
IkReal x919=((r10)*(sj3));
IkReal x920=((cj5)*(x911));
IkReal x921=((sj5)*(x912));
IkReal x922=((cj5)*(x912));
IkReal x923=((sj5)*(x911));
IkReal x924=((x920)+(x921));
evalcond[0]=((((cj8)*(r21)))+(x924)+(((r20)*(sj8))));
evalcond[1]=((x923)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x922)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x913))));
evalcond[2]=((x922)+(((IkReal(-1.00000000000000))*(x918)*(x919)))+(((IkReal(-1.00000000000000))*(x913)*(x914)))+(((IkReal(-1.00000000000000))*(x923)))+(((IkReal(-1.00000000000000))*(x915)*(x918)))+(((IkReal(-1.00000000000000))*(x913)*(x917))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(x924)+(((x915)*(x916)))+(((r12)*(sj3)*(sj7)))+(((x916)*(x919)))+(((IkReal(-1.00000000000000))*(cj7)*(x917)*(x918)))+(((IkReal(-1.00000000000000))*(cj7)*(x914)*(x918))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x925=((IkReal(1.00000000000000))*(cj8));
IkReal x926=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(r11)*(x925)))+(((IkReal(-1.00000000000000))*(r10)*(x926))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(r01)*(x925)))+(((IkReal(-1.00000000000000))*(r00)*(x926))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst25)*(((((IkReal(-1.00000000000000))*(r11)*(x925)))+(((IkReal(-1.00000000000000))*(r10)*(x926)))))), ((gconst25)*(((((IkReal(-1.00000000000000))*(r01)*(x925)))+(((IkReal(-1.00000000000000))*(r00)*(x926)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x927=IKsin(j3);
IkReal x928=IKcos(j3);
IkReal x929=((r01)*(sj8));
IkReal x930=((cj8)*(sj7));
IkReal x931=((IkReal(1.00000000000000))*(sj7));
IkReal x932=((IkReal(1.00000000000000))*(r12));
IkReal x933=((r11)*(sj8));
IkReal x934=((IkReal(1.00000000000000))*(r00));
IkReal x935=((cj7)*(x927));
IkReal x936=((r10)*(x928));
IkReal x937=((IkReal(1.00000000000000))*(cj7)*(x928));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj8)*(x936)))+(((r00)*(sj8)*(x927)))+(((cj8)*(r01)*(x927)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x928))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(x934)*(x935)))+(((IkReal(-1.00000000000000))*(r02)*(x927)*(x931)))+(((IkReal(-1.00000000000000))*(x933)*(x937)))+(((x929)*(x935)))+(((r12)*(sj7)*(x928)))+(((cj7)*(cj8)*(x936))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x928)*(x931)*(x933)))+(((r02)*(x935)))+(((x930)*(x936)))+(((IkReal(-1.00000000000000))*(cj7)*(x928)*(x932)))+(((sj7)*(x927)*(x929)))+(((IkReal(-1.00000000000000))*(x927)*(x930)*(x934))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x928)*(x929)*(x931)))+(((IkReal(-1.00000000000000))*(r02)*(x937)))+(((IkReal(-1.00000000000000))*(x927)*(x931)*(x933)))+(((r00)*(x928)*(x930)))+(((r10)*(x927)*(x930)))+(((IkReal(-1.00000000000000))*(x932)*(x935))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x938=((IkReal(1.00000000000000))*(sj5));
IkReal x939=((r20)*(sj8));
IkReal x940=((cj5)*(cj8));
IkReal x941=((r11)*(sj3));
IkReal x942=((cj3)*(r01));
IkReal x943=((cj3)*(r00)*(sj8));
IkReal x944=((r10)*(sj3)*(sj8));
if( IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(r21)*(x940)))+(((IkReal(-1.00000000000000))*(x938)*(x943)))+(((IkReal(-1.00000000000000))*(cj8)*(x938)*(x942)))+(((IkReal(-1.00000000000000))*(x938)*(x944)))+(((IkReal(-1.00000000000000))*(cj5)*(x939)))+(((IkReal(-1.00000000000000))*(cj8)*(x938)*(x941))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((cj5)*(x943)))+(((x940)*(x942)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x938)))+(((x940)*(x941)))+(((IkReal(-1.00000000000000))*(x938)*(x939)))+(((cj5)*(x944))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst29)*(((((IkReal(-1.00000000000000))*(r21)*(x940)))+(((IkReal(-1.00000000000000))*(x938)*(x943)))+(((IkReal(-1.00000000000000))*(cj8)*(x938)*(x942)))+(((IkReal(-1.00000000000000))*(x938)*(x944)))+(((IkReal(-1.00000000000000))*(cj5)*(x939)))+(((IkReal(-1.00000000000000))*(cj8)*(x938)*(x941)))))), ((gconst29)*(((((cj5)*(x943)))+(((x940)*(x942)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x938)))+(((x940)*(x941)))+(((IkReal(-1.00000000000000))*(x938)*(x939)))+(((cj5)*(x944)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x945=IKsin(j4);
IkReal x946=IKcos(j4);
IkReal x947=((IkReal(1.00000000000000))*(cj8));
IkReal x948=((cj3)*(r01));
IkReal x949=((cj3)*(r00));
IkReal x950=((cj7)*(cj8));
IkReal x951=((r11)*(sj3));
IkReal x952=((IkReal(1.00000000000000))*(sj8));
IkReal x953=((r10)*(sj3));
IkReal x954=((cj5)*(x945));
IkReal x955=((sj5)*(x946));
IkReal x956=((cj5)*(x946));
IkReal x957=((sj5)*(x945));
IkReal x958=((x955)+(x954));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x958));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x947)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x956)))+(x957));
evalcond[2]=((((IkReal(-1.00000000000000))*(x947)*(x948)))+(((IkReal(-1.00000000000000))*(x949)*(x952)))+(x956)+(((IkReal(-1.00000000000000))*(x957)))+(((IkReal(-1.00000000000000))*(x947)*(x951)))+(((IkReal(-1.00000000000000))*(x952)*(x953))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x950)*(x953)))+(((r12)*(sj3)*(sj7)))+(((x949)*(x950)))+(((IkReal(-1.00000000000000))*(cj7)*(x948)*(x952)))+(x958)+(((IkReal(-1.00000000000000))*(cj7)*(x951)*(x952))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x959=((r22)*(sj7));
IkReal x960=((cj8)*(sj5));
IkReal x961=((sj5)*(sj8));
IkReal x962=((cj7)*(r20));
IkReal x963=((cj5)*(cj8));
IkReal x964=((cj7)*(r21));
IkReal x965=((cj5)*(sj8));
if( IKabs(((gconst28)*(((((r20)*(x965)))+(((IkReal(-1.00000000000000))*(sj5)*(x959)))+(((x961)*(x964)))+(((IkReal(-1.00000000000000))*(x960)*(x962)))+(((r21)*(x963))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((r20)*(x961)))+(((x962)*(x963)))+(((r21)*(x960)))+(((cj5)*(x959)))+(((IkReal(-1.00000000000000))*(x964)*(x965))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst28)*(((((r20)*(x965)))+(((IkReal(-1.00000000000000))*(sj5)*(x959)))+(((x961)*(x964)))+(((IkReal(-1.00000000000000))*(x960)*(x962)))+(((r21)*(x963)))))), ((gconst28)*(((((r20)*(x961)))+(((x962)*(x963)))+(((r21)*(x960)))+(((cj5)*(x959)))+(((IkReal(-1.00000000000000))*(x964)*(x965)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x966=IKsin(j4);
IkReal x967=IKcos(j4);
IkReal x968=((IkReal(1.00000000000000))*(cj8));
IkReal x969=((cj3)*(r01));
IkReal x970=((cj3)*(r00));
IkReal x971=((cj7)*(cj8));
IkReal x972=((r11)*(sj3));
IkReal x973=((IkReal(1.00000000000000))*(sj8));
IkReal x974=((r10)*(sj3));
IkReal x975=((cj5)*(x966));
IkReal x976=((sj5)*(x967));
IkReal x977=((cj5)*(x967));
IkReal x978=((sj5)*(x966));
IkReal x979=((x975)+(x976));
evalcond[0]=((((cj8)*(r21)))+(x979)+(((r20)*(sj8))));
evalcond[1]=((x978)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x968)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x977))));
evalcond[2]=((x977)+(((IkReal(-1.00000000000000))*(x968)*(x969)))+(((IkReal(-1.00000000000000))*(x968)*(x972)))+(((IkReal(-1.00000000000000))*(x970)*(x973)))+(((IkReal(-1.00000000000000))*(x978)))+(((IkReal(-1.00000000000000))*(x973)*(x974))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x972)*(x973)))+(x979)+(((r12)*(sj3)*(sj7)))+(((x970)*(x971)))+(((x971)*(x974)))+(((IkReal(-1.00000000000000))*(cj7)*(x969)*(x973))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x980=((r22)*(sj7));
IkReal x981=((cj8)*(sj5));
IkReal x982=((sj5)*(sj8));
IkReal x983=((cj7)*(r20));
IkReal x984=((cj5)*(cj8));
IkReal x985=((cj7)*(r21));
IkReal x986=((cj5)*(sj8));
if( IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(x981)*(x983)))+(((x982)*(x985)))+(((r21)*(x984)))+(((IkReal(-1.00000000000000))*(sj5)*(x980)))+(((r20)*(x986))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst27)*(((((x983)*(x984)))+(((IkReal(-1.00000000000000))*(x985)*(x986)))+(((cj5)*(x980)))+(((r20)*(x982)))+(((r21)*(x981))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst27)*(((((IkReal(-1.00000000000000))*(x981)*(x983)))+(((x982)*(x985)))+(((r21)*(x984)))+(((IkReal(-1.00000000000000))*(sj5)*(x980)))+(((r20)*(x986)))))), ((gconst27)*(((((x983)*(x984)))+(((IkReal(-1.00000000000000))*(x985)*(x986)))+(((cj5)*(x980)))+(((r20)*(x982)))+(((r21)*(x981)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x987=IKsin(j4);
IkReal x988=IKcos(j4);
evalcond[0]=((((cj5)*(x987)))+(((cj8)*(r21)))+(((r20)*(sj8)))+(((sj5)*(x988))));
evalcond[1]=((((sj5)*(x987)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(r20)))+(((IkReal(-1.00000000000000))*(cj5)*(x988))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst31;
IkReal x989=(sj8)*(sj8);
IkReal x990=(cj8)*(cj8);
IkReal x991=((IkReal(1.00000000000000))*(r10));
IkReal x992=((cj7)*(sj8));
IkReal x993=((r00)*(r11));
IkReal x994=((cj7)*(cj8));
IkReal x995=((sj7)*(x989));
IkReal x996=((sj7)*(x990));
gconst31=IKsign(((((r00)*(r12)*(x992)))+(((x993)*(x995)))+(((IkReal(-1.00000000000000))*(r01)*(x991)*(x996)))+(((r01)*(r12)*(x994)))+(((IkReal(-1.00000000000000))*(r01)*(x991)*(x995)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x994)))+(((IkReal(-1.00000000000000))*(r02)*(x991)*(x992)))+(((x993)*(x996)))));
IkReal x997=(sj8)*(sj8);
IkReal x998=(cj8)*(cj8);
IkReal x999=((IkReal(1.00000000000000))*(r10));
IkReal x1000=((cj7)*(sj8));
IkReal x1001=((r00)*(r11));
IkReal x1002=((cj7)*(cj8));
IkReal x1003=((sj7)*(x997));
IkReal x1004=((sj7)*(x998));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(x1000)*(x999)))+(((r00)*(r12)*(x1000)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1002)))+(((IkReal(-1.00000000000000))*(r01)*(x1004)*(x999)))+(((x1001)*(x1003)))+(((r01)*(r12)*(x1002)))+(((IkReal(-1.00000000000000))*(r01)*(x1003)*(x999)))+(((x1001)*(x1004))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst30;
IkReal x1005=(cj8)*(cj8);
IkReal x1006=(sj8)*(sj8);
IkReal x1007=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1008=((IkReal(1.00000000000000))*(x1005));
IkReal x1009=((IkReal(1.00000000000000))*(x1006));
gconst30=IKsign(((((IkReal(-1.00000000000000))*(x1009)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1007)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1007)))+(((IkReal(-1.00000000000000))*(x1009)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1008)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1008)*((r01)*(r01))))));
IkReal x1010=(cj8)*(cj8);
IkReal x1011=(sj8)*(sj8);
IkReal x1012=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1013=((IkReal(1.00000000000000))*(x1010));
IkReal x1014=((IkReal(1.00000000000000))*(x1011));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1013)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1014)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1012)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1012)))+(((IkReal(-1.00000000000000))*(x1013)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1014)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1015=((sj4)*(sj5));
IkReal x1016=((r10)*(sj8));
IkReal x1017=((cj8)*(r01));
IkReal x1018=((cj8)*(r11));
IkReal x1019=((r00)*(sj8));
IkReal x1020=((IkReal(1.00000000000000))*(cj4)*(cj5));
if( IKabs(((gconst30)*(((((IkReal(-1.00000000000000))*(x1016)*(x1020)))+(((x1015)*(x1016)))+(((IkReal(-1.00000000000000))*(x1018)*(x1020)))+(((x1015)*(x1018))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst30)*(((((IkReal(-1.00000000000000))*(x1019)*(x1020)))+(((IkReal(-1.00000000000000))*(x1017)*(x1020)))+(((x1015)*(x1019)))+(((x1015)*(x1017))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst30)*(((((IkReal(-1.00000000000000))*(x1016)*(x1020)))+(((x1015)*(x1016)))+(((IkReal(-1.00000000000000))*(x1018)*(x1020)))+(((x1015)*(x1018)))))), ((gconst30)*(((((IkReal(-1.00000000000000))*(x1019)*(x1020)))+(((IkReal(-1.00000000000000))*(x1017)*(x1020)))+(((x1015)*(x1019)))+(((x1015)*(x1017)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1021=IKsin(j3);
IkReal x1022=IKcos(j3);
IkReal x1023=((r01)*(sj8));
IkReal x1024=((cj8)*(r00));
IkReal x1025=((IkReal(1.00000000000000))*(sj8));
IkReal x1026=((cj8)*(r11));
IkReal x1027=((IkReal(1.00000000000000))*(r12));
IkReal x1028=((cj8)*(r10));
IkReal x1029=((cj7)*(x1021));
IkReal x1030=((sj7)*(x1022));
IkReal x1031=((cj7)*(x1022));
IkReal x1032=((IkReal(1.00000000000000))*(x1021));
IkReal x1033=((cj8)*(x1021));
IkReal x1034=((sj7)*(x1021));
IkReal x1035=((IkReal(1.00000000000000))*(x1022));
evalcond[0]=((((r00)*(sj8)*(x1021)))+(((r01)*(x1033)))+(((IkReal(-1.00000000000000))*(r10)*(x1022)*(x1025)))+(((IkReal(-1.00000000000000))*(x1026)*(x1035))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1026)*(x1032)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1035)))+(((cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1022)*(x1025)))+(((IkReal(-1.00000000000000))*(r10)*(x1021)*(x1025))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1032)))+(((r12)*(x1030)))+(((IkReal(-1.00000000000000))*(x1024)*(x1029)))+(((IkReal(-1.00000000000000))*(r11)*(x1025)*(x1031)))+(((x1028)*(x1031)))+(((x1023)*(x1029))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x1025)*(x1030)))+(((IkReal(-1.00000000000000))*(sj7)*(x1024)*(x1032)))+(((r02)*(x1029)))+(((x1028)*(x1030)))+(((IkReal(-1.00000000000000))*(x1027)*(x1031)))+(((x1023)*(x1034))));
evalcond[4]=((((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(r11)*(x1025)*(x1029)))+(((r02)*(x1030)))+(((IkReal(-1.00000000000000))*(x1023)*(x1031)))+(((r12)*(x1034)))+(((x1028)*(x1029)))+(((x1024)*(x1031)))+(((cj4)*(sj5))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x1031)))+(((IkReal(-1.00000000000000))*(x1027)*(x1029)))+(((IkReal(-1.00000000000000))*(x1023)*(x1030)))+(((x1028)*(x1034)))+(((x1024)*(x1030)))+(((IkReal(-1.00000000000000))*(r11)*(x1025)*(x1034))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1036=((IkReal(1.00000000000000))*(cj8));
IkReal x1037=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r10)*(x1037)))+(((IkReal(-1.00000000000000))*(r11)*(x1036))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r01)*(x1036)))+(((IkReal(-1.00000000000000))*(r00)*(x1037))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst31)*(((((IkReal(-1.00000000000000))*(r10)*(x1037)))+(((IkReal(-1.00000000000000))*(r11)*(x1036)))))), ((gconst31)*(((((IkReal(-1.00000000000000))*(r01)*(x1036)))+(((IkReal(-1.00000000000000))*(r00)*(x1037)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1038=IKsin(j3);
IkReal x1039=IKcos(j3);
IkReal x1040=((r01)*(sj8));
IkReal x1041=((cj8)*(r00));
IkReal x1042=((IkReal(1.00000000000000))*(sj8));
IkReal x1043=((cj8)*(r11));
IkReal x1044=((IkReal(1.00000000000000))*(r12));
IkReal x1045=((cj8)*(r10));
IkReal x1046=((cj7)*(x1038));
IkReal x1047=((sj7)*(x1039));
IkReal x1048=((cj7)*(x1039));
IkReal x1049=((IkReal(1.00000000000000))*(x1038));
IkReal x1050=((cj8)*(x1038));
IkReal x1051=((sj7)*(x1038));
IkReal x1052=((IkReal(1.00000000000000))*(x1039));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x1039)*(x1042)))+(((IkReal(-1.00000000000000))*(x1043)*(x1052)))+(((r01)*(x1050)))+(((r00)*(sj8)*(x1038))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x1038)*(x1042)))+(((IkReal(-1.00000000000000))*(r00)*(x1039)*(x1042)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1052)))+(((IkReal(-1.00000000000000))*(x1043)*(x1049)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5)))+(((cj4)*(cj5))));
evalcond[2]=((((x1045)*(x1048)))+(((IkReal(-1.00000000000000))*(x1041)*(x1046)))+(((IkReal(-1.00000000000000))*(r11)*(x1042)*(x1048)))+(((x1040)*(x1046)))+(((r12)*(x1047)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1049))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x1042)*(x1047)))+(((x1040)*(x1051)))+(((IkReal(-1.00000000000000))*(sj7)*(x1041)*(x1049)))+(((r02)*(x1046)))+(((IkReal(-1.00000000000000))*(x1044)*(x1048)))+(((x1045)*(x1047))));
evalcond[4]=((((r02)*(x1047)))+(((cj5)*(sj4)))+(((r12)*(x1051)))+(((IkReal(-1.00000000000000))*(r11)*(x1042)*(x1046)))+(((IkReal(-1.00000000000000))*(x1040)*(x1048)))+(((cj4)*(sj5)))+(((x1045)*(x1046)))+(((x1041)*(x1048))));
evalcond[5]=((((x1041)*(x1047)))+(((IkReal(-1.00000000000000))*(r02)*(x1048)))+(((IkReal(-1.00000000000000))*(r11)*(x1042)*(x1051)))+(((x1045)*(x1051)))+(((IkReal(-1.00000000000000))*(x1040)*(x1047)))+(((IkReal(-1.00000000000000))*(x1044)*(x1046))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1053=((IkReal(1.00000000000000))*(sj7));
IkReal x1054=((npy)*(sj8));
IkReal x1055=((cj8)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x1055)))+(((cj7)*(x1054)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x1053)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(0.0300000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x1053)*(x1055)))+(((sj7)*(x1054)))+(((IkReal(-0.250000000000000))*(sj5)))+(((IkReal(0.0900000000000000))*(sj7))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst32;
IkReal x1056=(cj8)*(cj8);
IkReal x1057=(sj8)*(sj8);
IkReal x1058=((IkReal(2.00000000000000))*(cj8)*(sj8));
gconst32=IKsign(((((r00)*(r01)*(x1058)))+(((x1057)*((r10)*(r10))))+(((x1057)*((r00)*(r00))))+(((x1056)*((r11)*(r11))))+(((r10)*(r11)*(x1058)))+(((x1056)*((r01)*(r01))))));
IkReal x1059=(cj8)*(cj8);
IkReal x1060=(sj8)*(sj8);
IkReal x1061=((IkReal(2.00000000000000))*(cj8)*(sj8));
dummyeval[0]=((((x1059)*((r01)*(r01))))+(((x1059)*((r11)*(r11))))+(((x1060)*((r00)*(r00))))+(((x1060)*((r10)*(r10))))+(((r00)*(r01)*(x1061)))+(((r10)*(r11)*(x1061))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst34;
gconst34=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst33;
IkReal x1062=(cj8)*(cj8);
IkReal x1063=(sj8)*(sj8);
IkReal x1064=((r00)*(r11));
IkReal x1065=((r02)*(sj7));
IkReal x1066=((cj7)*(x1062));
IkReal x1067=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1068=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1069=((cj7)*(x1063));
gconst33=IKsign(((((cj8)*(r11)*(x1065)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1067)))+(((IkReal(-1.00000000000000))*(x1068)*(x1069)))+(((IkReal(-1.00000000000000))*(x1066)*(x1068)))+(((x1064)*(x1069)))+(((r10)*(sj8)*(x1065)))+(((x1064)*(x1066)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1067)))));
IkReal x1070=(cj8)*(cj8);
IkReal x1071=(sj8)*(sj8);
IkReal x1072=((r00)*(r11));
IkReal x1073=((r02)*(sj7));
IkReal x1074=((cj7)*(x1070));
IkReal x1075=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1076=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1077=((cj7)*(x1071));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1075)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1075)))+(((r10)*(sj8)*(x1073)))+(((cj8)*(r11)*(x1073)))+(((x1072)*(x1074)))+(((x1072)*(x1077)))+(((IkReal(-1.00000000000000))*(x1076)*(x1077)))+(((IkReal(-1.00000000000000))*(x1074)*(x1076))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1078=((cj7)*(cj8));
IkReal x1079=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst33)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x1079)))+(((r10)*(x1078))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst33)*(((((r00)*(x1078)))+(((IkReal(-1.00000000000000))*(r01)*(x1079)))+(((r02)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst33)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x1079)))+(((r10)*(x1078)))))), ((gconst33)*(((((r00)*(x1078)))+(((IkReal(-1.00000000000000))*(r01)*(x1079)))+(((r02)*(sj7)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1080=IKsin(j3);
IkReal x1081=IKcos(j3);
IkReal x1082=((IkReal(1.00000000000000))*(sj8));
IkReal x1083=((IkReal(1.00000000000000))*(cj8));
IkReal x1084=((r01)*(sj8));
IkReal x1085=((cj8)*(r10));
IkReal x1086=((sj7)*(x1081));
IkReal x1087=((cj7)*(x1080));
IkReal x1088=((r00)*(x1080));
IkReal x1089=((sj7)*(x1080));
IkReal x1090=((cj7)*(x1081));
evalcond[0]=((IkReal(1.00000000000000))+(((sj8)*(x1088)))+(((IkReal(-1.00000000000000))*(r11)*(x1081)*(x1083)))+(((cj8)*(r01)*(x1080)))+(((IkReal(-1.00000000000000))*(r10)*(x1081)*(x1082))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1081)*(x1083)))+(((IkReal(-1.00000000000000))*(r00)*(x1081)*(x1082)))+(((IkReal(-1.00000000000000))*(r10)*(x1080)*(x1082)))+(((IkReal(-1.00000000000000))*(r11)*(x1080)*(x1083))));
evalcond[2]=((((r12)*(x1086)))+(((IkReal(-1.00000000000000))*(r11)*(x1082)*(x1090)))+(((IkReal(-1.00000000000000))*(r02)*(x1089)))+(((IkReal(-1.00000000000000))*(r00)*(x1083)*(x1087)))+(((x1084)*(x1087)))+(((x1085)*(x1090))));
evalcond[3]=((((x1085)*(x1086)))+(((IkReal(-1.00000000000000))*(sj7)*(x1083)*(x1088)))+(((x1084)*(x1089)))+(((IkReal(-1.00000000000000))*(r12)*(x1090)))+(((IkReal(-1.00000000000000))*(r11)*(x1082)*(x1086)))+(((r02)*(x1087))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst36;
gconst36=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1091=((cj3)*(cj5));
IkReal x1092=((r02)*(sj7));
IkReal x1093=((cj8)*(r00));
IkReal x1094=((r22)*(sj7));
IkReal x1095=((cj5)*(sj3));
IkReal x1096=((cj7)*(cj8));
IkReal x1097=((IkReal(1.00000000000000))*(sj5));
IkReal x1098=((r12)*(sj7));
IkReal x1099=((sj3)*(sj5));
IkReal x1100=((cj3)*(cj7)*(sj5));
IkReal x1101=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(r01)*(x1091)*(x1101)))+(((r10)*(x1095)*(x1096)))+(((IkReal(-1.00000000000000))*(r11)*(x1095)*(x1101)))+(((IkReal(-1.00000000000000))*(r20)*(x1096)*(x1097)))+(((x1091)*(x1092)))+(((x1095)*(x1098)))+(((cj7)*(x1091)*(x1093)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(x1094)*(x1097))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1097)))+(((cj5)*(x1094)))+(((r10)*(x1096)*(x1099)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1101)))+(((cj5)*(r20)*(x1096)))+(((x1093)*(x1100)))+(((cj3)*(sj5)*(x1092)))+(((x1098)*(x1099)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1097))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst36)*(((((IkReal(-1.00000000000000))*(r01)*(x1091)*(x1101)))+(((r10)*(x1095)*(x1096)))+(((IkReal(-1.00000000000000))*(r11)*(x1095)*(x1101)))+(((IkReal(-1.00000000000000))*(r20)*(x1096)*(x1097)))+(((x1091)*(x1092)))+(((x1095)*(x1098)))+(((cj7)*(x1091)*(x1093)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(x1094)*(x1097)))))), ((gconst36)*(((((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1097)))+(((cj5)*(x1094)))+(((r10)*(x1096)*(x1099)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1101)))+(((cj5)*(r20)*(x1096)))+(((x1093)*(x1100)))+(((cj3)*(sj5)*(x1092)))+(((x1098)*(x1099)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1097)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1102=IKsin(j4);
IkReal x1103=IKcos(j4);
IkReal x1104=((IkReal(1.00000000000000))*(cj7));
IkReal x1105=((cj8)*(r20));
IkReal x1106=((cj3)*(r02));
IkReal x1107=((IkReal(1.00000000000000))*(sj7));
IkReal x1108=((sj3)*(sj7));
IkReal x1109=((r21)*(sj8));
IkReal x1110=((cj8)*(r10));
IkReal x1111=((cj5)*(x1102));
IkReal x1112=((sj5)*(x1103));
IkReal x1113=((r11)*(sj3)*(sj8));
IkReal x1114=((cj3)*(cj8)*(r00));
IkReal x1115=((cj5)*(x1103));
IkReal x1116=((cj3)*(r01)*(sj8));
IkReal x1117=((sj5)*(x1102));
IkReal x1118=((x1111)+(x1112));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1107)))+(((cj7)*(x1109)))+(((IkReal(-1.00000000000000))*(x1115)))+(x1117)+(((IkReal(-1.00000000000000))*(x1104)*(x1105))));
evalcond[1]=((((cj7)*(r22)))+(x1118)+(((sj7)*(x1109)))+(((IkReal(-1.00000000000000))*(x1105)*(x1107))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1104)*(x1113)))+(x1118)+(((cj7)*(x1114)))+(((cj7)*(sj3)*(x1110)))+(((r12)*(x1108)))+(((sj7)*(x1106)))+(((IkReal(-1.00000000000000))*(x1104)*(x1116))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1117)))+(((sj7)*(x1114)))+(((IkReal(-1.00000000000000))*(x1107)*(x1116)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1104)))+(((IkReal(-1.00000000000000))*(x1107)*(x1113)))+(((IkReal(-1.00000000000000))*(x1104)*(x1106)))+(x1115)+(((x1108)*(x1110))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1119=((cj8)*(r20));
IkReal x1120=((IkReal(1.00000000000000))*(sj5));
IkReal x1121=((cj7)*(r22));
IkReal x1122=((cj5)*(cj7));
IkReal x1123=((cj5)*(sj7));
IkReal x1124=((r21)*(sj8));
if( IKabs(((gconst35)*(((((cj7)*(sj5)*(x1124)))+(((IkReal(-1.00000000000000))*(cj7)*(x1119)*(x1120)))+(((x1123)*(x1124)))+(((IkReal(-1.00000000000000))*(x1119)*(x1123)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1120)))+(((cj5)*(x1121))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((sj5)*(x1121)))+(((x1119)*(x1122)))+(((r22)*(x1123)))+(((IkReal(-1.00000000000000))*(x1122)*(x1124)))+(((sj5)*(sj7)*(x1124)))+(((IkReal(-1.00000000000000))*(sj7)*(x1119)*(x1120))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst35)*(((((cj7)*(sj5)*(x1124)))+(((IkReal(-1.00000000000000))*(cj7)*(x1119)*(x1120)))+(((x1123)*(x1124)))+(((IkReal(-1.00000000000000))*(x1119)*(x1123)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1120)))+(((cj5)*(x1121)))))), ((gconst35)*(((((sj5)*(x1121)))+(((x1119)*(x1122)))+(((r22)*(x1123)))+(((IkReal(-1.00000000000000))*(x1122)*(x1124)))+(((sj5)*(sj7)*(x1124)))+(((IkReal(-1.00000000000000))*(sj7)*(x1119)*(x1120)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1125=IKsin(j4);
IkReal x1126=IKcos(j4);
IkReal x1127=((IkReal(1.00000000000000))*(cj7));
IkReal x1128=((cj8)*(r20));
IkReal x1129=((cj3)*(r02));
IkReal x1130=((IkReal(1.00000000000000))*(sj7));
IkReal x1131=((sj3)*(sj7));
IkReal x1132=((r21)*(sj8));
IkReal x1133=((cj8)*(r10));
IkReal x1134=((cj5)*(x1125));
IkReal x1135=((sj5)*(x1126));
IkReal x1136=((r11)*(sj3)*(sj8));
IkReal x1137=((cj3)*(cj8)*(r00));
IkReal x1138=((cj5)*(x1126));
IkReal x1139=((cj3)*(r01)*(sj8));
IkReal x1140=((sj5)*(x1125));
IkReal x1141=((x1135)+(x1134));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1130)))+(x1140)+(((IkReal(-1.00000000000000))*(x1138)))+(((cj7)*(x1132)))+(((IkReal(-1.00000000000000))*(x1127)*(x1128))));
evalcond[1]=((((cj7)*(r22)))+(x1141)+(((IkReal(-1.00000000000000))*(x1128)*(x1130)))+(((sj7)*(x1132))));
evalcond[2]=((((sj7)*(x1129)))+(x1141)+(((IkReal(-1.00000000000000))*(x1127)*(x1139)))+(((r12)*(x1131)))+(((IkReal(-1.00000000000000))*(x1127)*(x1136)))+(((cj7)*(sj3)*(x1133)))+(((cj7)*(x1137))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1127)))+(((IkReal(-1.00000000000000))*(x1130)*(x1136)))+(((IkReal(-1.00000000000000))*(x1130)*(x1139)))+(x1138)+(((IkReal(-1.00000000000000))*(x1127)*(x1129)))+(((sj7)*(x1137)))+(((x1131)*(x1133)))+(((IkReal(-1.00000000000000))*(x1140))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1142=((sj5)*(sj7));
IkReal x1143=((r21)*(sj8));
IkReal x1144=((cj7)*(sj5));
IkReal x1145=((cj8)*(r20));
IkReal x1146=((cj5)*(cj7));
IkReal x1147=((cj5)*(sj7));
if( IKabs(((gconst34)*(((((IkReal(-1.00000000000000))*(x1145)*(x1147)))+(((x1143)*(x1147)))+(((x1143)*(x1144)))+(((r22)*(x1146)))+(((IkReal(-1.00000000000000))*(x1144)*(x1145)))+(((IkReal(-1.00000000000000))*(r22)*(x1142))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*(((((x1142)*(x1143)))+(((x1145)*(x1146)))+(((IkReal(-1.00000000000000))*(x1143)*(x1146)))+(((r22)*(x1144)))+(((r22)*(x1147)))+(((IkReal(-1.00000000000000))*(x1142)*(x1145))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst34)*(((((IkReal(-1.00000000000000))*(x1145)*(x1147)))+(((x1143)*(x1147)))+(((x1143)*(x1144)))+(((r22)*(x1146)))+(((IkReal(-1.00000000000000))*(x1144)*(x1145)))+(((IkReal(-1.00000000000000))*(r22)*(x1142)))))), ((gconst34)*(((((x1142)*(x1143)))+(((x1145)*(x1146)))+(((IkReal(-1.00000000000000))*(x1143)*(x1146)))+(((r22)*(x1144)))+(((r22)*(x1147)))+(((IkReal(-1.00000000000000))*(x1142)*(x1145)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1148=IKsin(j4);
IkReal x1149=IKcos(j4);
IkReal x1150=((r21)*(sj8));
IkReal x1151=((IkReal(1.00000000000000))*(cj8)*(r20));
evalcond[0]=((((cj7)*(x1150)))+(((IkReal(-1.00000000000000))*(cj7)*(x1151)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj5)*(x1149)))+(((sj5)*(x1148))));
evalcond[1]=((((cj7)*(r22)))+(((sj5)*(x1149)))+(((cj5)*(x1148)))+(((sj7)*(x1150)))+(((IkReal(-1.00000000000000))*(sj7)*(x1151))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst37;
IkReal x1152=(cj8)*(cj8);
IkReal x1153=(sj8)*(sj8);
IkReal x1154=((IkReal(2.00000000000000))*(cj8)*(sj8));
gconst37=IKsign(((((x1152)*((r11)*(r11))))+(((r00)*(r01)*(x1154)))+(((x1153)*((r00)*(r00))))+(((x1153)*((r10)*(r10))))+(((x1152)*((r01)*(r01))))+(((r10)*(r11)*(x1154)))));
IkReal x1155=(cj8)*(cj8);
IkReal x1156=(sj8)*(sj8);
IkReal x1157=((IkReal(2.00000000000000))*(cj8)*(sj8));
dummyeval[0]=((((x1156)*((r10)*(r10))))+(((r00)*(r01)*(x1157)))+(((x1155)*((r11)*(r11))))+(((r10)*(r11)*(x1157)))+(((x1155)*((r01)*(r01))))+(((x1156)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst38;
IkReal x1158=(cj8)*(cj8);
IkReal x1159=(sj8)*(sj8);
IkReal x1160=((r00)*(r11));
IkReal x1161=((r02)*(sj7));
IkReal x1162=((cj7)*(x1158));
IkReal x1163=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1164=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1165=((cj7)*(x1159));
gconst38=IKsign(((((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1163)))+(((IkReal(-1.00000000000000))*(x1162)*(x1164)))+(((x1160)*(x1165)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1163)))+(((x1160)*(x1162)))+(((r10)*(sj8)*(x1161)))+(((cj8)*(r11)*(x1161)))+(((IkReal(-1.00000000000000))*(x1164)*(x1165)))));
IkReal x1166=(cj8)*(cj8);
IkReal x1167=(sj8)*(sj8);
IkReal x1168=((r00)*(r11));
IkReal x1169=((r02)*(sj7));
IkReal x1170=((cj7)*(x1166));
IkReal x1171=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1172=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1173=((cj7)*(x1167));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1170)*(x1172)))+(((cj8)*(r11)*(x1169)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1171)))+(((IkReal(-1.00000000000000))*(x1172)*(x1173)))+(((r10)*(sj8)*(x1169)))+(((x1168)*(x1170)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1171)))+(((x1168)*(x1173))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1174=((cj7)*(cj8));
IkReal x1175=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst38)*(((((IkReal(-1.00000000000000))*(r11)*(x1175)))+(((r12)*(sj7)))+(((r10)*(x1174))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*(((((r02)*(sj7)))+(((r00)*(x1174)))+(((IkReal(-1.00000000000000))*(r01)*(x1175))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst38)*(((((IkReal(-1.00000000000000))*(r11)*(x1175)))+(((r12)*(sj7)))+(((r10)*(x1174)))))), ((gconst38)*(((((r02)*(sj7)))+(((r00)*(x1174)))+(((IkReal(-1.00000000000000))*(r01)*(x1175)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1176=IKsin(j3);
IkReal x1177=IKcos(j3);
IkReal x1178=((r01)*(sj8));
IkReal x1179=((cj8)*(r00));
IkReal x1180=((r00)*(sj8));
IkReal x1181=((cj8)*(r11));
IkReal x1182=((r11)*(sj8));
IkReal x1183=((r10)*(sj8));
IkReal x1184=((cj8)*(r10));
IkReal x1185=((cj7)*(x1176));
IkReal x1186=((sj7)*(x1177));
IkReal x1187=((IkReal(1.00000000000000))*(x1176));
IkReal x1188=((IkReal(1.00000000000000))*(x1177));
IkReal x1189=((cj8)*(x1176));
IkReal x1190=((IkReal(1.00000000000000))*(x1182));
IkReal x1191=((sj7)*(x1176));
IkReal x1192=((cj7)*(x1177));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1181)*(x1188)))+(((IkReal(-1.00000000000000))*(x1183)*(x1188)))+(((x1176)*(x1180)))+(((r01)*(x1189))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1188)))+(((IkReal(-1.00000000000000))*(x1181)*(x1187)))+(((IkReal(-1.00000000000000))*(x1183)*(x1187)))+(((IkReal(-1.00000000000000))*(x1180)*(x1188))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj7)*(x1182)*(x1188)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1187)))+(((x1184)*(x1192)))+(((x1178)*(x1185)))+(((r12)*(x1186)))+(((IkReal(-1.00000000000000))*(x1179)*(x1185))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj7)*(x1179)*(x1187)))+(((x1184)*(x1186)))+(((x1178)*(x1191)))+(((r02)*(x1185)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1188)))+(((IkReal(-1.00000000000000))*(x1186)*(x1190))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj7)*(x1178)*(x1188)))+(((x1179)*(x1192)))+(((x1184)*(x1185)))+(((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(x1185)*(x1190)))+(((r12)*(x1191)))+(((r02)*(x1186)))+(((cj4)*(sj5))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(x1185)))+(((x1179)*(x1186)))+(((IkReal(-1.00000000000000))*(sj7)*(x1182)*(x1187)))+(((IkReal(-1.00000000000000))*(x1178)*(x1186)))+(((x1184)*(x1191)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1188)))+(((cj4)*(cj5))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst37)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst37)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst37)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst37)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1193=IKsin(j3);
IkReal x1194=IKcos(j3);
IkReal x1195=((r01)*(sj8));
IkReal x1196=((cj8)*(r00));
IkReal x1197=((r00)*(sj8));
IkReal x1198=((cj8)*(r11));
IkReal x1199=((r11)*(sj8));
IkReal x1200=((r10)*(sj8));
IkReal x1201=((cj8)*(r10));
IkReal x1202=((cj7)*(x1193));
IkReal x1203=((sj7)*(x1194));
IkReal x1204=((IkReal(1.00000000000000))*(x1193));
IkReal x1205=((IkReal(1.00000000000000))*(x1194));
IkReal x1206=((cj8)*(x1193));
IkReal x1207=((IkReal(1.00000000000000))*(x1199));
IkReal x1208=((sj7)*(x1193));
IkReal x1209=((cj7)*(x1194));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1200)*(x1205)))+(((x1193)*(x1197)))+(((r01)*(x1206)))+(((IkReal(-1.00000000000000))*(x1198)*(x1205))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1200)*(x1204)))+(((IkReal(-1.00000000000000))*(x1198)*(x1204)))+(((IkReal(-1.00000000000000))*(x1197)*(x1205)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1205))));
evalcond[2]=((((r12)*(x1203)))+(((x1201)*(x1209)))+(((IkReal(-1.00000000000000))*(x1196)*(x1202)))+(((x1195)*(x1202)))+(((IkReal(-1.00000000000000))*(cj7)*(x1199)*(x1205)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1204))));
evalcond[3]=((((r02)*(x1202)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1205)))+(((x1201)*(x1203)))+(((IkReal(-1.00000000000000))*(x1203)*(x1207)))+(((x1195)*(x1208)))+(((IkReal(-1.00000000000000))*(sj7)*(x1196)*(x1204))));
evalcond[4]=((((r12)*(x1208)))+(((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(x1202)*(x1207)))+(((x1196)*(x1209)))+(((x1201)*(x1202)))+(((r02)*(x1203)))+(((cj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj7)*(x1195)*(x1205))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x1199)*(x1204)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1205)))+(((IkReal(-1.00000000000000))*(r12)*(x1202)))+(((x1196)*(x1203)))+(((IkReal(-1.00000000000000))*(x1195)*(x1203)))+(((x1201)*(x1208)))+(((IkReal(-1.00000000000000))*(sj4)*(sj5)))+(((cj4)*(cj5))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst32)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst32)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst32)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst32)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1210=IKsin(j3);
IkReal x1211=IKcos(j3);
IkReal x1212=((IkReal(1.00000000000000))*(sj8));
IkReal x1213=((IkReal(1.00000000000000))*(cj8));
IkReal x1214=((r01)*(sj8));
IkReal x1215=((cj8)*(r10));
IkReal x1216=((sj7)*(x1211));
IkReal x1217=((cj7)*(x1210));
IkReal x1218=((r00)*(x1210));
IkReal x1219=((sj7)*(x1210));
IkReal x1220=((cj7)*(x1211));
evalcond[0]=((IkReal(1.00000000000000))+(((cj8)*(r01)*(x1210)))+(((IkReal(-1.00000000000000))*(r11)*(x1211)*(x1213)))+(((IkReal(-1.00000000000000))*(r10)*(x1211)*(x1212)))+(((sj8)*(x1218))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1211)*(x1213)))+(((IkReal(-1.00000000000000))*(r11)*(x1210)*(x1213)))+(((IkReal(-1.00000000000000))*(r00)*(x1211)*(x1212)))+(((IkReal(-1.00000000000000))*(r10)*(x1210)*(x1212))));
evalcond[2]=((((r12)*(x1216)))+(((IkReal(-1.00000000000000))*(r11)*(x1212)*(x1220)))+(((x1215)*(x1220)))+(((IkReal(-1.00000000000000))*(r02)*(x1219)))+(((IkReal(-1.00000000000000))*(r00)*(x1213)*(x1217)))+(((x1214)*(x1217))));
evalcond[3]=((((x1215)*(x1216)))+(((IkReal(-1.00000000000000))*(r12)*(x1220)))+(((r02)*(x1217)))+(((IkReal(-1.00000000000000))*(r11)*(x1212)*(x1216)))+(((x1214)*(x1219)))+(((IkReal(-1.00000000000000))*(sj7)*(x1213)*(x1218))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst36;
gconst36=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1221=((cj3)*(cj5));
IkReal x1222=((r02)*(sj7));
IkReal x1223=((cj8)*(r00));
IkReal x1224=((r22)*(sj7));
IkReal x1225=((cj5)*(sj3));
IkReal x1226=((cj7)*(cj8));
IkReal x1227=((IkReal(1.00000000000000))*(sj5));
IkReal x1228=((r12)*(sj7));
IkReal x1229=((sj3)*(sj5));
IkReal x1230=((cj3)*(cj7)*(sj5));
IkReal x1231=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst36)*(((((r10)*(x1225)*(x1226)))+(((IkReal(-1.00000000000000))*(x1224)*(x1227)))+(((IkReal(-1.00000000000000))*(r01)*(x1221)*(x1231)))+(((IkReal(-1.00000000000000))*(r11)*(x1225)*(x1231)))+(((x1221)*(x1222)))+(((x1225)*(x1228)))+(((IkReal(-1.00000000000000))*(r20)*(x1226)*(x1227)))+(((cj7)*(x1221)*(x1223)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1227)))+(((cj5)*(x1224)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1227)))+(((r10)*(x1226)*(x1229)))+(((cj3)*(sj5)*(x1222)))+(((x1223)*(x1230)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1231)))+(((cj5)*(r20)*(x1226)))+(((x1228)*(x1229))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst36)*(((((r10)*(x1225)*(x1226)))+(((IkReal(-1.00000000000000))*(x1224)*(x1227)))+(((IkReal(-1.00000000000000))*(r01)*(x1221)*(x1231)))+(((IkReal(-1.00000000000000))*(r11)*(x1225)*(x1231)))+(((x1221)*(x1222)))+(((x1225)*(x1228)))+(((IkReal(-1.00000000000000))*(r20)*(x1226)*(x1227)))+(((cj7)*(x1221)*(x1223)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst36)*(((((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1227)))+(((cj5)*(x1224)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1227)))+(((r10)*(x1226)*(x1229)))+(((cj3)*(sj5)*(x1222)))+(((x1223)*(x1230)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1231)))+(((cj5)*(r20)*(x1226)))+(((x1228)*(x1229)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1232=IKsin(j4);
IkReal x1233=IKcos(j4);
IkReal x1234=((IkReal(1.00000000000000))*(cj7));
IkReal x1235=((cj8)*(r20));
IkReal x1236=((cj3)*(r02));
IkReal x1237=((IkReal(1.00000000000000))*(sj7));
IkReal x1238=((sj3)*(sj7));
IkReal x1239=((r21)*(sj8));
IkReal x1240=((cj8)*(r10));
IkReal x1241=((cj5)*(x1232));
IkReal x1242=((sj5)*(x1233));
IkReal x1243=((r11)*(sj3)*(sj8));
IkReal x1244=((cj3)*(cj8)*(r00));
IkReal x1245=((cj5)*(x1233));
IkReal x1246=((cj3)*(r01)*(sj8));
IkReal x1247=((sj5)*(x1232));
IkReal x1248=((x1241)+(x1242));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1237)))+(((cj7)*(x1239)))+(((IkReal(-1.00000000000000))*(x1245)))+(x1247)+(((IkReal(-1.00000000000000))*(x1234)*(x1235))));
evalcond[1]=((((sj7)*(x1239)))+(((IkReal(-1.00000000000000))*(x1235)*(x1237)))+(((cj7)*(r22)))+(x1248));
evalcond[2]=((((sj7)*(x1236)))+(((cj7)*(sj3)*(x1240)))+(x1248)+(((cj7)*(x1244)))+(((IkReal(-1.00000000000000))*(x1234)*(x1246)))+(((r12)*(x1238)))+(((IkReal(-1.00000000000000))*(x1234)*(x1243))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1247)))+(((x1238)*(x1240)))+(x1245)+(((IkReal(-1.00000000000000))*(x1237)*(x1246)))+(((sj7)*(x1244)))+(((IkReal(-1.00000000000000))*(x1237)*(x1243)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1234)))+(((IkReal(-1.00000000000000))*(x1234)*(x1236))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1249=((cj8)*(r20));
IkReal x1250=((IkReal(1.00000000000000))*(sj5));
IkReal x1251=((cj7)*(r22));
IkReal x1252=((cj5)*(cj7));
IkReal x1253=((cj5)*(sj7));
IkReal x1254=((r21)*(sj8));
if( IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1250)))+(((cj7)*(sj5)*(x1254)))+(((x1253)*(x1254)))+(((cj5)*(x1251)))+(((IkReal(-1.00000000000000))*(cj7)*(x1249)*(x1250)))+(((IkReal(-1.00000000000000))*(x1249)*(x1253))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(x1252)*(x1254)))+(((r22)*(x1253)))+(((sj5)*(sj7)*(x1254)))+(((sj5)*(x1251)))+(((x1249)*(x1252)))+(((IkReal(-1.00000000000000))*(sj7)*(x1249)*(x1250))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst35)*(((((IkReal(-1.00000000000000))*(r22)*(sj7)*(x1250)))+(((cj7)*(sj5)*(x1254)))+(((x1253)*(x1254)))+(((cj5)*(x1251)))+(((IkReal(-1.00000000000000))*(cj7)*(x1249)*(x1250)))+(((IkReal(-1.00000000000000))*(x1249)*(x1253)))))), ((gconst35)*(((((IkReal(-1.00000000000000))*(x1252)*(x1254)))+(((r22)*(x1253)))+(((sj5)*(sj7)*(x1254)))+(((sj5)*(x1251)))+(((x1249)*(x1252)))+(((IkReal(-1.00000000000000))*(sj7)*(x1249)*(x1250)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1255=IKsin(j4);
IkReal x1256=IKcos(j4);
IkReal x1257=((IkReal(1.00000000000000))*(cj7));
IkReal x1258=((cj8)*(r20));
IkReal x1259=((cj3)*(r02));
IkReal x1260=((IkReal(1.00000000000000))*(sj7));
IkReal x1261=((sj3)*(sj7));
IkReal x1262=((r21)*(sj8));
IkReal x1263=((cj8)*(r10));
IkReal x1264=((cj5)*(x1255));
IkReal x1265=((sj5)*(x1256));
IkReal x1266=((r11)*(sj3)*(sj8));
IkReal x1267=((cj3)*(cj8)*(r00));
IkReal x1268=((cj5)*(x1256));
IkReal x1269=((cj3)*(r01)*(sj8));
IkReal x1270=((sj5)*(x1255));
IkReal x1271=((x1265)+(x1264));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1260)))+(((IkReal(-1.00000000000000))*(x1257)*(x1258)))+(((cj7)*(x1262)))+(x1270)+(((IkReal(-1.00000000000000))*(x1268))));
evalcond[1]=((((cj7)*(r22)))+(x1271)+(((IkReal(-1.00000000000000))*(x1258)*(x1260)))+(((sj7)*(x1262))));
evalcond[2]=((((r12)*(x1261)))+(x1271)+(((cj7)*(x1267)))+(((IkReal(-1.00000000000000))*(x1257)*(x1269)))+(((cj7)*(sj3)*(x1263)))+(((IkReal(-1.00000000000000))*(x1257)*(x1266)))+(((sj7)*(x1259))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1270)))+(((x1261)*(x1263)))+(((IkReal(-1.00000000000000))*(x1260)*(x1266)))+(((sj7)*(x1267)))+(((IkReal(-1.00000000000000))*(x1260)*(x1269)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1257)))+(x1268)+(((IkReal(-1.00000000000000))*(x1257)*(x1259))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1272=((IkReal(1.00000000000000))*(sj7));
IkReal x1273=((npy)*(sj8));
IkReal x1274=((cj8)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x1272)))+(((IkReal(-1.00000000000000))*(cj7)*(x1274)))+(((IkReal(0.0900000000000000))*(cj7)))+(((cj7)*(x1273)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(-0.0300000000000000))+(((cj7)*(npz)))+(((sj7)*(x1273)))+(((IkReal(-1.00000000000000))*(x1272)*(x1274)))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
IkReal x1275=(cj8)*(cj8);
IkReal x1276=(sj8)*(sj8);
IkReal x1277=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1278=((IkReal(1.00000000000000))*(x1275));
IkReal x1279=((IkReal(1.00000000000000))*(x1276));
gconst39=IKsign(((((IkReal(-1.00000000000000))*(x1278)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1277)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1277)))+(((IkReal(-1.00000000000000))*(x1279)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1279)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1278)*((r01)*(r01))))));
IkReal x1280=(cj8)*(cj8);
IkReal x1281=(sj8)*(sj8);
IkReal x1282=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1283=((IkReal(1.00000000000000))*(x1280));
IkReal x1284=((IkReal(1.00000000000000))*(x1281));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r01)*(x1282)))+(((IkReal(-1.00000000000000))*(x1284)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1283)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1284)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1283)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1282))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst41;
gconst41=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst40;
IkReal x1285=(sj8)*(sj8);
IkReal x1286=(cj8)*(cj8);
IkReal x1287=((sj7)*(sj8));
IkReal x1288=((IkReal(1.00000000000000))*(r02));
IkReal x1289=((r01)*(r10));
IkReal x1290=((cj8)*(sj7));
IkReal x1291=((cj7)*(x1285));
IkReal x1292=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1293=((cj7)*(x1286));
gconst40=IKsign(((((IkReal(-1.00000000000000))*(x1291)*(x1292)))+(((IkReal(-1.00000000000000))*(r11)*(x1288)*(x1290)))+(((IkReal(-1.00000000000000))*(x1292)*(x1293)))+(((IkReal(-1.00000000000000))*(r10)*(x1287)*(x1288)))+(((x1289)*(x1291)))+(((x1289)*(x1293)))+(((r00)*(r12)*(x1287)))+(((r01)*(r12)*(x1290)))));
IkReal x1294=(sj8)*(sj8);
IkReal x1295=(cj8)*(cj8);
IkReal x1296=((sj7)*(sj8));
IkReal x1297=((IkReal(1.00000000000000))*(r02));
IkReal x1298=((r01)*(r10));
IkReal x1299=((cj8)*(sj7));
IkReal x1300=((cj7)*(x1294));
IkReal x1301=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1302=((cj7)*(x1295));
dummyeval[0]=((((x1298)*(x1300)))+(((x1298)*(x1302)))+(((IkReal(-1.00000000000000))*(x1300)*(x1301)))+(((IkReal(-1.00000000000000))*(r10)*(x1296)*(x1297)))+(((r00)*(r12)*(x1296)))+(((IkReal(-1.00000000000000))*(r11)*(x1297)*(x1299)))+(((IkReal(-1.00000000000000))*(x1301)*(x1302)))+(((r01)*(r12)*(x1299))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1303=((cj7)*(cj8));
IkReal x1304=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst40)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x1304)))+(((r10)*(x1303))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*(((((r02)*(sj7)))+(((r00)*(x1303)))+(((IkReal(-1.00000000000000))*(r01)*(x1304))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst40)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x1304)))+(((r10)*(x1303)))))), ((gconst40)*(((((r02)*(sj7)))+(((r00)*(x1303)))+(((IkReal(-1.00000000000000))*(r01)*(x1304)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1305=IKsin(j3);
IkReal x1306=IKcos(j3);
IkReal x1307=((IkReal(1.00000000000000))*(sj8));
IkReal x1308=((IkReal(1.00000000000000))*(cj8));
IkReal x1309=((r01)*(sj8));
IkReal x1310=((cj8)*(r10));
IkReal x1311=((sj7)*(x1306));
IkReal x1312=((cj7)*(x1305));
IkReal x1313=((r00)*(x1305));
IkReal x1314=((sj7)*(x1305));
IkReal x1315=((cj7)*(x1306));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1306)*(x1307)))+(((sj8)*(x1313)))+(((cj8)*(r01)*(x1305)))+(((IkReal(-1.00000000000000))*(r11)*(x1306)*(x1308))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x1305)*(x1308)))+(((IkReal(-1.00000000000000))*(r10)*(x1305)*(x1307)))+(((IkReal(-1.00000000000000))*(r01)*(x1306)*(x1308)))+(((IkReal(-1.00000000000000))*(r00)*(x1306)*(x1307))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x1314)))+(((IkReal(-1.00000000000000))*(r00)*(x1308)*(x1312)))+(((x1310)*(x1315)))+(((r12)*(x1311)))+(((x1309)*(x1312)))+(((IkReal(-1.00000000000000))*(r11)*(x1307)*(x1315))));
evalcond[3]=((((r02)*(x1312)))+(((x1310)*(x1311)))+(((IkReal(-1.00000000000000))*(r11)*(x1307)*(x1311)))+(((IkReal(-1.00000000000000))*(r12)*(x1315)))+(((x1309)*(x1314)))+(((IkReal(-1.00000000000000))*(sj7)*(x1308)*(x1313))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1316=((cj3)*(cj5));
IkReal x1317=((r02)*(sj7));
IkReal x1318=((cj8)*(r00));
IkReal x1319=((r22)*(sj7));
IkReal x1320=((cj5)*(sj3));
IkReal x1321=((cj7)*(cj8));
IkReal x1322=((IkReal(1.00000000000000))*(sj5));
IkReal x1323=((r12)*(sj7));
IkReal x1324=((sj3)*(sj5));
IkReal x1325=((cj3)*(cj7)*(sj5));
IkReal x1326=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst43)*(((((x1320)*(x1323)))+(((IkReal(-1.00000000000000))*(r11)*(x1320)*(x1326)))+(((IkReal(-1.00000000000000))*(x1319)*(x1322)))+(((cj7)*(x1316)*(x1318)))+(((IkReal(-1.00000000000000))*(r01)*(x1316)*(x1326)))+(((IkReal(-1.00000000000000))*(r20)*(x1321)*(x1322)))+(((x1316)*(x1317)))+(((r10)*(x1320)*(x1321)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((cj3)*(sj5)*(x1317)))+(((x1323)*(x1324)))+(((r10)*(x1321)*(x1324)))+(((x1318)*(x1325)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1322)))+(((cj5)*(x1319)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1326)))+(((cj5)*(r20)*(x1321)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1322))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst43)*(((((x1320)*(x1323)))+(((IkReal(-1.00000000000000))*(r11)*(x1320)*(x1326)))+(((IkReal(-1.00000000000000))*(x1319)*(x1322)))+(((cj7)*(x1316)*(x1318)))+(((IkReal(-1.00000000000000))*(r01)*(x1316)*(x1326)))+(((IkReal(-1.00000000000000))*(r20)*(x1321)*(x1322)))+(((x1316)*(x1317)))+(((r10)*(x1320)*(x1321)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst43)*(((((cj3)*(sj5)*(x1317)))+(((x1323)*(x1324)))+(((r10)*(x1321)*(x1324)))+(((x1318)*(x1325)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1322)))+(((cj5)*(x1319)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1326)))+(((cj5)*(r20)*(x1321)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1322)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1327=IKcos(j4);
IkReal x1328=IKsin(j4);
IkReal x1329=((IkReal(1.00000000000000))*(cj7));
IkReal x1330=((cj8)*(r20));
IkReal x1331=((cj3)*(r02));
IkReal x1332=((IkReal(1.00000000000000))*(sj7));
IkReal x1333=((sj3)*(sj7));
IkReal x1334=((r21)*(sj8));
IkReal x1335=((IkReal(1.00000000000000))*(cj5));
IkReal x1336=((cj8)*(r10));
IkReal x1337=((sj5)*(x1328));
IkReal x1338=((sj5)*(x1327));
IkReal x1339=((r11)*(sj3)*(sj8));
IkReal x1340=((cj3)*(cj8)*(r00));
IkReal x1341=((cj3)*(r01)*(sj8));
IkReal x1342=((x1327)*(x1335));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1342)))+(x1337)+(((cj7)*(x1334)))+(((IkReal(-1.00000000000000))*(r22)*(x1332)))+(((IkReal(-1.00000000000000))*(x1329)*(x1330))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x1338)))+(((IkReal(-1.00000000000000))*(x1328)*(x1335)))+(((sj7)*(x1334)))+(((IkReal(-1.00000000000000))*(x1330)*(x1332))));
evalcond[2]=((((cj7)*(sj3)*(x1336)))+(((sj7)*(x1331)))+(((cj7)*(x1340)))+(((IkReal(-1.00000000000000))*(x1329)*(x1339)))+(x1338)+(((cj5)*(x1328)))+(((IkReal(-1.00000000000000))*(x1329)*(x1341)))+(((r12)*(x1333))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1329)*(x1331)))+(((IkReal(-1.00000000000000))*(x1332)*(x1341)))+(((sj7)*(x1340)))+(((IkReal(-1.00000000000000))*(x1342)))+(x1337)+(((IkReal(-1.00000000000000))*(x1332)*(x1339)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1329)))+(((x1333)*(x1336))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1343=((cj7)*(sj5));
IkReal x1344=((r21)*(sj8));
IkReal x1345=((cj5)*(cj7));
IkReal x1346=((cj8)*(r20));
IkReal x1347=((sj5)*(sj7));
IkReal x1348=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst42)*(((((r22)*(x1345)))+(((x1343)*(x1346)))+(((cj5)*(sj7)*(x1344)))+(((r22)*(x1347)))+(((IkReal(-1.00000000000000))*(x1346)*(x1348)))+(((IkReal(-1.00000000000000))*(x1343)*(x1344))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(x1345)*(x1346)))+(((IkReal(-1.00000000000000))*(r22)*(x1348)))+(((x1344)*(x1347)))+(((IkReal(-1.00000000000000))*(x1346)*(x1347)))+(((r22)*(x1343)))+(((x1344)*(x1345))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst42)*(((((r22)*(x1345)))+(((x1343)*(x1346)))+(((cj5)*(sj7)*(x1344)))+(((r22)*(x1347)))+(((IkReal(-1.00000000000000))*(x1346)*(x1348)))+(((IkReal(-1.00000000000000))*(x1343)*(x1344)))))), ((gconst42)*(((((IkReal(-1.00000000000000))*(x1345)*(x1346)))+(((IkReal(-1.00000000000000))*(r22)*(x1348)))+(((x1344)*(x1347)))+(((IkReal(-1.00000000000000))*(x1346)*(x1347)))+(((r22)*(x1343)))+(((x1344)*(x1345)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1349=IKcos(j4);
IkReal x1350=IKsin(j4);
IkReal x1351=((IkReal(1.00000000000000))*(cj7));
IkReal x1352=((cj8)*(r20));
IkReal x1353=((cj3)*(r02));
IkReal x1354=((IkReal(1.00000000000000))*(sj7));
IkReal x1355=((sj3)*(sj7));
IkReal x1356=((r21)*(sj8));
IkReal x1357=((IkReal(1.00000000000000))*(cj5));
IkReal x1358=((cj8)*(r10));
IkReal x1359=((sj5)*(x1350));
IkReal x1360=((sj5)*(x1349));
IkReal x1361=((r11)*(sj3)*(sj8));
IkReal x1362=((cj3)*(cj8)*(r00));
IkReal x1363=((cj3)*(r01)*(sj8));
IkReal x1364=((x1349)*(x1357));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1354)))+(((IkReal(-1.00000000000000))*(x1364)))+(((IkReal(-1.00000000000000))*(x1351)*(x1352)))+(x1359)+(((cj7)*(x1356))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1350)*(x1357)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x1352)*(x1354)))+(((sj7)*(x1356)))+(((IkReal(-1.00000000000000))*(x1360))));
evalcond[2]=((((cj5)*(x1350)))+(((IkReal(-1.00000000000000))*(x1351)*(x1361)))+(x1360)+(((cj7)*(x1362)))+(((cj7)*(sj3)*(x1358)))+(((sj7)*(x1353)))+(((r12)*(x1355)))+(((IkReal(-1.00000000000000))*(x1351)*(x1363))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1354)*(x1363)))+(((IkReal(-1.00000000000000))*(x1351)*(x1353)))+(((IkReal(-1.00000000000000))*(x1364)))+(((IkReal(-1.00000000000000))*(x1354)*(x1361)))+(((x1355)*(x1358)))+(x1359)+(((sj7)*(x1362)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1351))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1365=((cj7)*(sj5));
IkReal x1366=((r21)*(sj8));
IkReal x1367=((cj5)*(cj7));
IkReal x1368=((cj8)*(r20));
IkReal x1369=((IkReal(1.00000000000000))*(sj7));
IkReal x1370=((sj5)*(sj7));
IkReal x1371=((IkReal(1.00000000000000))*(cj5)*(x1368));
if( IKabs(((gconst41)*(((((cj5)*(sj7)*(x1366)))+(((r22)*(x1370)))+(((IkReal(-1.00000000000000))*(x1365)*(x1366)))+(((IkReal(-1.00000000000000))*(cj5)*(x1368)*(x1369)))+(((r22)*(x1367)))+(((x1365)*(x1368))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*(((((IkReal(-1.00000000000000))*(cj5)*(r22)*(x1369)))+(((x1366)*(x1370)))+(((IkReal(-1.00000000000000))*(sj5)*(x1368)*(x1369)))+(((x1366)*(x1367)))+(((IkReal(-1.00000000000000))*(x1367)*(x1368)))+(((r22)*(x1365))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst41)*(((((cj5)*(sj7)*(x1366)))+(((r22)*(x1370)))+(((IkReal(-1.00000000000000))*(x1365)*(x1366)))+(((IkReal(-1.00000000000000))*(cj5)*(x1368)*(x1369)))+(((r22)*(x1367)))+(((x1365)*(x1368)))))), ((gconst41)*(((((IkReal(-1.00000000000000))*(cj5)*(r22)*(x1369)))+(((x1366)*(x1370)))+(((IkReal(-1.00000000000000))*(sj5)*(x1368)*(x1369)))+(((x1366)*(x1367)))+(((IkReal(-1.00000000000000))*(x1367)*(x1368)))+(((r22)*(x1365)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1372=IKcos(j4);
IkReal x1373=IKsin(j4);
IkReal x1374=((IkReal(1.00000000000000))*(cj5));
IkReal x1375=((r21)*(sj8));
IkReal x1376=((IkReal(1.00000000000000))*(cj8)*(r20));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1372)*(x1374)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((sj5)*(x1373)))+(((cj7)*(x1375)))+(((IkReal(-1.00000000000000))*(cj7)*(x1376))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1373)*(x1374)))+(((IkReal(-1.00000000000000))*(sj7)*(x1376)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x1372)))+(((sj7)*(x1375))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst44;
IkReal x1377=(cj8)*(cj8);
IkReal x1378=(sj8)*(sj8);
IkReal x1379=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1380=((IkReal(1.00000000000000))*(x1377));
IkReal x1381=((IkReal(1.00000000000000))*(x1378));
gconst44=IKsign(((((IkReal(-1.00000000000000))*(x1380)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1379)))+(((IkReal(-1.00000000000000))*(x1380)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1381)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1381)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1379)))));
IkReal x1382=(cj8)*(cj8);
IkReal x1383=(sj8)*(sj8);
IkReal x1384=((IkReal(2.00000000000000))*(cj8)*(sj8));
IkReal x1385=((IkReal(1.00000000000000))*(x1382));
IkReal x1386=((IkReal(1.00000000000000))*(x1383));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1385)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1384)))+(((IkReal(-1.00000000000000))*(x1386)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1385)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1386)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1384))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst45;
IkReal x1387=(sj8)*(sj8);
IkReal x1388=(cj8)*(cj8);
IkReal x1389=((sj7)*(sj8));
IkReal x1390=((IkReal(1.00000000000000))*(r02));
IkReal x1391=((r01)*(r10));
IkReal x1392=((cj8)*(sj7));
IkReal x1393=((cj7)*(x1387));
IkReal x1394=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1395=((cj7)*(x1388));
gconst45=IKsign(((((x1391)*(x1393)))+(((IkReal(-1.00000000000000))*(x1394)*(x1395)))+(((r00)*(r12)*(x1389)))+(((IkReal(-1.00000000000000))*(x1393)*(x1394)))+(((IkReal(-1.00000000000000))*(r11)*(x1390)*(x1392)))+(((x1391)*(x1395)))+(((r01)*(r12)*(x1392)))+(((IkReal(-1.00000000000000))*(r10)*(x1389)*(x1390)))));
IkReal x1396=(sj8)*(sj8);
IkReal x1397=(cj8)*(cj8);
IkReal x1398=((sj7)*(sj8));
IkReal x1399=((IkReal(1.00000000000000))*(r02));
IkReal x1400=((r01)*(r10));
IkReal x1401=((cj8)*(sj7));
IkReal x1402=((cj7)*(x1396));
IkReal x1403=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1404=((cj7)*(x1397));
dummyeval[0]=((((x1400)*(x1404)))+(((x1400)*(x1402)))+(((IkReal(-1.00000000000000))*(x1402)*(x1403)))+(((IkReal(-1.00000000000000))*(r11)*(x1399)*(x1401)))+(((r00)*(r12)*(x1398)))+(((IkReal(-1.00000000000000))*(r10)*(x1398)*(x1399)))+(((IkReal(-1.00000000000000))*(x1403)*(x1404)))+(((r01)*(r12)*(x1401))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1405=((cj7)*(cj8));
IkReal x1406=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst45)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x1406)))+(((r10)*(x1405))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst45)*(((((IkReal(-1.00000000000000))*(r01)*(x1406)))+(((r00)*(x1405)))+(((r02)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst45)*(((((r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x1406)))+(((r10)*(x1405)))))), ((gconst45)*(((((IkReal(-1.00000000000000))*(r01)*(x1406)))+(((r00)*(x1405)))+(((r02)*(sj7)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1407=IKsin(j3);
IkReal x1408=IKcos(j3);
IkReal x1409=((r01)*(sj8));
IkReal x1410=((cj8)*(r00));
IkReal x1411=((r00)*(sj8));
IkReal x1412=((cj8)*(r11));
IkReal x1413=((r11)*(sj8));
IkReal x1414=((r10)*(sj8));
IkReal x1415=((cj8)*(r10));
IkReal x1416=((cj7)*(x1407));
IkReal x1417=((sj7)*(x1408));
IkReal x1418=((IkReal(1.00000000000000))*(x1407));
IkReal x1419=((IkReal(1.00000000000000))*(x1408));
IkReal x1420=((cj8)*(x1407));
IkReal x1421=((IkReal(1.00000000000000))*(x1413));
IkReal x1422=((sj7)*(x1407));
IkReal x1423=((cj7)*(x1408));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1414)*(x1419)))+(((x1407)*(x1411)))+(((r01)*(x1420)))+(((IkReal(-1.00000000000000))*(x1412)*(x1419))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1411)*(x1419)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1419)))+(((IkReal(-1.00000000000000))*(x1412)*(x1418)))+(((IkReal(-1.00000000000000))*(x1414)*(x1418))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1410)*(x1416)))+(((x1415)*(x1423)))+(((r12)*(x1417)))+(((IkReal(-1.00000000000000))*(cj7)*(x1413)*(x1419)))+(((x1409)*(x1416)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1418))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1417)*(x1421)))+(((x1415)*(x1417)))+(((IkReal(-1.00000000000000))*(sj7)*(x1410)*(x1418)))+(((r02)*(x1416)))+(((x1409)*(x1422)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1419))));
evalcond[4]=((((r02)*(x1417)))+(((cj5)*(sj4)))+(((x1415)*(x1416)))+(((IkReal(-1.00000000000000))*(x1416)*(x1421)))+(((x1410)*(x1423)))+(((r12)*(x1422)))+(((cj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj7)*(x1409)*(x1419))));
evalcond[5]=((((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1419)))+(((IkReal(-1.00000000000000))*(r12)*(x1416)))+(((IkReal(-1.00000000000000))*(x1409)*(x1417)))+(((IkReal(-1.00000000000000))*(sj7)*(x1413)*(x1418)))+(((x1410)*(x1417)))+(((x1415)*(x1422))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst44)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst44)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst44)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst44)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1424=IKsin(j3);
IkReal x1425=IKcos(j3);
IkReal x1426=((r01)*(sj8));
IkReal x1427=((cj8)*(r00));
IkReal x1428=((r00)*(sj8));
IkReal x1429=((cj8)*(r11));
IkReal x1430=((r11)*(sj8));
IkReal x1431=((r10)*(sj8));
IkReal x1432=((cj8)*(r10));
IkReal x1433=((cj7)*(x1424));
IkReal x1434=((sj7)*(x1425));
IkReal x1435=((IkReal(1.00000000000000))*(x1424));
IkReal x1436=((IkReal(1.00000000000000))*(x1425));
IkReal x1437=((cj8)*(x1424));
IkReal x1438=((IkReal(1.00000000000000))*(x1430));
IkReal x1439=((sj7)*(x1424));
IkReal x1440=((cj7)*(x1425));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1429)*(x1436)))+(((x1424)*(x1428)))+(((r01)*(x1437)))+(((IkReal(-1.00000000000000))*(x1431)*(x1436))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1429)*(x1435)))+(((IkReal(-1.00000000000000))*(x1428)*(x1436)))+(((IkReal(-1.00000000000000))*(x1431)*(x1435)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1436))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj7)*(x1430)*(x1436)))+(((x1426)*(x1433)))+(((r12)*(x1434)))+(((x1432)*(x1440)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1435)))+(((IkReal(-1.00000000000000))*(x1427)*(x1433))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj7)*(x1427)*(x1435)))+(((r02)*(x1433)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1436)))+(((IkReal(-1.00000000000000))*(x1434)*(x1438)))+(((x1426)*(x1439)))+(((x1432)*(x1434))));
evalcond[4]=((((x1432)*(x1433)))+(((cj5)*(sj4)))+(((r12)*(x1439)))+(((IkReal(-1.00000000000000))*(cj7)*(x1426)*(x1436)))+(((x1427)*(x1440)))+(((cj4)*(sj5)))+(((r02)*(x1434)))+(((IkReal(-1.00000000000000))*(x1433)*(x1438))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x1430)*(x1435)))+(((sj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)))+(((IkReal(-1.00000000000000))*(x1426)*(x1434)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1436)))+(((x1432)*(x1439)))+(((x1427)*(x1434)))+(((IkReal(-1.00000000000000))*(r12)*(x1433))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*(((((cj8)*(r11)))+(((r10)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst39)*(((((IkReal(-1.00000000000000))*(r00)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)))))), ((gconst39)*(((((cj8)*(r11)))+(((r10)*(sj8)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1441=IKsin(j3);
IkReal x1442=IKcos(j3);
IkReal x1443=((IkReal(1.00000000000000))*(sj8));
IkReal x1444=((IkReal(1.00000000000000))*(cj8));
IkReal x1445=((r01)*(sj8));
IkReal x1446=((cj8)*(r10));
IkReal x1447=((sj7)*(x1442));
IkReal x1448=((cj7)*(x1441));
IkReal x1449=((r00)*(x1441));
IkReal x1450=((sj7)*(x1441));
IkReal x1451=((cj7)*(x1442));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1442)*(x1443)))+(((IkReal(-1.00000000000000))*(r11)*(x1442)*(x1444)))+(((sj8)*(x1449)))+(((cj8)*(r01)*(x1441))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x1441)*(x1443)))+(((IkReal(-1.00000000000000))*(r11)*(x1441)*(x1444)))+(((IkReal(-1.00000000000000))*(r00)*(x1442)*(x1443)))+(((IkReal(-1.00000000000000))*(r01)*(x1442)*(x1444))));
evalcond[2]=((((r12)*(x1447)))+(((IkReal(-1.00000000000000))*(r11)*(x1443)*(x1451)))+(((x1445)*(x1448)))+(((IkReal(-1.00000000000000))*(r00)*(x1444)*(x1448)))+(((x1446)*(x1451)))+(((IkReal(-1.00000000000000))*(r02)*(x1450))));
evalcond[3]=((((x1445)*(x1450)))+(((IkReal(-1.00000000000000))*(sj7)*(x1444)*(x1449)))+(((r02)*(x1448)))+(((IkReal(-1.00000000000000))*(r11)*(x1443)*(x1447)))+(((IkReal(-1.00000000000000))*(r12)*(x1451)))+(((x1446)*(x1447))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1452=((cj3)*(cj5));
IkReal x1453=((r02)*(sj7));
IkReal x1454=((cj8)*(r00));
IkReal x1455=((r22)*(sj7));
IkReal x1456=((cj5)*(sj3));
IkReal x1457=((cj7)*(cj8));
IkReal x1458=((IkReal(1.00000000000000))*(sj5));
IkReal x1459=((r12)*(sj7));
IkReal x1460=((sj3)*(sj5));
IkReal x1461=((cj3)*(cj7)*(sj5));
IkReal x1462=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst43)*(((((cj7)*(x1452)*(x1454)))+(((IkReal(-1.00000000000000))*(r01)*(x1452)*(x1462)))+(((IkReal(-1.00000000000000))*(x1455)*(x1458)))+(((IkReal(-1.00000000000000))*(r11)*(x1456)*(x1462)))+(((IkReal(-1.00000000000000))*(r20)*(x1457)*(x1458)))+(((x1452)*(x1453)))+(((x1456)*(x1459)))+(((r10)*(x1456)*(x1457)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1458)))+(((r10)*(x1457)*(x1460)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1458)))+(((x1454)*(x1461)))+(((cj3)*(sj5)*(x1453)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1462)))+(((x1459)*(x1460)))+(((cj5)*(r20)*(x1457)))+(((cj5)*(x1455))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst43)*(((((cj7)*(x1452)*(x1454)))+(((IkReal(-1.00000000000000))*(r01)*(x1452)*(x1462)))+(((IkReal(-1.00000000000000))*(x1455)*(x1458)))+(((IkReal(-1.00000000000000))*(r11)*(x1456)*(x1462)))+(((IkReal(-1.00000000000000))*(r20)*(x1457)*(x1458)))+(((x1452)*(x1453)))+(((x1456)*(x1459)))+(((r10)*(x1456)*(x1457)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst43)*(((((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1458)))+(((r10)*(x1457)*(x1460)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1458)))+(((x1454)*(x1461)))+(((cj3)*(sj5)*(x1453)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1462)))+(((x1459)*(x1460)))+(((cj5)*(r20)*(x1457)))+(((cj5)*(x1455)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1463=IKcos(j4);
IkReal x1464=IKsin(j4);
IkReal x1465=((IkReal(1.00000000000000))*(cj7));
IkReal x1466=((cj8)*(r20));
IkReal x1467=((cj3)*(r02));
IkReal x1468=((IkReal(1.00000000000000))*(sj7));
IkReal x1469=((sj3)*(sj7));
IkReal x1470=((r21)*(sj8));
IkReal x1471=((IkReal(1.00000000000000))*(cj5));
IkReal x1472=((cj8)*(r10));
IkReal x1473=((sj5)*(x1464));
IkReal x1474=((sj5)*(x1463));
IkReal x1475=((r11)*(sj3)*(sj8));
IkReal x1476=((cj3)*(cj8)*(r00));
IkReal x1477=((cj3)*(r01)*(sj8));
IkReal x1478=((x1463)*(x1471));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1468)))+(((cj7)*(x1470)))+(((IkReal(-1.00000000000000))*(x1478)))+(((IkReal(-1.00000000000000))*(x1465)*(x1466)))+(x1473));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1474)))+(((cj7)*(r22)))+(((sj7)*(x1470)))+(((IkReal(-1.00000000000000))*(x1464)*(x1471)))+(((IkReal(-1.00000000000000))*(x1466)*(x1468))));
evalcond[2]=((((cj5)*(x1464)))+(((cj7)*(sj3)*(x1472)))+(((IkReal(-1.00000000000000))*(x1465)*(x1475)))+(((r12)*(x1469)))+(((sj7)*(x1467)))+(((cj7)*(x1476)))+(((IkReal(-1.00000000000000))*(x1465)*(x1477)))+(x1474));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1465)*(x1467)))+(((x1469)*(x1472)))+(((IkReal(-1.00000000000000))*(x1478)))+(((IkReal(-1.00000000000000))*(x1468)*(x1477)))+(((IkReal(-1.00000000000000))*(x1468)*(x1475)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1465)))+(((sj7)*(x1476)))+(x1473));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1479=((cj7)*(sj5));
IkReal x1480=((r21)*(sj8));
IkReal x1481=((cj5)*(cj7));
IkReal x1482=((cj8)*(r20));
IkReal x1483=((sj5)*(sj7));
IkReal x1484=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(x1479)*(x1480)))+(((x1479)*(x1482)))+(((cj5)*(sj7)*(x1480)))+(((IkReal(-1.00000000000000))*(x1482)*(x1484)))+(((r22)*(x1483)))+(((r22)*(x1481))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(x1481)*(x1482)))+(((IkReal(-1.00000000000000))*(x1482)*(x1483)))+(((x1480)*(x1483)))+(((IkReal(-1.00000000000000))*(r22)*(x1484)))+(((r22)*(x1479)))+(((x1480)*(x1481))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst42)*(((((IkReal(-1.00000000000000))*(x1479)*(x1480)))+(((x1479)*(x1482)))+(((cj5)*(sj7)*(x1480)))+(((IkReal(-1.00000000000000))*(x1482)*(x1484)))+(((r22)*(x1483)))+(((r22)*(x1481)))))), ((gconst42)*(((((IkReal(-1.00000000000000))*(x1481)*(x1482)))+(((IkReal(-1.00000000000000))*(x1482)*(x1483)))+(((x1480)*(x1483)))+(((IkReal(-1.00000000000000))*(r22)*(x1484)))+(((r22)*(x1479)))+(((x1480)*(x1481)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1485=IKcos(j4);
IkReal x1486=IKsin(j4);
IkReal x1487=((IkReal(1.00000000000000))*(cj7));
IkReal x1488=((cj8)*(r20));
IkReal x1489=((cj3)*(r02));
IkReal x1490=((IkReal(1.00000000000000))*(sj7));
IkReal x1491=((sj3)*(sj7));
IkReal x1492=((r21)*(sj8));
IkReal x1493=((IkReal(1.00000000000000))*(cj5));
IkReal x1494=((cj8)*(r10));
IkReal x1495=((sj5)*(x1486));
IkReal x1496=((sj5)*(x1485));
IkReal x1497=((r11)*(sj3)*(sj8));
IkReal x1498=((cj3)*(cj8)*(r00));
IkReal x1499=((cj3)*(r01)*(sj8));
IkReal x1500=((x1485)*(x1493));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1490)))+(x1495)+(((IkReal(-1.00000000000000))*(x1500)))+(((IkReal(-1.00000000000000))*(x1487)*(x1488)))+(((cj7)*(x1492))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1486)*(x1493)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x1488)*(x1490)))+(((IkReal(-1.00000000000000))*(x1496)))+(((sj7)*(x1492))));
evalcond[2]=((((r12)*(x1491)))+(((IkReal(-1.00000000000000))*(x1487)*(x1499)))+(((cj5)*(x1486)))+(x1496)+(((cj7)*(sj3)*(x1494)))+(((IkReal(-1.00000000000000))*(x1487)*(x1497)))+(((cj7)*(x1498)))+(((sj7)*(x1489))));
evalcond[3]=((((sj7)*(x1498)))+(((x1491)*(x1494)))+(((IkReal(-1.00000000000000))*(x1487)*(x1489)))+(x1495)+(((IkReal(-1.00000000000000))*(x1500)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1487)))+(((IkReal(-1.00000000000000))*(x1490)*(x1497)))+(((IkReal(-1.00000000000000))*(x1490)*(x1499))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1501=((cj6)*(cj7));
IkReal x1502=((IkReal(1.00000000000000))*(sj8));
IkReal x1503=((cj6)*(sj7));
if( IKabs(((gconst2)*(((((r12)*(x1503)))+(((cj8)*(r10)*(x1501)))+(((IkReal(-1.00000000000000))*(r11)*(x1501)*(x1502))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((r02)*(x1503)))+(((IkReal(-1.00000000000000))*(r01)*(x1501)*(x1502)))+(((cj8)*(r00)*(x1501))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst2)*(((((r12)*(x1503)))+(((cj8)*(r10)*(x1501)))+(((IkReal(-1.00000000000000))*(r11)*(x1501)*(x1502)))))), ((gconst2)*(((((r02)*(x1503)))+(((IkReal(-1.00000000000000))*(r01)*(x1501)*(x1502)))+(((cj8)*(r00)*(x1501)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x1504=IKsin(j3);
IkReal x1505=IKcos(j3);
IkReal x1506=((IkReal(1.00000000000000))*(r11));
IkReal x1507=((r01)*(sj8));
IkReal x1508=((cj8)*(r10));
IkReal x1509=((IkReal(1.00000000000000))*(sj7));
IkReal x1510=((sj7)*(x1505));
IkReal x1511=((cj7)*(x1504));
IkReal x1512=((r00)*(x1504));
IkReal x1513=((cj7)*(x1505));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(sj8)*(x1505)))+(((sj8)*(x1512)))+(cj6)+(((IkReal(-1.00000000000000))*(cj8)*(x1505)*(x1506)))+(((cj8)*(r01)*(x1504))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r00)*(x1511)))+(((x1507)*(x1511)))+(((IkReal(-1.00000000000000))*(sj8)*(x1506)*(x1513)))+(((r12)*(x1510)))+(((IkReal(-1.00000000000000))*(r02)*(x1504)*(x1509)))+(((x1508)*(x1513))));
evalcond[2]=((((r02)*(x1511)))+(sj6)+(((x1508)*(x1510)))+(((IkReal(-1.00000000000000))*(sj8)*(x1506)*(x1510)))+(((IkReal(-1.00000000000000))*(cj8)*(x1509)*(x1512)))+(((sj7)*(x1504)*(x1507)))+(((IkReal(-1.00000000000000))*(r12)*(x1513))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5))))));
dummyeval[0]=((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1514=((IkReal(1.00000000000000))*(sj7));
IkReal x1515=((IkReal(1.00000000000000))*(cj3));
IkReal x1516=((cj7)*(r02));
IkReal x1517=((cj3)*(sj7));
IkReal x1518=((cj8)*(r00));
IkReal x1519=((cj8)*(npx));
IkReal x1520=((r01)*(sj3));
IkReal x1521=((cj7)*(sj8));
IkReal x1522=((r11)*(sj8));
IkReal x1523=((IkReal(1.00000000000000))*(cj7));
IkReal x1524=((sj7)*(sj8));
IkReal x1525=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x1519)*(x1523)))+(((IkReal(-1.00000000000000))*(npz)*(x1514)))+(((IkReal(0.0900000000000000))*(cj7)))+(((npy)*(x1521)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((r00)*(sj3)*(sj8)))+(((cj8)*(x1520)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x1515)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x1515))));
evalcond[4]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x1514)))+(((r21)*(x1524))));
evalcond[5]=((IkReal(0.0950000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x1514)*(x1519)))+(((npy)*(x1524)))+(((IkReal(0.0900000000000000))*(sj7))));
evalcond[6]=((((x1520)*(x1521)))+(((IkReal(-1.00000000000000))*(r11)*(x1515)*(x1521)))+(((IkReal(-1.00000000000000))*(sj3)*(x1518)*(x1523)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x1514)))+(((cj3)*(cj7)*(x1525)))+(((r12)*(x1517))));
evalcond[7]=((IkReal(1.00000000000000))+(((sj3)*(x1516)))+(((x1517)*(x1525)))+(((IkReal(-1.00000000000000))*(sj3)*(x1514)*(x1518)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1515)))+(((IkReal(-1.00000000000000))*(cj3)*(x1514)*(x1522)))+(((x1520)*(x1524))));
evalcond[8]=((((sj3)*(sj7)*(x1525)))+(((x1517)*(x1518)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1523)))+(((IkReal(-1.00000000000000))*(sj3)*(x1514)*(x1522)))+(((IkReal(-1.00000000000000))*(x1515)*(x1516)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x1514))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1526=((cj8)*(sj5));
IkReal x1527=((cj3)*(r01));
IkReal x1528=((IkReal(1.00000000000000))*(cj5));
IkReal x1529=((r11)*(sj3));
IkReal x1530=((sj5)*(sj8));
IkReal x1531=((r10)*(sj3));
IkReal x1532=((cj3)*(r00)*(sj8));
if( IKabs(((gconst9)*(((((cj3)*(r00)*(x1530)))+(((cj5)*(cj8)*(r21)))+(((x1526)*(x1529)))+(((x1530)*(x1531)))+(((x1526)*(x1527)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(cj8)*(x1528)*(x1529)))+(((IkReal(-1.00000000000000))*(x1528)*(x1532)))+(((IkReal(-1.00000000000000))*(sj8)*(x1528)*(x1531)))+(((r21)*(x1526)))+(((r20)*(x1530)))+(((IkReal(-1.00000000000000))*(cj8)*(x1527)*(x1528))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst9)*(((((cj3)*(r00)*(x1530)))+(((cj5)*(cj8)*(r21)))+(((x1526)*(x1529)))+(((x1530)*(x1531)))+(((x1526)*(x1527)))+(((cj5)*(r20)*(sj8)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(cj8)*(x1528)*(x1529)))+(((IkReal(-1.00000000000000))*(x1528)*(x1532)))+(((IkReal(-1.00000000000000))*(sj8)*(x1528)*(x1531)))+(((r21)*(x1526)))+(((r20)*(x1530)))+(((IkReal(-1.00000000000000))*(cj8)*(x1527)*(x1528)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1533=IKsin(j4);
IkReal x1534=IKcos(j4);
IkReal x1535=((IkReal(1.00000000000000))*(cj8));
IkReal x1536=((cj3)*(r01));
IkReal x1537=((cj3)*(r00));
IkReal x1538=((cj7)*(cj8));
IkReal x1539=((IkReal(1.00000000000000))*(cj5));
IkReal x1540=((IkReal(1.00000000000000))*(sj8));
IkReal x1541=((r11)*(sj3));
IkReal x1542=((r10)*(sj3));
IkReal x1543=((sj5)*(x1533));
IkReal x1544=((sj5)*(x1534));
IkReal x1545=((x1534)*(x1539));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x1544)))+(((IkReal(-1.00000000000000))*(x1533)*(x1539))));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(x1543)+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1545)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1535))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1535)*(x1541)))+(x1543)+(((IkReal(-1.00000000000000))*(x1535)*(x1536)))+(((IkReal(-1.00000000000000))*(x1537)*(x1540)))+(((IkReal(-1.00000000000000))*(x1540)*(x1542)))+(((IkReal(-1.00000000000000))*(x1545))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj7)*(x1540)*(x1541)))+(((cj3)*(r02)*(sj7)))+(((x1538)*(x1542)))+(((x1537)*(x1538)))+(((IkReal(-1.00000000000000))*(cj7)*(x1536)*(x1540)))+(x1544)+(((cj5)*(x1533)))+(((r12)*(sj3)*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1546=((cj8)*(sj5));
IkReal x1547=((cj7)*(r20));
IkReal x1548=((IkReal(1.00000000000000))*(cj5));
IkReal x1549=((r22)*(sj7));
IkReal x1550=((r20)*(sj8));
IkReal x1551=((cj7)*(r21)*(sj8));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(sj5)*(x1551)))+(((cj5)*(x1550)))+(((sj5)*(x1549)))+(((cj5)*(cj8)*(r21)))+(((x1546)*(x1547))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(cj8)*(x1547)*(x1548)))+(((r21)*(x1546)))+(((IkReal(-1.00000000000000))*(x1548)*(x1549)))+(((sj5)*(x1550)))+(((cj5)*(x1551))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(sj5)*(x1551)))+(((cj5)*(x1550)))+(((sj5)*(x1549)))+(((cj5)*(cj8)*(r21)))+(((x1546)*(x1547)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(cj8)*(x1547)*(x1548)))+(((r21)*(x1546)))+(((IkReal(-1.00000000000000))*(x1548)*(x1549)))+(((sj5)*(x1550)))+(((cj5)*(x1551)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1552=IKsin(j4);
IkReal x1553=IKcos(j4);
IkReal x1554=((IkReal(1.00000000000000))*(cj8));
IkReal x1555=((cj3)*(r01));
IkReal x1556=((cj3)*(r00));
IkReal x1557=((cj7)*(cj8));
IkReal x1558=((IkReal(1.00000000000000))*(cj5));
IkReal x1559=((IkReal(1.00000000000000))*(sj8));
IkReal x1560=((r11)*(sj3));
IkReal x1561=((r10)*(sj3));
IkReal x1562=((sj5)*(x1552));
IkReal x1563=((sj5)*(x1553));
IkReal x1564=((x1553)*(x1558));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x1563)))+(((IkReal(-1.00000000000000))*(x1552)*(x1558))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1554)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1564)))+(x1562));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1554)*(x1560)))+(((IkReal(-1.00000000000000))*(x1556)*(x1559)))+(((IkReal(-1.00000000000000))*(x1564)))+(x1562)+(((IkReal(-1.00000000000000))*(x1554)*(x1555)))+(((IkReal(-1.00000000000000))*(x1559)*(x1561))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((r12)*(sj3)*(sj7)))+(((x1556)*(x1557)))+(((IkReal(-1.00000000000000))*(cj7)*(x1555)*(x1559)))+(x1563)+(((IkReal(-1.00000000000000))*(cj7)*(x1559)*(x1560)))+(((cj5)*(x1552)))+(((x1557)*(x1561))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1565=((IkReal(1.00000000000000))*(sj7));
IkReal x1566=((IkReal(1.00000000000000))*(cj3));
IkReal x1567=((cj7)*(r02));
IkReal x1568=((cj3)*(sj7));
IkReal x1569=((cj8)*(r00));
IkReal x1570=((cj8)*(npx));
IkReal x1571=((r01)*(sj3));
IkReal x1572=((cj7)*(sj8));
IkReal x1573=((r11)*(sj8));
IkReal x1574=((IkReal(1.00000000000000))*(cj7));
IkReal x1575=((sj7)*(sj8));
IkReal x1576=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((npy)*(x1572)))+(((IkReal(-1.00000000000000))*(npz)*(x1565)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x1570)*(x1574)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x1566)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x1566)))+(((cj8)*(x1571))));
evalcond[4]=((((r21)*(x1575)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x1565))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x1565)*(x1570)))+(((npy)*(x1575)))+(((IkReal(0.0900000000000000))*(sj7))));
evalcond[6]=((((x1571)*(x1572)))+(((IkReal(-1.00000000000000))*(sj3)*(x1569)*(x1574)))+(((cj3)*(cj7)*(x1576)))+(((IkReal(-1.00000000000000))*(r11)*(x1566)*(x1572)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x1565)))+(((r12)*(x1568))));
evalcond[7]=((IkReal(-1.00000000000000))+(((x1568)*(x1576)))+(((IkReal(-1.00000000000000))*(cj3)*(x1565)*(x1573)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1566)))+(((x1571)*(x1575)))+(((sj3)*(x1567)))+(((IkReal(-1.00000000000000))*(sj3)*(x1565)*(x1569))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj3)*(x1565)*(x1573)))+(((IkReal(-1.00000000000000))*(x1566)*(x1567)))+(((sj3)*(sj7)*(x1576)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x1565)))+(((x1568)*(x1569)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1574))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1577=((IkReal(1.00000000000000))*(sj5));
IkReal x1578=((r20)*(sj8));
IkReal x1579=((cj5)*(cj8));
IkReal x1580=((r11)*(sj3));
IkReal x1581=((cj3)*(r01));
IkReal x1582=((cj3)*(r00)*(sj8));
IkReal x1583=((r10)*(sj3)*(sj8));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(cj8)*(x1577)*(x1581)))+(((IkReal(-1.00000000000000))*(x1577)*(x1583)))+(((IkReal(-1.00000000000000))*(cj8)*(x1577)*(x1580)))+(((IkReal(-1.00000000000000))*(cj5)*(x1578)))+(((IkReal(-1.00000000000000))*(x1577)*(x1582)))+(((IkReal(-1.00000000000000))*(r21)*(x1579))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj5)*(x1582)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x1577)))+(((x1579)*(x1580)))+(((x1579)*(x1581)))+(((IkReal(-1.00000000000000))*(x1577)*(x1578)))+(((cj5)*(x1583))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(cj8)*(x1577)*(x1581)))+(((IkReal(-1.00000000000000))*(x1577)*(x1583)))+(((IkReal(-1.00000000000000))*(cj8)*(x1577)*(x1580)))+(((IkReal(-1.00000000000000))*(cj5)*(x1578)))+(((IkReal(-1.00000000000000))*(x1577)*(x1582)))+(((IkReal(-1.00000000000000))*(r21)*(x1579)))))), ((gconst11)*(((((cj5)*(x1582)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x1577)))+(((x1579)*(x1580)))+(((x1579)*(x1581)))+(((IkReal(-1.00000000000000))*(x1577)*(x1578)))+(((cj5)*(x1583)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1584=IKsin(j4);
IkReal x1585=IKcos(j4);
IkReal x1586=((IkReal(1.00000000000000))*(cj8));
IkReal x1587=((cj3)*(r01));
IkReal x1588=((cj3)*(r00));
IkReal x1589=((cj7)*(cj8));
IkReal x1590=((r11)*(sj3));
IkReal x1591=((IkReal(1.00000000000000))*(sj8));
IkReal x1592=((r10)*(sj3));
IkReal x1593=((cj5)*(x1584));
IkReal x1594=((sj5)*(x1585));
IkReal x1595=((cj5)*(x1585));
IkReal x1596=((sj5)*(x1584));
IkReal x1597=((x1594)+(x1593));
evalcond[0]=((((cj8)*(r21)))+(x1597)+(((r20)*(sj8))));
evalcond[1]=((x1596)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1586)))+(((IkReal(-1.00000000000000))*(x1595))));
evalcond[2]=((x1595)+(((IkReal(-1.00000000000000))*(x1596)))+(((IkReal(-1.00000000000000))*(x1586)*(x1587)))+(((IkReal(-1.00000000000000))*(x1591)*(x1592)))+(((IkReal(-1.00000000000000))*(x1588)*(x1591)))+(((IkReal(-1.00000000000000))*(x1586)*(x1590))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj7)*(x1587)*(x1591)))+(((cj3)*(r02)*(sj7)))+(x1597)+(((r12)*(sj3)*(sj7)))+(((x1589)*(x1592)))+(((IkReal(-1.00000000000000))*(cj7)*(x1590)*(x1591)))+(((x1588)*(x1589))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1598=((r22)*(sj7));
IkReal x1599=((IkReal(1.00000000000000))*(cj7));
IkReal x1600=((cj5)*(r21));
IkReal x1601=((cj8)*(sj5));
IkReal x1602=((sj5)*(sj8));
IkReal x1603=((cj5)*(r20));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(r20)*(x1599)*(x1601)))+(((cj8)*(x1600)))+(((cj7)*(r21)*(x1602)))+(((IkReal(-1.00000000000000))*(sj5)*(x1598)))+(((sj8)*(x1603))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((r20)*(x1602)))+(((cj7)*(cj8)*(x1603)))+(((IkReal(-1.00000000000000))*(sj8)*(x1599)*(x1600)))+(((cj5)*(x1598)))+(((r21)*(x1601))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(r20)*(x1599)*(x1601)))+(((cj8)*(x1600)))+(((cj7)*(r21)*(x1602)))+(((IkReal(-1.00000000000000))*(sj5)*(x1598)))+(((sj8)*(x1603)))))), ((gconst10)*(((((r20)*(x1602)))+(((cj7)*(cj8)*(x1603)))+(((IkReal(-1.00000000000000))*(sj8)*(x1599)*(x1600)))+(((cj5)*(x1598)))+(((r21)*(x1601)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1604=IKsin(j4);
IkReal x1605=IKcos(j4);
IkReal x1606=((IkReal(1.00000000000000))*(cj8));
IkReal x1607=((cj3)*(r01));
IkReal x1608=((cj3)*(r00));
IkReal x1609=((cj7)*(cj8));
IkReal x1610=((r11)*(sj3));
IkReal x1611=((IkReal(1.00000000000000))*(sj8));
IkReal x1612=((r10)*(sj3));
IkReal x1613=((cj5)*(x1604));
IkReal x1614=((sj5)*(x1605));
IkReal x1615=((cj5)*(x1605));
IkReal x1616=((sj5)*(x1604));
IkReal x1617=((x1614)+(x1613));
evalcond[0]=((((cj8)*(r21)))+(x1617)+(((r20)*(sj8))));
evalcond[1]=((x1616)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1615)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1606))));
evalcond[2]=((x1615)+(((IkReal(-1.00000000000000))*(x1606)*(x1610)))+(((IkReal(-1.00000000000000))*(x1616)))+(((IkReal(-1.00000000000000))*(x1606)*(x1607)))+(((IkReal(-1.00000000000000))*(x1611)*(x1612)))+(((IkReal(-1.00000000000000))*(x1608)*(x1611))));
evalcond[3]=((((x1608)*(x1609)))+(x1617)+(((cj3)*(r02)*(sj7)))+(((x1609)*(x1612)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x1607)*(x1611)))+(((IkReal(-1.00000000000000))*(cj7)*(x1610)*(x1611))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1618=((IkReal(1.00000000000000))*(cj3));
IkReal x1619=((cj8)*(r01));
IkReal x1620=((IkReal(1.00000000000000))*(sj7));
IkReal x1621=((r00)*(sj8));
IkReal x1622=((cj8)*(npx));
IkReal x1623=((r10)*(sj8));
IkReal x1624=((cj7)*(sj8));
IkReal x1625=((r02)*(sj3));
IkReal x1626=((sj7)*(sj8));
IkReal x1627=((cj8)*(r11));
IkReal x1628=((r01)*(sj3));
IkReal x1629=((cj3)*(sj7));
IkReal x1630=((IkReal(1.00000000000000))*(cj7));
IkReal x1631=((cj8)*(r10));
IkReal x1632=((IkReal(1.00000000000000))*(sj3));
IkReal x1633=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x1622)*(x1630)))+(((npy)*(x1624)))+(((IkReal(-1.00000000000000))*(npz)*(x1620)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(1.00000000000000))+(((sj3)*(x1619)))+(((IkReal(-1.00000000000000))*(x1618)*(x1627)))+(((sj3)*(x1621)))+(((IkReal(-1.00000000000000))*(x1618)*(x1623))));
evalcond[5]=((IkReal(0.0300000000000000))+(((cj7)*(npz)))+(((IkReal(-0.250000000000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x1620)*(x1622)))+(((npy)*(x1626)))+(((IkReal(0.0900000000000000))*(sj7))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1623)*(x1632)))+(((IkReal(-1.00000000000000))*(x1627)*(x1632)))+(((IkReal(-1.00000000000000))*(x1618)*(x1621)))+(((IkReal(-1.00000000000000))*(x1618)*(x1619))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1620)*(x1625)))+(((x1624)*(x1628)))+(((cj3)*(cj7)*(x1631)))+(((IkReal(-1.00000000000000))*(x1630)*(x1633)))+(((r12)*(x1629)))+(((IkReal(-1.00000000000000))*(r11)*(x1618)*(x1624))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x1620)*(x1633)))+(((x1629)*(x1631)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1618)))+(((cj7)*(x1625)))+(((x1626)*(x1628)))+(((IkReal(-1.00000000000000))*(r11)*(x1618)*(x1626))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1634=((cj3)*(cj5));
IkReal x1635=((r02)*(sj7));
IkReal x1636=((cj8)*(r00));
IkReal x1637=((r22)*(sj7));
IkReal x1638=((cj5)*(sj3));
IkReal x1639=((cj7)*(cj8));
IkReal x1640=((IkReal(1.00000000000000))*(sj5));
IkReal x1641=((r12)*(sj7));
IkReal x1642=((sj3)*(sj5));
IkReal x1643=((cj3)*(cj7)*(sj5));
IkReal x1644=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst13)*(((((cj7)*(x1634)*(x1636)))+(((IkReal(-1.00000000000000))*(x1637)*(x1640)))+(((x1638)*(x1641)))+(((IkReal(-1.00000000000000))*(r20)*(x1639)*(x1640)))+(((x1634)*(x1635)))+(((r10)*(x1638)*(x1639)))+(((IkReal(-1.00000000000000))*(r11)*(x1638)*(x1644)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r01)*(x1634)*(x1644))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((x1641)*(x1642)))+(((x1636)*(x1643)))+(((r10)*(x1639)*(x1642)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1644)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1640)))+(((cj5)*(r20)*(x1639)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1640)))+(((cj5)*(x1637)))+(((cj3)*(sj5)*(x1635))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst13)*(((((cj7)*(x1634)*(x1636)))+(((IkReal(-1.00000000000000))*(x1637)*(x1640)))+(((x1638)*(x1641)))+(((IkReal(-1.00000000000000))*(r20)*(x1639)*(x1640)))+(((x1634)*(x1635)))+(((r10)*(x1638)*(x1639)))+(((IkReal(-1.00000000000000))*(r11)*(x1638)*(x1644)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r01)*(x1634)*(x1644)))))), ((gconst13)*(((((x1641)*(x1642)))+(((x1636)*(x1643)))+(((r10)*(x1639)*(x1642)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1644)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1640)))+(((cj5)*(r20)*(x1639)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x1640)))+(((cj5)*(x1637)))+(((cj3)*(sj5)*(x1635)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1645=IKsin(j4);
IkReal x1646=IKcos(j4);
IkReal x1647=((IkReal(1.00000000000000))*(cj7));
IkReal x1648=((cj8)*(r20));
IkReal x1649=((cj3)*(r02));
IkReal x1650=((IkReal(1.00000000000000))*(sj7));
IkReal x1651=((sj3)*(sj7));
IkReal x1652=((r21)*(sj8));
IkReal x1653=((cj8)*(r10));
IkReal x1654=((cj5)*(x1645));
IkReal x1655=((sj5)*(x1646));
IkReal x1656=((r11)*(sj3)*(sj8));
IkReal x1657=((cj3)*(cj8)*(r00));
IkReal x1658=((cj5)*(x1646));
IkReal x1659=((cj3)*(r01)*(sj8));
IkReal x1660=((sj5)*(x1645));
IkReal x1661=((x1654)+(x1655));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1647)*(x1648)))+(((IkReal(-1.00000000000000))*(r22)*(x1650)))+(((cj7)*(x1652)))+(((IkReal(-1.00000000000000))*(x1658)))+(x1660));
evalcond[1]=((((cj7)*(r22)))+(x1661)+(((sj7)*(x1652)))+(((IkReal(-1.00000000000000))*(x1648)*(x1650))));
evalcond[2]=((((cj7)*(x1657)))+(((cj7)*(sj3)*(x1653)))+(((r12)*(x1651)))+(x1661)+(((IkReal(-1.00000000000000))*(x1647)*(x1656)))+(((IkReal(-1.00000000000000))*(x1647)*(x1659)))+(((sj7)*(x1649))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1647)))+(((IkReal(-1.00000000000000))*(x1650)*(x1656)))+(((x1651)*(x1653)))+(((IkReal(-1.00000000000000))*(x1650)*(x1659)))+(((IkReal(-1.00000000000000))*(x1647)*(x1649)))+(((IkReal(-1.00000000000000))*(x1660)))+(((sj7)*(x1657)))+(x1658));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1662=((r21)*(sj8));
IkReal x1663=((sj5)*(sj7));
IkReal x1664=((cj7)*(sj5));
IkReal x1665=((cj5)*(cj7));
IkReal x1666=((cj8)*(r20));
IkReal x1667=((cj5)*(sj7));
if( IKabs(((gconst12)*(((((x1662)*(x1664)))+(((IkReal(-1.00000000000000))*(x1664)*(x1666)))+(((IkReal(-1.00000000000000))*(r22)*(x1663)))+(((x1662)*(x1667)))+(((IkReal(-1.00000000000000))*(x1666)*(x1667)))+(((r22)*(x1665))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((r22)*(x1667)))+(((x1662)*(x1663)))+(((r22)*(x1664)))+(((x1665)*(x1666)))+(((IkReal(-1.00000000000000))*(x1663)*(x1666)))+(((IkReal(-1.00000000000000))*(x1662)*(x1665))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst12)*(((((x1662)*(x1664)))+(((IkReal(-1.00000000000000))*(x1664)*(x1666)))+(((IkReal(-1.00000000000000))*(r22)*(x1663)))+(((x1662)*(x1667)))+(((IkReal(-1.00000000000000))*(x1666)*(x1667)))+(((r22)*(x1665)))))), ((gconst12)*(((((r22)*(x1667)))+(((x1662)*(x1663)))+(((r22)*(x1664)))+(((x1665)*(x1666)))+(((IkReal(-1.00000000000000))*(x1663)*(x1666)))+(((IkReal(-1.00000000000000))*(x1662)*(x1665)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1668=IKsin(j4);
IkReal x1669=IKcos(j4);
IkReal x1670=((IkReal(1.00000000000000))*(cj7));
IkReal x1671=((cj8)*(r20));
IkReal x1672=((cj3)*(r02));
IkReal x1673=((IkReal(1.00000000000000))*(sj7));
IkReal x1674=((sj3)*(sj7));
IkReal x1675=((r21)*(sj8));
IkReal x1676=((cj8)*(r10));
IkReal x1677=((cj5)*(x1668));
IkReal x1678=((sj5)*(x1669));
IkReal x1679=((r11)*(sj3)*(sj8));
IkReal x1680=((cj3)*(cj8)*(r00));
IkReal x1681=((cj5)*(x1669));
IkReal x1682=((cj3)*(r01)*(sj8));
IkReal x1683=((sj5)*(x1668));
IkReal x1684=((x1678)+(x1677));
evalcond[0]=((((cj7)*(x1675)))+(((IkReal(-1.00000000000000))*(x1681)))+(((IkReal(-1.00000000000000))*(x1670)*(x1671)))+(((IkReal(-1.00000000000000))*(r22)*(x1673)))+(x1683));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1671)*(x1673)))+(((cj7)*(r22)))+(((sj7)*(x1675)))+(x1684));
evalcond[2]=((((cj7)*(sj3)*(x1676)))+(((cj7)*(x1680)))+(((IkReal(-1.00000000000000))*(x1670)*(x1679)))+(((sj7)*(x1672)))+(((IkReal(-1.00000000000000))*(x1670)*(x1682)))+(((r12)*(x1674)))+(x1684));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1670)*(x1672)))+(((x1674)*(x1676)))+(((IkReal(-1.00000000000000))*(x1683)))+(((IkReal(-1.00000000000000))*(x1673)*(x1682)))+(((sj7)*(x1680)))+(((IkReal(-1.00000000000000))*(x1673)*(x1679)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1670)))+(x1681));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1685=((IkReal(1.00000000000000))*(cj3));
IkReal x1686=((cj8)*(r01));
IkReal x1687=((IkReal(1.00000000000000))*(sj7));
IkReal x1688=((r00)*(sj8));
IkReal x1689=((cj8)*(npx));
IkReal x1690=((r10)*(sj8));
IkReal x1691=((cj7)*(sj8));
IkReal x1692=((r02)*(sj3));
IkReal x1693=((sj7)*(sj8));
IkReal x1694=((cj8)*(r11));
IkReal x1695=((r01)*(sj3));
IkReal x1696=((cj3)*(sj7));
IkReal x1697=((IkReal(1.00000000000000))*(cj7));
IkReal x1698=((cj8)*(r10));
IkReal x1699=((IkReal(1.00000000000000))*(sj3));
IkReal x1700=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x1687)))+(((npy)*(x1691)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x1689)*(x1697)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1685)*(x1690)))+(((IkReal(-1.00000000000000))*(x1685)*(x1694)))+(((sj3)*(x1688)))+(((sj3)*(x1686))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((npy)*(x1693)))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x1687)*(x1689)))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1685)*(x1686)))+(((IkReal(-1.00000000000000))*(x1685)*(x1688)))+(((IkReal(-1.00000000000000))*(x1694)*(x1699)))+(((IkReal(-1.00000000000000))*(x1690)*(x1699))));
evalcond[7]=((((cj3)*(cj7)*(x1698)))+(((IkReal(-1.00000000000000))*(r11)*(x1685)*(x1691)))+(((IkReal(-1.00000000000000))*(x1687)*(x1692)))+(((r12)*(x1696)))+(((x1691)*(x1695)))+(((IkReal(-1.00000000000000))*(x1697)*(x1700))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1685)))+(((IkReal(-1.00000000000000))*(x1687)*(x1700)))+(((x1696)*(x1698)))+(((x1693)*(x1695)))+(((IkReal(-1.00000000000000))*(r11)*(x1685)*(x1693)))+(((cj7)*(x1692))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1701=((cj3)*(cj5));
IkReal x1702=((r02)*(sj7));
IkReal x1703=((cj7)*(cj8));
IkReal x1704=((cj3)*(sj5));
IkReal x1705=((r22)*(sj7));
IkReal x1706=((cj5)*(sj3));
IkReal x1707=((IkReal(1.00000000000000))*(sj5));
IkReal x1708=((r12)*(sj7));
IkReal x1709=((sj3)*(sj5));
IkReal x1710=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst15)*(((((r00)*(x1701)*(x1703)))+(((x1706)*(x1708)))+(((x1701)*(x1702)))+(((IkReal(-1.00000000000000))*(x1705)*(x1707)))+(((IkReal(-1.00000000000000))*(r11)*(x1706)*(x1710)))+(((IkReal(-1.00000000000000))*(r01)*(x1701)*(x1710)))+(((r10)*(x1703)*(x1706)))+(((IkReal(-1.00000000000000))*(r20)*(x1703)*(x1707)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((r10)*(x1703)*(x1709)))+(((x1708)*(x1709)))+(((cj5)*(r20)*(x1703)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1710)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1707)))+(((cj5)*(x1705)))+(((IkReal(-1.00000000000000))*(r01)*(x1704)*(x1710)))+(((r00)*(x1703)*(x1704)))+(((x1702)*(x1704))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst15)*(((((r00)*(x1701)*(x1703)))+(((x1706)*(x1708)))+(((x1701)*(x1702)))+(((IkReal(-1.00000000000000))*(x1705)*(x1707)))+(((IkReal(-1.00000000000000))*(r11)*(x1706)*(x1710)))+(((IkReal(-1.00000000000000))*(r01)*(x1701)*(x1710)))+(((r10)*(x1703)*(x1706)))+(((IkReal(-1.00000000000000))*(r20)*(x1703)*(x1707)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst15)*(((((r10)*(x1703)*(x1709)))+(((x1708)*(x1709)))+(((cj5)*(r20)*(x1703)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1710)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x1707)))+(((cj5)*(x1705)))+(((IkReal(-1.00000000000000))*(r01)*(x1704)*(x1710)))+(((r00)*(x1703)*(x1704)))+(((x1702)*(x1704)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1711=IKcos(j4);
IkReal x1712=IKsin(j4);
IkReal x1713=((IkReal(1.00000000000000))*(cj7));
IkReal x1714=((cj8)*(r20));
IkReal x1715=((cj3)*(r02));
IkReal x1716=((IkReal(1.00000000000000))*(sj7));
IkReal x1717=((sj3)*(sj7));
IkReal x1718=((r21)*(sj8));
IkReal x1719=((IkReal(1.00000000000000))*(cj5));
IkReal x1720=((cj8)*(r10));
IkReal x1721=((sj5)*(x1712));
IkReal x1722=((sj5)*(x1711));
IkReal x1723=((r11)*(sj3)*(sj8));
IkReal x1724=((cj3)*(cj8)*(r00));
IkReal x1725=((cj3)*(r01)*(sj8));
IkReal x1726=((x1711)*(x1719));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1713)*(x1714)))+(x1721)+(((cj7)*(x1718)))+(((IkReal(-1.00000000000000))*(r22)*(x1716)))+(((IkReal(-1.00000000000000))*(x1726))));
evalcond[1]=((((sj7)*(x1718)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x1722)))+(((IkReal(-1.00000000000000))*(x1714)*(x1716)))+(((IkReal(-1.00000000000000))*(x1712)*(x1719))));
evalcond[2]=((((cj7)*(sj3)*(x1720)))+(((cj5)*(x1712)))+(((IkReal(-1.00000000000000))*(x1713)*(x1725)))+(x1722)+(((cj7)*(x1724)))+(((sj7)*(x1715)))+(((IkReal(-1.00000000000000))*(x1713)*(x1723)))+(((r12)*(x1717))));
evalcond[3]=((((sj7)*(x1724)))+(x1721)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1713)))+(((IkReal(-1.00000000000000))*(x1716)*(x1723)))+(((IkReal(-1.00000000000000))*(x1713)*(x1715)))+(((x1717)*(x1720)))+(((IkReal(-1.00000000000000))*(x1726)))+(((IkReal(-1.00000000000000))*(x1716)*(x1725))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1727=((IkReal(1.00000000000000))*(sj5));
IkReal x1728=((cj7)*(sj5));
IkReal x1729=((cj8)*(r20));
IkReal x1730=((cj5)*(cj7));
IkReal x1731=((sj5)*(sj7));
IkReal x1732=((r21)*(sj8));
IkReal x1733=((cj7)*(x1732));
IkReal x1734=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(x1727)*(x1733)))+(((IkReal(-1.00000000000000))*(x1729)*(x1734)))+(((cj5)*(sj7)*(x1732)))+(((r22)*(x1731)))+(((r22)*(x1730)))+(((x1728)*(x1729))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(sj7)*(x1727)*(x1729)))+(((x1731)*(x1732)))+(((x1730)*(x1732)))+(((IkReal(-1.00000000000000))*(x1729)*(x1730)))+(((r22)*(x1728)))+(((IkReal(-1.00000000000000))*(r22)*(x1734))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst14)*(((((IkReal(-1.00000000000000))*(x1727)*(x1733)))+(((IkReal(-1.00000000000000))*(x1729)*(x1734)))+(((cj5)*(sj7)*(x1732)))+(((r22)*(x1731)))+(((r22)*(x1730)))+(((x1728)*(x1729)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(sj7)*(x1727)*(x1729)))+(((x1731)*(x1732)))+(((x1730)*(x1732)))+(((IkReal(-1.00000000000000))*(x1729)*(x1730)))+(((r22)*(x1728)))+(((IkReal(-1.00000000000000))*(r22)*(x1734)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1735=IKcos(j4);
IkReal x1736=IKsin(j4);
IkReal x1737=((IkReal(1.00000000000000))*(cj7));
IkReal x1738=((cj8)*(r20));
IkReal x1739=((cj3)*(r02));
IkReal x1740=((IkReal(1.00000000000000))*(sj7));
IkReal x1741=((sj3)*(sj7));
IkReal x1742=((r21)*(sj8));
IkReal x1743=((IkReal(1.00000000000000))*(cj5));
IkReal x1744=((cj8)*(r10));
IkReal x1745=((sj5)*(x1736));
IkReal x1746=((sj5)*(x1735));
IkReal x1747=((r11)*(sj3)*(sj8));
IkReal x1748=((cj3)*(cj8)*(r00));
IkReal x1749=((cj3)*(r01)*(sj8));
IkReal x1750=((x1735)*(x1743));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1740)))+(((IkReal(-1.00000000000000))*(x1750)))+(x1745)+(((IkReal(-1.00000000000000))*(x1737)*(x1738)))+(((cj7)*(x1742))));
evalcond[1]=((((sj7)*(x1742)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x1738)*(x1740)))+(((IkReal(-1.00000000000000))*(x1746)))+(((IkReal(-1.00000000000000))*(x1736)*(x1743))));
evalcond[2]=((((cj5)*(x1736)))+(((IkReal(-1.00000000000000))*(x1737)*(x1749)))+(((cj7)*(x1748)))+(((sj7)*(x1739)))+(((cj7)*(sj3)*(x1744)))+(x1746)+(((r12)*(x1741)))+(((IkReal(-1.00000000000000))*(x1737)*(x1747))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1740)*(x1747)))+(((sj7)*(x1748)))+(((x1741)*(x1744)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x1737)))+(((IkReal(-1.00000000000000))*(x1750)))+(x1745)+(((IkReal(-1.00000000000000))*(x1740)*(x1749)))+(((IkReal(-1.00000000000000))*(x1737)*(x1739))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1751=((r21)*(sj8));
IkReal x1752=((IkReal(1.00000000000000))*(r22));
IkReal x1753=((cj5)*(sj7));
IkReal x1754=((cj6)*(cj7));
IkReal x1755=((sj5)*(sj7));
IkReal x1756=((cj5)*(cj8)*(r20));
IkReal x1757=((IkReal(1.00000000000000))*(x1754));
IkReal x1758=((cj8)*(r20)*(sj5));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x1751)*(x1753)))+(((cj6)*(r22)*(x1755)))+(((IkReal(-1.00000000000000))*(sj5)*(x1751)*(x1757)))+(((cj8)*(r20)*(x1753)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x1752)))+(((x1754)*(x1758))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x1751)*(x1755)))+(((cj8)*(r20)*(x1755)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x1752)))+(((IkReal(-1.00000000000000))*(cj6)*(x1752)*(x1753)))+(((cj5)*(x1751)*(x1754)))+(((IkReal(-1.00000000000000))*(x1756)*(x1757))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(x1751)*(x1753)))+(((cj6)*(r22)*(x1755)))+(((IkReal(-1.00000000000000))*(sj5)*(x1751)*(x1757)))+(((cj8)*(r20)*(x1753)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x1752)))+(((x1754)*(x1758)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(x1751)*(x1755)))+(((cj8)*(r20)*(x1755)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x1752)))+(((IkReal(-1.00000000000000))*(cj6)*(x1752)*(x1753)))+(((cj5)*(x1751)*(x1754)))+(((IkReal(-1.00000000000000))*(x1756)*(x1757)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1759=IKsin(j4);
IkReal x1760=IKcos(j4);
IkReal x1761=((IkReal(1.00000000000000))*(cj8));
IkReal x1762=((cj3)*(r01));
IkReal x1763=((IkReal(1.00000000000000))*(sj8));
IkReal x1764=((r11)*(sj3));
IkReal x1765=((cj3)*(r00));
IkReal x1766=((IkReal(1.00000000000000))*(sj6));
IkReal x1767=((IkReal(1.00000000000000))*(cj7));
IkReal x1768=((cj3)*(r02));
IkReal x1769=((cj8)*(sj7));
IkReal x1770=((r12)*(sj3));
IkReal x1771=((cj7)*(cj8));
IkReal x1772=((r21)*(sj8));
IkReal x1773=((r10)*(sj3));
IkReal x1774=((sj5)*(x1760));
IkReal x1775=((cj5)*(x1760));
IkReal x1776=((sj5)*(x1759));
IkReal x1777=((cj5)*(x1759));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x1766)*(x1777)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x1766)*(x1774))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1775)))+(((cj7)*(x1772)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1761)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x1776));
evalcond[2]=((((cj7)*(r22)))+(((cj6)*(x1777)))+(((sj7)*(x1772)))+(((cj6)*(x1774)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1761))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1763)*(x1773)))+(((IkReal(-1.00000000000000))*(x1761)*(x1764)))+(((IkReal(-1.00000000000000))*(x1761)*(x1762)))+(((IkReal(-1.00000000000000))*(x1763)*(x1765)))+(((sj6)*(x1776)))+(((IkReal(-1.00000000000000))*(x1766)*(x1775))));
evalcond[4]=((((x1771)*(x1773)))+(((IkReal(-1.00000000000000))*(cj7)*(x1762)*(x1763)))+(((IkReal(-1.00000000000000))*(cj7)*(x1763)*(x1764)))+(((sj7)*(x1770)))+(((sj7)*(x1768)))+(((x1765)*(x1771)))+(x1774)+(x1777));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x1763)*(x1764)))+(((x1769)*(x1773)))+(((cj6)*(x1775)))+(((x1765)*(x1769)))+(((IkReal(-1.00000000000000))*(sj7)*(x1762)*(x1763)))+(((IkReal(-1.00000000000000))*(cj6)*(x1776)))+(((IkReal(-1.00000000000000))*(x1767)*(x1770)))+(((IkReal(-1.00000000000000))*(x1767)*(x1768))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1778=((sj5)*(sj6));
IkReal x1779=((r22)*(sj7));
IkReal x1780=((r20)*(sj8));
IkReal x1781=((cj8)*(r21));
IkReal x1782=((cj5)*(sj6));
IkReal x1783=((cj7)*(cj8)*(r20));
IkReal x1784=((cj7)*(r21)*(sj8));
if( IKabs(((gconst6)*(((((x1778)*(x1779)))+(((x1778)*(x1783)))+(((IkReal(-1.00000000000000))*(x1778)*(x1784)))+(((cj5)*(x1780)))+(((cj5)*(x1781))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x1782)*(x1783)))+(((IkReal(-1.00000000000000))*(x1779)*(x1782)))+(((sj5)*(x1780)))+(((sj5)*(x1781)))+(((x1782)*(x1784))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst6)*(((((x1778)*(x1779)))+(((x1778)*(x1783)))+(((IkReal(-1.00000000000000))*(x1778)*(x1784)))+(((cj5)*(x1780)))+(((cj5)*(x1781)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(x1782)*(x1783)))+(((IkReal(-1.00000000000000))*(x1779)*(x1782)))+(((sj5)*(x1780)))+(((sj5)*(x1781)))+(((x1782)*(x1784)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1785=IKsin(j4);
IkReal x1786=IKcos(j4);
IkReal x1787=((IkReal(1.00000000000000))*(cj8));
IkReal x1788=((cj3)*(r01));
IkReal x1789=((IkReal(1.00000000000000))*(sj8));
IkReal x1790=((r11)*(sj3));
IkReal x1791=((cj3)*(r00));
IkReal x1792=((IkReal(1.00000000000000))*(sj6));
IkReal x1793=((IkReal(1.00000000000000))*(cj7));
IkReal x1794=((cj3)*(r02));
IkReal x1795=((cj8)*(sj7));
IkReal x1796=((r12)*(sj3));
IkReal x1797=((cj7)*(cj8));
IkReal x1798=((r21)*(sj8));
IkReal x1799=((r10)*(sj3));
IkReal x1800=((sj5)*(x1786));
IkReal x1801=((cj5)*(x1786));
IkReal x1802=((sj5)*(x1785));
IkReal x1803=((cj5)*(x1785));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x1792)*(x1800)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x1792)*(x1803))));
evalcond[1]=((x1802)+(((cj7)*(x1798)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1787)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1801))));
evalcond[2]=((((cj7)*(r22)))+(((cj6)*(x1800)))+(((sj7)*(x1798)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1787)))+(((cj6)*(x1803))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1787)*(x1788)))+(((IkReal(-1.00000000000000))*(x1789)*(x1791)))+(((IkReal(-1.00000000000000))*(x1787)*(x1790)))+(((IkReal(-1.00000000000000))*(x1789)*(x1799)))+(((sj6)*(x1802)))+(((IkReal(-1.00000000000000))*(x1792)*(x1801))));
evalcond[4]=((x1803)+(x1800)+(((sj7)*(x1796)))+(((sj7)*(x1794)))+(((x1797)*(x1799)))+(((IkReal(-1.00000000000000))*(cj7)*(x1788)*(x1789)))+(((x1791)*(x1797)))+(((IkReal(-1.00000000000000))*(cj7)*(x1789)*(x1790))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x1788)*(x1789)))+(((IkReal(-1.00000000000000))*(sj7)*(x1789)*(x1790)))+(((cj6)*(x1801)))+(((x1795)*(x1799)))+(((IkReal(-1.00000000000000))*(cj6)*(x1802)))+(((IkReal(-1.00000000000000))*(x1793)*(x1796)))+(((x1791)*(x1795)))+(((IkReal(-1.00000000000000))*(x1793)*(x1794))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1804=((r21)*(sj8));
IkReal x1805=((IkReal(1.00000000000000))*(r22));
IkReal x1806=((cj5)*(sj7));
IkReal x1807=((cj6)*(cj7));
IkReal x1808=((sj5)*(sj7));
IkReal x1809=((cj5)*(cj8)*(r20));
IkReal x1810=((IkReal(1.00000000000000))*(x1807));
IkReal x1811=((cj8)*(r20)*(sj5));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(sj5)*(x1804)*(x1810)))+(((cj6)*(r22)*(x1808)))+(((cj8)*(r20)*(x1806)))+(((IkReal(-1.00000000000000))*(x1804)*(x1806)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x1805)))+(((x1807)*(x1811))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(x1804)*(x1808)))+(((IkReal(-1.00000000000000))*(cj6)*(x1805)*(x1806)))+(((cj8)*(r20)*(x1808)))+(((IkReal(-1.00000000000000))*(x1809)*(x1810)))+(((cj5)*(x1804)*(x1807)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x1805))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(sj5)*(x1804)*(x1810)))+(((cj6)*(r22)*(x1808)))+(((cj8)*(r20)*(x1806)))+(((IkReal(-1.00000000000000))*(x1804)*(x1806)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x1805)))+(((x1807)*(x1811)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(x1804)*(x1808)))+(((IkReal(-1.00000000000000))*(cj6)*(x1805)*(x1806)))+(((cj8)*(r20)*(x1808)))+(((IkReal(-1.00000000000000))*(x1809)*(x1810)))+(((cj5)*(x1804)*(x1807)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x1805)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1812=IKsin(j4);
IkReal x1813=IKcos(j4);
IkReal x1814=((r21)*(sj8));
IkReal x1815=((IkReal(1.00000000000000))*(sj6));
IkReal x1816=((IkReal(1.00000000000000))*(cj8)*(r20));
IkReal x1817=((sj5)*(x1813));
IkReal x1818=((cj5)*(x1812));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x1815)*(x1817)))+(((IkReal(-1.00000000000000))*(x1815)*(x1818))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj5)*(x1813)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((sj5)*(x1812)))+(((IkReal(-1.00000000000000))*(cj7)*(x1816)))+(((cj7)*(x1814))));
evalcond[2]=((((cj7)*(r22)))+(((cj6)*(x1817)))+(((IkReal(-1.00000000000000))*(sj7)*(x1816)))+(((cj6)*(x1818)))+(((sj7)*(x1814))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x1819=(cj8)*(cj8);
IkReal x1820=(sj8)*(sj8);
IkReal x1821=((r00)*(r11));
IkReal x1822=((r02)*(sj7));
IkReal x1823=((cj7)*(x1819));
IkReal x1824=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1825=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1826=((cj7)*(x1820));
gconst16=IKsign(((((r10)*(sj8)*(x1822)))+(((x1821)*(x1823)))+(((cj8)*(r11)*(x1822)))+(((IkReal(-1.00000000000000))*(x1825)*(x1826)))+(((x1821)*(x1826)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1824)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1824)))+(((IkReal(-1.00000000000000))*(x1823)*(x1825)))));
IkReal x1827=(cj8)*(cj8);
IkReal x1828=(sj8)*(sj8);
IkReal x1829=((r00)*(r11));
IkReal x1830=((r02)*(sj7));
IkReal x1831=((cj7)*(x1827));
IkReal x1832=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1833=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1834=((cj7)*(x1828));
dummyeval[0]=((((x1829)*(x1831)))+(((cj8)*(r11)*(x1830)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1832)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1832)))+(((r10)*(sj8)*(x1830)))+(((IkReal(-1.00000000000000))*(x1833)*(x1834)))+(((x1829)*(x1834)))+(((IkReal(-1.00000000000000))*(x1831)*(x1833))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
IkReal x1835=(sj8)*(sj8);
IkReal x1836=(cj8)*(cj8);
IkReal x1837=((IkReal(1.00000000000000))*(r10));
IkReal x1838=((cj7)*(sj8));
IkReal x1839=((r00)*(r11));
IkReal x1840=((cj7)*(cj8));
IkReal x1841=((sj7)*(x1835));
IkReal x1842=((sj7)*(x1836));
gconst17=IKsign(((((IkReal(-1.00000000000000))*(r01)*(x1837)*(x1842)))+(((IkReal(-1.00000000000000))*(r01)*(x1837)*(x1841)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1840)))+(((IkReal(-1.00000000000000))*(r02)*(x1837)*(x1838)))+(((x1839)*(x1841)))+(((r00)*(r12)*(x1838)))+(((r01)*(r12)*(x1840)))+(((x1839)*(x1842)))));
IkReal x1843=(sj8)*(sj8);
IkReal x1844=(cj8)*(cj8);
IkReal x1845=((IkReal(1.00000000000000))*(r10));
IkReal x1846=((cj7)*(sj8));
IkReal x1847=((r00)*(r11));
IkReal x1848=((cj7)*(cj8));
IkReal x1849=((sj7)*(x1843));
IkReal x1850=((sj7)*(x1844));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(r11)*(x1848)))+(((x1847)*(x1849)))+(((IkReal(-1.00000000000000))*(r01)*(x1845)*(x1849)))+(((IkReal(-1.00000000000000))*(r01)*(x1845)*(x1850)))+(((r00)*(r12)*(x1846)))+(((r01)*(r12)*(x1848)))+(((IkReal(-1.00000000000000))*(r02)*(x1845)*(x1846)))+(((x1847)*(x1850))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1851=((cj6)*(sj7));
IkReal x1852=((IkReal(1.00000000000000))*(sj8));
IkReal x1853=((cj8)*(sj6));
IkReal x1854=((sj6)*(sj8));
IkReal x1855=((IkReal(1.00000000000000))*(cj6)*(cj7));
if( IKabs(((gconst17)*(((((cj8)*(r10)*(x1851)))+(((r10)*(x1854)))+(((IkReal(-1.00000000000000))*(r12)*(x1855)))+(((r11)*(x1853)))+(((IkReal(-1.00000000000000))*(r11)*(x1851)*(x1852))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((cj8)*(r00)*(x1851)))+(((r01)*(x1853)))+(((IkReal(-1.00000000000000))*(r02)*(x1855)))+(((r00)*(x1854)))+(((IkReal(-1.00000000000000))*(r01)*(x1851)*(x1852))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst17)*(((((cj8)*(r10)*(x1851)))+(((r10)*(x1854)))+(((IkReal(-1.00000000000000))*(r12)*(x1855)))+(((r11)*(x1853)))+(((IkReal(-1.00000000000000))*(r11)*(x1851)*(x1852)))))), ((gconst17)*(((((cj8)*(r00)*(x1851)))+(((r01)*(x1853)))+(((IkReal(-1.00000000000000))*(r02)*(x1855)))+(((r00)*(x1854)))+(((IkReal(-1.00000000000000))*(r01)*(x1851)*(x1852)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1856=IKsin(j3);
IkReal x1857=IKcos(j3);
IkReal x1858=((cj4)*(cj5));
IkReal x1859=((r01)*(sj8));
IkReal x1860=((cj8)*(r00));
IkReal x1861=((r00)*(sj8));
IkReal x1862=((cj8)*(r11));
IkReal x1863=((r11)*(sj8));
IkReal x1864=((sj4)*(sj5));
IkReal x1865=((r10)*(sj8));
IkReal x1866=((cj8)*(r10));
IkReal x1867=((cj7)*(x1856));
IkReal x1868=((sj7)*(x1857));
IkReal x1869=((IkReal(1.00000000000000))*(x1856));
IkReal x1870=((IkReal(1.00000000000000))*(x1857));
IkReal x1871=((cj8)*(x1856));
IkReal x1872=((IkReal(1.00000000000000))*(x1863));
IkReal x1873=((sj7)*(x1856));
IkReal x1874=((cj7)*(x1857));
evalcond[0]=((((r01)*(x1871)))+(((IkReal(-1.00000000000000))*(x1865)*(x1870)))+(cj6)+(((IkReal(-1.00000000000000))*(x1862)*(x1870)))+(((x1856)*(x1861))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1870)))+(((sj6)*(x1864)))+(((IkReal(-1.00000000000000))*(x1861)*(x1870)))+(((IkReal(-1.00000000000000))*(x1862)*(x1869)))+(((IkReal(-1.00000000000000))*(sj6)*(x1858)))+(((IkReal(-1.00000000000000))*(x1865)*(x1869))));
evalcond[2]=((((x1866)*(x1874)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1869)))+(((r12)*(x1868)))+(((IkReal(-1.00000000000000))*(x1860)*(x1867)))+(((IkReal(-1.00000000000000))*(cj7)*(x1863)*(x1870)))+(((x1859)*(x1867))));
evalcond[3]=((((r02)*(x1867)))+(sj6)+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1870)))+(((x1859)*(x1873)))+(((IkReal(-1.00000000000000))*(x1868)*(x1872)))+(((x1866)*(x1868)))+(((IkReal(-1.00000000000000))*(sj7)*(x1860)*(x1869))));
evalcond[4]=((((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(x1867)*(x1872)))+(((r12)*(x1873)))+(((IkReal(-1.00000000000000))*(cj7)*(x1859)*(x1870)))+(((x1860)*(x1874)))+(((cj4)*(sj5)))+(((r02)*(x1868)))+(((x1866)*(x1867))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj6)*(x1864)))+(((IkReal(-1.00000000000000))*(sj7)*(x1863)*(x1869)))+(((IkReal(-1.00000000000000))*(x1859)*(x1868)))+(((cj6)*(x1858)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1870)))+(((x1860)*(x1868)))+(((x1866)*(x1873)))+(((IkReal(-1.00000000000000))*(r12)*(x1867))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1875=((cj6)*(cj7));
IkReal x1876=((IkReal(1.00000000000000))*(sj8));
IkReal x1877=((cj6)*(sj7));
if( IKabs(((gconst16)*(((((r12)*(x1877)))+(((cj8)*(r10)*(x1875)))+(((IkReal(-1.00000000000000))*(r11)*(x1875)*(x1876))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(r01)*(x1875)*(x1876)))+(((cj8)*(r00)*(x1875)))+(((r02)*(x1877))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst16)*(((((r12)*(x1877)))+(((cj8)*(r10)*(x1875)))+(((IkReal(-1.00000000000000))*(r11)*(x1875)*(x1876)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(r01)*(x1875)*(x1876)))+(((cj8)*(r00)*(x1875)))+(((r02)*(x1877)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1878=IKsin(j3);
IkReal x1879=IKcos(j3);
IkReal x1880=((cj4)*(cj5));
IkReal x1881=((r01)*(sj8));
IkReal x1882=((cj8)*(r00));
IkReal x1883=((r00)*(sj8));
IkReal x1884=((cj8)*(r11));
IkReal x1885=((r11)*(sj8));
IkReal x1886=((sj4)*(sj5));
IkReal x1887=((r10)*(sj8));
IkReal x1888=((cj8)*(r10));
IkReal x1889=((cj7)*(x1878));
IkReal x1890=((sj7)*(x1879));
IkReal x1891=((IkReal(1.00000000000000))*(x1878));
IkReal x1892=((IkReal(1.00000000000000))*(x1879));
IkReal x1893=((cj8)*(x1878));
IkReal x1894=((IkReal(1.00000000000000))*(x1885));
IkReal x1895=((sj7)*(x1878));
IkReal x1896=((cj7)*(x1879));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1887)*(x1892)))+(((r01)*(x1893)))+(cj6)+(((x1878)*(x1883)))+(((IkReal(-1.00000000000000))*(x1884)*(x1892))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj6)*(x1880)))+(((sj6)*(x1886)))+(((IkReal(-1.00000000000000))*(x1883)*(x1892)))+(((IkReal(-1.00000000000000))*(x1887)*(x1891)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1892)))+(((IkReal(-1.00000000000000))*(x1884)*(x1891))));
evalcond[2]=((((r12)*(x1890)))+(((IkReal(-1.00000000000000))*(x1882)*(x1889)))+(((x1888)*(x1896)))+(((IkReal(-1.00000000000000))*(cj7)*(x1885)*(x1892)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1891)))+(((x1881)*(x1889))));
evalcond[3]=((((x1888)*(x1890)))+(((IkReal(-1.00000000000000))*(sj7)*(x1882)*(x1891)))+(sj6)+(((r02)*(x1889)))+(((IkReal(-1.00000000000000))*(x1890)*(x1894)))+(((x1881)*(x1895)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1892))));
evalcond[4]=((((x1888)*(x1889)))+(((cj5)*(sj4)))+(((x1882)*(x1896)))+(((r02)*(x1890)))+(((r12)*(x1895)))+(((IkReal(-1.00000000000000))*(x1889)*(x1894)))+(((cj4)*(sj5)))+(((IkReal(-1.00000000000000))*(cj7)*(x1881)*(x1892))));
evalcond[5]=((((x1882)*(x1890)))+(((IkReal(-1.00000000000000))*(r12)*(x1889)))+(((x1888)*(x1895)))+(((IkReal(-1.00000000000000))*(x1881)*(x1890)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1892)))+(((IkReal(-1.00000000000000))*(cj6)*(x1886)))+(((IkReal(-1.00000000000000))*(sj7)*(x1885)*(x1891)))+(((cj6)*(x1880))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1897=((sj5)*(sj6));
IkReal x1898=((r22)*(sj7));
IkReal x1899=((r20)*(sj8));
IkReal x1900=((cj8)*(r21));
IkReal x1901=((cj5)*(sj6));
IkReal x1902=((cj7)*(cj8)*(r20));
IkReal x1903=((cj7)*(r21)*(sj8));
if( IKabs(((gconst4)*(((((x1897)*(x1902)))+(((cj5)*(x1900)))+(((IkReal(-1.00000000000000))*(x1897)*(x1903)))+(((cj5)*(x1899)))+(((x1897)*(x1898))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((sj5)*(x1899)))+(((sj5)*(x1900)))+(((x1901)*(x1903)))+(((IkReal(-1.00000000000000))*(x1898)*(x1901)))+(((IkReal(-1.00000000000000))*(x1901)*(x1902))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((x1897)*(x1902)))+(((cj5)*(x1900)))+(((IkReal(-1.00000000000000))*(x1897)*(x1903)))+(((cj5)*(x1899)))+(((x1897)*(x1898)))))), ((gconst4)*(((((sj5)*(x1899)))+(((sj5)*(x1900)))+(((x1901)*(x1903)))+(((IkReal(-1.00000000000000))*(x1898)*(x1901)))+(((IkReal(-1.00000000000000))*(x1901)*(x1902)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1904=IKsin(j4);
IkReal x1905=IKcos(j4);
IkReal x1906=((r21)*(sj8));
IkReal x1907=((IkReal(1.00000000000000))*(sj6));
IkReal x1908=((IkReal(1.00000000000000))*(cj8)*(r20));
IkReal x1909=((sj5)*(x1905));
IkReal x1910=((cj5)*(x1904));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x1907)*(x1910)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x1907)*(x1909))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj5)*(x1905)))+(((sj5)*(x1904)))+(((cj7)*(x1906)))+(((IkReal(-1.00000000000000))*(cj7)*(x1908))));
evalcond[2]=((((cj6)*(x1910)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(sj7)*(x1908)))+(((sj7)*(x1906)))+(((cj6)*(x1909))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x1911=(cj8)*(cj8);
IkReal x1912=(sj8)*(sj8);
IkReal x1913=((r00)*(r11));
IkReal x1914=((r02)*(sj7));
IkReal x1915=((cj7)*(x1911));
IkReal x1916=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1917=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1918=((cj7)*(x1912));
gconst16=IKsign(((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1916)))+(((cj8)*(r11)*(x1914)))+(((x1913)*(x1915)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1916)))+(((r10)*(sj8)*(x1914)))+(((IkReal(-1.00000000000000))*(x1917)*(x1918)))+(((x1913)*(x1918)))+(((IkReal(-1.00000000000000))*(x1915)*(x1917)))));
IkReal x1919=(cj8)*(cj8);
IkReal x1920=(sj8)*(sj8);
IkReal x1921=((r00)*(r11));
IkReal x1922=((r02)*(sj7));
IkReal x1923=((cj7)*(x1919));
IkReal x1924=((IkReal(1.00000000000000))*(r12)*(sj7));
IkReal x1925=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1926=((cj7)*(x1920));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1924)))+(((cj8)*(r11)*(x1922)))+(((r10)*(sj8)*(x1922)))+(((IkReal(-1.00000000000000))*(x1925)*(x1926)))+(((IkReal(-1.00000000000000))*(r00)*(sj8)*(x1924)))+(((x1921)*(x1923)))+(((IkReal(-1.00000000000000))*(x1923)*(x1925)))+(((x1921)*(x1926))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
IkReal x1927=(sj8)*(sj8);
IkReal x1928=(cj8)*(cj8);
IkReal x1929=((IkReal(1.00000000000000))*(r10));
IkReal x1930=((cj7)*(sj8));
IkReal x1931=((r00)*(r11));
IkReal x1932=((cj7)*(cj8));
IkReal x1933=((sj7)*(x1927));
IkReal x1934=((sj7)*(x1928));
gconst17=IKsign(((((r00)*(r12)*(x1930)))+(((IkReal(-1.00000000000000))*(r01)*(x1929)*(x1933)))+(((r01)*(r12)*(x1932)))+(((x1931)*(x1934)))+(((IkReal(-1.00000000000000))*(r01)*(x1929)*(x1934)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1932)))+(((x1931)*(x1933)))+(((IkReal(-1.00000000000000))*(r02)*(x1929)*(x1930)))));
IkReal x1935=(sj8)*(sj8);
IkReal x1936=(cj8)*(cj8);
IkReal x1937=((IkReal(1.00000000000000))*(r10));
IkReal x1938=((cj7)*(sj8));
IkReal x1939=((r00)*(r11));
IkReal x1940=((cj7)*(cj8));
IkReal x1941=((sj7)*(x1935));
IkReal x1942=((sj7)*(x1936));
dummyeval[0]=((((r00)*(r12)*(x1938)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1940)))+(((IkReal(-1.00000000000000))*(r01)*(x1937)*(x1941)))+(((IkReal(-1.00000000000000))*(r02)*(x1937)*(x1938)))+(((IkReal(-1.00000000000000))*(r01)*(x1937)*(x1942)))+(((r01)*(r12)*(x1940)))+(((x1939)*(x1942)))+(((x1939)*(x1941))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1943=((cj6)*(sj7));
IkReal x1944=((IkReal(1.00000000000000))*(sj8));
IkReal x1945=((cj8)*(sj6));
IkReal x1946=((sj6)*(sj8));
IkReal x1947=((IkReal(1.00000000000000))*(cj6)*(cj7));
if( IKabs(((gconst17)*(((((cj8)*(r10)*(x1943)))+(((r10)*(x1946)))+(((IkReal(-1.00000000000000))*(r12)*(x1947)))+(((r11)*(x1945)))+(((IkReal(-1.00000000000000))*(r11)*(x1943)*(x1944))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(r02)*(x1947)))+(((r01)*(x1945)))+(((cj8)*(r00)*(x1943)))+(((IkReal(-1.00000000000000))*(r01)*(x1943)*(x1944)))+(((r00)*(x1946))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst17)*(((((cj8)*(r10)*(x1943)))+(((r10)*(x1946)))+(((IkReal(-1.00000000000000))*(r12)*(x1947)))+(((r11)*(x1945)))+(((IkReal(-1.00000000000000))*(r11)*(x1943)*(x1944)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(r02)*(x1947)))+(((r01)*(x1945)))+(((cj8)*(r00)*(x1943)))+(((IkReal(-1.00000000000000))*(r01)*(x1943)*(x1944)))+(((r00)*(x1946)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1948=IKsin(j3);
IkReal x1949=IKcos(j3);
IkReal x1950=((cj4)*(cj5));
IkReal x1951=((r01)*(sj8));
IkReal x1952=((cj8)*(r00));
IkReal x1953=((r00)*(sj8));
IkReal x1954=((cj8)*(r11));
IkReal x1955=((r11)*(sj8));
IkReal x1956=((sj4)*(sj5));
IkReal x1957=((r10)*(sj8));
IkReal x1958=((cj8)*(r10));
IkReal x1959=((cj7)*(x1948));
IkReal x1960=((sj7)*(x1949));
IkReal x1961=((IkReal(1.00000000000000))*(x1948));
IkReal x1962=((IkReal(1.00000000000000))*(x1949));
IkReal x1963=((cj8)*(x1948));
IkReal x1964=((IkReal(1.00000000000000))*(x1955));
IkReal x1965=((sj7)*(x1948));
IkReal x1966=((cj7)*(x1949));
evalcond[0]=((((x1948)*(x1953)))+(cj6)+(((IkReal(-1.00000000000000))*(x1954)*(x1962)))+(((r01)*(x1963)))+(((IkReal(-1.00000000000000))*(x1957)*(x1962))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1962)))+(((IkReal(-1.00000000000000))*(x1953)*(x1962)))+(((IkReal(-1.00000000000000))*(x1954)*(x1961)))+(((IkReal(-1.00000000000000))*(x1957)*(x1961)))+(((IkReal(-1.00000000000000))*(sj6)*(x1950)))+(((sj6)*(x1956))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj7)*(x1955)*(x1962)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1961)))+(((x1958)*(x1966)))+(((IkReal(-1.00000000000000))*(x1952)*(x1959)))+(((x1951)*(x1959)))+(((r12)*(x1960))));
evalcond[3]=((sj6)+(((IkReal(-1.00000000000000))*(sj7)*(x1952)*(x1961)))+(((r02)*(x1959)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1962)))+(((x1951)*(x1965)))+(((x1958)*(x1960)))+(((IkReal(-1.00000000000000))*(x1960)*(x1964))));
evalcond[4]=((((x1952)*(x1966)))+(((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(x1959)*(x1964)))+(((r02)*(x1960)))+(((IkReal(-1.00000000000000))*(cj7)*(x1951)*(x1962)))+(((r12)*(x1965)))+(((x1958)*(x1959)))+(((cj4)*(sj5))));
evalcond[5]=((((cj6)*(x1950)))+(((IkReal(-1.00000000000000))*(sj7)*(x1955)*(x1961)))+(((IkReal(-1.00000000000000))*(cj6)*(x1956)))+(((IkReal(-1.00000000000000))*(r12)*(x1959)))+(((IkReal(-1.00000000000000))*(x1951)*(x1960)))+(((x1958)*(x1965)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1962)))+(((x1952)*(x1960))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1967=((cj6)*(cj7));
IkReal x1968=((IkReal(1.00000000000000))*(sj8));
IkReal x1969=((cj6)*(sj7));
if( IKabs(((gconst16)*(((((r12)*(x1969)))+(((cj8)*(r10)*(x1967)))+(((IkReal(-1.00000000000000))*(r11)*(x1967)*(x1968))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(r01)*(x1967)*(x1968)))+(((cj8)*(r00)*(x1967)))+(((r02)*(x1969))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst16)*(((((r12)*(x1969)))+(((cj8)*(r10)*(x1967)))+(((IkReal(-1.00000000000000))*(r11)*(x1967)*(x1968)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(r01)*(x1967)*(x1968)))+(((cj8)*(r00)*(x1967)))+(((r02)*(x1969)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1970=IKsin(j3);
IkReal x1971=IKcos(j3);
IkReal x1972=((cj4)*(cj5));
IkReal x1973=((r01)*(sj8));
IkReal x1974=((cj8)*(r00));
IkReal x1975=((r00)*(sj8));
IkReal x1976=((cj8)*(r11));
IkReal x1977=((r11)*(sj8));
IkReal x1978=((sj4)*(sj5));
IkReal x1979=((r10)*(sj8));
IkReal x1980=((cj8)*(r10));
IkReal x1981=((cj7)*(x1970));
IkReal x1982=((sj7)*(x1971));
IkReal x1983=((IkReal(1.00000000000000))*(x1970));
IkReal x1984=((IkReal(1.00000000000000))*(x1971));
IkReal x1985=((cj8)*(x1970));
IkReal x1986=((IkReal(1.00000000000000))*(x1977));
IkReal x1987=((sj7)*(x1970));
IkReal x1988=((cj7)*(x1971));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1976)*(x1984)))+(((IkReal(-1.00000000000000))*(x1979)*(x1984)))+(((r01)*(x1985)))+(((x1970)*(x1975)))+(cj6));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1979)*(x1983)))+(((IkReal(-1.00000000000000))*(x1975)*(x1984)))+(((IkReal(-1.00000000000000))*(sj6)*(x1972)))+(((IkReal(-1.00000000000000))*(x1976)*(x1983)))+(((IkReal(-1.00000000000000))*(cj8)*(r01)*(x1984)))+(((sj6)*(x1978))));
evalcond[2]=((((r12)*(x1982)))+(((IkReal(-1.00000000000000))*(cj7)*(x1977)*(x1984)))+(((x1973)*(x1981)))+(((x1980)*(x1988)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1983)))+(((IkReal(-1.00000000000000))*(x1974)*(x1981))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj7)*(x1974)*(x1983)))+(sj6)+(((r02)*(x1981)))+(((x1980)*(x1982)))+(((x1973)*(x1987)))+(((IkReal(-1.00000000000000))*(x1982)*(x1986)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x1984))));
evalcond[4]=((((x1974)*(x1988)))+(((IkReal(-1.00000000000000))*(cj7)*(x1973)*(x1984)))+(((x1980)*(x1981)))+(((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(x1981)*(x1986)))+(((cj4)*(sj5)))+(((r02)*(x1982)))+(((r12)*(x1987))));
evalcond[5]=((((cj6)*(x1972)))+(((IkReal(-1.00000000000000))*(cj6)*(x1978)))+(((IkReal(-1.00000000000000))*(r12)*(x1981)))+(((IkReal(-1.00000000000000))*(x1973)*(x1982)))+(((x1980)*(x1987)))+(((IkReal(-1.00000000000000))*(cj7)*(r02)*(x1984)))+(((x1974)*(x1982)))+(((IkReal(-1.00000000000000))*(sj7)*(x1977)*(x1983))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1989=((cj6)*(sj7));
IkReal x1990=((IkReal(1.00000000000000))*(sj8));
IkReal x1991=((cj8)*(sj6));
IkReal x1992=((sj6)*(sj8));
IkReal x1993=((IkReal(1.00000000000000))*(cj6)*(cj7));
if( IKabs(((gconst1)*(((((r11)*(x1991)))+(((IkReal(-1.00000000000000))*(r12)*(x1993)))+(((IkReal(-1.00000000000000))*(r11)*(x1989)*(x1990)))+(((r10)*(x1992)))+(((cj8)*(r10)*(x1989))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((r01)*(x1991)))+(((IkReal(-1.00000000000000))*(r01)*(x1989)*(x1990)))+(((IkReal(-1.00000000000000))*(r02)*(x1993)))+(((cj8)*(r00)*(x1989)))+(((r00)*(x1992))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst1)*(((((r11)*(x1991)))+(((IkReal(-1.00000000000000))*(r12)*(x1993)))+(((IkReal(-1.00000000000000))*(r11)*(x1989)*(x1990)))+(((r10)*(x1992)))+(((cj8)*(r10)*(x1989)))))), ((gconst1)*(((((r01)*(x1991)))+(((IkReal(-1.00000000000000))*(r01)*(x1989)*(x1990)))+(((IkReal(-1.00000000000000))*(r02)*(x1993)))+(((cj8)*(r00)*(x1989)))+(((r00)*(x1992)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x1994=IKsin(j3);
IkReal x1995=IKcos(j3);
IkReal x1996=((IkReal(1.00000000000000))*(r11));
IkReal x1997=((r01)*(sj8));
IkReal x1998=((cj8)*(r10));
IkReal x1999=((IkReal(1.00000000000000))*(sj7));
IkReal x2000=((sj7)*(x1995));
IkReal x2001=((cj7)*(x1994));
IkReal x2002=((r00)*(x1994));
IkReal x2003=((cj7)*(x1995));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(sj8)*(x1995)))+(((sj8)*(x2002)))+(((cj8)*(r01)*(x1994)))+(cj6)+(((IkReal(-1.00000000000000))*(cj8)*(x1995)*(x1996))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj8)*(x1996)*(x2003)))+(((x1998)*(x2003)))+(((IkReal(-1.00000000000000))*(r02)*(x1994)*(x1999)))+(((r12)*(x2000)))+(((x1997)*(x2001)))+(((IkReal(-1.00000000000000))*(cj8)*(r00)*(x2001))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj8)*(x1996)*(x2000)))+(((sj7)*(x1994)*(x1997)))+(((IkReal(-1.00000000000000))*(r12)*(x2003)))+(sj6)+(((r02)*(x2001)))+(((IkReal(-1.00000000000000))*(cj8)*(x1999)*(x2002)))+(((x1998)*(x2000))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=sj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2004=((IkReal(1.00000000000000))*(cj3));
IkReal x2005=((cj7)*(r02));
IkReal x2006=((cj8)*(sj7));
IkReal x2007=((r01)*(sj3));
IkReal x2008=((IkReal(1.00000000000000))*(sj3));
IkReal x2009=((sj7)*(sj8));
IkReal x2010=((cj7)*(r12));
IkReal x2011=((cj7)*(cj8));
IkReal x2012=((cj3)*(r10));
IkReal x2013=((cj7)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((cj8)*(x2007)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2004)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2004))));
evalcond[2]=((((cj7)*(r22)))+(((r21)*(x2009)))+(((IkReal(-1.00000000000000))*(r20)*(x2006))));
evalcond[3]=((IkReal(0.0950000000000000))+(((cj7)*(npz)))+(((npy)*(x2009)))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(npx)*(x2006))));
evalcond[4]=((((cj3)*(r12)*(sj7)))+(((x2011)*(x2012)))+(((IkReal(-1.00000000000000))*(r00)*(x2008)*(x2011)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2008)))+(((x2007)*(x2013)))+(((IkReal(-1.00000000000000))*(r11)*(x2004)*(x2013))));
evalcond[5]=((IkReal(1.00000000000000))+(((x2006)*(x2012)))+(((sj3)*(x2005)))+(((IkReal(-1.00000000000000))*(r00)*(x2006)*(x2008)))+(((IkReal(-1.00000000000000))*(r11)*(x2004)*(x2009)))+(((x2007)*(x2009)))+(((IkReal(-1.00000000000000))*(x2004)*(x2010))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(x2008)*(x2009)))+(((IkReal(-1.00000000000000))*(x2004)*(x2005)))+(((IkReal(-1.00000000000000))*(r01)*(x2004)*(x2009)))+(((r10)*(sj3)*(x2006)))+(((IkReal(-1.00000000000000))*(x2008)*(x2010)))+(((cj3)*(r00)*(x2006))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2014=((IkReal(4.00000000000000))*(npx));
IkReal x2015=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj8)*(x2015)))+(((IkReal(-1.00000000000000))*(sj8)*(x2014))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2014)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2015)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj8)*(x2015)))+(((IkReal(-1.00000000000000))*(sj8)*(x2014)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2014)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2015)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj8)*(x2015)))+(((IkReal(-1.00000000000000))*(sj8)*(x2014)))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2014)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2015)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0300000000000000))+(((IkReal(0.250000000000000))*(IKsin(j5))))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((cj7)*(npy)*(sj8)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(npx)))+(((IkReal(-1.00000000000000))*(npz)*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst57;
gconst57=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2016=((cj8)*(sj5));
IkReal x2017=((cj3)*(r01));
IkReal x2018=((IkReal(1.00000000000000))*(cj5));
IkReal x2019=((r11)*(sj3));
IkReal x2020=((sj5)*(sj8));
IkReal x2021=((r10)*(sj3));
IkReal x2022=((cj3)*(r00)*(sj8));
if( IKabs(((gconst57)*(((((cj5)*(cj8)*(r21)))+(((cj3)*(r00)*(x2020)))+(((x2020)*(x2021)))+(((x2016)*(x2017)))+(((cj5)*(r20)*(sj8)))+(((x2016)*(x2019))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst57)*(((((IkReal(-1.00000000000000))*(sj8)*(x2018)*(x2021)))+(((r20)*(x2020)))+(((IkReal(-1.00000000000000))*(cj8)*(x2018)*(x2019)))+(((r21)*(x2016)))+(((IkReal(-1.00000000000000))*(cj8)*(x2017)*(x2018)))+(((IkReal(-1.00000000000000))*(x2018)*(x2022))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst57)*(((((cj5)*(cj8)*(r21)))+(((cj3)*(r00)*(x2020)))+(((x2020)*(x2021)))+(((x2016)*(x2017)))+(((cj5)*(r20)*(sj8)))+(((x2016)*(x2019)))))), ((gconst57)*(((((IkReal(-1.00000000000000))*(sj8)*(x2018)*(x2021)))+(((r20)*(x2020)))+(((IkReal(-1.00000000000000))*(cj8)*(x2018)*(x2019)))+(((r21)*(x2016)))+(((IkReal(-1.00000000000000))*(cj8)*(x2017)*(x2018)))+(((IkReal(-1.00000000000000))*(x2018)*(x2022)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2023=IKsin(j4);
IkReal x2024=IKcos(j4);
IkReal x2025=((IkReal(1.00000000000000))*(cj8));
IkReal x2026=((cj3)*(r01));
IkReal x2027=((cj3)*(r00));
IkReal x2028=((cj7)*(cj8));
IkReal x2029=((IkReal(1.00000000000000))*(cj5));
IkReal x2030=((IkReal(1.00000000000000))*(sj8));
IkReal x2031=((r11)*(sj3));
IkReal x2032=((r10)*(sj3));
IkReal x2033=((sj5)*(x2023));
IkReal x2034=((sj5)*(x2024));
IkReal x2035=((x2024)*(x2029));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2034)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2023)*(x2029))));
evalcond[1]=((x2033)+(((IkReal(-1.00000000000000))*(x2035)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2025))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2027)*(x2030)))+(x2033)+(((IkReal(-1.00000000000000))*(x2035)))+(((IkReal(-1.00000000000000))*(x2025)*(x2026)))+(((IkReal(-1.00000000000000))*(x2025)*(x2031)))+(((IkReal(-1.00000000000000))*(x2030)*(x2032))));
evalcond[3]=((((x2028)*(x2032)))+(x2034)+(((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2026)*(x2030)))+(((r12)*(sj3)*(sj7)))+(((x2027)*(x2028)))+(((IkReal(-1.00000000000000))*(cj7)*(x2030)*(x2031)))+(((cj5)*(x2023))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2036=((sj5)*(sj8));
IkReal x2037=((IkReal(1.00000000000000))*(cj7));
IkReal x2038=((cj8)*(sj5));
IkReal x2039=((r22)*(sj7));
IkReal x2040=((cj5)*(cj8));
IkReal x2041=((cj5)*(sj8));
if( IKabs(((gconst56)*(((((r20)*(x2041)))+(((r21)*(x2040)))+(((sj5)*(x2039)))+(((IkReal(-1.00000000000000))*(r21)*(x2036)*(x2037)))+(((cj7)*(r20)*(x2038))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((r21)*(x2038)))+(((cj7)*(r21)*(x2041)))+(((IkReal(-1.00000000000000))*(r20)*(x2037)*(x2040)))+(((r20)*(x2036)))+(((IkReal(-1.00000000000000))*(cj5)*(x2039))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst56)*(((((r20)*(x2041)))+(((r21)*(x2040)))+(((sj5)*(x2039)))+(((IkReal(-1.00000000000000))*(r21)*(x2036)*(x2037)))+(((cj7)*(r20)*(x2038)))))), ((gconst56)*(((((r21)*(x2038)))+(((cj7)*(r21)*(x2041)))+(((IkReal(-1.00000000000000))*(r20)*(x2037)*(x2040)))+(((r20)*(x2036)))+(((IkReal(-1.00000000000000))*(cj5)*(x2039)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2042=IKsin(j4);
IkReal x2043=IKcos(j4);
IkReal x2044=((IkReal(1.00000000000000))*(cj8));
IkReal x2045=((cj3)*(r01));
IkReal x2046=((cj3)*(r00));
IkReal x2047=((cj7)*(cj8));
IkReal x2048=((IkReal(1.00000000000000))*(cj5));
IkReal x2049=((IkReal(1.00000000000000))*(sj8));
IkReal x2050=((r11)*(sj3));
IkReal x2051=((r10)*(sj3));
IkReal x2052=((sj5)*(x2042));
IkReal x2053=((sj5)*(x2043));
IkReal x2054=((x2043)*(x2048));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2042)*(x2048)))+(((IkReal(-1.00000000000000))*(x2053))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2054)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2052)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2044))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2054)))+(((IkReal(-1.00000000000000))*(x2046)*(x2049)))+(x2052)+(((IkReal(-1.00000000000000))*(x2044)*(x2050)))+(((IkReal(-1.00000000000000))*(x2044)*(x2045)))+(((IkReal(-1.00000000000000))*(x2049)*(x2051))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x2046)*(x2047)))+(x2053)+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2045)*(x2049)))+(((IkReal(-1.00000000000000))*(cj7)*(x2049)*(x2050)))+(((x2047)*(x2051)))+(((cj5)*(x2042))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2055=((IkReal(1.00000000000000))*(cj3));
IkReal x2056=((cj7)*(r02));
IkReal x2057=((cj8)*(sj7));
IkReal x2058=((r01)*(sj3));
IkReal x2059=((IkReal(1.00000000000000))*(sj3));
IkReal x2060=((sj7)*(sj8));
IkReal x2061=((cj7)*(r12));
IkReal x2062=((cj7)*(cj8));
IkReal x2063=((cj3)*(r10));
IkReal x2064=((cj7)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2055)))+(((cj8)*(x2058)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2055))));
evalcond[2]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x2057)))+(((r21)*(x2060))));
evalcond[3]=((IkReal(-0.0950000000000000))+(((cj7)*(npz)))+(((npy)*(x2060)))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(npx)*(x2057))));
evalcond[4]=((((cj3)*(r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r00)*(x2059)*(x2062)))+(((x2058)*(x2064)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2059)))+(((IkReal(-1.00000000000000))*(r11)*(x2055)*(x2064)))+(((x2062)*(x2063))));
evalcond[5]=((IkReal(-1.00000000000000))+(((x2058)*(x2060)))+(((sj3)*(x2056)))+(((IkReal(-1.00000000000000))*(r11)*(x2055)*(x2060)))+(((IkReal(-1.00000000000000))*(r00)*(x2057)*(x2059)))+(((x2057)*(x2063)))+(((IkReal(-1.00000000000000))*(x2055)*(x2061))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2059)*(x2061)))+(((cj3)*(r00)*(x2057)))+(((IkReal(-1.00000000000000))*(r11)*(x2059)*(x2060)))+(((IkReal(-1.00000000000000))*(x2055)*(x2056)))+(((IkReal(-1.00000000000000))*(r01)*(x2055)*(x2060)))+(((r10)*(sj3)*(x2057))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2065=((IkReal(4.00000000000000))*(npx));
IkReal x2066=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((cj8)*(x2066)))+(((sj8)*(x2065))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2066)))+(((cj7)*(cj8)*(x2065)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((cj8)*(x2066)))+(((sj8)*(x2065)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2066)))+(((cj7)*(cj8)*(x2065)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((cj8)*(x2066)))+(((sj8)*(x2065)))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2066)))+(((cj7)*(cj8)*(x2065)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(IKsin(j5)))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((cj7)*(npy)*(sj8)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(npx)))+(((IkReal(-1.00000000000000))*(npz)*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst58;
gconst58=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2067=((IkReal(1.00000000000000))*(sj5));
IkReal x2068=((r20)*(sj8));
IkReal x2069=((cj5)*(cj8));
IkReal x2070=((r11)*(sj3));
IkReal x2071=((cj3)*(r01));
IkReal x2072=((cj3)*(r00)*(sj8));
IkReal x2073=((r10)*(sj3)*(sj8));
if( IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(cj8)*(x2067)*(x2071)))+(((IkReal(-1.00000000000000))*(cj8)*(x2067)*(x2070)))+(((IkReal(-1.00000000000000))*(x2067)*(x2072)))+(((IkReal(-1.00000000000000))*(cj5)*(x2068)))+(((IkReal(-1.00000000000000))*(r21)*(x2069)))+(((IkReal(-1.00000000000000))*(x2067)*(x2073))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(((((cj5)*(x2073)))+(((IkReal(-1.00000000000000))*(x2067)*(x2068)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2067)))+(((cj5)*(x2072)))+(((x2069)*(x2071)))+(((x2069)*(x2070))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst59)*(((((IkReal(-1.00000000000000))*(cj8)*(x2067)*(x2071)))+(((IkReal(-1.00000000000000))*(cj8)*(x2067)*(x2070)))+(((IkReal(-1.00000000000000))*(x2067)*(x2072)))+(((IkReal(-1.00000000000000))*(cj5)*(x2068)))+(((IkReal(-1.00000000000000))*(r21)*(x2069)))+(((IkReal(-1.00000000000000))*(x2067)*(x2073)))))), ((gconst59)*(((((cj5)*(x2073)))+(((IkReal(-1.00000000000000))*(x2067)*(x2068)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2067)))+(((cj5)*(x2072)))+(((x2069)*(x2071)))+(((x2069)*(x2070)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2074=IKsin(j4);
IkReal x2075=IKcos(j4);
IkReal x2076=((IkReal(1.00000000000000))*(cj8));
IkReal x2077=((cj3)*(r01));
IkReal x2078=((cj3)*(r00));
IkReal x2079=((cj7)*(cj8));
IkReal x2080=((r11)*(sj3));
IkReal x2081=((IkReal(1.00000000000000))*(sj8));
IkReal x2082=((r10)*(sj3));
IkReal x2083=((cj5)*(x2074));
IkReal x2084=((sj5)*(x2075));
IkReal x2085=((cj5)*(x2075));
IkReal x2086=((sj5)*(x2074));
IkReal x2087=((x2083)+(x2084));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x2087));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2085)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2076)))+(x2086));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2081)*(x2082)))+(((IkReal(-1.00000000000000))*(x2078)*(x2081)))+(((IkReal(-1.00000000000000))*(x2076)*(x2080)))+(x2085)+(((IkReal(-1.00000000000000))*(x2086)))+(((IkReal(-1.00000000000000))*(x2076)*(x2077))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2077)*(x2081)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2080)*(x2081)))+(x2087)+(((x2078)*(x2079)))+(((x2079)*(x2082))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2088=((r20)*(sj5));
IkReal x2089=((r22)*(sj7));
IkReal x2090=((cj8)*(r21));
IkReal x2091=((cj7)*(cj8));
IkReal x2092=((cj5)*(r20));
IkReal x2093=((cj7)*(r21)*(sj8));
if( IKabs(((gconst58)*(((((sj8)*(x2092)))+(((IkReal(-1.00000000000000))*(x2088)*(x2091)))+(((IkReal(-1.00000000000000))*(sj5)*(x2089)))+(((cj5)*(x2090)))+(((sj5)*(x2093))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst58)*(((((cj5)*(x2089)))+(((sj5)*(x2090)))+(((x2091)*(x2092)))+(((IkReal(-1.00000000000000))*(cj5)*(x2093)))+(((sj8)*(x2088))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst58)*(((((sj8)*(x2092)))+(((IkReal(-1.00000000000000))*(x2088)*(x2091)))+(((IkReal(-1.00000000000000))*(sj5)*(x2089)))+(((cj5)*(x2090)))+(((sj5)*(x2093)))))), ((gconst58)*(((((cj5)*(x2089)))+(((sj5)*(x2090)))+(((x2091)*(x2092)))+(((IkReal(-1.00000000000000))*(cj5)*(x2093)))+(((sj8)*(x2088)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2094=IKsin(j4);
IkReal x2095=IKcos(j4);
IkReal x2096=((IkReal(1.00000000000000))*(cj8));
IkReal x2097=((cj3)*(r01));
IkReal x2098=((cj3)*(r00));
IkReal x2099=((cj7)*(cj8));
IkReal x2100=((r11)*(sj3));
IkReal x2101=((IkReal(1.00000000000000))*(sj8));
IkReal x2102=((r10)*(sj3));
IkReal x2103=((cj5)*(x2094));
IkReal x2104=((sj5)*(x2095));
IkReal x2105=((cj5)*(x2095));
IkReal x2106=((sj5)*(x2094));
IkReal x2107=((x2103)+(x2104));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x2107));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2105)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2106)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2096))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2106)))+(((IkReal(-1.00000000000000))*(x2096)*(x2097)))+(((IkReal(-1.00000000000000))*(x2098)*(x2101)))+(((IkReal(-1.00000000000000))*(x2096)*(x2100)))+(((IkReal(-1.00000000000000))*(x2101)*(x2102)))+(x2105));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x2098)*(x2099)))+(((x2099)*(x2102)))+(((IkReal(-1.00000000000000))*(cj7)*(x2097)*(x2101)))+(((r12)*(sj3)*(sj7)))+(x2107)+(((IkReal(-1.00000000000000))*(cj7)*(x2100)*(x2101))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2108=((cj3)*(cj8));
IkReal x2109=((r01)*(sj3));
IkReal x2110=((r02)*(sj3));
IkReal x2111=((IkReal(1.00000000000000))*(sj7));
IkReal x2112=((IkReal(1.00000000000000))*(r11));
IkReal x2113=((cj3)*(r12));
IkReal x2114=((IkReal(1.00000000000000))*(cj7));
IkReal x2115=((cj8)*(sj3));
IkReal x2116=((sj3)*(sj8));
IkReal x2117=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(1.00000000000000))+(((cj8)*(x2109)))+(((IkReal(-1.00000000000000))*(x2108)*(x2112)))+(((IkReal(-1.00000000000000))*(r10)*(x2117)))+(((r00)*(x2116))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2112)*(x2115)))+(((IkReal(-1.00000000000000))*(r01)*(x2108)))+(((IkReal(-1.00000000000000))*(r10)*(x2116)))+(((IkReal(-1.00000000000000))*(r00)*(x2117))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2110)*(x2111)))+(((IkReal(-1.00000000000000))*(r00)*(x2114)*(x2115)))+(((cj7)*(r10)*(x2108)))+(((cj7)*(sj8)*(x2109)))+(((sj7)*(x2113)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2112))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2113)*(x2114)))+(((cj7)*(x2110)))+(((r10)*(sj7)*(x2108)))+(((sj7)*(sj8)*(x2109)))+(((IkReal(-1.00000000000000))*(r00)*(x2111)*(x2115)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2111))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2118=((IkReal(4.00000000000000))*(sj7));
IkReal x2119=((npy)*(sj8));
IkReal x2120=((IkReal(4.00000000000000))*(cj7));
IkReal x2121=((cj8)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((npz)*(x2120)))+(((x2118)*(x2119)))+(((IkReal(-1.00000000000000))*(x2118)*(x2121)))+(((IkReal(0.360000000000000))*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x2119)*(x2120)))+(((npz)*(x2118)))+(((x2120)*(x2121)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((npz)*(x2120)))+(((x2118)*(x2119)))+(((IkReal(-1.00000000000000))*(x2118)*(x2121)))+(((IkReal(0.360000000000000))*(sj7)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x2119)*(x2120)))+(((npz)*(x2118)))+(((x2120)*(x2121)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((npz)*(x2120)))+(((x2118)*(x2119)))+(((IkReal(-1.00000000000000))*(x2118)*(x2121)))+(((IkReal(0.360000000000000))*(sj7)))), ((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x2119)*(x2120)))+(((npz)*(x2118)))+(((x2120)*(x2121)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2122=((IkReal(1.00000000000000))*(sj7));
IkReal x2123=((npy)*(sj8));
IkReal x2124=((cj8)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(npz)*(x2122)))+(((cj7)*(x2123)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2124))));
evalcond[1]=((IkReal(0.0300000000000000))+(((sj7)*(x2123)))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x2122)*(x2124)))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-0.250000000000000))*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst60;
gconst60=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2125=((r22)*(sj7));
IkReal x2126=((cj8)*(r10));
IkReal x2127=((cj3)*(r00));
IkReal x2128=((IkReal(1.00000000000000))*(sj5));
IkReal x2129=((cj7)*(sj5));
IkReal x2130=((r21)*(sj8));
IkReal x2131=((cj3)*(r02)*(sj7));
IkReal x2132=((cj5)*(cj7)*(sj3));
IkReal x2133=((IkReal(1.00000000000000))*(r11)*(sj8));
IkReal x2134=((cj5)*(cj7)*(cj8));
IkReal x2135=((r12)*(sj3)*(sj7));
IkReal x2136=((IkReal(1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8));
if( IKabs(((gconst61)*(((((x2127)*(x2134)))+(((IkReal(-1.00000000000000))*(cj5)*(x2136)))+(((x2126)*(x2132)))+(((IkReal(-1.00000000000000))*(x2125)*(x2128)))+(((cj5)*(x2135)))+(((IkReal(-1.00000000000000))*(x2132)*(x2133)))+(((cj5)*(x2131)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(r20)*(x2128)))+(((x2129)*(x2130))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst61)*(((((sj5)*(x2131)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2130)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2128)))+(((cj8)*(x2127)*(x2129)))+(((sj3)*(x2126)*(x2129)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2128)))+(((r20)*(x2134)))+(((sj5)*(x2135)))+(((cj5)*(x2125))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst61)*(((((x2127)*(x2134)))+(((IkReal(-1.00000000000000))*(cj5)*(x2136)))+(((x2126)*(x2132)))+(((IkReal(-1.00000000000000))*(x2125)*(x2128)))+(((cj5)*(x2135)))+(((IkReal(-1.00000000000000))*(x2132)*(x2133)))+(((cj5)*(x2131)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(r20)*(x2128)))+(((x2129)*(x2130)))))), ((gconst61)*(((((sj5)*(x2131)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2130)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2128)))+(((cj8)*(x2127)*(x2129)))+(((sj3)*(x2126)*(x2129)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2128)))+(((r20)*(x2134)))+(((sj5)*(x2135)))+(((cj5)*(x2125)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2137=IKsin(j4);
IkReal x2138=IKcos(j4);
IkReal x2139=((IkReal(1.00000000000000))*(cj7));
IkReal x2140=((cj8)*(r20));
IkReal x2141=((cj3)*(r02));
IkReal x2142=((IkReal(1.00000000000000))*(sj7));
IkReal x2143=((sj3)*(sj7));
IkReal x2144=((r21)*(sj8));
IkReal x2145=((cj8)*(r10));
IkReal x2146=((cj5)*(x2137));
IkReal x2147=((sj5)*(x2138));
IkReal x2148=((r11)*(sj3)*(sj8));
IkReal x2149=((cj3)*(cj8)*(r00));
IkReal x2150=((cj5)*(x2138));
IkReal x2151=((cj3)*(r01)*(sj8));
IkReal x2152=((sj5)*(x2137));
IkReal x2153=((x2147)+(x2146));
evalcond[0]=((x2152)+(((cj7)*(x2144)))+(((IkReal(-1.00000000000000))*(x2139)*(x2140)))+(((IkReal(-1.00000000000000))*(r22)*(x2142)))+(((IkReal(-1.00000000000000))*(x2150))));
evalcond[1]=((x2153)+(((sj7)*(x2144)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2140)*(x2142))));
evalcond[2]=((x2153)+(((cj7)*(sj3)*(x2145)))+(((r12)*(x2143)))+(((IkReal(-1.00000000000000))*(x2139)*(x2151)))+(((sj7)*(x2141)))+(((IkReal(-1.00000000000000))*(x2139)*(x2148)))+(((cj7)*(x2149))));
evalcond[3]=((x2150)+(((x2143)*(x2145)))+(((IkReal(-1.00000000000000))*(x2142)*(x2148)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2139)))+(((sj7)*(x2149)))+(((IkReal(-1.00000000000000))*(x2142)*(x2151)))+(((IkReal(-1.00000000000000))*(x2152)))+(((IkReal(-1.00000000000000))*(x2139)*(x2141))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2154=((cj7)*(sj5));
IkReal x2155=((cj8)*(r20));
IkReal x2156=((cj5)*(cj7));
IkReal x2157=((IkReal(1.00000000000000))*(sj7));
IkReal x2158=((r21)*(sj8));
IkReal x2159=((sj7)*(x2158));
if( IKabs(((gconst60)*(((((IkReal(-1.00000000000000))*(x2154)*(x2155)))+(((IkReal(-1.00000000000000))*(cj5)*(x2155)*(x2157)))+(((r22)*(x2156)))+(((cj5)*(x2159)))+(((x2154)*(x2158)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2157))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((x2155)*(x2156)))+(((r22)*(x2154)))+(((sj5)*(x2159)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2156)*(x2158)))+(((IkReal(-1.00000000000000))*(sj5)*(x2155)*(x2157))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst60)*(((((IkReal(-1.00000000000000))*(x2154)*(x2155)))+(((IkReal(-1.00000000000000))*(cj5)*(x2155)*(x2157)))+(((r22)*(x2156)))+(((cj5)*(x2159)))+(((x2154)*(x2158)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2157)))))), ((gconst60)*(((((x2155)*(x2156)))+(((r22)*(x2154)))+(((sj5)*(x2159)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2156)*(x2158)))+(((IkReal(-1.00000000000000))*(sj5)*(x2155)*(x2157)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2160=IKsin(j4);
IkReal x2161=IKcos(j4);
IkReal x2162=((IkReal(1.00000000000000))*(cj7));
IkReal x2163=((cj8)*(r20));
IkReal x2164=((cj3)*(r02));
IkReal x2165=((IkReal(1.00000000000000))*(sj7));
IkReal x2166=((sj3)*(sj7));
IkReal x2167=((r21)*(sj8));
IkReal x2168=((cj8)*(r10));
IkReal x2169=((cj5)*(x2160));
IkReal x2170=((sj5)*(x2161));
IkReal x2171=((r11)*(sj3)*(sj8));
IkReal x2172=((cj3)*(cj8)*(r00));
IkReal x2173=((cj5)*(x2161));
IkReal x2174=((cj3)*(r01)*(sj8));
IkReal x2175=((sj5)*(x2160));
IkReal x2176=((x2170)+(x2169));
evalcond[0]=((x2175)+(((IkReal(-1.00000000000000))*(r22)*(x2165)))+(((cj7)*(x2167)))+(((IkReal(-1.00000000000000))*(x2162)*(x2163)))+(((IkReal(-1.00000000000000))*(x2173))));
evalcond[1]=((x2176)+(((cj7)*(r22)))+(((sj7)*(x2167)))+(((IkReal(-1.00000000000000))*(x2163)*(x2165))));
evalcond[2]=((x2176)+(((cj7)*(sj3)*(x2168)))+(((IkReal(-1.00000000000000))*(x2162)*(x2171)))+(((sj7)*(x2164)))+(((r12)*(x2166)))+(((IkReal(-1.00000000000000))*(x2162)*(x2174)))+(((cj7)*(x2172))));
evalcond[3]=((x2173)+(((IkReal(-1.00000000000000))*(x2175)))+(((IkReal(-1.00000000000000))*(x2162)*(x2164)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2162)))+(((sj7)*(x2172)))+(((x2166)*(x2168)))+(((IkReal(-1.00000000000000))*(x2165)*(x2174)))+(((IkReal(-1.00000000000000))*(x2165)*(x2171))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2177=((cj3)*(cj8));
IkReal x2178=((r01)*(sj3));
IkReal x2179=((r02)*(sj3));
IkReal x2180=((IkReal(1.00000000000000))*(sj7));
IkReal x2181=((IkReal(1.00000000000000))*(r11));
IkReal x2182=((cj3)*(r12));
IkReal x2183=((IkReal(1.00000000000000))*(cj7));
IkReal x2184=((cj8)*(sj3));
IkReal x2185=((sj3)*(sj8));
IkReal x2186=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(-1.00000000000000))+(((cj8)*(x2178)))+(((IkReal(-1.00000000000000))*(x2177)*(x2181)))+(((r00)*(x2185)))+(((IkReal(-1.00000000000000))*(r10)*(x2186))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2181)*(x2184)))+(((IkReal(-1.00000000000000))*(r10)*(x2185)))+(((IkReal(-1.00000000000000))*(r01)*(x2177)))+(((IkReal(-1.00000000000000))*(r00)*(x2186))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2181)))+(((cj7)*(r10)*(x2177)))+(((cj7)*(sj8)*(x2178)))+(((IkReal(-1.00000000000000))*(x2179)*(x2180)))+(((sj7)*(x2182)))+(((IkReal(-1.00000000000000))*(r00)*(x2183)*(x2184))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x2180)*(x2184)))+(((IkReal(-1.00000000000000))*(x2182)*(x2183)))+(((r10)*(sj7)*(x2177)))+(((cj7)*(x2179)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2180)))+(((sj7)*(sj8)*(x2178))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2187=((IkReal(4.00000000000000))*(sj7));
IkReal x2188=((npy)*(sj8));
IkReal x2189=((IkReal(4.00000000000000))*(cj7));
IkReal x2190=((cj8)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x2187)*(x2188)))+(((x2187)*(x2190)))+(((IkReal(-0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(npz)*(x2189))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((x2189)*(x2190)))+(((npz)*(x2187)))+(((IkReal(-1.00000000000000))*(x2188)*(x2189)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x2187)*(x2188)))+(((x2187)*(x2190)))+(((IkReal(-0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(npz)*(x2189)))))+IKsqr(((IkReal(-0.940000000000000))+(((x2189)*(x2190)))+(((npz)*(x2187)))+(((IkReal(-1.00000000000000))*(x2188)*(x2189)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x2187)*(x2188)))+(((x2187)*(x2190)))+(((IkReal(-0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(npz)*(x2189)))), ((IkReal(-0.940000000000000))+(((x2189)*(x2190)))+(((npz)*(x2187)))+(((IkReal(-1.00000000000000))*(x2188)*(x2189)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2191=((IkReal(1.00000000000000))*(sj7));
IkReal x2192=((npy)*(sj8));
IkReal x2193=((cj8)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((cj7)*(x2192)))+(((IkReal(-1.00000000000000))*(cj7)*(x2193)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x2191))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((cj7)*(npz)))+(((IkReal(0.250000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(x2191)*(x2193)))+(((sj7)*(x2192)))+(((IkReal(0.0900000000000000))*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst63;
gconst63=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2194=((cj3)*(cj5));
IkReal x2195=((r02)*(sj7));
IkReal x2196=((cj8)*(r00));
IkReal x2197=((r22)*(sj7));
IkReal x2198=((cj5)*(sj3));
IkReal x2199=((cj7)*(cj8));
IkReal x2200=((IkReal(1.00000000000000))*(sj5));
IkReal x2201=((r12)*(sj7));
IkReal x2202=((sj3)*(sj5));
IkReal x2203=((cj3)*(cj7)*(sj5));
IkReal x2204=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst63)*(((((IkReal(-1.00000000000000))*(r11)*(x2198)*(x2204)))+(((IkReal(-1.00000000000000))*(r01)*(x2194)*(x2204)))+(((x2198)*(x2201)))+(((IkReal(-1.00000000000000))*(x2197)*(x2200)))+(((IkReal(-1.00000000000000))*(r20)*(x2199)*(x2200)))+(((cj7)*(x2194)*(x2196)))+(((r10)*(x2198)*(x2199)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((x2194)*(x2195))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2204)))+(((x2196)*(x2203)))+(((x2201)*(x2202)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2200)))+(((cj5)*(r20)*(x2199)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2200)))+(((cj3)*(sj5)*(x2195)))+(((cj5)*(x2197)))+(((r10)*(x2199)*(x2202))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst63)*(((((IkReal(-1.00000000000000))*(r11)*(x2198)*(x2204)))+(((IkReal(-1.00000000000000))*(r01)*(x2194)*(x2204)))+(((x2198)*(x2201)))+(((IkReal(-1.00000000000000))*(x2197)*(x2200)))+(((IkReal(-1.00000000000000))*(r20)*(x2199)*(x2200)))+(((cj7)*(x2194)*(x2196)))+(((r10)*(x2198)*(x2199)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((x2194)*(x2195)))))), ((gconst63)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2204)))+(((x2196)*(x2203)))+(((x2201)*(x2202)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2200)))+(((cj5)*(r20)*(x2199)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2200)))+(((cj3)*(sj5)*(x2195)))+(((cj5)*(x2197)))+(((r10)*(x2199)*(x2202)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2205=IKcos(j4);
IkReal x2206=IKsin(j4);
IkReal x2207=((IkReal(1.00000000000000))*(cj7));
IkReal x2208=((cj8)*(r20));
IkReal x2209=((cj3)*(r02));
IkReal x2210=((IkReal(1.00000000000000))*(sj7));
IkReal x2211=((sj3)*(sj7));
IkReal x2212=((r21)*(sj8));
IkReal x2213=((IkReal(1.00000000000000))*(cj5));
IkReal x2214=((cj8)*(r10));
IkReal x2215=((sj5)*(x2206));
IkReal x2216=((sj5)*(x2205));
IkReal x2217=((r11)*(sj3)*(sj8));
IkReal x2218=((cj3)*(cj8)*(r00));
IkReal x2219=((cj3)*(r01)*(sj8));
IkReal x2220=((x2205)*(x2213));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2220)))+(x2215)+(((IkReal(-1.00000000000000))*(x2207)*(x2208)))+(((cj7)*(x2212)))+(((IkReal(-1.00000000000000))*(r22)*(x2210))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2206)*(x2213)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2216)))+(((IkReal(-1.00000000000000))*(x2208)*(x2210)))+(((sj7)*(x2212))));
evalcond[2]=((((r12)*(x2211)))+(((cj5)*(x2206)))+(((IkReal(-1.00000000000000))*(x2207)*(x2217)))+(x2216)+(((cj7)*(sj3)*(x2214)))+(((sj7)*(x2209)))+(((cj7)*(x2218)))+(((IkReal(-1.00000000000000))*(x2207)*(x2219))));
evalcond[3]=((((sj7)*(x2218)))+(((IkReal(-1.00000000000000))*(x2220)))+(x2215)+(((x2211)*(x2214)))+(((IkReal(-1.00000000000000))*(x2210)*(x2217)))+(((IkReal(-1.00000000000000))*(x2210)*(x2219)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2207)))+(((IkReal(-1.00000000000000))*(x2207)*(x2209))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2221=((cj7)*(sj5));
IkReal x2222=((r21)*(sj8));
IkReal x2223=((cj5)*(cj7));
IkReal x2224=((cj8)*(r20));
IkReal x2225=((sj5)*(sj7));
IkReal x2226=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst62)*(((((r22)*(x2223)))+(((x2221)*(x2224)))+(((IkReal(-1.00000000000000))*(x2224)*(x2226)))+(((IkReal(-1.00000000000000))*(x2221)*(x2222)))+(((cj5)*(sj7)*(x2222)))+(((r22)*(x2225))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*(((((IkReal(-1.00000000000000))*(x2224)*(x2225)))+(((x2222)*(x2225)))+(((x2222)*(x2223)))+(((IkReal(-1.00000000000000))*(x2223)*(x2224)))+(((IkReal(-1.00000000000000))*(r22)*(x2226)))+(((r22)*(x2221))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst62)*(((((r22)*(x2223)))+(((x2221)*(x2224)))+(((IkReal(-1.00000000000000))*(x2224)*(x2226)))+(((IkReal(-1.00000000000000))*(x2221)*(x2222)))+(((cj5)*(sj7)*(x2222)))+(((r22)*(x2225)))))), ((gconst62)*(((((IkReal(-1.00000000000000))*(x2224)*(x2225)))+(((x2222)*(x2225)))+(((x2222)*(x2223)))+(((IkReal(-1.00000000000000))*(x2223)*(x2224)))+(((IkReal(-1.00000000000000))*(r22)*(x2226)))+(((r22)*(x2221)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2227=IKcos(j4);
IkReal x2228=IKsin(j4);
IkReal x2229=((IkReal(1.00000000000000))*(cj7));
IkReal x2230=((cj8)*(r20));
IkReal x2231=((cj3)*(r02));
IkReal x2232=((IkReal(1.00000000000000))*(sj7));
IkReal x2233=((sj3)*(sj7));
IkReal x2234=((r21)*(sj8));
IkReal x2235=((IkReal(1.00000000000000))*(cj5));
IkReal x2236=((cj8)*(r10));
IkReal x2237=((sj5)*(x2228));
IkReal x2238=((sj5)*(x2227));
IkReal x2239=((r11)*(sj3)*(sj8));
IkReal x2240=((cj3)*(cj8)*(r00));
IkReal x2241=((cj3)*(r01)*(sj8));
IkReal x2242=((x2227)*(x2235));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2232)))+(((IkReal(-1.00000000000000))*(x2229)*(x2230)))+(((IkReal(-1.00000000000000))*(x2242)))+(x2237)+(((cj7)*(x2234))));
evalcond[1]=((((sj7)*(x2234)))+(((IkReal(-1.00000000000000))*(x2238)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2230)*(x2232)))+(((IkReal(-1.00000000000000))*(x2228)*(x2235))));
evalcond[2]=((((cj5)*(x2228)))+(((sj7)*(x2231)))+(((cj7)*(sj3)*(x2236)))+(((cj7)*(x2240)))+(((IkReal(-1.00000000000000))*(x2229)*(x2239)))+(((IkReal(-1.00000000000000))*(x2229)*(x2241)))+(x2238)+(((r12)*(x2233))));
evalcond[3]=((((sj7)*(x2240)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2229)))+(((IkReal(-1.00000000000000))*(x2232)*(x2239)))+(((IkReal(-1.00000000000000))*(x2242)))+(((IkReal(-1.00000000000000))*(x2229)*(x2231)))+(((IkReal(-1.00000000000000))*(x2232)*(x2241)))+(x2237)+(((x2233)*(x2236))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2243=((IkReal(4.00000000000000))*(sj7));
IkReal x2244=((npy)*(sj8));
IkReal x2245=((IkReal(4.00000000000000))*(cj7));
IkReal x2246=((cj8)*(npx));
if( IKabs(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((npz)*(x2245)))+(((IkReal(0.120000000000000))*(cj6)))+(((x2243)*(x2244)))+(((IkReal(0.380000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(x2243)*(x2246)))+(((IkReal(0.360000000000000))*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((x2245)*(x2246)))+(((IkReal(-1.00000000000000))*(x2244)*(x2245)))+(((npz)*(x2243)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((npz)*(x2245)))+(((IkReal(0.120000000000000))*(cj6)))+(((x2243)*(x2244)))+(((IkReal(0.380000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(x2243)*(x2246)))+(((IkReal(0.360000000000000))*(sj7)))))))+IKsqr(((IkReal(-0.940000000000000))+(((x2245)*(x2246)))+(((IkReal(-1.00000000000000))*(x2244)*(x2245)))+(((npz)*(x2243)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((npz)*(x2245)))+(((IkReal(0.120000000000000))*(cj6)))+(((x2243)*(x2244)))+(((IkReal(0.380000000000000))*(sj6)))+(((IkReal(-1.00000000000000))*(x2243)*(x2246)))+(((IkReal(0.360000000000000))*(sj7)))))), ((IkReal(-0.940000000000000))+(((x2245)*(x2246)))+(((IkReal(-1.00000000000000))*(x2244)*(x2245)))+(((npz)*(x2243)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2247=IKsin(j5);
IkReal x2248=((IkReal(1.00000000000000))*(sj7));
IkReal x2249=((npy)*(sj8));
IkReal x2250=((cj8)*(npx));
IkReal x2251=((IkReal(0.250000000000000))*(x2247));
evalcond[0]=((((IkReal(0.0950000000000000))*(cj6)))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.0300000000000000))*(sj6)))+(((sj6)*(x2251))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj7)*(x2250)))+(((IkReal(-1.00000000000000))*(npz)*(x2248)))+(((IkReal(0.0900000000000000))*(cj7)))+(((cj7)*(x2249))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj6)*(x2251)))+(((cj7)*(npz)))+(((IkReal(0.0300000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(x2248)*(x2250)))+(((IkReal(0.0900000000000000))*(sj7)))+(((sj7)*(x2249)))+(((IkReal(0.0950000000000000))*(sj6))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5))))));
dummyeval[0]=((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2252=((IkReal(1.00000000000000))*(sj7));
IkReal x2253=((IkReal(1.00000000000000))*(cj3));
IkReal x2254=((cj7)*(r02));
IkReal x2255=((cj3)*(sj7));
IkReal x2256=((cj8)*(r00));
IkReal x2257=((cj8)*(npx));
IkReal x2258=((r01)*(sj3));
IkReal x2259=((cj7)*(sj8));
IkReal x2260=((r11)*(sj8));
IkReal x2261=((IkReal(1.00000000000000))*(cj7));
IkReal x2262=((sj7)*(sj8));
IkReal x2263=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((npy)*(x2259)))+(((IkReal(-1.00000000000000))*(npz)*(x2252)))+(((IkReal(-1.00000000000000))*(x2257)*(x2261)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((cj8)*(x2258)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2253)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2253))));
evalcond[4]=((((cj7)*(r22)))+(((r21)*(x2262)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x2252))));
evalcond[5]=((IkReal(0.0950000000000000))+(((cj7)*(npz)))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x2252)*(x2257)))+(((npy)*(x2262))));
evalcond[6]=((((x2258)*(x2259)))+(((r12)*(x2255)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x2252)))+(((IkReal(-1.00000000000000))*(r11)*(x2253)*(x2259)))+(((cj3)*(cj7)*(x2263)))+(((IkReal(-1.00000000000000))*(sj3)*(x2256)*(x2261))));
evalcond[7]=((IkReal(1.00000000000000))+(((sj3)*(x2254)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2253)))+(((x2255)*(x2263)))+(((IkReal(-1.00000000000000))*(cj3)*(x2252)*(x2260)))+(((x2258)*(x2262)))+(((IkReal(-1.00000000000000))*(sj3)*(x2252)*(x2256))));
evalcond[8]=((((sj3)*(sj7)*(x2263)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2261)))+(((IkReal(-1.00000000000000))*(x2253)*(x2254)))+(((IkReal(-1.00000000000000))*(sj3)*(x2252)*(x2260)))+(((x2255)*(x2256)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x2252))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2264=((cj8)*(sj5));
IkReal x2265=((cj3)*(r01));
IkReal x2266=((IkReal(1.00000000000000))*(cj5));
IkReal x2267=((r11)*(sj3));
IkReal x2268=((sj5)*(sj8));
IkReal x2269=((r10)*(sj3));
IkReal x2270=((cj3)*(r00)*(sj8));
if( IKabs(((gconst49)*(((((x2264)*(x2265)))+(((cj5)*(cj8)*(r21)))+(((x2264)*(x2267)))+(((cj3)*(r00)*(x2268)))+(((x2268)*(x2269)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(cj8)*(x2265)*(x2266)))+(((IkReal(-1.00000000000000))*(sj8)*(x2266)*(x2269)))+(((r20)*(x2268)))+(((r21)*(x2264)))+(((IkReal(-1.00000000000000))*(cj8)*(x2266)*(x2267)))+(((IkReal(-1.00000000000000))*(x2266)*(x2270))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst49)*(((((x2264)*(x2265)))+(((cj5)*(cj8)*(r21)))+(((x2264)*(x2267)))+(((cj3)*(r00)*(x2268)))+(((x2268)*(x2269)))+(((cj5)*(r20)*(sj8)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(cj8)*(x2265)*(x2266)))+(((IkReal(-1.00000000000000))*(sj8)*(x2266)*(x2269)))+(((r20)*(x2268)))+(((r21)*(x2264)))+(((IkReal(-1.00000000000000))*(cj8)*(x2266)*(x2267)))+(((IkReal(-1.00000000000000))*(x2266)*(x2270)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2271=IKsin(j4);
IkReal x2272=IKcos(j4);
IkReal x2273=((IkReal(1.00000000000000))*(cj8));
IkReal x2274=((cj3)*(r01));
IkReal x2275=((cj3)*(r00));
IkReal x2276=((cj7)*(cj8));
IkReal x2277=((IkReal(1.00000000000000))*(cj5));
IkReal x2278=((IkReal(1.00000000000000))*(sj8));
IkReal x2279=((r11)*(sj3));
IkReal x2280=((r10)*(sj3));
IkReal x2281=((sj5)*(x2271));
IkReal x2282=((sj5)*(x2272));
IkReal x2283=((x2272)*(x2277));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2271)*(x2277)))+(((IkReal(-1.00000000000000))*(x2282))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2283)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2273)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2281));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2283)))+(((IkReal(-1.00000000000000))*(x2273)*(x2279)))+(x2281)+(((IkReal(-1.00000000000000))*(x2278)*(x2280)))+(((IkReal(-1.00000000000000))*(x2275)*(x2278)))+(((IkReal(-1.00000000000000))*(x2273)*(x2274))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2278)*(x2279)))+(((x2276)*(x2280)))+(((cj5)*(x2271)))+(((r12)*(sj3)*(sj7)))+(x2282)+(((IkReal(-1.00000000000000))*(cj7)*(x2274)*(x2278)))+(((x2275)*(x2276))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2284=((IkReal(1.00000000000000))*(cj5));
IkReal x2285=((r22)*(sj7));
IkReal x2286=((cj8)*(sj5));
IkReal x2287=((cj7)*(r20));
IkReal x2288=((r20)*(sj8));
IkReal x2289=((cj7)*(r21)*(sj8));
if( IKabs(((gconst48)*(((((cj5)*(cj8)*(r21)))+(((IkReal(-1.00000000000000))*(sj5)*(x2289)))+(((x2286)*(x2287)))+(((cj5)*(x2288)))+(((sj5)*(x2285))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((r21)*(x2286)))+(((IkReal(-1.00000000000000))*(cj8)*(x2284)*(x2287)))+(((sj5)*(x2288)))+(((IkReal(-1.00000000000000))*(x2284)*(x2285)))+(((cj5)*(x2289))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst48)*(((((cj5)*(cj8)*(r21)))+(((IkReal(-1.00000000000000))*(sj5)*(x2289)))+(((x2286)*(x2287)))+(((cj5)*(x2288)))+(((sj5)*(x2285)))))), ((gconst48)*(((((r21)*(x2286)))+(((IkReal(-1.00000000000000))*(cj8)*(x2284)*(x2287)))+(((sj5)*(x2288)))+(((IkReal(-1.00000000000000))*(x2284)*(x2285)))+(((cj5)*(x2289)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2290=IKsin(j4);
IkReal x2291=IKcos(j4);
IkReal x2292=((IkReal(1.00000000000000))*(cj8));
IkReal x2293=((cj3)*(r01));
IkReal x2294=((cj3)*(r00));
IkReal x2295=((cj7)*(cj8));
IkReal x2296=((IkReal(1.00000000000000))*(cj5));
IkReal x2297=((IkReal(1.00000000000000))*(sj8));
IkReal x2298=((r11)*(sj3));
IkReal x2299=((r10)*(sj3));
IkReal x2300=((sj5)*(x2290));
IkReal x2301=((sj5)*(x2291));
IkReal x2302=((x2291)*(x2296));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2301)))+(((IkReal(-1.00000000000000))*(x2290)*(x2296)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2302)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2292)))+(x2300));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2302)))+(((IkReal(-1.00000000000000))*(x2292)*(x2293)))+(((IkReal(-1.00000000000000))*(x2297)*(x2299)))+(((IkReal(-1.00000000000000))*(x2292)*(x2298)))+(((IkReal(-1.00000000000000))*(x2294)*(x2297)))+(x2300));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2297)*(x2298)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2293)*(x2297)))+(((x2294)*(x2295)))+(((cj5)*(x2290)))+(((x2295)*(x2299)))+(x2301));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2303=((IkReal(1.00000000000000))*(sj7));
IkReal x2304=((IkReal(1.00000000000000))*(cj3));
IkReal x2305=((cj7)*(r02));
IkReal x2306=((cj3)*(sj7));
IkReal x2307=((cj8)*(r00));
IkReal x2308=((cj8)*(npx));
IkReal x2309=((r01)*(sj3));
IkReal x2310=((cj7)*(sj8));
IkReal x2311=((r11)*(sj8));
IkReal x2312=((IkReal(1.00000000000000))*(cj7));
IkReal x2313=((sj7)*(sj8));
IkReal x2314=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x2303)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x2308)*(x2312)))+(((IkReal(0.250000000000000))*(cj5)))+(((npy)*(x2310))));
evalcond[3]=((((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2304)))+(((cj8)*(x2309)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2304))));
evalcond[4]=((((cj7)*(r22)))+(((r21)*(x2313)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x2303))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x2303)*(x2308)))+(((IkReal(0.0900000000000000))*(sj7)))+(((npy)*(x2313))));
evalcond[6]=((((r12)*(x2306)))+(((x2309)*(x2310)))+(((IkReal(-1.00000000000000))*(sj3)*(x2307)*(x2312)))+(((cj3)*(cj7)*(x2314)))+(((IkReal(-1.00000000000000))*(r11)*(x2304)*(x2310)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x2303))));
evalcond[7]=((IkReal(-1.00000000000000))+(((sj3)*(x2305)))+(((IkReal(-1.00000000000000))*(sj3)*(x2303)*(x2307)))+(((x2309)*(x2313)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2304)))+(((IkReal(-1.00000000000000))*(cj3)*(x2303)*(x2311)))+(((x2306)*(x2314))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2312)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x2303)))+(((IkReal(-1.00000000000000))*(sj3)*(x2303)*(x2311)))+(((sj3)*(sj7)*(x2314)))+(((x2306)*(x2307)))+(((IkReal(-1.00000000000000))*(x2304)*(x2305))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2315=((IkReal(1.00000000000000))*(sj5));
IkReal x2316=((r20)*(sj8));
IkReal x2317=((cj5)*(cj8));
IkReal x2318=((r11)*(sj3));
IkReal x2319=((cj3)*(r01));
IkReal x2320=((cj3)*(r00)*(sj8));
IkReal x2321=((r10)*(sj3)*(sj8));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x2315)*(x2321)))+(((IkReal(-1.00000000000000))*(cj8)*(x2315)*(x2319)))+(((IkReal(-1.00000000000000))*(cj5)*(x2316)))+(((IkReal(-1.00000000000000))*(r21)*(x2317)))+(((IkReal(-1.00000000000000))*(x2315)*(x2320)))+(((IkReal(-1.00000000000000))*(cj8)*(x2315)*(x2318))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((cj5)*(x2321)))+(((x2317)*(x2318)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2315)))+(((x2317)*(x2319)))+(((IkReal(-1.00000000000000))*(x2315)*(x2316)))+(((cj5)*(x2320))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(x2315)*(x2321)))+(((IkReal(-1.00000000000000))*(cj8)*(x2315)*(x2319)))+(((IkReal(-1.00000000000000))*(cj5)*(x2316)))+(((IkReal(-1.00000000000000))*(r21)*(x2317)))+(((IkReal(-1.00000000000000))*(x2315)*(x2320)))+(((IkReal(-1.00000000000000))*(cj8)*(x2315)*(x2318)))))), ((gconst51)*(((((cj5)*(x2321)))+(((x2317)*(x2318)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2315)))+(((x2317)*(x2319)))+(((IkReal(-1.00000000000000))*(x2315)*(x2316)))+(((cj5)*(x2320)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2322=IKsin(j4);
IkReal x2323=IKcos(j4);
IkReal x2324=((IkReal(1.00000000000000))*(cj8));
IkReal x2325=((cj3)*(r01));
IkReal x2326=((cj3)*(r00));
IkReal x2327=((cj7)*(cj8));
IkReal x2328=((r11)*(sj3));
IkReal x2329=((IkReal(1.00000000000000))*(sj8));
IkReal x2330=((r10)*(sj3));
IkReal x2331=((cj5)*(x2322));
IkReal x2332=((sj5)*(x2323));
IkReal x2333=((cj5)*(x2323));
IkReal x2334=((sj5)*(x2322));
IkReal x2335=((x2331)+(x2332));
evalcond[0]=((x2335)+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x2334)+(((IkReal(-1.00000000000000))*(x2333)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2324))));
evalcond[2]=((x2333)+(((IkReal(-1.00000000000000))*(x2324)*(x2325)))+(((IkReal(-1.00000000000000))*(x2326)*(x2329)))+(((IkReal(-1.00000000000000))*(x2329)*(x2330)))+(((IkReal(-1.00000000000000))*(x2324)*(x2328)))+(((IkReal(-1.00000000000000))*(x2334))));
evalcond[3]=((x2335)+(((cj3)*(r02)*(sj7)))+(((x2326)*(x2327)))+(((IkReal(-1.00000000000000))*(cj7)*(x2328)*(x2329)))+(((r12)*(sj3)*(sj7)))+(((x2327)*(x2330)))+(((IkReal(-1.00000000000000))*(cj7)*(x2325)*(x2329))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2336=((r22)*(sj7));
IkReal x2337=((cj8)*(sj5));
IkReal x2338=((sj5)*(sj8));
IkReal x2339=((cj7)*(r20));
IkReal x2340=((cj5)*(cj8));
IkReal x2341=((cj7)*(r21));
IkReal x2342=((cj5)*(sj8));
if( IKabs(((gconst50)*(((((x2338)*(x2341)))+(((r20)*(x2342)))+(((r21)*(x2340)))+(((IkReal(-1.00000000000000))*(sj5)*(x2336)))+(((IkReal(-1.00000000000000))*(x2337)*(x2339))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((cj5)*(x2336)))+(((IkReal(-1.00000000000000))*(x2341)*(x2342)))+(((r21)*(x2337)))+(((x2339)*(x2340)))+(((r20)*(x2338))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst50)*(((((x2338)*(x2341)))+(((r20)*(x2342)))+(((r21)*(x2340)))+(((IkReal(-1.00000000000000))*(sj5)*(x2336)))+(((IkReal(-1.00000000000000))*(x2337)*(x2339)))))), ((gconst50)*(((((cj5)*(x2336)))+(((IkReal(-1.00000000000000))*(x2341)*(x2342)))+(((r21)*(x2337)))+(((x2339)*(x2340)))+(((r20)*(x2338)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2343=IKsin(j4);
IkReal x2344=IKcos(j4);
IkReal x2345=((IkReal(1.00000000000000))*(cj8));
IkReal x2346=((cj3)*(r01));
IkReal x2347=((cj3)*(r00));
IkReal x2348=((cj7)*(cj8));
IkReal x2349=((r11)*(sj3));
IkReal x2350=((IkReal(1.00000000000000))*(sj8));
IkReal x2351=((r10)*(sj3));
IkReal x2352=((cj5)*(x2343));
IkReal x2353=((sj5)*(x2344));
IkReal x2354=((cj5)*(x2344));
IkReal x2355=((sj5)*(x2343));
IkReal x2356=((x2352)+(x2353));
evalcond[0]=((x2356)+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x2355)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2354)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2345))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2350)*(x2351)))+(x2354)+(((IkReal(-1.00000000000000))*(x2355)))+(((IkReal(-1.00000000000000))*(x2345)*(x2349)))+(((IkReal(-1.00000000000000))*(x2347)*(x2350)))+(((IkReal(-1.00000000000000))*(x2345)*(x2346))));
evalcond[3]=((x2356)+(((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2349)*(x2350)))+(((r12)*(sj3)*(sj7)))+(((x2348)*(x2351)))+(((x2347)*(x2348)))+(((IkReal(-1.00000000000000))*(cj7)*(x2346)*(x2350))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2357=((IkReal(1.00000000000000))*(cj3));
IkReal x2358=((cj8)*(r01));
IkReal x2359=((IkReal(1.00000000000000))*(sj7));
IkReal x2360=((r00)*(sj8));
IkReal x2361=((cj8)*(npx));
IkReal x2362=((r10)*(sj8));
IkReal x2363=((cj7)*(sj8));
IkReal x2364=((r02)*(sj3));
IkReal x2365=((sj7)*(sj8));
IkReal x2366=((cj8)*(r11));
IkReal x2367=((r01)*(sj3));
IkReal x2368=((cj3)*(sj7));
IkReal x2369=((IkReal(1.00000000000000))*(cj7));
IkReal x2370=((cj8)*(r10));
IkReal x2371=((IkReal(1.00000000000000))*(sj3));
IkReal x2372=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((npy)*(x2363)))+(((IkReal(-1.00000000000000))*(x2361)*(x2369)))+(((IkReal(-1.00000000000000))*(npz)*(x2359)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(1.00000000000000))+(((sj3)*(x2358)))+(((IkReal(-1.00000000000000))*(x2357)*(x2362)))+(((IkReal(-1.00000000000000))*(x2357)*(x2366)))+(((sj3)*(x2360))));
evalcond[5]=((IkReal(0.0300000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x2359)*(x2361)))+(((IkReal(-0.250000000000000))*(sj5)))+(((IkReal(0.0900000000000000))*(sj7)))+(((npy)*(x2365))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2357)*(x2360)))+(((IkReal(-1.00000000000000))*(x2362)*(x2371)))+(((IkReal(-1.00000000000000))*(x2357)*(x2358)))+(((IkReal(-1.00000000000000))*(x2366)*(x2371))));
evalcond[7]=((((r12)*(x2368)))+(((IkReal(-1.00000000000000))*(x2369)*(x2372)))+(((IkReal(-1.00000000000000))*(x2359)*(x2364)))+(((cj3)*(cj7)*(x2370)))+(((IkReal(-1.00000000000000))*(r11)*(x2357)*(x2363)))+(((x2363)*(x2367))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x2359)*(x2372)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2357)))+(((IkReal(-1.00000000000000))*(r11)*(x2357)*(x2365)))+(((x2368)*(x2370)))+(((x2365)*(x2367)))+(((cj7)*(x2364))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2373=((cj3)*(cj5));
IkReal x2374=((r02)*(sj7));
IkReal x2375=((cj8)*(r00));
IkReal x2376=((cj5)*(sj3));
IkReal x2377=((cj7)*(cj8));
IkReal x2378=((sj5)*(sj7));
IkReal x2379=((sj3)*(sj5));
IkReal x2380=((cj3)*(cj7)*(sj5));
IkReal x2381=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(x2373)*(x2381)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2377)))+(((r12)*(sj7)*(x2376)))+(((x2373)*(x2374)))+(((r10)*(x2376)*(x2377)))+(((cj7)*(x2373)*(x2375)))+(((IkReal(-1.00000000000000))*(r11)*(x2376)*(x2381)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(x2378))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2380)))+(((cj5)*(r20)*(x2377)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2381)))+(((r10)*(x2377)*(x2379)))+(((IkReal(-1.00000000000000))*(r11)*(x2379)*(x2381)))+(((x2375)*(x2380)))+(((cj5)*(r22)*(sj7)))+(((cj3)*(sj5)*(x2374)))+(((r12)*(sj3)*(x2378))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(x2373)*(x2381)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2377)))+(((r12)*(sj7)*(x2376)))+(((x2373)*(x2374)))+(((r10)*(x2376)*(x2377)))+(((cj7)*(x2373)*(x2375)))+(((IkReal(-1.00000000000000))*(r11)*(x2376)*(x2381)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(x2378)))))), ((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2380)))+(((cj5)*(r20)*(x2377)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2381)))+(((r10)*(x2377)*(x2379)))+(((IkReal(-1.00000000000000))*(r11)*(x2379)*(x2381)))+(((x2375)*(x2380)))+(((cj5)*(r22)*(sj7)))+(((cj3)*(sj5)*(x2374)))+(((r12)*(sj3)*(x2378)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2382=IKsin(j4);
IkReal x2383=IKcos(j4);
IkReal x2384=((IkReal(1.00000000000000))*(cj7));
IkReal x2385=((cj8)*(r20));
IkReal x2386=((cj3)*(r02));
IkReal x2387=((IkReal(1.00000000000000))*(sj7));
IkReal x2388=((sj3)*(sj7));
IkReal x2389=((r21)*(sj8));
IkReal x2390=((cj8)*(r10));
IkReal x2391=((cj5)*(x2382));
IkReal x2392=((sj5)*(x2383));
IkReal x2393=((r11)*(sj3)*(sj8));
IkReal x2394=((cj3)*(cj8)*(r00));
IkReal x2395=((cj5)*(x2383));
IkReal x2396=((cj3)*(r01)*(sj8));
IkReal x2397=((sj5)*(x2382));
IkReal x2398=((x2392)+(x2391));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2384)*(x2385)))+(x2397)+(((IkReal(-1.00000000000000))*(r22)*(x2387)))+(((cj7)*(x2389)))+(((IkReal(-1.00000000000000))*(x2395))));
evalcond[1]=((((cj7)*(r22)))+(((sj7)*(x2389)))+(x2398)+(((IkReal(-1.00000000000000))*(x2385)*(x2387))));
evalcond[2]=((((sj7)*(x2386)))+(((IkReal(-1.00000000000000))*(x2384)*(x2396)))+(((IkReal(-1.00000000000000))*(x2384)*(x2393)))+(((cj7)*(sj3)*(x2390)))+(((cj7)*(x2394)))+(x2398)+(((r12)*(x2388))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2397)))+(((x2388)*(x2390)))+(((IkReal(-1.00000000000000))*(x2387)*(x2393)))+(((IkReal(-1.00000000000000))*(x2384)*(x2386)))+(((IkReal(-1.00000000000000))*(x2387)*(x2396)))+(x2395)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2384)))+(((sj7)*(x2394))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2399=((sj5)*(sj7));
IkReal x2400=((r21)*(sj8));
IkReal x2401=((cj7)*(sj5));
IkReal x2402=((cj8)*(r20));
IkReal x2403=((cj5)*(cj7));
IkReal x2404=((cj5)*(sj7));
if( IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(r22)*(x2399)))+(((r22)*(x2403)))+(((IkReal(-1.00000000000000))*(x2402)*(x2404)))+(((x2400)*(x2404)))+(((IkReal(-1.00000000000000))*(x2401)*(x2402)))+(((x2400)*(x2401))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((r22)*(x2401)))+(((IkReal(-1.00000000000000))*(x2400)*(x2403)))+(((r22)*(x2404)))+(((x2402)*(x2403)))+(((IkReal(-1.00000000000000))*(x2399)*(x2402)))+(((x2399)*(x2400))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst52)*(((((IkReal(-1.00000000000000))*(r22)*(x2399)))+(((r22)*(x2403)))+(((IkReal(-1.00000000000000))*(x2402)*(x2404)))+(((x2400)*(x2404)))+(((IkReal(-1.00000000000000))*(x2401)*(x2402)))+(((x2400)*(x2401)))))), ((gconst52)*(((((r22)*(x2401)))+(((IkReal(-1.00000000000000))*(x2400)*(x2403)))+(((r22)*(x2404)))+(((x2402)*(x2403)))+(((IkReal(-1.00000000000000))*(x2399)*(x2402)))+(((x2399)*(x2400)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2405=IKsin(j4);
IkReal x2406=IKcos(j4);
IkReal x2407=((IkReal(1.00000000000000))*(cj7));
IkReal x2408=((cj8)*(r20));
IkReal x2409=((cj3)*(r02));
IkReal x2410=((IkReal(1.00000000000000))*(sj7));
IkReal x2411=((sj3)*(sj7));
IkReal x2412=((r21)*(sj8));
IkReal x2413=((cj8)*(r10));
IkReal x2414=((cj5)*(x2405));
IkReal x2415=((sj5)*(x2406));
IkReal x2416=((r11)*(sj3)*(sj8));
IkReal x2417=((cj3)*(cj8)*(r00));
IkReal x2418=((cj5)*(x2406));
IkReal x2419=((cj3)*(r01)*(sj8));
IkReal x2420=((sj5)*(x2405));
IkReal x2421=((x2415)+(x2414));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2418)))+(((IkReal(-1.00000000000000))*(r22)*(x2410)))+(((IkReal(-1.00000000000000))*(x2407)*(x2408)))+(x2420)+(((cj7)*(x2412))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2408)*(x2410)))+(((cj7)*(r22)))+(x2421)+(((sj7)*(x2412))));
evalcond[2]=((((sj7)*(x2409)))+(((cj7)*(x2417)))+(((cj7)*(sj3)*(x2413)))+(((IkReal(-1.00000000000000))*(x2407)*(x2419)))+(((r12)*(x2411)))+(x2421)+(((IkReal(-1.00000000000000))*(x2407)*(x2416))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2410)*(x2416)))+(x2418)+(((sj7)*(x2417)))+(((IkReal(-1.00000000000000))*(x2420)))+(((IkReal(-1.00000000000000))*(x2410)*(x2419)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2407)))+(((x2411)*(x2413)))+(((IkReal(-1.00000000000000))*(x2407)*(x2409))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2422=((IkReal(1.00000000000000))*(cj3));
IkReal x2423=((cj8)*(r01));
IkReal x2424=((IkReal(1.00000000000000))*(sj7));
IkReal x2425=((r00)*(sj8));
IkReal x2426=((cj8)*(npx));
IkReal x2427=((r10)*(sj8));
IkReal x2428=((cj7)*(sj8));
IkReal x2429=((r02)*(sj3));
IkReal x2430=((sj7)*(sj8));
IkReal x2431=((cj8)*(r11));
IkReal x2432=((r01)*(sj3));
IkReal x2433=((cj3)*(sj7));
IkReal x2434=((IkReal(1.00000000000000))*(cj7));
IkReal x2435=((cj8)*(r10));
IkReal x2436=((IkReal(1.00000000000000))*(sj3));
IkReal x2437=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x2424)))+(((npy)*(x2428)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x2426)*(x2434))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2422)*(x2427)))+(((IkReal(-1.00000000000000))*(x2422)*(x2431)))+(((sj3)*(x2425)))+(((sj3)*(x2423))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((npy)*(x2430)))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x2424)*(x2426)))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2422)*(x2423)))+(((IkReal(-1.00000000000000))*(x2422)*(x2425)))+(((IkReal(-1.00000000000000))*(x2427)*(x2436)))+(((IkReal(-1.00000000000000))*(x2431)*(x2436))));
evalcond[7]=((((r12)*(x2433)))+(((IkReal(-1.00000000000000))*(x2424)*(x2429)))+(((IkReal(-1.00000000000000))*(r11)*(x2422)*(x2428)))+(((x2428)*(x2432)))+(((cj3)*(cj7)*(x2435)))+(((IkReal(-1.00000000000000))*(x2434)*(x2437))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x2424)*(x2437)))+(((IkReal(-1.00000000000000))*(r11)*(x2422)*(x2430)))+(((x2430)*(x2432)))+(((x2433)*(x2435)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2422)))+(((cj7)*(x2429))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2438=((cj3)*(cj5));
IkReal x2439=((r02)*(sj7));
IkReal x2440=((cj8)*(r00));
IkReal x2441=((cj5)*(sj3));
IkReal x2442=((cj7)*(cj8));
IkReal x2443=((sj5)*(sj7));
IkReal x2444=((sj3)*(sj5));
IkReal x2445=((cj3)*(cj7)*(sj5));
IkReal x2446=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst55)*(((((cj7)*(x2438)*(x2440)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2442)))+(((r10)*(x2441)*(x2442)))+(((IkReal(-1.00000000000000))*(r22)*(x2443)))+(((x2438)*(x2439)))+(((IkReal(-1.00000000000000))*(r11)*(x2441)*(x2446)))+(((IkReal(-1.00000000000000))*(r01)*(x2438)*(x2446)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((r12)*(sj7)*(x2441))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((cj3)*(sj5)*(x2439)))+(((x2440)*(x2445)))+(((cj5)*(r20)*(x2442)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2445)))+(((r12)*(sj3)*(x2443)))+(((r10)*(x2442)*(x2444)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x2444)*(x2446)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2446))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst55)*(((((cj7)*(x2438)*(x2440)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2442)))+(((r10)*(x2441)*(x2442)))+(((IkReal(-1.00000000000000))*(r22)*(x2443)))+(((x2438)*(x2439)))+(((IkReal(-1.00000000000000))*(r11)*(x2441)*(x2446)))+(((IkReal(-1.00000000000000))*(r01)*(x2438)*(x2446)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((r12)*(sj7)*(x2441)))))), ((gconst55)*(((((cj3)*(sj5)*(x2439)))+(((x2440)*(x2445)))+(((cj5)*(r20)*(x2442)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2445)))+(((r12)*(sj3)*(x2443)))+(((r10)*(x2442)*(x2444)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x2444)*(x2446)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2446)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2447=IKcos(j4);
IkReal x2448=IKsin(j4);
IkReal x2449=((IkReal(1.00000000000000))*(cj7));
IkReal x2450=((cj8)*(r20));
IkReal x2451=((cj3)*(r02));
IkReal x2452=((IkReal(1.00000000000000))*(sj7));
IkReal x2453=((sj3)*(sj7));
IkReal x2454=((r21)*(sj8));
IkReal x2455=((IkReal(1.00000000000000))*(cj5));
IkReal x2456=((cj8)*(r10));
IkReal x2457=((sj5)*(x2448));
IkReal x2458=((sj5)*(x2447));
IkReal x2459=((r11)*(sj3)*(sj8));
IkReal x2460=((cj3)*(cj8)*(r00));
IkReal x2461=((cj3)*(r01)*(sj8));
IkReal x2462=((x2447)*(x2455));
evalcond[0]=((((cj7)*(x2454)))+(((IkReal(-1.00000000000000))*(x2462)))+(((IkReal(-1.00000000000000))*(x2449)*(x2450)))+(x2457)+(((IkReal(-1.00000000000000))*(r22)*(x2452))));
evalcond[1]=((((cj7)*(r22)))+(((sj7)*(x2454)))+(((IkReal(-1.00000000000000))*(x2458)))+(((IkReal(-1.00000000000000))*(x2448)*(x2455)))+(((IkReal(-1.00000000000000))*(x2450)*(x2452))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2449)*(x2459)))+(((sj7)*(x2451)))+(x2458)+(((cj5)*(x2448)))+(((cj7)*(sj3)*(x2456)))+(((cj7)*(x2460)))+(((IkReal(-1.00000000000000))*(x2449)*(x2461)))+(((r12)*(x2453))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2452)*(x2459)))+(((x2453)*(x2456)))+(((IkReal(-1.00000000000000))*(x2462)))+(((IkReal(-1.00000000000000))*(x2449)*(x2451)))+(((IkReal(-1.00000000000000))*(x2452)*(x2461)))+(x2457)+(((sj7)*(x2460)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2449))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2463=((cj7)*(sj5));
IkReal x2464=((r21)*(sj8));
IkReal x2465=((cj5)*(cj7));
IkReal x2466=((cj8)*(r20));
IkReal x2467=((sj5)*(sj7));
IkReal x2468=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst54)*(((((r22)*(x2467)))+(((cj5)*(sj7)*(x2464)))+(((IkReal(-1.00000000000000))*(x2466)*(x2468)))+(((x2463)*(x2466)))+(((r22)*(x2465)))+(((IkReal(-1.00000000000000))*(x2463)*(x2464))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(x2465)*(x2466)))+(((r22)*(x2463)))+(((IkReal(-1.00000000000000))*(x2466)*(x2467)))+(((IkReal(-1.00000000000000))*(r22)*(x2468)))+(((x2464)*(x2465)))+(((x2464)*(x2467))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst54)*(((((r22)*(x2467)))+(((cj5)*(sj7)*(x2464)))+(((IkReal(-1.00000000000000))*(x2466)*(x2468)))+(((x2463)*(x2466)))+(((r22)*(x2465)))+(((IkReal(-1.00000000000000))*(x2463)*(x2464)))))), ((gconst54)*(((((IkReal(-1.00000000000000))*(x2465)*(x2466)))+(((r22)*(x2463)))+(((IkReal(-1.00000000000000))*(x2466)*(x2467)))+(((IkReal(-1.00000000000000))*(r22)*(x2468)))+(((x2464)*(x2465)))+(((x2464)*(x2467)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2469=IKcos(j4);
IkReal x2470=IKsin(j4);
IkReal x2471=((IkReal(1.00000000000000))*(cj7));
IkReal x2472=((cj8)*(r20));
IkReal x2473=((cj3)*(r02));
IkReal x2474=((IkReal(1.00000000000000))*(sj7));
IkReal x2475=((sj3)*(sj7));
IkReal x2476=((r21)*(sj8));
IkReal x2477=((IkReal(1.00000000000000))*(cj5));
IkReal x2478=((cj8)*(r10));
IkReal x2479=((sj5)*(x2470));
IkReal x2480=((sj5)*(x2469));
IkReal x2481=((r11)*(sj3)*(sj8));
IkReal x2482=((cj3)*(cj8)*(r00));
IkReal x2483=((cj3)*(r01)*(sj8));
IkReal x2484=((x2469)*(x2477));
evalcond[0]=((x2479)+(((IkReal(-1.00000000000000))*(x2484)))+(((cj7)*(x2476)))+(((IkReal(-1.00000000000000))*(x2471)*(x2472)))+(((IkReal(-1.00000000000000))*(r22)*(x2474))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2480)))+(((IkReal(-1.00000000000000))*(x2472)*(x2474)))+(((sj7)*(x2476)))+(((IkReal(-1.00000000000000))*(x2470)*(x2477))));
evalcond[2]=((((cj5)*(x2470)))+(((sj7)*(x2473)))+(((IkReal(-1.00000000000000))*(x2471)*(x2483)))+(x2480)+(((cj7)*(sj3)*(x2478)))+(((r12)*(x2475)))+(((IkReal(-1.00000000000000))*(x2471)*(x2481)))+(((cj7)*(x2482))));
evalcond[3]=((x2479)+(((IkReal(-1.00000000000000))*(x2484)))+(((IkReal(-1.00000000000000))*(x2474)*(x2481)))+(((IkReal(-1.00000000000000))*(x2474)*(x2483)))+(((x2475)*(x2478)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2471)))+(((IkReal(-1.00000000000000))*(x2471)*(x2473)))+(((sj7)*(x2482))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2485=((r21)*(sj8));
IkReal x2486=((IkReal(1.00000000000000))*(r22));
IkReal x2487=((cj5)*(sj7));
IkReal x2488=((cj6)*(cj7));
IkReal x2489=((sj5)*(sj7));
IkReal x2490=((cj5)*(cj8)*(r20));
IkReal x2491=((IkReal(1.00000000000000))*(x2488));
IkReal x2492=((cj8)*(r20)*(sj5));
if( IKabs(((gconst47)*(((((cj6)*(r22)*(x2489)))+(((IkReal(-1.00000000000000))*(x2485)*(x2487)))+(((cj8)*(r20)*(x2487)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2486)))+(((x2488)*(x2492)))+(((IkReal(-1.00000000000000))*(sj5)*(x2485)*(x2491))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x2486)))+(((IkReal(-1.00000000000000))*(cj6)*(x2486)*(x2487)))+(((cj8)*(r20)*(x2489)))+(((IkReal(-1.00000000000000))*(x2485)*(x2489)))+(((cj5)*(x2485)*(x2488)))+(((IkReal(-1.00000000000000))*(x2490)*(x2491))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst47)*(((((cj6)*(r22)*(x2489)))+(((IkReal(-1.00000000000000))*(x2485)*(x2487)))+(((cj8)*(r20)*(x2487)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2486)))+(((x2488)*(x2492)))+(((IkReal(-1.00000000000000))*(sj5)*(x2485)*(x2491)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x2486)))+(((IkReal(-1.00000000000000))*(cj6)*(x2486)*(x2487)))+(((cj8)*(r20)*(x2489)))+(((IkReal(-1.00000000000000))*(x2485)*(x2489)))+(((cj5)*(x2485)*(x2488)))+(((IkReal(-1.00000000000000))*(x2490)*(x2491)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2493=IKsin(j4);
IkReal x2494=IKcos(j4);
IkReal x2495=((IkReal(1.00000000000000))*(cj8));
IkReal x2496=((cj3)*(r01));
IkReal x2497=((IkReal(1.00000000000000))*(sj8));
IkReal x2498=((r11)*(sj3));
IkReal x2499=((cj3)*(r00));
IkReal x2500=((IkReal(1.00000000000000))*(sj6));
IkReal x2501=((IkReal(1.00000000000000))*(cj7));
IkReal x2502=((cj3)*(r02));
IkReal x2503=((cj8)*(sj7));
IkReal x2504=((r12)*(sj3));
IkReal x2505=((cj7)*(cj8));
IkReal x2506=((r21)*(sj8));
IkReal x2507=((r10)*(sj3));
IkReal x2508=((sj5)*(x2494));
IkReal x2509=((cj5)*(x2494));
IkReal x2510=((sj5)*(x2493));
IkReal x2511=((cj5)*(x2493));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2500)*(x2511)))+(((IkReal(-1.00000000000000))*(x2500)*(x2508))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2495)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2509)))+(((cj7)*(x2506)))+(x2510));
evalcond[2]=((((cj6)*(x2511)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x2495)))+(((sj7)*(x2506)))+(((cj6)*(x2508))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2497)*(x2499)))+(((IkReal(-1.00000000000000))*(x2495)*(x2498)))+(((IkReal(-1.00000000000000))*(x2500)*(x2509)))+(((sj6)*(x2510)))+(((IkReal(-1.00000000000000))*(x2497)*(x2507)))+(((IkReal(-1.00000000000000))*(x2495)*(x2496))));
evalcond[4]=((((sj7)*(x2504)))+(((IkReal(-1.00000000000000))*(cj7)*(x2497)*(x2498)))+(((x2499)*(x2505)))+(x2508)+(((x2505)*(x2507)))+(((sj7)*(x2502)))+(((IkReal(-1.00000000000000))*(cj7)*(x2496)*(x2497)))+(x2511));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x2496)*(x2497)))+(((IkReal(-1.00000000000000))*(cj6)*(x2510)))+(((IkReal(-1.00000000000000))*(x2501)*(x2504)))+(((IkReal(-1.00000000000000))*(x2501)*(x2502)))+(((x2499)*(x2503)))+(((cj6)*(x2509)))+(((x2503)*(x2507)))+(((IkReal(-1.00000000000000))*(sj7)*(x2497)*(x2498))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2512=((sj5)*(sj6));
IkReal x2513=((r22)*(sj7));
IkReal x2514=((r20)*(sj8));
IkReal x2515=((cj8)*(r21));
IkReal x2516=((cj5)*(sj6));
IkReal x2517=((cj7)*(cj8)*(r20));
IkReal x2518=((cj7)*(r21)*(sj8));
if( IKabs(((gconst46)*(((((cj5)*(x2515)))+(((IkReal(-1.00000000000000))*(x2512)*(x2518)))+(((cj5)*(x2514)))+(((x2512)*(x2517)))+(((x2512)*(x2513))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((x2516)*(x2518)))+(((sj5)*(x2515)))+(((IkReal(-1.00000000000000))*(x2516)*(x2517)))+(((sj5)*(x2514)))+(((IkReal(-1.00000000000000))*(x2513)*(x2516))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst46)*(((((cj5)*(x2515)))+(((IkReal(-1.00000000000000))*(x2512)*(x2518)))+(((cj5)*(x2514)))+(((x2512)*(x2517)))+(((x2512)*(x2513)))))), ((gconst46)*(((((x2516)*(x2518)))+(((sj5)*(x2515)))+(((IkReal(-1.00000000000000))*(x2516)*(x2517)))+(((sj5)*(x2514)))+(((IkReal(-1.00000000000000))*(x2513)*(x2516)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2519=IKsin(j4);
IkReal x2520=IKcos(j4);
IkReal x2521=((IkReal(1.00000000000000))*(cj8));
IkReal x2522=((cj3)*(r01));
IkReal x2523=((IkReal(1.00000000000000))*(sj8));
IkReal x2524=((r11)*(sj3));
IkReal x2525=((cj3)*(r00));
IkReal x2526=((IkReal(1.00000000000000))*(sj6));
IkReal x2527=((IkReal(1.00000000000000))*(cj7));
IkReal x2528=((cj3)*(r02));
IkReal x2529=((cj8)*(sj7));
IkReal x2530=((r12)*(sj3));
IkReal x2531=((cj7)*(cj8));
IkReal x2532=((r21)*(sj8));
IkReal x2533=((r10)*(sj3));
IkReal x2534=((sj5)*(x2520));
IkReal x2535=((cj5)*(x2520));
IkReal x2536=((sj5)*(x2519));
IkReal x2537=((cj5)*(x2519));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2526)*(x2537)))+(((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2526)*(x2534))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2535)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2521)))+(((cj7)*(x2532)))+(x2536));
evalcond[2]=((((cj7)*(r22)))+(((cj6)*(x2534)))+(((sj7)*(x2532)))+(((cj6)*(x2537)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x2521))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2526)*(x2535)))+(((IkReal(-1.00000000000000))*(x2523)*(x2533)))+(((IkReal(-1.00000000000000))*(x2521)*(x2522)))+(((IkReal(-1.00000000000000))*(x2523)*(x2525)))+(((IkReal(-1.00000000000000))*(x2521)*(x2524)))+(((sj6)*(x2536))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj7)*(x2523)*(x2524)))+(((IkReal(-1.00000000000000))*(cj7)*(x2522)*(x2523)))+(((sj7)*(x2528)))+(((sj7)*(x2530)))+(((x2531)*(x2533)))+(((x2525)*(x2531)))+(x2537)+(x2534));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x2522)*(x2523)))+(((IkReal(-1.00000000000000))*(sj7)*(x2523)*(x2524)))+(((cj6)*(x2535)))+(((x2529)*(x2533)))+(((IkReal(-1.00000000000000))*(x2527)*(x2528)))+(((x2525)*(x2529)))+(((IkReal(-1.00000000000000))*(cj6)*(x2536)))+(((IkReal(-1.00000000000000))*(x2527)*(x2530))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2538=((IkReal(4.00000000000000))*(npx));
IkReal x2539=((IkReal(4.00000000000000))*(npy));
if( IKabs(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(-0.380000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(cj8)*(x2539)))+(((IkReal(-1.00000000000000))*(sj8)*(x2538)))+(((IkReal(0.120000000000000))*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2539)))+(((cj7)*(cj8)*(x2538)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(-0.380000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(cj8)*(x2539)))+(((IkReal(-1.00000000000000))*(sj8)*(x2538)))+(((IkReal(0.120000000000000))*(sj6)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2539)))+(((cj7)*(cj8)*(x2538)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(-0.380000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(cj8)*(x2539)))+(((IkReal(-1.00000000000000))*(sj8)*(x2538)))+(((IkReal(0.120000000000000))*(sj6)))))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2539)))+(((cj7)*(cj8)*(x2538)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2540=IKsin(j5);
IkReal x2541=((IkReal(1.00000000000000))*(sj7));
IkReal x2542=((npy)*(sj8));
IkReal x2543=((cj8)*(npx));
IkReal x2544=((IkReal(0.250000000000000))*(x2540));
evalcond[0]=((((IkReal(0.0950000000000000))*(cj6)))+(((sj6)*(x2544)))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.0300000000000000))*(sj6))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((cj7)*(x2542)))+(((IkReal(-1.00000000000000))*(npz)*(x2541)))+(((IkReal(-1.00000000000000))*(cj7)*(x2543)))+(((IkReal(0.0900000000000000))*(cj7))));
evalcond[2]=((((sj7)*(x2542)))+(((cj7)*(npz)))+(((IkReal(0.0300000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(x2541)*(x2543)))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(x2544)))+(((IkReal(0.0950000000000000))*(sj6))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5))))));
dummyeval[0]=((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2545=((IkReal(1.00000000000000))*(sj7));
IkReal x2546=((IkReal(1.00000000000000))*(cj3));
IkReal x2547=((cj7)*(r02));
IkReal x2548=((cj3)*(sj7));
IkReal x2549=((cj8)*(r00));
IkReal x2550=((cj8)*(npx));
IkReal x2551=((r01)*(sj3));
IkReal x2552=((cj7)*(sj8));
IkReal x2553=((r11)*(sj8));
IkReal x2554=((IkReal(1.00000000000000))*(cj7));
IkReal x2555=((sj7)*(sj8));
IkReal x2556=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x2550)*(x2554)))+(((IkReal(0.0900000000000000))*(cj7)))+(((npy)*(x2552)))+(((IkReal(-1.00000000000000))*(npz)*(x2545)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2546)))+(((r00)*(sj3)*(sj8)))+(((cj8)*(x2551)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2546))));
evalcond[4]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x2545)))+(((r21)*(x2555))));
evalcond[5]=((IkReal(0.0950000000000000))+(((IkReal(-1.00000000000000))*(x2545)*(x2550)))+(((cj7)*(npz)))+(((npy)*(x2555)))+(((IkReal(0.0900000000000000))*(sj7))));
evalcond[6]=((((x2551)*(x2552)))+(((cj3)*(cj7)*(x2556)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x2545)))+(((IkReal(-1.00000000000000))*(r11)*(x2546)*(x2552)))+(((IkReal(-1.00000000000000))*(sj3)*(x2549)*(x2554)))+(((r12)*(x2548))));
evalcond[7]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj3)*(x2545)*(x2553)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2546)))+(((x2548)*(x2556)))+(((IkReal(-1.00000000000000))*(sj3)*(x2545)*(x2549)))+(((sj3)*(x2547)))+(((x2551)*(x2555))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj3)*(x2545)*(x2553)))+(((sj3)*(sj7)*(x2556)))+(((x2548)*(x2549)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2554)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x2545)))+(((IkReal(-1.00000000000000))*(x2546)*(x2547))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2557=((cj8)*(sj5));
IkReal x2558=((cj3)*(r01));
IkReal x2559=((IkReal(1.00000000000000))*(cj5));
IkReal x2560=((r11)*(sj3));
IkReal x2561=((sj5)*(sj8));
IkReal x2562=((r10)*(sj3));
IkReal x2563=((cj3)*(r00)*(sj8));
if( IKabs(((gconst49)*(((((x2561)*(x2562)))+(((cj3)*(r00)*(x2561)))+(((cj5)*(cj8)*(r21)))+(((x2557)*(x2558)))+(((x2557)*(x2560)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(sj8)*(x2559)*(x2562)))+(((IkReal(-1.00000000000000))*(x2559)*(x2563)))+(((r20)*(x2561)))+(((IkReal(-1.00000000000000))*(cj8)*(x2558)*(x2559)))+(((IkReal(-1.00000000000000))*(cj8)*(x2559)*(x2560)))+(((r21)*(x2557))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst49)*(((((x2561)*(x2562)))+(((cj3)*(r00)*(x2561)))+(((cj5)*(cj8)*(r21)))+(((x2557)*(x2558)))+(((x2557)*(x2560)))+(((cj5)*(r20)*(sj8)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(sj8)*(x2559)*(x2562)))+(((IkReal(-1.00000000000000))*(x2559)*(x2563)))+(((r20)*(x2561)))+(((IkReal(-1.00000000000000))*(cj8)*(x2558)*(x2559)))+(((IkReal(-1.00000000000000))*(cj8)*(x2559)*(x2560)))+(((r21)*(x2557)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2564=IKsin(j4);
IkReal x2565=IKcos(j4);
IkReal x2566=((IkReal(1.00000000000000))*(cj8));
IkReal x2567=((cj3)*(r01));
IkReal x2568=((cj3)*(r00));
IkReal x2569=((cj7)*(cj8));
IkReal x2570=((IkReal(1.00000000000000))*(cj5));
IkReal x2571=((IkReal(1.00000000000000))*(sj8));
IkReal x2572=((r11)*(sj3));
IkReal x2573=((r10)*(sj3));
IkReal x2574=((sj5)*(x2564));
IkReal x2575=((sj5)*(x2565));
IkReal x2576=((x2565)*(x2570));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2564)*(x2570)))+(((IkReal(-1.00000000000000))*(x2575)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2566)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(x2576)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2574));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2568)*(x2571)))+(((IkReal(-1.00000000000000))*(x2571)*(x2573)))+(((IkReal(-1.00000000000000))*(x2576)))+(((IkReal(-1.00000000000000))*(x2566)*(x2567)))+(((IkReal(-1.00000000000000))*(x2566)*(x2572)))+(x2574));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2571)*(x2572)))+(((cj5)*(x2564)))+(((r12)*(sj3)*(sj7)))+(((x2569)*(x2573)))+(((x2568)*(x2569)))+(((IkReal(-1.00000000000000))*(cj7)*(x2567)*(x2571)))+(x2575));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2577=((IkReal(1.00000000000000))*(cj5));
IkReal x2578=((r22)*(sj7));
IkReal x2579=((cj8)*(sj5));
IkReal x2580=((cj7)*(r20));
IkReal x2581=((r20)*(sj8));
IkReal x2582=((cj7)*(r21)*(sj8));
if( IKabs(((gconst48)*(((((sj5)*(x2578)))+(((cj5)*(cj8)*(r21)))+(((IkReal(-1.00000000000000))*(sj5)*(x2582)))+(((x2579)*(x2580)))+(((cj5)*(x2581))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((r21)*(x2579)))+(((sj5)*(x2581)))+(((IkReal(-1.00000000000000))*(cj8)*(x2577)*(x2580)))+(((cj5)*(x2582)))+(((IkReal(-1.00000000000000))*(x2577)*(x2578))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst48)*(((((sj5)*(x2578)))+(((cj5)*(cj8)*(r21)))+(((IkReal(-1.00000000000000))*(sj5)*(x2582)))+(((x2579)*(x2580)))+(((cj5)*(x2581)))))), ((gconst48)*(((((r21)*(x2579)))+(((sj5)*(x2581)))+(((IkReal(-1.00000000000000))*(cj8)*(x2577)*(x2580)))+(((cj5)*(x2582)))+(((IkReal(-1.00000000000000))*(x2577)*(x2578)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2583=IKsin(j4);
IkReal x2584=IKcos(j4);
IkReal x2585=((IkReal(1.00000000000000))*(cj8));
IkReal x2586=((cj3)*(r01));
IkReal x2587=((cj3)*(r00));
IkReal x2588=((cj7)*(cj8));
IkReal x2589=((IkReal(1.00000000000000))*(cj5));
IkReal x2590=((IkReal(1.00000000000000))*(sj8));
IkReal x2591=((r11)*(sj3));
IkReal x2592=((r10)*(sj3));
IkReal x2593=((sj5)*(x2583));
IkReal x2594=((sj5)*(x2584));
IkReal x2595=((x2584)*(x2589));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2583)*(x2589)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2594))));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2585)))+(x2593)+(((IkReal(-1.00000000000000))*(x2595))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2587)*(x2590)))+(((IkReal(-1.00000000000000))*(x2585)*(x2586)))+(((IkReal(-1.00000000000000))*(x2585)*(x2591)))+(((IkReal(-1.00000000000000))*(x2590)*(x2592)))+(x2593)+(((IkReal(-1.00000000000000))*(x2595))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2590)*(x2591)))+(((x2588)*(x2592)))+(((IkReal(-1.00000000000000))*(cj7)*(x2586)*(x2590)))+(((r12)*(sj3)*(sj7)))+(((cj5)*(x2583)))+(x2594)+(((x2587)*(x2588))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2596=((IkReal(1.00000000000000))*(sj7));
IkReal x2597=((IkReal(1.00000000000000))*(cj3));
IkReal x2598=((cj7)*(r02));
IkReal x2599=((cj3)*(sj7));
IkReal x2600=((cj8)*(r00));
IkReal x2601=((cj8)*(npx));
IkReal x2602=((r01)*(sj3));
IkReal x2603=((cj7)*(sj8));
IkReal x2604=((r11)*(sj8));
IkReal x2605=((IkReal(1.00000000000000))*(cj7));
IkReal x2606=((sj7)*(sj8));
IkReal x2607=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x2601)*(x2605)))+(((IkReal(-1.00000000000000))*(npz)*(x2596)))+(((IkReal(0.0900000000000000))*(cj7)))+(((npy)*(x2603)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((r00)*(sj3)*(sj8)))+(((cj8)*(x2602)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2597)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2597))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj8)*(r20)*(x2596)))+(((cj7)*(r22)))+(((r21)*(x2606))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((IkReal(-1.00000000000000))*(x2596)*(x2601)))+(((cj7)*(npz)))+(((npy)*(x2606)))+(((IkReal(0.0900000000000000))*(sj7))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(x2597)*(x2603)))+(((IkReal(-1.00000000000000))*(sj3)*(x2600)*(x2605)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x2596)))+(((r12)*(x2599)))+(((x2602)*(x2603)))+(((cj3)*(cj7)*(x2607))));
evalcond[7]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj3)*(x2596)*(x2604)))+(((IkReal(-1.00000000000000))*(sj3)*(x2596)*(x2600)))+(((x2599)*(x2607)))+(((sj3)*(x2598)))+(((x2602)*(x2606)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2597))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x2596)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2605)))+(((IkReal(-1.00000000000000))*(x2597)*(x2598)))+(((IkReal(-1.00000000000000))*(sj3)*(x2596)*(x2604)))+(((sj3)*(sj7)*(x2607)))+(((x2599)*(x2600))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2608=((IkReal(1.00000000000000))*(sj5));
IkReal x2609=((r20)*(sj8));
IkReal x2610=((cj5)*(cj8));
IkReal x2611=((r11)*(sj3));
IkReal x2612=((cj3)*(r01));
IkReal x2613=((cj3)*(r00)*(sj8));
IkReal x2614=((r10)*(sj3)*(sj8));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(x2608)*(x2611)))+(((IkReal(-1.00000000000000))*(cj8)*(x2608)*(x2612)))+(((IkReal(-1.00000000000000))*(x2608)*(x2613)))+(((IkReal(-1.00000000000000))*(x2608)*(x2614)))+(((IkReal(-1.00000000000000))*(r21)*(x2610)))+(((IkReal(-1.00000000000000))*(cj5)*(x2609))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x2608)*(x2609)))+(((cj5)*(x2613)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2608)))+(((cj5)*(x2614)))+(((x2610)*(x2611)))+(((x2610)*(x2612))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(x2608)*(x2611)))+(((IkReal(-1.00000000000000))*(cj8)*(x2608)*(x2612)))+(((IkReal(-1.00000000000000))*(x2608)*(x2613)))+(((IkReal(-1.00000000000000))*(x2608)*(x2614)))+(((IkReal(-1.00000000000000))*(r21)*(x2610)))+(((IkReal(-1.00000000000000))*(cj5)*(x2609)))))), ((gconst51)*(((((IkReal(-1.00000000000000))*(x2608)*(x2609)))+(((cj5)*(x2613)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2608)))+(((cj5)*(x2614)))+(((x2610)*(x2611)))+(((x2610)*(x2612)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2615=IKsin(j4);
IkReal x2616=IKcos(j4);
IkReal x2617=((IkReal(1.00000000000000))*(cj8));
IkReal x2618=((cj3)*(r01));
IkReal x2619=((cj3)*(r00));
IkReal x2620=((cj7)*(cj8));
IkReal x2621=((r11)*(sj3));
IkReal x2622=((IkReal(1.00000000000000))*(sj8));
IkReal x2623=((r10)*(sj3));
IkReal x2624=((cj5)*(x2615));
IkReal x2625=((sj5)*(x2616));
IkReal x2626=((cj5)*(x2616));
IkReal x2627=((sj5)*(x2615));
IkReal x2628=((x2624)+(x2625));
evalcond[0]=((((cj8)*(r21)))+(x2628)+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2626)))+(x2627)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2617))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2627)))+(((IkReal(-1.00000000000000))*(x2619)*(x2622)))+(((IkReal(-1.00000000000000))*(x2617)*(x2621)))+(x2626)+(((IkReal(-1.00000000000000))*(x2622)*(x2623)))+(((IkReal(-1.00000000000000))*(x2617)*(x2618))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x2620)*(x2623)))+(((IkReal(-1.00000000000000))*(cj7)*(x2621)*(x2622)))+(x2628)+(((r12)*(sj3)*(sj7)))+(((x2619)*(x2620)))+(((IkReal(-1.00000000000000))*(cj7)*(x2618)*(x2622))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2629=((r22)*(sj7));
IkReal x2630=((cj8)*(sj5));
IkReal x2631=((sj5)*(sj8));
IkReal x2632=((cj7)*(r20));
IkReal x2633=((cj5)*(cj8));
IkReal x2634=((cj7)*(r21));
IkReal x2635=((cj5)*(sj8));
if( IKabs(((gconst50)*(((((r21)*(x2633)))+(((r20)*(x2635)))+(((IkReal(-1.00000000000000))*(sj5)*(x2629)))+(((IkReal(-1.00000000000000))*(x2630)*(x2632)))+(((x2631)*(x2634))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((r21)*(x2630)))+(((x2632)*(x2633)))+(((cj5)*(x2629)))+(((r20)*(x2631)))+(((IkReal(-1.00000000000000))*(x2634)*(x2635))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst50)*(((((r21)*(x2633)))+(((r20)*(x2635)))+(((IkReal(-1.00000000000000))*(sj5)*(x2629)))+(((IkReal(-1.00000000000000))*(x2630)*(x2632)))+(((x2631)*(x2634)))))), ((gconst50)*(((((r21)*(x2630)))+(((x2632)*(x2633)))+(((cj5)*(x2629)))+(((r20)*(x2631)))+(((IkReal(-1.00000000000000))*(x2634)*(x2635)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2636=IKsin(j4);
IkReal x2637=IKcos(j4);
IkReal x2638=((IkReal(1.00000000000000))*(cj8));
IkReal x2639=((cj3)*(r01));
IkReal x2640=((cj3)*(r00));
IkReal x2641=((cj7)*(cj8));
IkReal x2642=((r11)*(sj3));
IkReal x2643=((IkReal(1.00000000000000))*(sj8));
IkReal x2644=((r10)*(sj3));
IkReal x2645=((cj5)*(x2636));
IkReal x2646=((sj5)*(x2637));
IkReal x2647=((cj5)*(x2637));
IkReal x2648=((sj5)*(x2636));
IkReal x2649=((x2645)+(x2646));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x2649));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2647)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2648)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2638))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2643)*(x2644)))+(x2647)+(((IkReal(-1.00000000000000))*(x2638)*(x2639)))+(((IkReal(-1.00000000000000))*(x2648)))+(((IkReal(-1.00000000000000))*(x2640)*(x2643)))+(((IkReal(-1.00000000000000))*(x2638)*(x2642))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj7)*(x2642)*(x2643)))+(((cj3)*(r02)*(sj7)))+(x2649)+(((r12)*(sj3)*(sj7)))+(((x2641)*(x2644)))+(((IkReal(-1.00000000000000))*(cj7)*(x2639)*(x2643)))+(((x2640)*(x2641))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2650=((IkReal(1.00000000000000))*(cj3));
IkReal x2651=((cj8)*(r01));
IkReal x2652=((IkReal(1.00000000000000))*(sj7));
IkReal x2653=((r00)*(sj8));
IkReal x2654=((cj8)*(npx));
IkReal x2655=((r10)*(sj8));
IkReal x2656=((cj7)*(sj8));
IkReal x2657=((r02)*(sj3));
IkReal x2658=((sj7)*(sj8));
IkReal x2659=((cj8)*(r11));
IkReal x2660=((r01)*(sj3));
IkReal x2661=((cj3)*(sj7));
IkReal x2662=((IkReal(1.00000000000000))*(cj7));
IkReal x2663=((cj8)*(r10));
IkReal x2664=((IkReal(1.00000000000000))*(sj3));
IkReal x2665=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x2654)*(x2662)))+(((IkReal(-1.00000000000000))*(npz)*(x2652)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5)))+(((npy)*(x2656))));
evalcond[4]=((IkReal(1.00000000000000))+(((sj3)*(x2651)))+(((IkReal(-1.00000000000000))*(x2650)*(x2659)))+(((sj3)*(x2653)))+(((IkReal(-1.00000000000000))*(x2650)*(x2655))));
evalcond[5]=((IkReal(0.0300000000000000))+(((cj7)*(npz)))+(((IkReal(-0.250000000000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x2652)*(x2654)))+(((npy)*(x2658)))+(((IkReal(0.0900000000000000))*(sj7))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2650)*(x2651)))+(((IkReal(-1.00000000000000))*(x2659)*(x2664)))+(((IkReal(-1.00000000000000))*(x2655)*(x2664)))+(((IkReal(-1.00000000000000))*(x2650)*(x2653))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x2662)*(x2665)))+(((r12)*(x2661)))+(((x2656)*(x2660)))+(((cj3)*(cj7)*(x2663)))+(((IkReal(-1.00000000000000))*(x2652)*(x2657)))+(((IkReal(-1.00000000000000))*(r11)*(x2650)*(x2656))));
evalcond[8]=((((x2661)*(x2663)))+(((cj7)*(x2657)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2650)))+(((x2658)*(x2660)))+(((IkReal(-1.00000000000000))*(r11)*(x2650)*(x2658)))+(((IkReal(-1.00000000000000))*(x2652)*(x2665))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2666=((cj3)*(cj5));
IkReal x2667=((r02)*(sj7));
IkReal x2668=((cj8)*(r00));
IkReal x2669=((cj5)*(sj3));
IkReal x2670=((cj7)*(cj8));
IkReal x2671=((sj5)*(sj7));
IkReal x2672=((sj3)*(sj5));
IkReal x2673=((cj3)*(cj7)*(sj5));
IkReal x2674=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(x2666)*(x2674)))+(((IkReal(-1.00000000000000))*(r22)*(x2671)))+(((r10)*(x2669)*(x2670)))+(((cj7)*(x2666)*(x2668)))+(((x2666)*(x2667)))+(((IkReal(-1.00000000000000))*(r11)*(x2669)*(x2674)))+(((r12)*(sj7)*(x2669)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2670)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2674)))+(((r12)*(sj3)*(x2671)))+(((x2668)*(x2673)))+(((r10)*(x2670)*(x2672)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2673)))+(((IkReal(-1.00000000000000))*(r11)*(x2672)*(x2674)))+(((cj3)*(sj5)*(x2667)))+(((cj5)*(r22)*(sj7)))+(((cj5)*(r20)*(x2670))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(x2666)*(x2674)))+(((IkReal(-1.00000000000000))*(r22)*(x2671)))+(((r10)*(x2669)*(x2670)))+(((cj7)*(x2666)*(x2668)))+(((x2666)*(x2667)))+(((IkReal(-1.00000000000000))*(r11)*(x2669)*(x2674)))+(((r12)*(sj7)*(x2669)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2670)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst53)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2674)))+(((r12)*(sj3)*(x2671)))+(((x2668)*(x2673)))+(((r10)*(x2670)*(x2672)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2673)))+(((IkReal(-1.00000000000000))*(r11)*(x2672)*(x2674)))+(((cj3)*(sj5)*(x2667)))+(((cj5)*(r22)*(sj7)))+(((cj5)*(r20)*(x2670)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2675=IKsin(j4);
IkReal x2676=IKcos(j4);
IkReal x2677=((IkReal(1.00000000000000))*(cj7));
IkReal x2678=((cj8)*(r20));
IkReal x2679=((cj3)*(r02));
IkReal x2680=((IkReal(1.00000000000000))*(sj7));
IkReal x2681=((sj3)*(sj7));
IkReal x2682=((r21)*(sj8));
IkReal x2683=((cj8)*(r10));
IkReal x2684=((cj5)*(x2675));
IkReal x2685=((sj5)*(x2676));
IkReal x2686=((r11)*(sj3)*(sj8));
IkReal x2687=((cj3)*(cj8)*(r00));
IkReal x2688=((cj5)*(x2676));
IkReal x2689=((cj3)*(r01)*(sj8));
IkReal x2690=((sj5)*(x2675));
IkReal x2691=((x2684)+(x2685));
evalcond[0]=((x2690)+(((IkReal(-1.00000000000000))*(x2688)))+(((cj7)*(x2682)))+(((IkReal(-1.00000000000000))*(r22)*(x2680)))+(((IkReal(-1.00000000000000))*(x2677)*(x2678))));
evalcond[1]=((x2691)+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2678)*(x2680)))+(((sj7)*(x2682))));
evalcond[2]=((x2691)+(((r12)*(x2681)))+(((sj7)*(x2679)))+(((cj7)*(x2687)))+(((IkReal(-1.00000000000000))*(x2677)*(x2689)))+(((cj7)*(sj3)*(x2683)))+(((IkReal(-1.00000000000000))*(x2677)*(x2686))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2680)*(x2686)))+(((sj7)*(x2687)))+(((IkReal(-1.00000000000000))*(x2680)*(x2689)))+(((IkReal(-1.00000000000000))*(x2690)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2677)))+(x2688)+(((x2681)*(x2683)))+(((IkReal(-1.00000000000000))*(x2677)*(x2679))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2692=((sj5)*(sj7));
IkReal x2693=((r21)*(sj8));
IkReal x2694=((cj7)*(sj5));
IkReal x2695=((cj8)*(r20));
IkReal x2696=((cj5)*(cj7));
IkReal x2697=((cj5)*(sj7));
if( IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(r22)*(x2692)))+(((x2693)*(x2697)))+(((r22)*(x2696)))+(((IkReal(-1.00000000000000))*(x2694)*(x2695)))+(((x2693)*(x2694)))+(((IkReal(-1.00000000000000))*(x2695)*(x2697))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((r22)*(x2694)))+(((IkReal(-1.00000000000000))*(x2693)*(x2696)))+(((x2692)*(x2693)))+(((r22)*(x2697)))+(((IkReal(-1.00000000000000))*(x2692)*(x2695)))+(((x2695)*(x2696))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst52)*(((((IkReal(-1.00000000000000))*(r22)*(x2692)))+(((x2693)*(x2697)))+(((r22)*(x2696)))+(((IkReal(-1.00000000000000))*(x2694)*(x2695)))+(((x2693)*(x2694)))+(((IkReal(-1.00000000000000))*(x2695)*(x2697)))))), ((gconst52)*(((((r22)*(x2694)))+(((IkReal(-1.00000000000000))*(x2693)*(x2696)))+(((x2692)*(x2693)))+(((r22)*(x2697)))+(((IkReal(-1.00000000000000))*(x2692)*(x2695)))+(((x2695)*(x2696)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2698=IKsin(j4);
IkReal x2699=IKcos(j4);
IkReal x2700=((IkReal(1.00000000000000))*(cj7));
IkReal x2701=((cj8)*(r20));
IkReal x2702=((cj3)*(r02));
IkReal x2703=((IkReal(1.00000000000000))*(sj7));
IkReal x2704=((sj3)*(sj7));
IkReal x2705=((r21)*(sj8));
IkReal x2706=((cj8)*(r10));
IkReal x2707=((cj5)*(x2698));
IkReal x2708=((sj5)*(x2699));
IkReal x2709=((r11)*(sj3)*(sj8));
IkReal x2710=((cj3)*(cj8)*(r00));
IkReal x2711=((cj5)*(x2699));
IkReal x2712=((cj3)*(r01)*(sj8));
IkReal x2713=((sj5)*(x2698));
IkReal x2714=((x2708)+(x2707));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2700)*(x2701)))+(x2713)+(((IkReal(-1.00000000000000))*(x2711)))+(((cj7)*(x2705)))+(((IkReal(-1.00000000000000))*(r22)*(x2703))));
evalcond[1]=((x2714)+(((cj7)*(r22)))+(((sj7)*(x2705)))+(((IkReal(-1.00000000000000))*(x2701)*(x2703))));
evalcond[2]=((((sj7)*(x2702)))+(x2714)+(((cj7)*(x2710)))+(((IkReal(-1.00000000000000))*(x2700)*(x2709)))+(((r12)*(x2704)))+(((IkReal(-1.00000000000000))*(x2700)*(x2712)))+(((cj7)*(sj3)*(x2706))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2703)*(x2712)))+(((x2704)*(x2706)))+(x2711)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2700)))+(((IkReal(-1.00000000000000))*(x2700)*(x2702)))+(((IkReal(-1.00000000000000))*(x2703)*(x2709)))+(((sj7)*(x2710)))+(((IkReal(-1.00000000000000))*(x2713))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2715=((IkReal(1.00000000000000))*(cj3));
IkReal x2716=((cj8)*(r01));
IkReal x2717=((IkReal(1.00000000000000))*(sj7));
IkReal x2718=((r00)*(sj8));
IkReal x2719=((cj8)*(npx));
IkReal x2720=((r10)*(sj8));
IkReal x2721=((cj7)*(sj8));
IkReal x2722=((r02)*(sj3));
IkReal x2723=((sj7)*(sj8));
IkReal x2724=((cj8)*(r11));
IkReal x2725=((r01)*(sj3));
IkReal x2726=((cj3)*(sj7));
IkReal x2727=((IkReal(1.00000000000000))*(cj7));
IkReal x2728=((cj8)*(r10));
IkReal x2729=((IkReal(1.00000000000000))*(sj3));
IkReal x2730=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x2719)*(x2727)))+(((npy)*(x2721)))+(((IkReal(-1.00000000000000))*(npz)*(x2717)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(-1.00000000000000))+(((sj3)*(x2716)))+(((sj3)*(x2718)))+(((IkReal(-1.00000000000000))*(x2715)*(x2724)))+(((IkReal(-1.00000000000000))*(x2715)*(x2720))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x2717)*(x2719)))+(((IkReal(0.0900000000000000))*(sj7)))+(((npy)*(x2723)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2715)*(x2718)))+(((IkReal(-1.00000000000000))*(x2720)*(x2729)))+(((IkReal(-1.00000000000000))*(x2724)*(x2729)))+(((IkReal(-1.00000000000000))*(x2715)*(x2716))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x2717)*(x2722)))+(((x2721)*(x2725)))+(((IkReal(-1.00000000000000))*(x2727)*(x2730)))+(((r12)*(x2726)))+(((IkReal(-1.00000000000000))*(r11)*(x2715)*(x2721)))+(((cj3)*(cj7)*(x2728))));
evalcond[8]=((((x2723)*(x2725)))+(((cj7)*(x2722)))+(((IkReal(-1.00000000000000))*(r11)*(x2715)*(x2723)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x2715)))+(((IkReal(-1.00000000000000))*(x2717)*(x2730)))+(((x2726)*(x2728))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2731=((cj3)*(cj5));
IkReal x2732=((r02)*(sj7));
IkReal x2733=((cj8)*(r00));
IkReal x2734=((cj5)*(sj3));
IkReal x2735=((cj7)*(cj8));
IkReal x2736=((sj5)*(sj7));
IkReal x2737=((sj3)*(sj5));
IkReal x2738=((cj3)*(cj7)*(sj5));
IkReal x2739=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst55)*(((((r12)*(sj7)*(x2734)))+(((IkReal(-1.00000000000000))*(r01)*(x2731)*(x2739)))+(((IkReal(-1.00000000000000))*(r22)*(x2736)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2735)))+(((r10)*(x2734)*(x2735)))+(((IkReal(-1.00000000000000))*(r11)*(x2734)*(x2739)))+(((x2731)*(x2732)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((cj7)*(x2731)*(x2733))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2739)))+(((r10)*(x2735)*(x2737)))+(((r12)*(sj3)*(x2736)))+(((cj3)*(sj5)*(x2732)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2738)))+(((cj5)*(r22)*(sj7)))+(((x2733)*(x2738)))+(((cj5)*(r20)*(x2735)))+(((IkReal(-1.00000000000000))*(r11)*(x2737)*(x2739))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst55)*(((((r12)*(sj7)*(x2734)))+(((IkReal(-1.00000000000000))*(r01)*(x2731)*(x2739)))+(((IkReal(-1.00000000000000))*(r22)*(x2736)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2735)))+(((r10)*(x2734)*(x2735)))+(((IkReal(-1.00000000000000))*(r11)*(x2734)*(x2739)))+(((x2731)*(x2732)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((cj7)*(x2731)*(x2733)))))), ((gconst55)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2739)))+(((r10)*(x2735)*(x2737)))+(((r12)*(sj3)*(x2736)))+(((cj3)*(sj5)*(x2732)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x2738)))+(((cj5)*(r22)*(sj7)))+(((x2733)*(x2738)))+(((cj5)*(r20)*(x2735)))+(((IkReal(-1.00000000000000))*(r11)*(x2737)*(x2739)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2740=IKcos(j4);
IkReal x2741=IKsin(j4);
IkReal x2742=((IkReal(1.00000000000000))*(cj7));
IkReal x2743=((cj8)*(r20));
IkReal x2744=((cj3)*(r02));
IkReal x2745=((IkReal(1.00000000000000))*(sj7));
IkReal x2746=((sj3)*(sj7));
IkReal x2747=((r21)*(sj8));
IkReal x2748=((IkReal(1.00000000000000))*(cj5));
IkReal x2749=((cj8)*(r10));
IkReal x2750=((sj5)*(x2741));
IkReal x2751=((sj5)*(x2740));
IkReal x2752=((r11)*(sj3)*(sj8));
IkReal x2753=((cj3)*(cj8)*(r00));
IkReal x2754=((cj3)*(r01)*(sj8));
IkReal x2755=((x2740)*(x2748));
evalcond[0]=((((cj7)*(x2747)))+(((IkReal(-1.00000000000000))*(x2755)))+(x2750)+(((IkReal(-1.00000000000000))*(x2742)*(x2743)))+(((IkReal(-1.00000000000000))*(r22)*(x2745))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2741)*(x2748)))+(((sj7)*(x2747)))+(((IkReal(-1.00000000000000))*(x2743)*(x2745)))+(((IkReal(-1.00000000000000))*(x2751))));
evalcond[2]=((((sj7)*(x2744)))+(((IkReal(-1.00000000000000))*(x2742)*(x2754)))+(x2751)+(((cj7)*(sj3)*(x2749)))+(((cj7)*(x2753)))+(((cj5)*(x2741)))+(((r12)*(x2746)))+(((IkReal(-1.00000000000000))*(x2742)*(x2752))));
evalcond[3]=((((x2746)*(x2749)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2742)))+(((sj7)*(x2753)))+(((IkReal(-1.00000000000000))*(x2755)))+(x2750)+(((IkReal(-1.00000000000000))*(x2745)*(x2752)))+(((IkReal(-1.00000000000000))*(x2742)*(x2744)))+(((IkReal(-1.00000000000000))*(x2745)*(x2754))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2756=((cj7)*(sj5));
IkReal x2757=((r21)*(sj8));
IkReal x2758=((cj5)*(cj7));
IkReal x2759=((cj8)*(r20));
IkReal x2760=((sj5)*(sj7));
IkReal x2761=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(x2756)*(x2757)))+(((IkReal(-1.00000000000000))*(x2759)*(x2761)))+(((r22)*(x2758)))+(((cj5)*(sj7)*(x2757)))+(((r22)*(x2760)))+(((x2756)*(x2759))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((x2757)*(x2760)))+(((IkReal(-1.00000000000000))*(x2759)*(x2760)))+(((IkReal(-1.00000000000000))*(x2758)*(x2759)))+(((x2757)*(x2758)))+(((r22)*(x2756)))+(((IkReal(-1.00000000000000))*(r22)*(x2761))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst54)*(((((IkReal(-1.00000000000000))*(x2756)*(x2757)))+(((IkReal(-1.00000000000000))*(x2759)*(x2761)))+(((r22)*(x2758)))+(((cj5)*(sj7)*(x2757)))+(((r22)*(x2760)))+(((x2756)*(x2759)))))), ((gconst54)*(((((x2757)*(x2760)))+(((IkReal(-1.00000000000000))*(x2759)*(x2760)))+(((IkReal(-1.00000000000000))*(x2758)*(x2759)))+(((x2757)*(x2758)))+(((r22)*(x2756)))+(((IkReal(-1.00000000000000))*(r22)*(x2761)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2762=IKcos(j4);
IkReal x2763=IKsin(j4);
IkReal x2764=((IkReal(1.00000000000000))*(cj7));
IkReal x2765=((cj8)*(r20));
IkReal x2766=((cj3)*(r02));
IkReal x2767=((IkReal(1.00000000000000))*(sj7));
IkReal x2768=((sj3)*(sj7));
IkReal x2769=((r21)*(sj8));
IkReal x2770=((IkReal(1.00000000000000))*(cj5));
IkReal x2771=((cj8)*(r10));
IkReal x2772=((sj5)*(x2763));
IkReal x2773=((sj5)*(x2762));
IkReal x2774=((r11)*(sj3)*(sj8));
IkReal x2775=((cj3)*(cj8)*(r00));
IkReal x2776=((cj3)*(r01)*(sj8));
IkReal x2777=((x2762)*(x2770));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2767)))+(((cj7)*(x2769)))+(x2772)+(((IkReal(-1.00000000000000))*(x2777)))+(((IkReal(-1.00000000000000))*(x2764)*(x2765))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2773)))+(((IkReal(-1.00000000000000))*(x2763)*(x2770)))+(((IkReal(-1.00000000000000))*(x2765)*(x2767)))+(((sj7)*(x2769))));
evalcond[2]=((((cj7)*(x2775)))+(((IkReal(-1.00000000000000))*(x2764)*(x2774)))+(x2773)+(((r12)*(x2768)))+(((cj5)*(x2763)))+(((cj7)*(sj3)*(x2771)))+(((IkReal(-1.00000000000000))*(x2764)*(x2776)))+(((sj7)*(x2766))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2767)*(x2774)))+(((x2768)*(x2771)))+(((sj7)*(x2775)))+(x2772)+(((IkReal(-1.00000000000000))*(x2764)*(x2766)))+(((IkReal(-1.00000000000000))*(x2777)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2764)))+(((IkReal(-1.00000000000000))*(x2767)*(x2776))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2778=((r21)*(sj8));
IkReal x2779=((IkReal(1.00000000000000))*(r22));
IkReal x2780=((cj5)*(sj7));
IkReal x2781=((cj6)*(cj7));
IkReal x2782=((sj5)*(sj7));
IkReal x2783=((cj5)*(cj8)*(r20));
IkReal x2784=((IkReal(1.00000000000000))*(x2781));
IkReal x2785=((cj8)*(r20)*(sj5));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2779)))+(((cj8)*(r20)*(x2780)))+(((IkReal(-1.00000000000000))*(x2778)*(x2780)))+(((IkReal(-1.00000000000000))*(sj5)*(x2778)*(x2784)))+(((cj6)*(r22)*(x2782)))+(((x2781)*(x2785))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x2779)))+(((cj5)*(x2778)*(x2781)))+(((IkReal(-1.00000000000000))*(x2778)*(x2782)))+(((IkReal(-1.00000000000000))*(cj6)*(x2779)*(x2780)))+(((cj8)*(r20)*(x2782)))+(((IkReal(-1.00000000000000))*(x2783)*(x2784))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2779)))+(((cj8)*(r20)*(x2780)))+(((IkReal(-1.00000000000000))*(x2778)*(x2780)))+(((IkReal(-1.00000000000000))*(sj5)*(x2778)*(x2784)))+(((cj6)*(r22)*(x2782)))+(((x2781)*(x2785)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x2779)))+(((cj5)*(x2778)*(x2781)))+(((IkReal(-1.00000000000000))*(x2778)*(x2782)))+(((IkReal(-1.00000000000000))*(cj6)*(x2779)*(x2780)))+(((cj8)*(r20)*(x2782)))+(((IkReal(-1.00000000000000))*(x2783)*(x2784)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2786=IKsin(j4);
IkReal x2787=IKcos(j4);
IkReal x2788=((IkReal(1.00000000000000))*(cj8));
IkReal x2789=((cj3)*(r01));
IkReal x2790=((IkReal(1.00000000000000))*(sj8));
IkReal x2791=((r11)*(sj3));
IkReal x2792=((cj3)*(r00));
IkReal x2793=((IkReal(1.00000000000000))*(sj6));
IkReal x2794=((IkReal(1.00000000000000))*(cj7));
IkReal x2795=((cj3)*(r02));
IkReal x2796=((cj8)*(sj7));
IkReal x2797=((r12)*(sj3));
IkReal x2798=((cj7)*(cj8));
IkReal x2799=((r21)*(sj8));
IkReal x2800=((r10)*(sj3));
IkReal x2801=((sj5)*(x2787));
IkReal x2802=((cj5)*(x2787));
IkReal x2803=((sj5)*(x2786));
IkReal x2804=((cj5)*(x2786));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2793)*(x2804)))+(((IkReal(-1.00000000000000))*(x2793)*(x2801))));
evalcond[1]=((((cj7)*(x2799)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2788)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2802)))+(x2803));
evalcond[2]=((((cj7)*(r22)))+(((sj7)*(x2799)))+(((cj6)*(x2801)))+(((cj6)*(x2804)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x2788))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2793)*(x2802)))+(((IkReal(-1.00000000000000))*(x2788)*(x2791)))+(((IkReal(-1.00000000000000))*(x2790)*(x2800)))+(((sj6)*(x2803)))+(((IkReal(-1.00000000000000))*(x2788)*(x2789)))+(((IkReal(-1.00000000000000))*(x2790)*(x2792))));
evalcond[4]=((((x2792)*(x2798)))+(((sj7)*(x2795)))+(((x2798)*(x2800)))+(x2801)+(x2804)+(((IkReal(-1.00000000000000))*(cj7)*(x2790)*(x2791)))+(((IkReal(-1.00000000000000))*(cj7)*(x2789)*(x2790)))+(((sj7)*(x2797))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj6)*(x2803)))+(((IkReal(-1.00000000000000))*(sj7)*(x2789)*(x2790)))+(((x2796)*(x2800)))+(((IkReal(-1.00000000000000))*(sj7)*(x2790)*(x2791)))+(((IkReal(-1.00000000000000))*(x2794)*(x2795)))+(((cj6)*(x2802)))+(((IkReal(-1.00000000000000))*(x2794)*(x2797)))+(((x2792)*(x2796))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2805=((sj5)*(sj6));
IkReal x2806=((r22)*(sj7));
IkReal x2807=((r20)*(sj8));
IkReal x2808=((cj8)*(r21));
IkReal x2809=((cj5)*(sj6));
IkReal x2810=((cj7)*(cj8)*(r20));
IkReal x2811=((cj7)*(r21)*(sj8));
if( IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(x2805)*(x2811)))+(((x2805)*(x2806)))+(((cj5)*(x2807)))+(((cj5)*(x2808)))+(((x2805)*(x2810))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((sj5)*(x2807)))+(((IkReal(-1.00000000000000))*(x2809)*(x2810)))+(((sj5)*(x2808)))+(((x2809)*(x2811)))+(((IkReal(-1.00000000000000))*(x2806)*(x2809))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst46)*(((((IkReal(-1.00000000000000))*(x2805)*(x2811)))+(((x2805)*(x2806)))+(((cj5)*(x2807)))+(((cj5)*(x2808)))+(((x2805)*(x2810)))))), ((gconst46)*(((((sj5)*(x2807)))+(((IkReal(-1.00000000000000))*(x2809)*(x2810)))+(((sj5)*(x2808)))+(((x2809)*(x2811)))+(((IkReal(-1.00000000000000))*(x2806)*(x2809)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2812=IKsin(j4);
IkReal x2813=IKcos(j4);
IkReal x2814=((IkReal(1.00000000000000))*(cj8));
IkReal x2815=((cj3)*(r01));
IkReal x2816=((IkReal(1.00000000000000))*(sj8));
IkReal x2817=((r11)*(sj3));
IkReal x2818=((cj3)*(r00));
IkReal x2819=((IkReal(1.00000000000000))*(sj6));
IkReal x2820=((IkReal(1.00000000000000))*(cj7));
IkReal x2821=((cj3)*(r02));
IkReal x2822=((cj8)*(sj7));
IkReal x2823=((r12)*(sj3));
IkReal x2824=((cj7)*(cj8));
IkReal x2825=((r21)*(sj8));
IkReal x2826=((r10)*(sj3));
IkReal x2827=((sj5)*(x2813));
IkReal x2828=((cj5)*(x2813));
IkReal x2829=((sj5)*(x2812));
IkReal x2830=((cj5)*(x2812));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x2819)*(x2827)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2819)*(x2830))));
evalcond[1]=((((cj7)*(x2825)))+(x2829)+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2814)))+(((IkReal(-1.00000000000000))*(x2828))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(sj7)*(x2814)))+(((cj7)*(r22)))+(((sj7)*(x2825)))+(((cj6)*(x2830)))+(((cj6)*(x2827))));
evalcond[3]=((((sj6)*(x2829)))+(((IkReal(-1.00000000000000))*(x2816)*(x2826)))+(((IkReal(-1.00000000000000))*(x2814)*(x2817)))+(((IkReal(-1.00000000000000))*(x2816)*(x2818)))+(((IkReal(-1.00000000000000))*(x2814)*(x2815)))+(((IkReal(-1.00000000000000))*(x2819)*(x2828))));
evalcond[4]=((x2827)+(((x2818)*(x2824)))+(((IkReal(-1.00000000000000))*(cj7)*(x2816)*(x2817)))+(((sj7)*(x2823)))+(((IkReal(-1.00000000000000))*(cj7)*(x2815)*(x2816)))+(((x2824)*(x2826)))+(x2830)+(((sj7)*(x2821))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x2816)*(x2817)))+(((IkReal(-1.00000000000000))*(x2820)*(x2823)))+(((IkReal(-1.00000000000000))*(sj7)*(x2815)*(x2816)))+(((IkReal(-1.00000000000000))*(x2820)*(x2821)))+(((x2822)*(x2826)))+(((x2818)*(x2822)))+(((cj6)*(x2828)))+(((IkReal(-1.00000000000000))*(cj6)*(x2829))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2831=((cj6)*(sj7));
IkReal x2832=((cj6)*(cj7));
IkReal x2833=((IkReal(1.00000000000000))*(sj8));
if( IKabs(((gconst0)*(((((r12)*(x2831)))+(((cj8)*(r10)*(x2832)))+(((IkReal(-1.00000000000000))*(r11)*(x2832)*(x2833))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((cj8)*(r00)*(x2832)))+(((r02)*(x2831)))+(((IkReal(-1.00000000000000))*(r01)*(x2832)*(x2833))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst0)*(((((r12)*(x2831)))+(((cj8)*(r10)*(x2832)))+(((IkReal(-1.00000000000000))*(r11)*(x2832)*(x2833)))))), ((gconst0)*(((((cj8)*(r00)*(x2832)))+(((r02)*(x2831)))+(((IkReal(-1.00000000000000))*(r01)*(x2832)*(x2833)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x2834=IKsin(j3);
IkReal x2835=IKcos(j3);
IkReal x2836=((IkReal(1.00000000000000))*(r11));
IkReal x2837=((r01)*(sj8));
IkReal x2838=((cj8)*(r10));
IkReal x2839=((IkReal(1.00000000000000))*(sj7));
IkReal x2840=((sj7)*(x2835));
IkReal x2841=((cj7)*(x2834));
IkReal x2842=((r00)*(x2834));
IkReal x2843=((cj7)*(x2835));
evalcond[0]=((((cj8)*(r01)*(x2834)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2835)))+(cj6)+(((IkReal(-1.00000000000000))*(cj8)*(x2835)*(x2836)))+(((sj8)*(x2842))));
evalcond[1]=((((x2838)*(x2843)))+(((r12)*(x2840)))+(((x2837)*(x2841)))+(((IkReal(-1.00000000000000))*(r02)*(x2834)*(x2839)))+(((IkReal(-1.00000000000000))*(sj8)*(x2836)*(x2843)))+(((IkReal(-1.00000000000000))*(cj8)*(r00)*(x2841))));
evalcond[2]=((((r02)*(x2841)))+(((IkReal(-1.00000000000000))*(sj8)*(x2836)*(x2840)))+(sj6)+(((x2838)*(x2840)))+(((sj7)*(x2834)*(x2837)))+(((IkReal(-1.00000000000000))*(cj8)*(x2839)*(x2842)))+(((IkReal(-1.00000000000000))*(r12)*(x2843))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=sj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2844=((IkReal(1.00000000000000))*(cj3));
IkReal x2845=((cj7)*(r02));
IkReal x2846=((cj8)*(sj7));
IkReal x2847=((r01)*(sj3));
IkReal x2848=((IkReal(1.00000000000000))*(sj3));
IkReal x2849=((sj7)*(sj8));
IkReal x2850=((cj7)*(r12));
IkReal x2851=((cj7)*(cj8));
IkReal x2852=((cj3)*(r10));
IkReal x2853=((cj7)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2844)))+(((cj8)*(x2847)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2844))));
evalcond[2]=((((cj7)*(r22)))+(((r21)*(x2849)))+(((IkReal(-1.00000000000000))*(r20)*(x2846))));
evalcond[3]=((IkReal(0.0950000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x2846)))+(((cj7)*(npz)))+(((npy)*(x2849)))+(((IkReal(0.0900000000000000))*(sj7))));
evalcond[4]=((((x2851)*(x2852)))+(((IkReal(-1.00000000000000))*(r00)*(x2848)*(x2851)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2848)))+(((cj3)*(r12)*(sj7)))+(((x2847)*(x2853)))+(((IkReal(-1.00000000000000))*(r11)*(x2844)*(x2853))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x2844)*(x2850)))+(((x2847)*(x2849)))+(((IkReal(-1.00000000000000))*(r11)*(x2844)*(x2849)))+(((IkReal(-1.00000000000000))*(r00)*(x2846)*(x2848)))+(((sj3)*(x2845)))+(((x2846)*(x2852))));
evalcond[6]=((((r10)*(sj3)*(x2846)))+(((IkReal(-1.00000000000000))*(r11)*(x2848)*(x2849)))+(((cj3)*(r00)*(x2846)))+(((IkReal(-1.00000000000000))*(x2844)*(x2845)))+(((IkReal(-1.00000000000000))*(x2848)*(x2850)))+(((IkReal(-1.00000000000000))*(r01)*(x2844)*(x2849))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2854=((IkReal(4.00000000000000))*(npx));
IkReal x2855=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj8)*(x2855)))+(((IkReal(-1.00000000000000))*(sj8)*(x2854))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2855)))+(((cj7)*(cj8)*(x2854)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj8)*(x2855)))+(((IkReal(-1.00000000000000))*(sj8)*(x2854)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2855)))+(((cj7)*(cj8)*(x2854)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj8)*(x2855)))+(((IkReal(-1.00000000000000))*(sj8)*(x2854)))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2855)))+(((cj7)*(cj8)*(x2854)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0300000000000000))+(((IkReal(0.250000000000000))*(IKsin(j5))))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((cj7)*(npy)*(sj8)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(npx)))+(((IkReal(-1.00000000000000))*(npz)*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst57;
gconst57=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2856=((cj8)*(sj5));
IkReal x2857=((cj3)*(r01));
IkReal x2858=((IkReal(1.00000000000000))*(cj5));
IkReal x2859=((r11)*(sj3));
IkReal x2860=((sj5)*(sj8));
IkReal x2861=((r10)*(sj3));
IkReal x2862=((cj3)*(r00)*(sj8));
if( IKabs(((gconst57)*(((((x2856)*(x2859)))+(((cj3)*(r00)*(x2860)))+(((cj5)*(cj8)*(r21)))+(((x2860)*(x2861)))+(((x2856)*(x2857)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst57)*(((((IkReal(-1.00000000000000))*(sj8)*(x2858)*(x2861)))+(((r21)*(x2856)))+(((IkReal(-1.00000000000000))*(cj8)*(x2858)*(x2859)))+(((IkReal(-1.00000000000000))*(x2858)*(x2862)))+(((r20)*(x2860)))+(((IkReal(-1.00000000000000))*(cj8)*(x2857)*(x2858))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst57)*(((((x2856)*(x2859)))+(((cj3)*(r00)*(x2860)))+(((cj5)*(cj8)*(r21)))+(((x2860)*(x2861)))+(((x2856)*(x2857)))+(((cj5)*(r20)*(sj8)))))), ((gconst57)*(((((IkReal(-1.00000000000000))*(sj8)*(x2858)*(x2861)))+(((r21)*(x2856)))+(((IkReal(-1.00000000000000))*(cj8)*(x2858)*(x2859)))+(((IkReal(-1.00000000000000))*(x2858)*(x2862)))+(((r20)*(x2860)))+(((IkReal(-1.00000000000000))*(cj8)*(x2857)*(x2858)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2863=IKsin(j4);
IkReal x2864=IKcos(j4);
IkReal x2865=((IkReal(1.00000000000000))*(cj8));
IkReal x2866=((cj3)*(r01));
IkReal x2867=((cj3)*(r00));
IkReal x2868=((cj7)*(cj8));
IkReal x2869=((IkReal(1.00000000000000))*(cj5));
IkReal x2870=((IkReal(1.00000000000000))*(sj8));
IkReal x2871=((r11)*(sj3));
IkReal x2872=((r10)*(sj3));
IkReal x2873=((sj5)*(x2863));
IkReal x2874=((sj5)*(x2864));
IkReal x2875=((x2864)*(x2869));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2874)))+(((IkReal(-1.00000000000000))*(x2863)*(x2869))));
evalcond[1]=((x2873)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2865)))+(((IkReal(-1.00000000000000))*(x2875))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2867)*(x2870)))+(x2873)+(((IkReal(-1.00000000000000))*(x2865)*(x2871)))+(((IkReal(-1.00000000000000))*(x2870)*(x2872)))+(((IkReal(-1.00000000000000))*(x2865)*(x2866)))+(((IkReal(-1.00000000000000))*(x2875))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(x2874)+(((IkReal(-1.00000000000000))*(cj7)*(x2870)*(x2871)))+(((r12)*(sj3)*(sj7)))+(((x2867)*(x2868)))+(((x2868)*(x2872)))+(((IkReal(-1.00000000000000))*(cj7)*(x2866)*(x2870)))+(((cj5)*(x2863))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2876=((sj5)*(sj8));
IkReal x2877=((IkReal(1.00000000000000))*(cj7));
IkReal x2878=((cj8)*(sj5));
IkReal x2879=((r22)*(sj7));
IkReal x2880=((cj5)*(cj8));
IkReal x2881=((cj5)*(sj8));
if( IKabs(((gconst56)*(((((r20)*(x2881)))+(((sj5)*(x2879)))+(((cj7)*(r20)*(x2878)))+(((r21)*(x2880)))+(((IkReal(-1.00000000000000))*(r21)*(x2876)*(x2877))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((r21)*(x2878)))+(((IkReal(-1.00000000000000))*(cj5)*(x2879)))+(((r20)*(x2876)))+(((IkReal(-1.00000000000000))*(r20)*(x2877)*(x2880)))+(((cj7)*(r21)*(x2881))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst56)*(((((r20)*(x2881)))+(((sj5)*(x2879)))+(((cj7)*(r20)*(x2878)))+(((r21)*(x2880)))+(((IkReal(-1.00000000000000))*(r21)*(x2876)*(x2877)))))), ((gconst56)*(((((r21)*(x2878)))+(((IkReal(-1.00000000000000))*(cj5)*(x2879)))+(((r20)*(x2876)))+(((IkReal(-1.00000000000000))*(r20)*(x2877)*(x2880)))+(((cj7)*(r21)*(x2881)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2882=IKsin(j4);
IkReal x2883=IKcos(j4);
IkReal x2884=((IkReal(1.00000000000000))*(cj8));
IkReal x2885=((cj3)*(r01));
IkReal x2886=((cj3)*(r00));
IkReal x2887=((cj7)*(cj8));
IkReal x2888=((IkReal(1.00000000000000))*(cj5));
IkReal x2889=((IkReal(1.00000000000000))*(sj8));
IkReal x2890=((r11)*(sj3));
IkReal x2891=((r10)*(sj3));
IkReal x2892=((sj5)*(x2882));
IkReal x2893=((sj5)*(x2883));
IkReal x2894=((x2883)*(x2888));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x2882)*(x2888)))+(((IkReal(-1.00000000000000))*(x2893))));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2892)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2884)))+(((IkReal(-1.00000000000000))*(x2894))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2886)*(x2889)))+(((IkReal(-1.00000000000000))*(x2889)*(x2891)))+(x2892)+(((IkReal(-1.00000000000000))*(x2884)*(x2885)))+(((IkReal(-1.00000000000000))*(x2884)*(x2890)))+(((IkReal(-1.00000000000000))*(x2894))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x2886)*(x2887)))+(((r12)*(sj3)*(sj7)))+(x2893)+(((IkReal(-1.00000000000000))*(cj7)*(x2889)*(x2890)))+(((cj5)*(x2882)))+(((x2887)*(x2891)))+(((IkReal(-1.00000000000000))*(cj7)*(x2885)*(x2889))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2895=((IkReal(1.00000000000000))*(cj3));
IkReal x2896=((cj7)*(r02));
IkReal x2897=((cj8)*(sj7));
IkReal x2898=((r01)*(sj3));
IkReal x2899=((IkReal(1.00000000000000))*(sj3));
IkReal x2900=((sj7)*(sj8));
IkReal x2901=((cj7)*(r12));
IkReal x2902=((cj7)*(cj8));
IkReal x2903=((cj3)*(r10));
IkReal x2904=((cj7)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x2895)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x2895)))+(((cj8)*(x2898))));
evalcond[2]=((((r21)*(x2900)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x2897))));
evalcond[3]=((IkReal(-0.0950000000000000))+(((cj7)*(npz)))+(((npy)*(x2900)))+(((IkReal(-1.00000000000000))*(npx)*(x2897)))+(((IkReal(0.0900000000000000))*(sj7))));
evalcond[4]=((((cj3)*(r12)*(sj7)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2899)))+(((IkReal(-1.00000000000000))*(r00)*(x2899)*(x2902)))+(((x2902)*(x2903)))+(((IkReal(-1.00000000000000))*(r11)*(x2895)*(x2904)))+(((x2898)*(x2904))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x2897)*(x2899)))+(((x2897)*(x2903)))+(((x2898)*(x2900)))+(((IkReal(-1.00000000000000))*(x2895)*(x2901)))+(((sj3)*(x2896)))+(((IkReal(-1.00000000000000))*(r11)*(x2895)*(x2900))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r01)*(x2895)*(x2900)))+(((IkReal(-1.00000000000000))*(x2895)*(x2896)))+(((cj3)*(r00)*(x2897)))+(((IkReal(-1.00000000000000))*(x2899)*(x2901)))+(((IkReal(-1.00000000000000))*(r11)*(x2899)*(x2900)))+(((r10)*(sj3)*(x2897))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2905=((IkReal(4.00000000000000))*(npx));
IkReal x2906=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((cj8)*(x2906)))+(((sj8)*(x2905))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2905)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2906)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((cj8)*(x2906)))+(((sj8)*(x2905)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2905)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2906)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((cj8)*(x2906)))+(((sj8)*(x2905)))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x2905)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x2906)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(IKsin(j5)))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((cj7)*(npy)*(sj8)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(npx)))+(((IkReal(-1.00000000000000))*(npz)*(sj7))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst58;
gconst58=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2907=((IkReal(1.00000000000000))*(sj5));
IkReal x2908=((r20)*(sj8));
IkReal x2909=((cj5)*(cj8));
IkReal x2910=((r11)*(sj3));
IkReal x2911=((cj3)*(r01));
IkReal x2912=((cj3)*(r00)*(sj8));
IkReal x2913=((r10)*(sj3)*(sj8));
if( IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(cj5)*(x2908)))+(((IkReal(-1.00000000000000))*(r21)*(x2909)))+(((IkReal(-1.00000000000000))*(x2907)*(x2913)))+(((IkReal(-1.00000000000000))*(x2907)*(x2912)))+(((IkReal(-1.00000000000000))*(cj8)*(x2907)*(x2910)))+(((IkReal(-1.00000000000000))*(cj8)*(x2907)*(x2911))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(x2907)*(x2908)))+(((x2909)*(x2911)))+(((cj5)*(x2912)))+(((x2909)*(x2910)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2907)))+(((cj5)*(x2913))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst59)*(((((IkReal(-1.00000000000000))*(cj5)*(x2908)))+(((IkReal(-1.00000000000000))*(r21)*(x2909)))+(((IkReal(-1.00000000000000))*(x2907)*(x2913)))+(((IkReal(-1.00000000000000))*(x2907)*(x2912)))+(((IkReal(-1.00000000000000))*(cj8)*(x2907)*(x2910)))+(((IkReal(-1.00000000000000))*(cj8)*(x2907)*(x2911)))))), ((gconst59)*(((((IkReal(-1.00000000000000))*(x2907)*(x2908)))+(((x2909)*(x2911)))+(((cj5)*(x2912)))+(((x2909)*(x2910)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x2907)))+(((cj5)*(x2913)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2914=IKsin(j4);
IkReal x2915=IKcos(j4);
IkReal x2916=((IkReal(1.00000000000000))*(cj8));
IkReal x2917=((cj3)*(r01));
IkReal x2918=((cj3)*(r00));
IkReal x2919=((cj7)*(cj8));
IkReal x2920=((r11)*(sj3));
IkReal x2921=((IkReal(1.00000000000000))*(sj8));
IkReal x2922=((r10)*(sj3));
IkReal x2923=((cj5)*(x2914));
IkReal x2924=((sj5)*(x2915));
IkReal x2925=((cj5)*(x2915));
IkReal x2926=((sj5)*(x2914));
IkReal x2927=((x2923)+(x2924));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x2927));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2916)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2925)))+(x2926));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2916)*(x2920)))+(((IkReal(-1.00000000000000))*(x2921)*(x2922)))+(x2925)+(((IkReal(-1.00000000000000))*(x2918)*(x2921)))+(((IkReal(-1.00000000000000))*(x2916)*(x2917)))+(((IkReal(-1.00000000000000))*(x2926))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x2919)*(x2922)))+(((r12)*(sj3)*(sj7)))+(((x2918)*(x2919)))+(x2927)+(((IkReal(-1.00000000000000))*(cj7)*(x2920)*(x2921)))+(((IkReal(-1.00000000000000))*(cj7)*(x2917)*(x2921))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2928=((r20)*(sj5));
IkReal x2929=((r22)*(sj7));
IkReal x2930=((cj8)*(r21));
IkReal x2931=((cj7)*(cj8));
IkReal x2932=((cj5)*(r20));
IkReal x2933=((cj7)*(r21)*(sj8));
if( IKabs(((gconst58)*(((((cj5)*(x2930)))+(((IkReal(-1.00000000000000))*(x2928)*(x2931)))+(((IkReal(-1.00000000000000))*(sj5)*(x2929)))+(((sj8)*(x2932)))+(((sj5)*(x2933))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst58)*(((((cj5)*(x2929)))+(((sj5)*(x2930)))+(((sj8)*(x2928)))+(((IkReal(-1.00000000000000))*(cj5)*(x2933)))+(((x2931)*(x2932))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst58)*(((((cj5)*(x2930)))+(((IkReal(-1.00000000000000))*(x2928)*(x2931)))+(((IkReal(-1.00000000000000))*(sj5)*(x2929)))+(((sj8)*(x2932)))+(((sj5)*(x2933)))))), ((gconst58)*(((((cj5)*(x2929)))+(((sj5)*(x2930)))+(((sj8)*(x2928)))+(((IkReal(-1.00000000000000))*(cj5)*(x2933)))+(((x2931)*(x2932)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2934=IKsin(j4);
IkReal x2935=IKcos(j4);
IkReal x2936=((IkReal(1.00000000000000))*(cj8));
IkReal x2937=((cj3)*(r01));
IkReal x2938=((cj3)*(r00));
IkReal x2939=((cj7)*(cj8));
IkReal x2940=((r11)*(sj3));
IkReal x2941=((IkReal(1.00000000000000))*(sj8));
IkReal x2942=((r10)*(sj3));
IkReal x2943=((cj5)*(x2934));
IkReal x2944=((sj5)*(x2935));
IkReal x2945=((cj5)*(x2935));
IkReal x2946=((sj5)*(x2934));
IkReal x2947=((x2944)+(x2943));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x2947));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2945)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x2936)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x2946));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2946)))+(((IkReal(-1.00000000000000))*(x2941)*(x2942)))+(((IkReal(-1.00000000000000))*(x2936)*(x2940)))+(((IkReal(-1.00000000000000))*(x2938)*(x2941)))+(x2945)+(((IkReal(-1.00000000000000))*(x2936)*(x2937))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x2940)*(x2941)))+(((r12)*(sj3)*(sj7)))+(((x2939)*(x2942)))+(x2947)+(((IkReal(-1.00000000000000))*(cj7)*(x2937)*(x2941)))+(((x2938)*(x2939))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2948=((cj3)*(cj8));
IkReal x2949=((r01)*(sj3));
IkReal x2950=((r02)*(sj3));
IkReal x2951=((IkReal(1.00000000000000))*(sj7));
IkReal x2952=((IkReal(1.00000000000000))*(r11));
IkReal x2953=((cj3)*(r12));
IkReal x2954=((IkReal(1.00000000000000))*(cj7));
IkReal x2955=((cj8)*(sj3));
IkReal x2956=((sj3)*(sj8));
IkReal x2957=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(1.00000000000000))+(((r00)*(x2956)))+(((IkReal(-1.00000000000000))*(r10)*(x2957)))+(((IkReal(-1.00000000000000))*(x2948)*(x2952)))+(((cj8)*(x2949))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2952)*(x2955)))+(((IkReal(-1.00000000000000))*(r00)*(x2957)))+(((IkReal(-1.00000000000000))*(r01)*(x2948)))+(((IkReal(-1.00000000000000))*(r10)*(x2956))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x2952)))+(((IkReal(-1.00000000000000))*(r00)*(x2954)*(x2955)))+(((sj7)*(x2953)))+(((IkReal(-1.00000000000000))*(x2950)*(x2951)))+(((cj7)*(sj8)*(x2949)))+(((cj7)*(r10)*(x2948))));
evalcond[6]=((((sj7)*(sj8)*(x2949)))+(((r10)*(sj7)*(x2948)))+(((IkReal(-1.00000000000000))*(x2953)*(x2954)))+(((cj7)*(x2950)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x2951)))+(((IkReal(-1.00000000000000))*(r00)*(x2951)*(x2955))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2958=((IkReal(4.00000000000000))*(sj7));
IkReal x2959=((npy)*(sj8));
IkReal x2960=((IkReal(4.00000000000000))*(cj7));
IkReal x2961=((cj8)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((x2958)*(x2959)))+(((npz)*(x2960)))+(((IkReal(0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x2958)*(x2961))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((npz)*(x2958)))+(((IkReal(-1.00000000000000))*(x2959)*(x2960)))+(((IkReal(-0.360000000000000))*(cj7)))+(((x2960)*(x2961))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((x2958)*(x2959)))+(((npz)*(x2960)))+(((IkReal(0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x2958)*(x2961)))))+IKsqr(((IkReal(-0.940000000000000))+(((npz)*(x2958)))+(((IkReal(-1.00000000000000))*(x2959)*(x2960)))+(((IkReal(-0.360000000000000))*(cj7)))+(((x2960)*(x2961)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((x2958)*(x2959)))+(((npz)*(x2960)))+(((IkReal(0.360000000000000))*(sj7)))+(((IkReal(-1.00000000000000))*(x2958)*(x2961)))), ((IkReal(-0.940000000000000))+(((npz)*(x2958)))+(((IkReal(-1.00000000000000))*(x2959)*(x2960)))+(((IkReal(-0.360000000000000))*(cj7)))+(((x2960)*(x2961)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2962=((IkReal(1.00000000000000))*(sj7));
IkReal x2963=((npy)*(sj8));
IkReal x2964=((cj8)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(npz)*(x2962)))+(((cj7)*(x2963)))+(((IkReal(-1.00000000000000))*(cj7)*(x2964)))+(((IkReal(0.0900000000000000))*(cj7))));
evalcond[1]=((IkReal(0.0300000000000000))+(((cj7)*(npz)))+(((sj7)*(x2963)))+(((IkReal(-1.00000000000000))*(x2962)*(x2964)))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(-0.250000000000000))*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst60;
gconst60=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2965=((r22)*(sj7));
IkReal x2966=((cj8)*(r10));
IkReal x2967=((cj3)*(r00));
IkReal x2968=((IkReal(1.00000000000000))*(sj5));
IkReal x2969=((cj7)*(sj5));
IkReal x2970=((r21)*(sj8));
IkReal x2971=((cj3)*(r02)*(sj7));
IkReal x2972=((cj5)*(cj7)*(sj3));
IkReal x2973=((IkReal(1.00000000000000))*(r11)*(sj8));
IkReal x2974=((cj5)*(cj7)*(cj8));
IkReal x2975=((r12)*(sj3)*(sj7));
IkReal x2976=((IkReal(1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8));
if( IKabs(((gconst61)*(((((cj5)*(x2975)))+(((IkReal(-1.00000000000000))*(x2972)*(x2973)))+(((IkReal(-1.00000000000000))*(x2965)*(x2968)))+(((x2967)*(x2974)))+(((cj5)*(x2971)))+(((x2966)*(x2972)))+(((IkReal(-1.00000000000000))*(cj5)*(x2976)))+(((x2969)*(x2970)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(r20)*(x2968))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst61)*(((((sj3)*(x2966)*(x2969)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2968)))+(((cj8)*(x2967)*(x2969)))+(((r20)*(x2974)))+(((sj5)*(x2975)))+(((cj5)*(x2965)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2970)))+(((sj5)*(x2971)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2968))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst61)*(((((cj5)*(x2975)))+(((IkReal(-1.00000000000000))*(x2972)*(x2973)))+(((IkReal(-1.00000000000000))*(x2965)*(x2968)))+(((x2967)*(x2974)))+(((cj5)*(x2971)))+(((x2966)*(x2972)))+(((IkReal(-1.00000000000000))*(cj5)*(x2976)))+(((x2969)*(x2970)))+(((IkReal(-1.00000000000000))*(cj7)*(cj8)*(r20)*(x2968)))))), ((gconst61)*(((((sj3)*(x2966)*(x2969)))+(((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x2968)))+(((cj8)*(x2967)*(x2969)))+(((r20)*(x2974)))+(((sj5)*(x2975)))+(((cj5)*(x2965)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x2970)))+(((sj5)*(x2971)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x2968)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2977=IKsin(j4);
IkReal x2978=IKcos(j4);
IkReal x2979=((IkReal(1.00000000000000))*(cj7));
IkReal x2980=((cj8)*(r20));
IkReal x2981=((cj3)*(r02));
IkReal x2982=((IkReal(1.00000000000000))*(sj7));
IkReal x2983=((sj3)*(sj7));
IkReal x2984=((r21)*(sj8));
IkReal x2985=((cj8)*(r10));
IkReal x2986=((cj5)*(x2977));
IkReal x2987=((sj5)*(x2978));
IkReal x2988=((r11)*(sj3)*(sj8));
IkReal x2989=((cj3)*(cj8)*(r00));
IkReal x2990=((cj5)*(x2978));
IkReal x2991=((cj3)*(r01)*(sj8));
IkReal x2992=((sj5)*(x2977));
IkReal x2993=((x2987)+(x2986));
evalcond[0]=((((cj7)*(x2984)))+(x2992)+(((IkReal(-1.00000000000000))*(x2990)))+(((IkReal(-1.00000000000000))*(r22)*(x2982)))+(((IkReal(-1.00000000000000))*(x2979)*(x2980))));
evalcond[1]=((((cj7)*(r22)))+(x2993)+(((IkReal(-1.00000000000000))*(x2980)*(x2982)))+(((sj7)*(x2984))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2979)*(x2988)))+(x2993)+(((IkReal(-1.00000000000000))*(x2979)*(x2991)))+(((r12)*(x2983)))+(((cj7)*(x2989)))+(((cj7)*(sj3)*(x2985)))+(((sj7)*(x2981))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2982)*(x2991)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x2979)))+(((IkReal(-1.00000000000000))*(x2982)*(x2988)))+(x2990)+(((IkReal(-1.00000000000000))*(x2992)))+(((sj7)*(x2989)))+(((x2983)*(x2985)))+(((IkReal(-1.00000000000000))*(x2979)*(x2981))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2994=((cj7)*(sj5));
IkReal x2995=((cj8)*(r20));
IkReal x2996=((cj5)*(cj7));
IkReal x2997=((IkReal(1.00000000000000))*(sj7));
IkReal x2998=((r21)*(sj8));
IkReal x2999=((sj7)*(x2998));
if( IKabs(((gconst60)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2997)))+(((r22)*(x2996)))+(((IkReal(-1.00000000000000))*(x2994)*(x2995)))+(((IkReal(-1.00000000000000))*(cj5)*(x2995)*(x2997)))+(((cj5)*(x2999)))+(((x2994)*(x2998))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((r22)*(x2994)))+(((IkReal(-1.00000000000000))*(x2996)*(x2998)))+(((IkReal(-1.00000000000000))*(sj5)*(x2995)*(x2997)))+(((x2995)*(x2996)))+(((cj5)*(r22)*(sj7)))+(((sj5)*(x2999))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst60)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2997)))+(((r22)*(x2996)))+(((IkReal(-1.00000000000000))*(x2994)*(x2995)))+(((IkReal(-1.00000000000000))*(cj5)*(x2995)*(x2997)))+(((cj5)*(x2999)))+(((x2994)*(x2998)))))), ((gconst60)*(((((r22)*(x2994)))+(((IkReal(-1.00000000000000))*(x2996)*(x2998)))+(((IkReal(-1.00000000000000))*(sj5)*(x2995)*(x2997)))+(((x2995)*(x2996)))+(((cj5)*(r22)*(sj7)))+(((sj5)*(x2999)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3000=IKsin(j4);
IkReal x3001=IKcos(j4);
IkReal x3002=((IkReal(1.00000000000000))*(cj7));
IkReal x3003=((cj8)*(r20));
IkReal x3004=((cj3)*(r02));
IkReal x3005=((IkReal(1.00000000000000))*(sj7));
IkReal x3006=((sj3)*(sj7));
IkReal x3007=((r21)*(sj8));
IkReal x3008=((cj8)*(r10));
IkReal x3009=((cj5)*(x3000));
IkReal x3010=((sj5)*(x3001));
IkReal x3011=((r11)*(sj3)*(sj8));
IkReal x3012=((cj3)*(cj8)*(r00));
IkReal x3013=((cj5)*(x3001));
IkReal x3014=((cj3)*(r01)*(sj8));
IkReal x3015=((sj5)*(x3000));
IkReal x3016=((x3009)+(x3010));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x3005)))+(x3015)+(((IkReal(-1.00000000000000))*(x3002)*(x3003)))+(((cj7)*(x3007)))+(((IkReal(-1.00000000000000))*(x3013))));
evalcond[1]=((((sj7)*(x3007)))+(((cj7)*(r22)))+(x3016)+(((IkReal(-1.00000000000000))*(x3003)*(x3005))));
evalcond[2]=((((sj7)*(x3004)))+(((cj7)*(x3012)))+(x3016)+(((IkReal(-1.00000000000000))*(x3002)*(x3011)))+(((cj7)*(sj3)*(x3008)))+(((r12)*(x3006)))+(((IkReal(-1.00000000000000))*(x3002)*(x3014))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3002)))+(((IkReal(-1.00000000000000))*(x3002)*(x3004)))+(((sj7)*(x3012)))+(x3013)+(((IkReal(-1.00000000000000))*(x3005)*(x3014)))+(((IkReal(-1.00000000000000))*(x3005)*(x3011)))+(((x3006)*(x3008)))+(((IkReal(-1.00000000000000))*(x3015))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x3017=((cj3)*(cj8));
IkReal x3018=((r01)*(sj3));
IkReal x3019=((r02)*(sj3));
IkReal x3020=((IkReal(1.00000000000000))*(sj7));
IkReal x3021=((IkReal(1.00000000000000))*(r11));
IkReal x3022=((cj3)*(r12));
IkReal x3023=((IkReal(1.00000000000000))*(cj7));
IkReal x3024=((cj8)*(sj3));
IkReal x3025=((sj3)*(sj8));
IkReal x3026=((IkReal(1.00000000000000))*(cj3)*(sj8));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x3017)*(x3021)))+(((cj8)*(x3018)))+(((r00)*(x3025)))+(((IkReal(-1.00000000000000))*(r10)*(x3026))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x3025)))+(((IkReal(-1.00000000000000))*(r01)*(x3017)))+(((IkReal(-1.00000000000000))*(x3021)*(x3024)))+(((IkReal(-1.00000000000000))*(r00)*(x3026))));
evalcond[5]=((((sj7)*(x3022)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(sj8)*(x3021)))+(((cj7)*(r10)*(x3017)))+(((IkReal(-1.00000000000000))*(x3019)*(x3020)))+(((IkReal(-1.00000000000000))*(r00)*(x3023)*(x3024)))+(((cj7)*(sj8)*(x3018))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x3020)*(x3024)))+(((IkReal(-1.00000000000000))*(x3022)*(x3023)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(sj8)*(x3020)))+(((cj7)*(x3019)))+(((sj7)*(sj8)*(x3018)))+(((r10)*(sj7)*(x3017))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3027=((IkReal(4.00000000000000))*(sj7));
IkReal x3028=((npy)*(sj8));
IkReal x3029=((IkReal(4.00000000000000))*(cj7));
IkReal x3030=((cj8)*(npx));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3029)))+(((IkReal(-1.00000000000000))*(x3027)*(x3028)))+(((x3027)*(x3030)))+(((IkReal(-0.360000000000000))*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((npz)*(x3027)))+(((IkReal(-1.00000000000000))*(x3028)*(x3029)))+(((x3029)*(x3030)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3029)))+(((IkReal(-1.00000000000000))*(x3027)*(x3028)))+(((x3027)*(x3030)))+(((IkReal(-0.360000000000000))*(sj7)))))+IKsqr(((IkReal(-0.940000000000000))+(((npz)*(x3027)))+(((IkReal(-1.00000000000000))*(x3028)*(x3029)))+(((x3029)*(x3030)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3029)))+(((IkReal(-1.00000000000000))*(x3027)*(x3028)))+(((x3027)*(x3030)))+(((IkReal(-0.360000000000000))*(sj7)))), ((IkReal(-0.940000000000000))+(((npz)*(x3027)))+(((IkReal(-1.00000000000000))*(x3028)*(x3029)))+(((x3029)*(x3030)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x3031=((IkReal(1.00000000000000))*(sj7));
IkReal x3032=((npy)*(sj8));
IkReal x3033=((cj8)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x3033)))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x3031)))+(((cj7)*(x3032))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(x3031)*(x3033)))+(((cj7)*(npz)))+(((IkReal(0.250000000000000))*(IKsin(j5))))+(((IkReal(0.0900000000000000))*(sj7)))+(((sj7)*(x3032))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst63;
gconst63=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3034=((cj3)*(cj5));
IkReal x3035=((r02)*(sj7));
IkReal x3036=((cj8)*(r00));
IkReal x3037=((r22)*(sj7));
IkReal x3038=((cj5)*(sj3));
IkReal x3039=((cj7)*(cj8));
IkReal x3040=((IkReal(1.00000000000000))*(sj5));
IkReal x3041=((r12)*(sj7));
IkReal x3042=((sj3)*(sj5));
IkReal x3043=((cj3)*(cj7)*(sj5));
IkReal x3044=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst63)*(((((IkReal(-1.00000000000000))*(x3037)*(x3040)))+(((IkReal(-1.00000000000000))*(r01)*(x3034)*(x3044)))+(((r10)*(x3038)*(x3039)))+(((IkReal(-1.00000000000000))*(r11)*(x3038)*(x3044)))+(((IkReal(-1.00000000000000))*(r20)*(x3039)*(x3040)))+(((x3034)*(x3035)))+(((x3038)*(x3041)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((cj7)*(x3034)*(x3036))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*(((((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x3040)))+(((r10)*(x3039)*(x3042)))+(((x3036)*(x3043)))+(((cj5)*(r20)*(x3039)))+(((cj5)*(x3037)))+(((cj3)*(sj5)*(x3035)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x3040)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3044)))+(((x3041)*(x3042))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst63)*(((((IkReal(-1.00000000000000))*(x3037)*(x3040)))+(((IkReal(-1.00000000000000))*(r01)*(x3034)*(x3044)))+(((r10)*(x3038)*(x3039)))+(((IkReal(-1.00000000000000))*(r11)*(x3038)*(x3044)))+(((IkReal(-1.00000000000000))*(r20)*(x3039)*(x3040)))+(((x3034)*(x3035)))+(((x3038)*(x3041)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((cj7)*(x3034)*(x3036)))))), ((gconst63)*(((((IkReal(-1.00000000000000))*(cj7)*(r11)*(sj3)*(sj8)*(x3040)))+(((r10)*(x3039)*(x3042)))+(((x3036)*(x3043)))+(((cj5)*(r20)*(x3039)))+(((cj5)*(x3037)))+(((cj3)*(sj5)*(x3035)))+(((IkReal(-1.00000000000000))*(cj3)*(cj7)*(r01)*(sj8)*(x3040)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3044)))+(((x3041)*(x3042)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3045=IKcos(j4);
IkReal x3046=IKsin(j4);
IkReal x3047=((IkReal(1.00000000000000))*(cj7));
IkReal x3048=((cj8)*(r20));
IkReal x3049=((cj3)*(r02));
IkReal x3050=((IkReal(1.00000000000000))*(sj7));
IkReal x3051=((sj3)*(sj7));
IkReal x3052=((r21)*(sj8));
IkReal x3053=((IkReal(1.00000000000000))*(cj5));
IkReal x3054=((cj8)*(r10));
IkReal x3055=((sj5)*(x3046));
IkReal x3056=((sj5)*(x3045));
IkReal x3057=((r11)*(sj3)*(sj8));
IkReal x3058=((cj3)*(cj8)*(r00));
IkReal x3059=((cj3)*(r01)*(sj8));
IkReal x3060=((x3045)*(x3053));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3060)))+(((IkReal(-1.00000000000000))*(r22)*(x3050)))+(((IkReal(-1.00000000000000))*(x3047)*(x3048)))+(x3055)+(((cj7)*(x3052))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x3046)*(x3053)))+(((IkReal(-1.00000000000000))*(x3056)))+(((IkReal(-1.00000000000000))*(x3048)*(x3050)))+(((sj7)*(x3052))));
evalcond[2]=((((cj5)*(x3046)))+(((sj7)*(x3049)))+(((cj7)*(sj3)*(x3054)))+(((cj7)*(x3058)))+(((IkReal(-1.00000000000000))*(x3047)*(x3057)))+(((IkReal(-1.00000000000000))*(x3047)*(x3059)))+(x3056)+(((r12)*(x3051))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3060)))+(((sj7)*(x3058)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3047)))+(((IkReal(-1.00000000000000))*(x3050)*(x3057)))+(((IkReal(-1.00000000000000))*(x3047)*(x3049)))+(((x3051)*(x3054)))+(((IkReal(-1.00000000000000))*(x3050)*(x3059)))+(x3055));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3061=((cj7)*(sj5));
IkReal x3062=((r21)*(sj8));
IkReal x3063=((cj5)*(cj7));
IkReal x3064=((cj8)*(r20));
IkReal x3065=((sj5)*(sj7));
IkReal x3066=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst62)*(((((IkReal(-1.00000000000000))*(x3061)*(x3062)))+(((x3061)*(x3064)))+(((r22)*(x3065)))+(((r22)*(x3063)))+(((IkReal(-1.00000000000000))*(x3064)*(x3066)))+(((cj5)*(sj7)*(x3062))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*(((((IkReal(-1.00000000000000))*(r22)*(x3066)))+(((x3062)*(x3065)))+(((r22)*(x3061)))+(((IkReal(-1.00000000000000))*(x3064)*(x3065)))+(((x3062)*(x3063)))+(((IkReal(-1.00000000000000))*(x3063)*(x3064))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst62)*(((((IkReal(-1.00000000000000))*(x3061)*(x3062)))+(((x3061)*(x3064)))+(((r22)*(x3065)))+(((r22)*(x3063)))+(((IkReal(-1.00000000000000))*(x3064)*(x3066)))+(((cj5)*(sj7)*(x3062)))))), ((gconst62)*(((((IkReal(-1.00000000000000))*(r22)*(x3066)))+(((x3062)*(x3065)))+(((r22)*(x3061)))+(((IkReal(-1.00000000000000))*(x3064)*(x3065)))+(((x3062)*(x3063)))+(((IkReal(-1.00000000000000))*(x3063)*(x3064)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3067=IKcos(j4);
IkReal x3068=IKsin(j4);
IkReal x3069=((IkReal(1.00000000000000))*(cj7));
IkReal x3070=((cj8)*(r20));
IkReal x3071=((cj3)*(r02));
IkReal x3072=((IkReal(1.00000000000000))*(sj7));
IkReal x3073=((sj3)*(sj7));
IkReal x3074=((r21)*(sj8));
IkReal x3075=((IkReal(1.00000000000000))*(cj5));
IkReal x3076=((cj8)*(r10));
IkReal x3077=((sj5)*(x3068));
IkReal x3078=((sj5)*(x3067));
IkReal x3079=((r11)*(sj3)*(sj8));
IkReal x3080=((cj3)*(cj8)*(r00));
IkReal x3081=((cj3)*(r01)*(sj8));
IkReal x3082=((x3067)*(x3075));
evalcond[0]=((x3077)+(((cj7)*(x3074)))+(((IkReal(-1.00000000000000))*(x3069)*(x3070)))+(((IkReal(-1.00000000000000))*(r22)*(x3072)))+(((IkReal(-1.00000000000000))*(x3082))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3068)*(x3075)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x3078)))+(((IkReal(-1.00000000000000))*(x3070)*(x3072)))+(((sj7)*(x3074))));
evalcond[2]=((((cj7)*(x3080)))+(x3078)+(((r12)*(x3073)))+(((IkReal(-1.00000000000000))*(x3069)*(x3079)))+(((IkReal(-1.00000000000000))*(x3069)*(x3081)))+(((sj7)*(x3071)))+(((cj5)*(x3068)))+(((cj7)*(sj3)*(x3076))));
evalcond[3]=((x3077)+(((IkReal(-1.00000000000000))*(x3069)*(x3071)))+(((IkReal(-1.00000000000000))*(x3072)*(x3081)))+(((x3073)*(x3076)))+(((sj7)*(x3080)))+(((IkReal(-1.00000000000000))*(x3072)*(x3079)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3069)))+(((IkReal(-1.00000000000000))*(x3082))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3083=((IkReal(4.00000000000000))*(sj7));
IkReal x3084=((npy)*(sj8));
IkReal x3085=((IkReal(4.00000000000000))*(cj7));
IkReal x3086=((cj8)*(npx));
if( IKabs(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3083)*(x3086)))+(((IkReal(0.120000000000000))*(cj6)))+(((IkReal(0.380000000000000))*(sj6)))+(((x3083)*(x3084)))+(((npz)*(x3085)))+(((IkReal(0.360000000000000))*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x3084)*(x3085)))+(((npz)*(x3083)))+(((x3085)*(x3086)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3083)*(x3086)))+(((IkReal(0.120000000000000))*(cj6)))+(((IkReal(0.380000000000000))*(sj6)))+(((x3083)*(x3084)))+(((npz)*(x3085)))+(((IkReal(0.360000000000000))*(sj7)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x3084)*(x3085)))+(((npz)*(x3083)))+(((x3085)*(x3086)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3083)*(x3086)))+(((IkReal(0.120000000000000))*(cj6)))+(((IkReal(0.380000000000000))*(sj6)))+(((x3083)*(x3084)))+(((npz)*(x3085)))+(((IkReal(0.360000000000000))*(sj7)))))), ((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x3084)*(x3085)))+(((npz)*(x3083)))+(((x3085)*(x3086)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x3087=IKsin(j5);
IkReal x3088=((IkReal(1.00000000000000))*(sj7));
IkReal x3089=((npy)*(sj8));
IkReal x3090=((cj8)*(npx));
IkReal x3091=((IkReal(0.250000000000000))*(x3087));
evalcond[0]=((((IkReal(0.0950000000000000))*(cj6)))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.0300000000000000))*(sj6)))+(((sj6)*(x3091))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x3090)))+(((cj7)*(x3089)))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(npz)*(x3088)))+(((IkReal(0.0900000000000000))*(cj7))));
evalcond[2]=((((cj7)*(npz)))+(((IkReal(0.0300000000000000))*(cj6)))+(((IkReal(-1.00000000000000))*(cj6)*(x3091)))+(((IkReal(-1.00000000000000))*(x3088)*(x3090)))+(((IkReal(0.0900000000000000))*(sj7)))+(((sj7)*(x3089)))+(((IkReal(0.0950000000000000))*(sj6))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5))))));
dummyeval[0]=((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3092=((IkReal(1.00000000000000))*(sj7));
IkReal x3093=((IkReal(1.00000000000000))*(cj3));
IkReal x3094=((cj7)*(r02));
IkReal x3095=((cj3)*(sj7));
IkReal x3096=((cj8)*(r00));
IkReal x3097=((cj8)*(npx));
IkReal x3098=((r01)*(sj3));
IkReal x3099=((cj7)*(sj8));
IkReal x3100=((r11)*(sj8));
IkReal x3101=((IkReal(1.00000000000000))*(cj7));
IkReal x3102=((sj7)*(sj8));
IkReal x3103=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x3092)))+(((npy)*(x3099)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x3097)*(x3101)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x3093)))+(((cj8)*(x3098)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x3093))));
evalcond[4]=((((r21)*(x3102)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x3092))));
evalcond[5]=((IkReal(0.0950000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x3092)*(x3097)))+(((npy)*(x3102)))+(((IkReal(0.0900000000000000))*(sj7))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj3)*(x3096)*(x3101)))+(((r12)*(x3095)))+(((x3098)*(x3099)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x3092)))+(((cj3)*(cj7)*(x3103)))+(((IkReal(-1.00000000000000))*(r11)*(x3093)*(x3099))));
evalcond[7]=((IkReal(1.00000000000000))+(((x3095)*(x3103)))+(((sj3)*(x3094)))+(((IkReal(-1.00000000000000))*(sj3)*(x3092)*(x3096)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3093)))+(((IkReal(-1.00000000000000))*(cj3)*(x3092)*(x3100)))+(((x3098)*(x3102))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x3092)))+(((IkReal(-1.00000000000000))*(x3093)*(x3094)))+(((x3095)*(x3096)))+(((IkReal(-1.00000000000000))*(sj3)*(x3092)*(x3100)))+(((sj3)*(sj7)*(x3103)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3101))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3104=((cj8)*(sj5));
IkReal x3105=((cj3)*(r01));
IkReal x3106=((IkReal(1.00000000000000))*(cj5));
IkReal x3107=((r11)*(sj3));
IkReal x3108=((sj5)*(sj8));
IkReal x3109=((r10)*(sj3));
IkReal x3110=((cj3)*(r00)*(sj8));
if( IKabs(((gconst49)*(((((cj5)*(cj8)*(r21)))+(((x3104)*(x3105)))+(((cj3)*(r00)*(x3108)))+(((x3104)*(x3107)))+(((x3108)*(x3109)))+(((cj5)*(r20)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(cj8)*(x3105)*(x3106)))+(((IkReal(-1.00000000000000))*(cj8)*(x3106)*(x3107)))+(((IkReal(-1.00000000000000))*(sj8)*(x3106)*(x3109)))+(((IkReal(-1.00000000000000))*(x3106)*(x3110)))+(((r21)*(x3104)))+(((r20)*(x3108))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst49)*(((((cj5)*(cj8)*(r21)))+(((x3104)*(x3105)))+(((cj3)*(r00)*(x3108)))+(((x3104)*(x3107)))+(((x3108)*(x3109)))+(((cj5)*(r20)*(sj8)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(cj8)*(x3105)*(x3106)))+(((IkReal(-1.00000000000000))*(cj8)*(x3106)*(x3107)))+(((IkReal(-1.00000000000000))*(sj8)*(x3106)*(x3109)))+(((IkReal(-1.00000000000000))*(x3106)*(x3110)))+(((r21)*(x3104)))+(((r20)*(x3108)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3111=IKsin(j4);
IkReal x3112=IKcos(j4);
IkReal x3113=((IkReal(1.00000000000000))*(cj8));
IkReal x3114=((cj3)*(r01));
IkReal x3115=((cj3)*(r00));
IkReal x3116=((cj7)*(cj8));
IkReal x3117=((IkReal(1.00000000000000))*(cj5));
IkReal x3118=((IkReal(1.00000000000000))*(sj8));
IkReal x3119=((r11)*(sj3));
IkReal x3120=((r10)*(sj3));
IkReal x3121=((sj5)*(x3111));
IkReal x3122=((sj5)*(x3112));
IkReal x3123=((x3112)*(x3117));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x3111)*(x3117)))+(((IkReal(-1.00000000000000))*(x3122))));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3113)))+(((IkReal(-1.00000000000000))*(x3123)))+(x3121));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3113)*(x3114)))+(((IkReal(-1.00000000000000))*(x3113)*(x3119)))+(((IkReal(-1.00000000000000))*(x3123)))+(((IkReal(-1.00000000000000))*(x3115)*(x3118)))+(x3121)+(((IkReal(-1.00000000000000))*(x3118)*(x3120))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((cj5)*(x3111)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3118)*(x3119)))+(((IkReal(-1.00000000000000))*(cj7)*(x3114)*(x3118)))+(((x3116)*(x3120)))+(((x3115)*(x3116)))+(x3122));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3124=((IkReal(1.00000000000000))*(cj5));
IkReal x3125=((r22)*(sj7));
IkReal x3126=((cj8)*(sj5));
IkReal x3127=((cj7)*(r20));
IkReal x3128=((r20)*(sj8));
IkReal x3129=((cj7)*(r21)*(sj8));
if( IKabs(((gconst48)*(((((sj5)*(x3125)))+(((IkReal(-1.00000000000000))*(sj5)*(x3129)))+(((cj5)*(x3128)))+(((cj5)*(cj8)*(r21)))+(((x3126)*(x3127))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((sj5)*(x3128)))+(((IkReal(-1.00000000000000))*(x3124)*(x3125)))+(((IkReal(-1.00000000000000))*(cj8)*(x3124)*(x3127)))+(((r21)*(x3126)))+(((cj5)*(x3129))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst48)*(((((sj5)*(x3125)))+(((IkReal(-1.00000000000000))*(sj5)*(x3129)))+(((cj5)*(x3128)))+(((cj5)*(cj8)*(r21)))+(((x3126)*(x3127)))))), ((gconst48)*(((((sj5)*(x3128)))+(((IkReal(-1.00000000000000))*(x3124)*(x3125)))+(((IkReal(-1.00000000000000))*(cj8)*(x3124)*(x3127)))+(((r21)*(x3126)))+(((cj5)*(x3129)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3130=IKsin(j4);
IkReal x3131=IKcos(j4);
IkReal x3132=((IkReal(1.00000000000000))*(cj8));
IkReal x3133=((cj3)*(r01));
IkReal x3134=((cj3)*(r00));
IkReal x3135=((cj7)*(cj8));
IkReal x3136=((IkReal(1.00000000000000))*(cj5));
IkReal x3137=((IkReal(1.00000000000000))*(sj8));
IkReal x3138=((r11)*(sj3));
IkReal x3139=((r10)*(sj3));
IkReal x3140=((sj5)*(x3130));
IkReal x3141=((sj5)*(x3131));
IkReal x3142=((x3131)*(x3136));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3141)))+(((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x3130)*(x3136)))+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3142)))+(((cj7)*(r21)*(sj8)))+(x3140)+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3132))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3132)*(x3133)))+(((IkReal(-1.00000000000000))*(x3142)))+(x3140)+(((IkReal(-1.00000000000000))*(x3132)*(x3138)))+(((IkReal(-1.00000000000000))*(x3137)*(x3139)))+(((IkReal(-1.00000000000000))*(x3134)*(x3137))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((cj5)*(x3130)))+(((x3135)*(x3139)))+(x3141)+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3137)*(x3138)))+(((x3134)*(x3135)))+(((IkReal(-1.00000000000000))*(cj7)*(x3133)*(x3137))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3143=((IkReal(1.00000000000000))*(sj7));
IkReal x3144=((IkReal(1.00000000000000))*(cj3));
IkReal x3145=((cj7)*(r02));
IkReal x3146=((cj3)*(sj7));
IkReal x3147=((cj8)*(r00));
IkReal x3148=((cj8)*(npx));
IkReal x3149=((r01)*(sj3));
IkReal x3150=((cj7)*(sj8));
IkReal x3151=((r11)*(sj8));
IkReal x3152=((IkReal(1.00000000000000))*(cj7));
IkReal x3153=((sj7)*(sj8));
IkReal x3154=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((npy)*(x3150)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x3148)*(x3152)))+(((IkReal(0.250000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(npz)*(x3143))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x3144)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x3144)))+(((cj8)*(x3149))));
evalcond[4]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(cj8)*(r20)*(x3143)))+(((r21)*(x3153))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x3143)*(x3148)))+(((IkReal(0.0900000000000000))*(sj7)))+(((npy)*(x3153))));
evalcond[6]=((((x3149)*(x3150)))+(((IkReal(-1.00000000000000))*(r11)*(x3144)*(x3150)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x3143)))+(((cj3)*(cj7)*(x3154)))+(((r12)*(x3146)))+(((IkReal(-1.00000000000000))*(sj3)*(x3147)*(x3152))));
evalcond[7]=((IkReal(-1.00000000000000))+(((x3149)*(x3153)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3144)))+(((x3146)*(x3154)))+(((IkReal(-1.00000000000000))*(cj3)*(x3143)*(x3151)))+(((IkReal(-1.00000000000000))*(sj3)*(x3143)*(x3147)))+(((sj3)*(x3145))));
evalcond[8]=((((sj3)*(sj7)*(x3154)))+(((x3146)*(x3147)))+(((IkReal(-1.00000000000000))*(sj3)*(x3143)*(x3151)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3152)))+(((IkReal(-1.00000000000000))*(x3144)*(x3145)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x3143))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3155=((IkReal(1.00000000000000))*(sj5));
IkReal x3156=((r20)*(sj8));
IkReal x3157=((cj5)*(cj8));
IkReal x3158=((r11)*(sj3));
IkReal x3159=((cj3)*(r01));
IkReal x3160=((cj3)*(r00)*(sj8));
IkReal x3161=((r10)*(sj3)*(sj8));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(x3155)*(x3158)))+(((IkReal(-1.00000000000000))*(cj8)*(x3155)*(x3159)))+(((IkReal(-1.00000000000000))*(x3155)*(x3160)))+(((IkReal(-1.00000000000000))*(r21)*(x3157)))+(((IkReal(-1.00000000000000))*(x3155)*(x3161)))+(((IkReal(-1.00000000000000))*(cj5)*(x3156))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((cj5)*(x3161)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x3155)))+(((x3157)*(x3159)))+(((cj5)*(x3160)))+(((x3157)*(x3158)))+(((IkReal(-1.00000000000000))*(x3155)*(x3156))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(cj8)*(x3155)*(x3158)))+(((IkReal(-1.00000000000000))*(cj8)*(x3155)*(x3159)))+(((IkReal(-1.00000000000000))*(x3155)*(x3160)))+(((IkReal(-1.00000000000000))*(r21)*(x3157)))+(((IkReal(-1.00000000000000))*(x3155)*(x3161)))+(((IkReal(-1.00000000000000))*(cj5)*(x3156)))))), ((gconst51)*(((((cj5)*(x3161)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x3155)))+(((x3157)*(x3159)))+(((cj5)*(x3160)))+(((x3157)*(x3158)))+(((IkReal(-1.00000000000000))*(x3155)*(x3156)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3162=IKsin(j4);
IkReal x3163=IKcos(j4);
IkReal x3164=((IkReal(1.00000000000000))*(cj8));
IkReal x3165=((cj3)*(r01));
IkReal x3166=((cj3)*(r00));
IkReal x3167=((cj7)*(cj8));
IkReal x3168=((r11)*(sj3));
IkReal x3169=((IkReal(1.00000000000000))*(sj8));
IkReal x3170=((r10)*(sj3));
IkReal x3171=((cj5)*(x3162));
IkReal x3172=((sj5)*(x3163));
IkReal x3173=((cj5)*(x3163));
IkReal x3174=((sj5)*(x3162));
IkReal x3175=((x3171)+(x3172));
evalcond[0]=((((cj8)*(r21)))+(x3175)+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3173)))+(x3174)+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3164)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3164)*(x3165)))+(((IkReal(-1.00000000000000))*(x3169)*(x3170)))+(x3173)+(((IkReal(-1.00000000000000))*(x3174)))+(((IkReal(-1.00000000000000))*(x3166)*(x3169)))+(((IkReal(-1.00000000000000))*(x3164)*(x3168))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x3166)*(x3167)))+(x3175)+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3168)*(x3169)))+(((IkReal(-1.00000000000000))*(cj7)*(x3165)*(x3169)))+(((x3167)*(x3170))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3176=((r22)*(sj7));
IkReal x3177=((cj8)*(sj5));
IkReal x3178=((sj5)*(sj8));
IkReal x3179=((cj7)*(r20));
IkReal x3180=((cj5)*(cj8));
IkReal x3181=((cj7)*(r21));
IkReal x3182=((cj5)*(sj8));
if( IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(sj5)*(x3176)))+(((r21)*(x3180)))+(((x3178)*(x3181)))+(((r20)*(x3182)))+(((IkReal(-1.00000000000000))*(x3177)*(x3179))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(x3181)*(x3182)))+(((r21)*(x3177)))+(((r20)*(x3178)))+(((cj5)*(x3176)))+(((x3179)*(x3180))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst50)*(((((IkReal(-1.00000000000000))*(sj5)*(x3176)))+(((r21)*(x3180)))+(((x3178)*(x3181)))+(((r20)*(x3182)))+(((IkReal(-1.00000000000000))*(x3177)*(x3179)))))), ((gconst50)*(((((IkReal(-1.00000000000000))*(x3181)*(x3182)))+(((r21)*(x3177)))+(((r20)*(x3178)))+(((cj5)*(x3176)))+(((x3179)*(x3180)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3183=IKsin(j4);
IkReal x3184=IKcos(j4);
IkReal x3185=((IkReal(1.00000000000000))*(cj8));
IkReal x3186=((cj3)*(r01));
IkReal x3187=((cj3)*(r00));
IkReal x3188=((cj7)*(cj8));
IkReal x3189=((r11)*(sj3));
IkReal x3190=((IkReal(1.00000000000000))*(sj8));
IkReal x3191=((r10)*(sj3));
IkReal x3192=((cj5)*(x3183));
IkReal x3193=((sj5)*(x3184));
IkReal x3194=((cj5)*(x3184));
IkReal x3195=((sj5)*(x3183));
IkReal x3196=((x3193)+(x3192));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(x3196));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3194)))+(((cj7)*(r21)*(sj8)))+(x3195)+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3185))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3187)*(x3190)))+(((IkReal(-1.00000000000000))*(x3190)*(x3191)))+(((IkReal(-1.00000000000000))*(x3195)))+(x3194)+(((IkReal(-1.00000000000000))*(x3185)*(x3186)))+(((IkReal(-1.00000000000000))*(x3185)*(x3189))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((x3188)*(x3191)))+(x3196)+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3186)*(x3190)))+(((IkReal(-1.00000000000000))*(cj7)*(x3189)*(x3190)))+(((x3187)*(x3188))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3197=((IkReal(1.00000000000000))*(cj3));
IkReal x3198=((cj8)*(r01));
IkReal x3199=((IkReal(1.00000000000000))*(sj7));
IkReal x3200=((r00)*(sj8));
IkReal x3201=((cj8)*(npx));
IkReal x3202=((r10)*(sj8));
IkReal x3203=((cj7)*(sj8));
IkReal x3204=((r02)*(sj3));
IkReal x3205=((sj7)*(sj8));
IkReal x3206=((cj8)*(r11));
IkReal x3207=((r01)*(sj3));
IkReal x3208=((cj3)*(sj7));
IkReal x3209=((IkReal(1.00000000000000))*(cj7));
IkReal x3210=((cj8)*(r10));
IkReal x3211=((IkReal(1.00000000000000))*(sj3));
IkReal x3212=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x3199)))+(((npy)*(x3203)))+(((IkReal(-1.00000000000000))*(x3201)*(x3209)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(1.00000000000000))+(((sj3)*(x3200)))+(((IkReal(-1.00000000000000))*(x3197)*(x3202)))+(((IkReal(-1.00000000000000))*(x3197)*(x3206)))+(((sj3)*(x3198))));
evalcond[5]=((IkReal(0.0300000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x3199)*(x3201)))+(((npy)*(x3205)))+(((IkReal(-0.250000000000000))*(sj5)))+(((IkReal(0.0900000000000000))*(sj7))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3197)*(x3200)))+(((IkReal(-1.00000000000000))*(x3202)*(x3211)))+(((IkReal(-1.00000000000000))*(x3206)*(x3211)))+(((IkReal(-1.00000000000000))*(x3197)*(x3198))));
evalcond[7]=((((r12)*(x3208)))+(((x3203)*(x3207)))+(((IkReal(-1.00000000000000))*(x3209)*(x3212)))+(((IkReal(-1.00000000000000))*(x3199)*(x3204)))+(((cj3)*(cj7)*(x3210)))+(((IkReal(-1.00000000000000))*(r11)*(x3197)*(x3203))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x3199)*(x3212)))+(((cj7)*(x3204)))+(((x3205)*(x3207)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3197)))+(((IkReal(-1.00000000000000))*(r11)*(x3197)*(x3205)))+(((x3208)*(x3210))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3213=((cj3)*(cj5));
IkReal x3214=((r02)*(sj7));
IkReal x3215=((cj8)*(r00));
IkReal x3216=((cj5)*(sj3));
IkReal x3217=((cj7)*(cj8));
IkReal x3218=((sj5)*(sj7));
IkReal x3219=((sj3)*(sj5));
IkReal x3220=((cj3)*(cj7)*(sj5));
IkReal x3221=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(r22)*(x3218)))+(((x3213)*(x3214)))+(((r12)*(sj7)*(x3216)))+(((IkReal(-1.00000000000000))*(r11)*(x3216)*(x3221)))+(((IkReal(-1.00000000000000))*(r01)*(x3213)*(x3221)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3217)))+(((cj7)*(x3213)*(x3215)))+(((r10)*(x3216)*(x3217)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((r12)*(sj3)*(x3218)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3221)))+(((cj5)*(r20)*(x3217)))+(((x3215)*(x3220)))+(((cj3)*(sj5)*(x3214)))+(((r10)*(x3217)*(x3219)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3220)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x3219)*(x3221))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst53)*(((((IkReal(-1.00000000000000))*(r22)*(x3218)))+(((x3213)*(x3214)))+(((r12)*(sj7)*(x3216)))+(((IkReal(-1.00000000000000))*(r11)*(x3216)*(x3221)))+(((IkReal(-1.00000000000000))*(r01)*(x3213)*(x3221)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3217)))+(((cj7)*(x3213)*(x3215)))+(((r10)*(x3216)*(x3217)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst53)*(((((r12)*(sj3)*(x3218)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3221)))+(((cj5)*(r20)*(x3217)))+(((x3215)*(x3220)))+(((cj3)*(sj5)*(x3214)))+(((r10)*(x3217)*(x3219)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3220)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(r11)*(x3219)*(x3221)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3222=IKsin(j4);
IkReal x3223=IKcos(j4);
IkReal x3224=((IkReal(1.00000000000000))*(cj7));
IkReal x3225=((cj8)*(r20));
IkReal x3226=((cj3)*(r02));
IkReal x3227=((IkReal(1.00000000000000))*(sj7));
IkReal x3228=((sj3)*(sj7));
IkReal x3229=((r21)*(sj8));
IkReal x3230=((cj8)*(r10));
IkReal x3231=((cj5)*(x3222));
IkReal x3232=((sj5)*(x3223));
IkReal x3233=((r11)*(sj3)*(sj8));
IkReal x3234=((cj3)*(cj8)*(r00));
IkReal x3235=((cj5)*(x3223));
IkReal x3236=((cj3)*(r01)*(sj8));
IkReal x3237=((sj5)*(x3222));
IkReal x3238=((x3232)+(x3231));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3235)))+(x3237)+(((IkReal(-1.00000000000000))*(x3224)*(x3225)))+(((IkReal(-1.00000000000000))*(r22)*(x3227)))+(((cj7)*(x3229))));
evalcond[1]=((((cj7)*(r22)))+(x3238)+(((sj7)*(x3229)))+(((IkReal(-1.00000000000000))*(x3225)*(x3227))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3224)*(x3236)))+(((cj7)*(sj3)*(x3230)))+(x3238)+(((cj7)*(x3234)))+(((r12)*(x3228)))+(((IkReal(-1.00000000000000))*(x3224)*(x3233)))+(((sj7)*(x3226))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3224)))+(((x3228)*(x3230)))+(((sj7)*(x3234)))+(x3235)+(((IkReal(-1.00000000000000))*(x3227)*(x3236)))+(((IkReal(-1.00000000000000))*(x3227)*(x3233)))+(((IkReal(-1.00000000000000))*(x3237)))+(((IkReal(-1.00000000000000))*(x3224)*(x3226))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3239=((sj5)*(sj7));
IkReal x3240=((r21)*(sj8));
IkReal x3241=((cj7)*(sj5));
IkReal x3242=((cj8)*(r20));
IkReal x3243=((cj5)*(cj7));
IkReal x3244=((cj5)*(sj7));
if( IKabs(((gconst52)*(((((x3240)*(x3241)))+(((r22)*(x3243)))+(((x3240)*(x3244)))+(((IkReal(-1.00000000000000))*(x3242)*(x3244)))+(((IkReal(-1.00000000000000))*(x3241)*(x3242)))+(((IkReal(-1.00000000000000))*(r22)*(x3239))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((x3242)*(x3243)))+(((IkReal(-1.00000000000000))*(x3239)*(x3242)))+(((r22)*(x3244)))+(((x3239)*(x3240)))+(((r22)*(x3241)))+(((IkReal(-1.00000000000000))*(x3240)*(x3243))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst52)*(((((x3240)*(x3241)))+(((r22)*(x3243)))+(((x3240)*(x3244)))+(((IkReal(-1.00000000000000))*(x3242)*(x3244)))+(((IkReal(-1.00000000000000))*(x3241)*(x3242)))+(((IkReal(-1.00000000000000))*(r22)*(x3239)))))), ((gconst52)*(((((x3242)*(x3243)))+(((IkReal(-1.00000000000000))*(x3239)*(x3242)))+(((r22)*(x3244)))+(((x3239)*(x3240)))+(((r22)*(x3241)))+(((IkReal(-1.00000000000000))*(x3240)*(x3243)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3245=IKsin(j4);
IkReal x3246=IKcos(j4);
IkReal x3247=((IkReal(1.00000000000000))*(cj7));
IkReal x3248=((cj8)*(r20));
IkReal x3249=((cj3)*(r02));
IkReal x3250=((IkReal(1.00000000000000))*(sj7));
IkReal x3251=((sj3)*(sj7));
IkReal x3252=((r21)*(sj8));
IkReal x3253=((cj8)*(r10));
IkReal x3254=((cj5)*(x3245));
IkReal x3255=((sj5)*(x3246));
IkReal x3256=((r11)*(sj3)*(sj8));
IkReal x3257=((cj3)*(cj8)*(r00));
IkReal x3258=((cj5)*(x3246));
IkReal x3259=((cj3)*(r01)*(sj8));
IkReal x3260=((sj5)*(x3245));
IkReal x3261=((x3254)+(x3255));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x3250)))+(((cj7)*(x3252)))+(((IkReal(-1.00000000000000))*(x3247)*(x3248)))+(x3260)+(((IkReal(-1.00000000000000))*(x3258))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3248)*(x3250)))+(((cj7)*(r22)))+(((sj7)*(x3252)))+(x3261));
evalcond[2]=((((r12)*(x3251)))+(((IkReal(-1.00000000000000))*(x3247)*(x3256)))+(((sj7)*(x3249)))+(((IkReal(-1.00000000000000))*(x3247)*(x3259)))+(((cj7)*(x3257)))+(((cj7)*(sj3)*(x3253)))+(x3261));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3247)))+(((IkReal(-1.00000000000000))*(x3247)*(x3249)))+(x3258)+(((sj7)*(x3257)))+(((IkReal(-1.00000000000000))*(x3250)*(x3256)))+(((IkReal(-1.00000000000000))*(x3260)))+(((IkReal(-1.00000000000000))*(x3250)*(x3259)))+(((x3251)*(x3253))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3262=((IkReal(1.00000000000000))*(cj3));
IkReal x3263=((cj8)*(r01));
IkReal x3264=((IkReal(1.00000000000000))*(sj7));
IkReal x3265=((r00)*(sj8));
IkReal x3266=((cj8)*(npx));
IkReal x3267=((r10)*(sj8));
IkReal x3268=((cj7)*(sj8));
IkReal x3269=((r02)*(sj3));
IkReal x3270=((sj7)*(sj8));
IkReal x3271=((cj8)*(r11));
IkReal x3272=((r01)*(sj3));
IkReal x3273=((cj3)*(sj7));
IkReal x3274=((IkReal(1.00000000000000))*(cj7));
IkReal x3275=((cj8)*(r10));
IkReal x3276=((IkReal(1.00000000000000))*(sj3));
IkReal x3277=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((npy)*(x3268)))+(((IkReal(-1.00000000000000))*(x3266)*(x3274)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x3264)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x3262)*(x3267)))+(((sj3)*(x3265)))+(((sj3)*(x3263)))+(((IkReal(-1.00000000000000))*(x3262)*(x3271))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(x3264)*(x3266)))+(((cj7)*(npz)))+(((npy)*(x3270)))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3267)*(x3276)))+(((IkReal(-1.00000000000000))*(x3262)*(x3265)))+(((IkReal(-1.00000000000000))*(x3262)*(x3263)))+(((IkReal(-1.00000000000000))*(x3271)*(x3276))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x3274)*(x3277)))+(((IkReal(-1.00000000000000))*(r11)*(x3262)*(x3268)))+(((cj3)*(cj7)*(x3275)))+(((IkReal(-1.00000000000000))*(x3264)*(x3269)))+(((r12)*(x3273)))+(((x3268)*(x3272))));
evalcond[8]=((((cj7)*(x3269)))+(((x3270)*(x3272)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3262)))+(((IkReal(-1.00000000000000))*(r11)*(x3262)*(x3270)))+(((x3273)*(x3275)))+(((IkReal(-1.00000000000000))*(x3264)*(x3277))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3278=((cj3)*(cj5));
IkReal x3279=((r02)*(sj7));
IkReal x3280=((cj8)*(r00));
IkReal x3281=((cj5)*(sj3));
IkReal x3282=((cj7)*(cj8));
IkReal x3283=((sj5)*(sj7));
IkReal x3284=((sj3)*(sj5));
IkReal x3285=((cj3)*(cj7)*(sj5));
IkReal x3286=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(r22)*(x3283)))+(((x3278)*(x3279)))+(((IkReal(-1.00000000000000))*(r01)*(x3278)*(x3286)))+(((r10)*(x3281)*(x3282)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3282)))+(((IkReal(-1.00000000000000))*(r11)*(x3281)*(x3286)))+(((cj7)*(x3278)*(x3280)))+(((r12)*(sj7)*(x3281)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((x3280)*(x3285)))+(((IkReal(-1.00000000000000))*(r11)*(x3284)*(x3286)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3285)))+(((cj5)*(r20)*(x3282)))+(((r10)*(x3282)*(x3284)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3286)))+(((r12)*(sj3)*(x3283)))+(((cj5)*(r22)*(sj7)))+(((cj3)*(sj5)*(x3279))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst55)*(((((IkReal(-1.00000000000000))*(r22)*(x3283)))+(((x3278)*(x3279)))+(((IkReal(-1.00000000000000))*(r01)*(x3278)*(x3286)))+(((r10)*(x3281)*(x3282)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3282)))+(((IkReal(-1.00000000000000))*(r11)*(x3281)*(x3286)))+(((cj7)*(x3278)*(x3280)))+(((r12)*(sj7)*(x3281)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst55)*(((((x3280)*(x3285)))+(((IkReal(-1.00000000000000))*(r11)*(x3284)*(x3286)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3285)))+(((cj5)*(r20)*(x3282)))+(((r10)*(x3282)*(x3284)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3286)))+(((r12)*(sj3)*(x3283)))+(((cj5)*(r22)*(sj7)))+(((cj3)*(sj5)*(x3279)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3287=IKcos(j4);
IkReal x3288=IKsin(j4);
IkReal x3289=((IkReal(1.00000000000000))*(cj7));
IkReal x3290=((cj8)*(r20));
IkReal x3291=((cj3)*(r02));
IkReal x3292=((IkReal(1.00000000000000))*(sj7));
IkReal x3293=((sj3)*(sj7));
IkReal x3294=((r21)*(sj8));
IkReal x3295=((IkReal(1.00000000000000))*(cj5));
IkReal x3296=((cj8)*(r10));
IkReal x3297=((sj5)*(x3288));
IkReal x3298=((sj5)*(x3287));
IkReal x3299=((r11)*(sj3)*(sj8));
IkReal x3300=((cj3)*(cj8)*(r00));
IkReal x3301=((cj3)*(r01)*(sj8));
IkReal x3302=((x3287)*(x3295));
evalcond[0]=((x3297)+(((IkReal(-1.00000000000000))*(x3302)))+(((IkReal(-1.00000000000000))*(r22)*(x3292)))+(((IkReal(-1.00000000000000))*(x3289)*(x3290)))+(((cj7)*(x3294))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3298)))+(((IkReal(-1.00000000000000))*(x3288)*(x3295)))+(((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x3290)*(x3292)))+(((sj7)*(x3294))));
evalcond[2]=((((cj7)*(x3300)))+(((IkReal(-1.00000000000000))*(x3289)*(x3299)))+(x3298)+(((sj7)*(x3291)))+(((r12)*(x3293)))+(((IkReal(-1.00000000000000))*(x3289)*(x3301)))+(((cj5)*(x3288)))+(((cj7)*(sj3)*(x3296))));
evalcond[3]=((((sj7)*(x3300)))+(x3297)+(((IkReal(-1.00000000000000))*(x3302)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3289)))+(((IkReal(-1.00000000000000))*(x3292)*(x3299)))+(((IkReal(-1.00000000000000))*(x3292)*(x3301)))+(((IkReal(-1.00000000000000))*(x3289)*(x3291)))+(((x3293)*(x3296))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3303=((cj7)*(sj5));
IkReal x3304=((r21)*(sj8));
IkReal x3305=((cj5)*(cj7));
IkReal x3306=((cj8)*(r20));
IkReal x3307=((sj5)*(sj7));
IkReal x3308=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst54)*(((((r22)*(x3305)))+(((IkReal(-1.00000000000000))*(x3303)*(x3304)))+(((cj5)*(sj7)*(x3304)))+(((r22)*(x3307)))+(((x3303)*(x3306)))+(((IkReal(-1.00000000000000))*(x3306)*(x3308))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(r22)*(x3308)))+(((IkReal(-1.00000000000000))*(x3306)*(x3307)))+(((x3304)*(x3307)))+(((x3304)*(x3305)))+(((r22)*(x3303)))+(((IkReal(-1.00000000000000))*(x3305)*(x3306))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst54)*(((((r22)*(x3305)))+(((IkReal(-1.00000000000000))*(x3303)*(x3304)))+(((cj5)*(sj7)*(x3304)))+(((r22)*(x3307)))+(((x3303)*(x3306)))+(((IkReal(-1.00000000000000))*(x3306)*(x3308)))))), ((gconst54)*(((((IkReal(-1.00000000000000))*(r22)*(x3308)))+(((IkReal(-1.00000000000000))*(x3306)*(x3307)))+(((x3304)*(x3307)))+(((x3304)*(x3305)))+(((r22)*(x3303)))+(((IkReal(-1.00000000000000))*(x3305)*(x3306)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3309=IKcos(j4);
IkReal x3310=IKsin(j4);
IkReal x3311=((IkReal(1.00000000000000))*(cj7));
IkReal x3312=((cj8)*(r20));
IkReal x3313=((cj3)*(r02));
IkReal x3314=((IkReal(1.00000000000000))*(sj7));
IkReal x3315=((sj3)*(sj7));
IkReal x3316=((r21)*(sj8));
IkReal x3317=((IkReal(1.00000000000000))*(cj5));
IkReal x3318=((cj8)*(r10));
IkReal x3319=((sj5)*(x3310));
IkReal x3320=((sj5)*(x3309));
IkReal x3321=((r11)*(sj3)*(sj8));
IkReal x3322=((cj3)*(cj8)*(r00));
IkReal x3323=((cj3)*(r01)*(sj8));
IkReal x3324=((x3309)*(x3317));
evalcond[0]=((((cj7)*(x3316)))+(((IkReal(-1.00000000000000))*(r22)*(x3314)))+(x3319)+(((IkReal(-1.00000000000000))*(x3324)))+(((IkReal(-1.00000000000000))*(x3311)*(x3312))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x3312)*(x3314)))+(((IkReal(-1.00000000000000))*(x3310)*(x3317)))+(((sj7)*(x3316)))+(((IkReal(-1.00000000000000))*(x3320))));
evalcond[2]=((((r12)*(x3315)))+(((cj7)*(x3322)))+(((cj5)*(x3310)))+(((IkReal(-1.00000000000000))*(x3311)*(x3323)))+(((sj7)*(x3313)))+(((IkReal(-1.00000000000000))*(x3311)*(x3321)))+(((cj7)*(sj3)*(x3318)))+(x3320));
evalcond[3]=((((sj7)*(x3322)))+(((IkReal(-1.00000000000000))*(x3311)*(x3313)))+(((IkReal(-1.00000000000000))*(x3314)*(x3321)))+(((IkReal(-1.00000000000000))*(x3314)*(x3323)))+(x3319)+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3311)))+(((IkReal(-1.00000000000000))*(x3324)))+(((x3315)*(x3318))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3325=((r21)*(sj8));
IkReal x3326=((IkReal(1.00000000000000))*(r22));
IkReal x3327=((cj5)*(sj7));
IkReal x3328=((cj6)*(cj7));
IkReal x3329=((sj5)*(sj7));
IkReal x3330=((cj5)*(cj8)*(r20));
IkReal x3331=((IkReal(1.00000000000000))*(x3328));
IkReal x3332=((cj8)*(r20)*(sj5));
if( IKabs(((gconst47)*(((((cj6)*(r22)*(x3329)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x3326)))+(((IkReal(-1.00000000000000))*(x3325)*(x3327)))+(((cj8)*(r20)*(x3327)))+(((x3328)*(x3332)))+(((IkReal(-1.00000000000000))*(sj5)*(x3325)*(x3331))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x3330)*(x3331)))+(((IkReal(-1.00000000000000))*(x3325)*(x3329)))+(((IkReal(-1.00000000000000))*(cj6)*(x3326)*(x3327)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x3326)))+(((cj5)*(x3325)*(x3328)))+(((cj8)*(r20)*(x3329))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst47)*(((((cj6)*(r22)*(x3329)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x3326)))+(((IkReal(-1.00000000000000))*(x3325)*(x3327)))+(((cj8)*(r20)*(x3327)))+(((x3328)*(x3332)))+(((IkReal(-1.00000000000000))*(sj5)*(x3325)*(x3331)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(x3330)*(x3331)))+(((IkReal(-1.00000000000000))*(x3325)*(x3329)))+(((IkReal(-1.00000000000000))*(cj6)*(x3326)*(x3327)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x3326)))+(((cj5)*(x3325)*(x3328)))+(((cj8)*(r20)*(x3329)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3333=IKsin(j4);
IkReal x3334=IKcos(j4);
IkReal x3335=((IkReal(1.00000000000000))*(cj8));
IkReal x3336=((cj3)*(r01));
IkReal x3337=((IkReal(1.00000000000000))*(sj8));
IkReal x3338=((r11)*(sj3));
IkReal x3339=((cj3)*(r00));
IkReal x3340=((IkReal(1.00000000000000))*(sj6));
IkReal x3341=((IkReal(1.00000000000000))*(cj7));
IkReal x3342=((cj3)*(r02));
IkReal x3343=((cj8)*(sj7));
IkReal x3344=((r12)*(sj3));
IkReal x3345=((cj7)*(cj8));
IkReal x3346=((r21)*(sj8));
IkReal x3347=((r10)*(sj3));
IkReal x3348=((sj5)*(x3334));
IkReal x3349=((cj5)*(x3334));
IkReal x3350=((sj5)*(x3333));
IkReal x3351=((cj5)*(x3333));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x3340)*(x3351)))+(((IkReal(-1.00000000000000))*(x3340)*(x3348))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3335)))+(x3350)+(((IkReal(-1.00000000000000))*(x3349)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x3346))));
evalcond[2]=((((cj7)*(r22)))+(((cj6)*(x3348)))+(((cj6)*(x3351)))+(((sj7)*(x3346)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x3335))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3335)*(x3336)))+(((IkReal(-1.00000000000000))*(x3337)*(x3339)))+(((IkReal(-1.00000000000000))*(x3337)*(x3347)))+(((IkReal(-1.00000000000000))*(x3340)*(x3349)))+(((IkReal(-1.00000000000000))*(x3335)*(x3338)))+(((sj6)*(x3350))));
evalcond[4]=((x3348)+(((IkReal(-1.00000000000000))*(cj7)*(x3336)*(x3337)))+(((x3339)*(x3345)))+(((x3345)*(x3347)))+(x3351)+(((sj7)*(x3344)))+(((sj7)*(x3342)))+(((IkReal(-1.00000000000000))*(cj7)*(x3337)*(x3338))));
evalcond[5]=((((x3343)*(x3347)))+(((IkReal(-1.00000000000000))*(cj6)*(x3350)))+(((IkReal(-1.00000000000000))*(x3341)*(x3342)))+(((x3339)*(x3343)))+(((IkReal(-1.00000000000000))*(sj7)*(x3336)*(x3337)))+(((IkReal(-1.00000000000000))*(sj7)*(x3337)*(x3338)))+(((cj6)*(x3349)))+(((IkReal(-1.00000000000000))*(x3341)*(x3344))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3352=((sj5)*(sj6));
IkReal x3353=((r22)*(sj7));
IkReal x3354=((r20)*(sj8));
IkReal x3355=((cj8)*(r21));
IkReal x3356=((cj5)*(sj6));
IkReal x3357=((cj7)*(cj8)*(r20));
IkReal x3358=((cj7)*(r21)*(sj8));
if( IKabs(((gconst46)*(((((x3352)*(x3357)))+(((IkReal(-1.00000000000000))*(x3352)*(x3358)))+(((cj5)*(x3355)))+(((cj5)*(x3354)))+(((x3352)*(x3353))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((x3356)*(x3358)))+(((IkReal(-1.00000000000000))*(x3353)*(x3356)))+(((IkReal(-1.00000000000000))*(x3356)*(x3357)))+(((sj5)*(x3355)))+(((sj5)*(x3354))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst46)*(((((x3352)*(x3357)))+(((IkReal(-1.00000000000000))*(x3352)*(x3358)))+(((cj5)*(x3355)))+(((cj5)*(x3354)))+(((x3352)*(x3353)))))), ((gconst46)*(((((x3356)*(x3358)))+(((IkReal(-1.00000000000000))*(x3353)*(x3356)))+(((IkReal(-1.00000000000000))*(x3356)*(x3357)))+(((sj5)*(x3355)))+(((sj5)*(x3354)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3359=IKsin(j4);
IkReal x3360=IKcos(j4);
IkReal x3361=((IkReal(1.00000000000000))*(cj8));
IkReal x3362=((cj3)*(r01));
IkReal x3363=((IkReal(1.00000000000000))*(sj8));
IkReal x3364=((r11)*(sj3));
IkReal x3365=((cj3)*(r00));
IkReal x3366=((IkReal(1.00000000000000))*(sj6));
IkReal x3367=((IkReal(1.00000000000000))*(cj7));
IkReal x3368=((cj3)*(r02));
IkReal x3369=((cj8)*(sj7));
IkReal x3370=((r12)*(sj3));
IkReal x3371=((cj7)*(cj8));
IkReal x3372=((r21)*(sj8));
IkReal x3373=((r10)*(sj3));
IkReal x3374=((sj5)*(x3360));
IkReal x3375=((cj5)*(x3360));
IkReal x3376=((sj5)*(x3359));
IkReal x3377=((cj5)*(x3359));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x3366)*(x3374)))+(((IkReal(-1.00000000000000))*(x3366)*(x3377))));
evalcond[1]=((((cj7)*(x3372)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x3375)))+(x3376)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3361))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(sj7)*(x3361)))+(((cj6)*(x3377)))+(((cj7)*(r22)))+(((cj6)*(x3374)))+(((sj7)*(x3372))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3363)*(x3373)))+(((sj6)*(x3376)))+(((IkReal(-1.00000000000000))*(x3361)*(x3362)))+(((IkReal(-1.00000000000000))*(x3363)*(x3365)))+(((IkReal(-1.00000000000000))*(x3366)*(x3375)))+(((IkReal(-1.00000000000000))*(x3361)*(x3364))));
evalcond[4]=((((sj7)*(x3368)))+(((IkReal(-1.00000000000000))*(cj7)*(x3363)*(x3364)))+(((x3371)*(x3373)))+(x3377)+(x3374)+(((x3365)*(x3371)))+(((IkReal(-1.00000000000000))*(cj7)*(x3362)*(x3363)))+(((sj7)*(x3370))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj6)*(x3376)))+(((x3369)*(x3373)))+(((IkReal(-1.00000000000000))*(x3367)*(x3370)))+(((IkReal(-1.00000000000000))*(x3367)*(x3368)))+(((IkReal(-1.00000000000000))*(sj7)*(x3363)*(x3364)))+(((x3365)*(x3369)))+(((IkReal(-1.00000000000000))*(sj7)*(x3362)*(x3363)))+(((cj6)*(x3375))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3378=((IkReal(4.00000000000000))*(npx));
IkReal x3379=((IkReal(4.00000000000000))*(npy));
if( IKabs(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj8)*(x3379)))+(((IkReal(-1.00000000000000))*(sj8)*(x3378)))+(((IkReal(-0.380000000000000))*(cj6)))+(((IkReal(0.120000000000000))*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x3378)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x3379)))+(((IkReal(-0.360000000000000))*(cj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj8)*(x3379)))+(((IkReal(-1.00000000000000))*(sj8)*(x3378)))+(((IkReal(-0.380000000000000))*(cj6)))+(((IkReal(0.120000000000000))*(sj6)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x3378)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x3379)))+(((IkReal(-0.360000000000000))*(cj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj6) != 0)?((IkReal)1/(sj6)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj8)*(x3379)))+(((IkReal(-1.00000000000000))*(sj8)*(x3378)))+(((IkReal(-0.380000000000000))*(cj6)))+(((IkReal(0.120000000000000))*(sj6)))))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj7)))+(((cj7)*(cj8)*(x3378)))+(((IkReal(-1.00000000000000))*(cj7)*(sj8)*(x3379)))+(((IkReal(-0.360000000000000))*(cj7)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x3380=IKsin(j5);
IkReal x3381=((IkReal(1.00000000000000))*(sj7));
IkReal x3382=((npy)*(sj8));
IkReal x3383=((cj8)*(npx));
IkReal x3384=((IkReal(0.250000000000000))*(x3380));
evalcond[0]=((((IkReal(0.0950000000000000))*(cj6)))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.0300000000000000))*(sj6)))+(((sj6)*(x3384))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.250000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj7)*(x3383)))+(((IkReal(-1.00000000000000))*(npz)*(x3381)))+(((cj7)*(x3382)))+(((IkReal(0.0900000000000000))*(cj7))));
evalcond[2]=((((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(cj6)*(x3384)))+(((IkReal(0.0300000000000000))*(cj6)))+(((sj7)*(x3382)))+(((IkReal(-1.00000000000000))*(x3381)*(x3383)))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(0.0950000000000000))*(sj6))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5))))));
dummyeval[0]=((((sj6)*((sj5)*(sj5))))+(((sj6)*((cj5)*(cj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5))))));
dummyeval[0]=((((cj6)*((cj5)*(cj5))))+(((cj6)*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3385=((IkReal(1.00000000000000))*(sj7));
IkReal x3386=((IkReal(1.00000000000000))*(cj3));
IkReal x3387=((cj7)*(r02));
IkReal x3388=((cj3)*(sj7));
IkReal x3389=((cj8)*(r00));
IkReal x3390=((cj8)*(npx));
IkReal x3391=((r01)*(sj3));
IkReal x3392=((cj7)*(sj8));
IkReal x3393=((r11)*(sj8));
IkReal x3394=((IkReal(1.00000000000000))*(cj7));
IkReal x3395=((sj7)*(sj8));
IkReal x3396=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x3390)*(x3394)))+(((npy)*(x3392)))+(((IkReal(-1.00000000000000))*(npz)*(x3385)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj8)*(r11)*(x3386)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x3386)))+(((cj8)*(x3391))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj8)*(r20)*(x3385)))+(((r21)*(x3395)))+(((cj7)*(r22))));
evalcond[5]=((IkReal(0.0950000000000000))+(((cj7)*(npz)))+(((npy)*(x3395)))+(((IkReal(-1.00000000000000))*(x3385)*(x3390)))+(((IkReal(0.0900000000000000))*(sj7))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(x3386)*(x3392)))+(((r12)*(x3388)))+(((cj3)*(cj7)*(x3396)))+(((x3391)*(x3392)))+(((IkReal(-1.00000000000000))*(sj3)*(x3389)*(x3394)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x3385))));
evalcond[7]=((IkReal(1.00000000000000))+(((sj3)*(x3387)))+(((x3391)*(x3395)))+(((IkReal(-1.00000000000000))*(cj3)*(x3385)*(x3393)))+(((IkReal(-1.00000000000000))*(sj3)*(x3385)*(x3389)))+(((x3388)*(x3396)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3386))));
evalcond[8]=((((sj3)*(sj7)*(x3396)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3394)))+(((IkReal(-1.00000000000000))*(x3386)*(x3387)))+(((IkReal(-1.00000000000000))*(sj3)*(x3385)*(x3393)))+(((x3388)*(x3389)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x3385))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3397=((cj8)*(sj5));
IkReal x3398=((cj3)*(r01));
IkReal x3399=((IkReal(1.00000000000000))*(cj5));
IkReal x3400=((r11)*(sj3));
IkReal x3401=((sj5)*(sj8));
IkReal x3402=((r10)*(sj3));
IkReal x3403=((cj3)*(r00)*(sj8));
if( IKabs(((gconst49)*(((((x3397)*(x3398)))+(((cj5)*(cj8)*(r21)))+(((x3397)*(x3400)))+(((x3401)*(x3402)))+(((cj5)*(r20)*(sj8)))+(((cj3)*(r00)*(x3401))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(sj8)*(x3399)*(x3402)))+(((IkReal(-1.00000000000000))*(x3399)*(x3403)))+(((r21)*(x3397)))+(((IkReal(-1.00000000000000))*(cj8)*(x3399)*(x3400)))+(((r20)*(x3401)))+(((IkReal(-1.00000000000000))*(cj8)*(x3398)*(x3399))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst49)*(((((x3397)*(x3398)))+(((cj5)*(cj8)*(r21)))+(((x3397)*(x3400)))+(((x3401)*(x3402)))+(((cj5)*(r20)*(sj8)))+(((cj3)*(r00)*(x3401)))))), ((gconst49)*(((((IkReal(-1.00000000000000))*(sj8)*(x3399)*(x3402)))+(((IkReal(-1.00000000000000))*(x3399)*(x3403)))+(((r21)*(x3397)))+(((IkReal(-1.00000000000000))*(cj8)*(x3399)*(x3400)))+(((r20)*(x3401)))+(((IkReal(-1.00000000000000))*(cj8)*(x3398)*(x3399)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3404=IKsin(j4);
IkReal x3405=IKcos(j4);
IkReal x3406=((IkReal(1.00000000000000))*(cj8));
IkReal x3407=((cj3)*(r01));
IkReal x3408=((cj3)*(r00));
IkReal x3409=((cj7)*(cj8));
IkReal x3410=((IkReal(1.00000000000000))*(cj5));
IkReal x3411=((IkReal(1.00000000000000))*(sj8));
IkReal x3412=((r11)*(sj3));
IkReal x3413=((r10)*(sj3));
IkReal x3414=((sj5)*(x3404));
IkReal x3415=((sj5)*(x3405));
IkReal x3416=((x3405)*(x3410));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x3415)))+(((IkReal(-1.00000000000000))*(x3404)*(x3410))));
evalcond[1]=((((cj7)*(r21)*(sj8)))+(x3414)+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x3416)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3406))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3411)*(x3413)))+(((IkReal(-1.00000000000000))*(x3406)*(x3407)))+(x3414)+(((IkReal(-1.00000000000000))*(x3406)*(x3412)))+(((IkReal(-1.00000000000000))*(x3408)*(x3411)))+(((IkReal(-1.00000000000000))*(x3416))));
evalcond[3]=((((cj5)*(x3404)))+(((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3411)*(x3412)))+(x3415)+(((r12)*(sj3)*(sj7)))+(((x3408)*(x3409)))+(((x3409)*(x3413)))+(((IkReal(-1.00000000000000))*(cj7)*(x3407)*(x3411))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3417=((IkReal(1.00000000000000))*(cj5));
IkReal x3418=((r22)*(sj7));
IkReal x3419=((cj8)*(sj5));
IkReal x3420=((cj7)*(r20));
IkReal x3421=((r20)*(sj8));
IkReal x3422=((cj7)*(r21)*(sj8));
if( IKabs(((gconst48)*(((((x3419)*(x3420)))+(((sj5)*(x3418)))+(((cj5)*(cj8)*(r21)))+(((IkReal(-1.00000000000000))*(sj5)*(x3422)))+(((cj5)*(x3421))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((sj5)*(x3421)))+(((IkReal(-1.00000000000000))*(cj8)*(x3417)*(x3420)))+(((r21)*(x3419)))+(((cj5)*(x3422)))+(((IkReal(-1.00000000000000))*(x3417)*(x3418))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst48)*(((((x3419)*(x3420)))+(((sj5)*(x3418)))+(((cj5)*(cj8)*(r21)))+(((IkReal(-1.00000000000000))*(sj5)*(x3422)))+(((cj5)*(x3421)))))), ((gconst48)*(((((sj5)*(x3421)))+(((IkReal(-1.00000000000000))*(cj8)*(x3417)*(x3420)))+(((r21)*(x3419)))+(((cj5)*(x3422)))+(((IkReal(-1.00000000000000))*(x3417)*(x3418)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3423=IKsin(j4);
IkReal x3424=IKcos(j4);
IkReal x3425=((IkReal(1.00000000000000))*(cj8));
IkReal x3426=((cj3)*(r01));
IkReal x3427=((cj3)*(r00));
IkReal x3428=((cj7)*(cj8));
IkReal x3429=((IkReal(1.00000000000000))*(cj5));
IkReal x3430=((IkReal(1.00000000000000))*(sj8));
IkReal x3431=((r11)*(sj3));
IkReal x3432=((r10)*(sj3));
IkReal x3433=((sj5)*(x3423));
IkReal x3434=((sj5)*(x3424));
IkReal x3435=((x3424)*(x3429));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x3423)*(x3429)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x3434))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3435)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3425)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x3433));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3425)*(x3431)))+(((IkReal(-1.00000000000000))*(x3430)*(x3432)))+(((IkReal(-1.00000000000000))*(x3435)))+(((IkReal(-1.00000000000000))*(x3425)*(x3426)))+(x3433)+(((IkReal(-1.00000000000000))*(x3427)*(x3430))));
evalcond[3]=((((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3426)*(x3430)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3430)*(x3431)))+(x3434)+(((x3428)*(x3432)))+(((cj5)*(x3423)))+(((x3427)*(x3428))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3436=((IkReal(1.00000000000000))*(sj7));
IkReal x3437=((IkReal(1.00000000000000))*(cj3));
IkReal x3438=((cj7)*(r02));
IkReal x3439=((cj3)*(sj7));
IkReal x3440=((cj8)*(r00));
IkReal x3441=((cj8)*(npx));
IkReal x3442=((r01)*(sj3));
IkReal x3443=((cj7)*(sj8));
IkReal x3444=((r11)*(sj8));
IkReal x3445=((IkReal(1.00000000000000))*(cj7));
IkReal x3446=((sj7)*(sj8));
IkReal x3447=((cj8)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0300000000000000))+(((npx)*(sj8)))+(((cj8)*(npy)))+(((IkReal(-0.250000000000000))*(sj5))));
evalcond[2]=((IkReal(0.235000000000000))+(((npy)*(x3443)))+(((IkReal(-1.00000000000000))*(x3441)*(x3445)))+(((IkReal(-1.00000000000000))*(npz)*(x3436)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[3]=((((cj8)*(x3442)))+(((IkReal(-1.00000000000000))*(r10)*(sj8)*(x3437)))+(((r00)*(sj3)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(r11)*(x3437))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj8)*(r20)*(x3436)))+(((cj7)*(r22)))+(((r21)*(x3446))));
evalcond[5]=((IkReal(-0.0950000000000000))+(((cj7)*(npz)))+(((IkReal(-1.00000000000000))*(x3436)*(x3441)))+(((npy)*(x3446)))+(((IkReal(0.0900000000000000))*(sj7))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj3)*(x3440)*(x3445)))+(((r12)*(x3439)))+(((x3442)*(x3443)))+(((cj3)*(cj7)*(x3447)))+(((IkReal(-1.00000000000000))*(r02)*(sj3)*(x3436)))+(((IkReal(-1.00000000000000))*(r11)*(x3437)*(x3443))));
evalcond[7]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj3)*(x3436)*(x3440)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3437)))+(((IkReal(-1.00000000000000))*(cj3)*(x3436)*(x3444)))+(((sj3)*(x3438)))+(((x3442)*(x3446)))+(((x3439)*(x3447))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj3)*(x3436)*(x3444)))+(((sj3)*(sj7)*(x3447)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3445)))+(((IkReal(-1.00000000000000))*(cj3)*(r01)*(sj8)*(x3436)))+(((IkReal(-1.00000000000000))*(x3437)*(x3438)))+(((x3439)*(x3440))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3448=((IkReal(1.00000000000000))*(sj5));
IkReal x3449=((r20)*(sj8));
IkReal x3450=((cj5)*(cj8));
IkReal x3451=((r11)*(sj3));
IkReal x3452=((cj3)*(r01));
IkReal x3453=((cj3)*(r00)*(sj8));
IkReal x3454=((r10)*(sj3)*(sj8));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(cj5)*(x3449)))+(((IkReal(-1.00000000000000))*(cj8)*(x3448)*(x3452)))+(((IkReal(-1.00000000000000))*(cj8)*(x3448)*(x3451)))+(((IkReal(-1.00000000000000))*(r21)*(x3450)))+(((IkReal(-1.00000000000000))*(x3448)*(x3453)))+(((IkReal(-1.00000000000000))*(x3448)*(x3454))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((x3450)*(x3451)))+(((IkReal(-1.00000000000000))*(x3448)*(x3449)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x3448)))+(((x3450)*(x3452)))+(((cj5)*(x3454)))+(((cj5)*(x3453))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(cj5)*(x3449)))+(((IkReal(-1.00000000000000))*(cj8)*(x3448)*(x3452)))+(((IkReal(-1.00000000000000))*(cj8)*(x3448)*(x3451)))+(((IkReal(-1.00000000000000))*(r21)*(x3450)))+(((IkReal(-1.00000000000000))*(x3448)*(x3453)))+(((IkReal(-1.00000000000000))*(x3448)*(x3454)))))), ((gconst51)*(((((x3450)*(x3451)))+(((IkReal(-1.00000000000000))*(x3448)*(x3449)))+(((IkReal(-1.00000000000000))*(cj8)*(r21)*(x3448)))+(((x3450)*(x3452)))+(((cj5)*(x3454)))+(((cj5)*(x3453)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3455=IKsin(j4);
IkReal x3456=IKcos(j4);
IkReal x3457=((IkReal(1.00000000000000))*(cj8));
IkReal x3458=((cj3)*(r01));
IkReal x3459=((cj3)*(r00));
IkReal x3460=((cj7)*(cj8));
IkReal x3461=((r11)*(sj3));
IkReal x3462=((IkReal(1.00000000000000))*(sj8));
IkReal x3463=((r10)*(sj3));
IkReal x3464=((cj5)*(x3455));
IkReal x3465=((sj5)*(x3456));
IkReal x3466=((cj5)*(x3456));
IkReal x3467=((sj5)*(x3455));
IkReal x3468=((x3465)+(x3464));
evalcond[0]=((((cj8)*(r21)))+(x3468)+(((r20)*(sj8))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3457)))+(x3467)+(((IkReal(-1.00000000000000))*(x3466)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3457)*(x3458)))+(x3466)+(((IkReal(-1.00000000000000))*(x3467)))+(((IkReal(-1.00000000000000))*(x3459)*(x3462)))+(((IkReal(-1.00000000000000))*(x3462)*(x3463)))+(((IkReal(-1.00000000000000))*(x3457)*(x3461))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj7)*(x3461)*(x3462)))+(((cj3)*(r02)*(sj7)))+(x3468)+(((r12)*(sj3)*(sj7)))+(((x3460)*(x3463)))+(((x3459)*(x3460)))+(((IkReal(-1.00000000000000))*(cj7)*(x3458)*(x3462))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3469=((r22)*(sj7));
IkReal x3470=((cj8)*(sj5));
IkReal x3471=((sj5)*(sj8));
IkReal x3472=((cj7)*(r20));
IkReal x3473=((cj5)*(cj8));
IkReal x3474=((cj7)*(r21));
IkReal x3475=((cj5)*(sj8));
if( IKabs(((gconst50)*(((((x3471)*(x3474)))+(((IkReal(-1.00000000000000))*(sj5)*(x3469)))+(((IkReal(-1.00000000000000))*(x3470)*(x3472)))+(((r21)*(x3473)))+(((r20)*(x3475))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(x3474)*(x3475)))+(((cj5)*(x3469)))+(((x3472)*(x3473)))+(((r21)*(x3470)))+(((r20)*(x3471))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst50)*(((((x3471)*(x3474)))+(((IkReal(-1.00000000000000))*(sj5)*(x3469)))+(((IkReal(-1.00000000000000))*(x3470)*(x3472)))+(((r21)*(x3473)))+(((r20)*(x3475)))))), ((gconst50)*(((((IkReal(-1.00000000000000))*(x3474)*(x3475)))+(((cj5)*(x3469)))+(((x3472)*(x3473)))+(((r21)*(x3470)))+(((r20)*(x3471)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3476=IKsin(j4);
IkReal x3477=IKcos(j4);
IkReal x3478=((IkReal(1.00000000000000))*(cj8));
IkReal x3479=((cj3)*(r01));
IkReal x3480=((cj3)*(r00));
IkReal x3481=((cj7)*(cj8));
IkReal x3482=((r11)*(sj3));
IkReal x3483=((IkReal(1.00000000000000))*(sj8));
IkReal x3484=((r10)*(sj3));
IkReal x3485=((cj5)*(x3476));
IkReal x3486=((sj5)*(x3477));
IkReal x3487=((cj5)*(x3477));
IkReal x3488=((sj5)*(x3476));
IkReal x3489=((x3485)+(x3486));
evalcond[0]=((x3489)+(((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[1]=((x3488)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3478)))+(((cj7)*(r21)*(sj8)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x3487))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3478)*(x3482)))+(x3487)+(((IkReal(-1.00000000000000))*(x3480)*(x3483)))+(((IkReal(-1.00000000000000))*(x3483)*(x3484)))+(((IkReal(-1.00000000000000))*(x3488)))+(((IkReal(-1.00000000000000))*(x3478)*(x3479))));
evalcond[3]=((x3489)+(((cj3)*(r02)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3479)*(x3483)))+(((x3481)*(x3484)))+(((x3480)*(x3481)))+(((r12)*(sj3)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x3482)*(x3483))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3490=((IkReal(1.00000000000000))*(cj3));
IkReal x3491=((cj8)*(r01));
IkReal x3492=((IkReal(1.00000000000000))*(sj7));
IkReal x3493=((r00)*(sj8));
IkReal x3494=((cj8)*(npx));
IkReal x3495=((r10)*(sj8));
IkReal x3496=((cj7)*(sj8));
IkReal x3497=((r02)*(sj3));
IkReal x3498=((sj7)*(sj8));
IkReal x3499=((cj8)*(r11));
IkReal x3500=((r01)*(sj3));
IkReal x3501=((cj3)*(sj7));
IkReal x3502=((IkReal(1.00000000000000))*(cj7));
IkReal x3503=((cj8)*(r10));
IkReal x3504=((IkReal(1.00000000000000))*(sj3));
IkReal x3505=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x3494)*(x3502)))+(((IkReal(-1.00000000000000))*(npz)*(x3492)))+(((npy)*(x3496)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(1.00000000000000))+(((sj3)*(x3491)))+(((IkReal(-1.00000000000000))*(x3490)*(x3499)))+(((IkReal(-1.00000000000000))*(x3490)*(x3495)))+(((sj3)*(x3493))));
evalcond[5]=((IkReal(0.0300000000000000))+(((cj7)*(npz)))+(((npy)*(x3498)))+(((IkReal(-0.250000000000000))*(sj5)))+(((IkReal(-1.00000000000000))*(x3492)*(x3494)))+(((IkReal(0.0900000000000000))*(sj7))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3499)*(x3504)))+(((IkReal(-1.00000000000000))*(x3490)*(x3491)))+(((IkReal(-1.00000000000000))*(x3490)*(x3493)))+(((IkReal(-1.00000000000000))*(x3495)*(x3504))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x3502)*(x3505)))+(((IkReal(-1.00000000000000))*(x3492)*(x3497)))+(((x3496)*(x3500)))+(((IkReal(-1.00000000000000))*(r11)*(x3490)*(x3496)))+(((r12)*(x3501)))+(((cj3)*(cj7)*(x3503))));
evalcond[8]=((((x3498)*(x3500)))+(((cj7)*(x3497)))+(((IkReal(-1.00000000000000))*(x3492)*(x3505)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3490)))+(((x3501)*(x3503)))+(((IkReal(-1.00000000000000))*(r11)*(x3490)*(x3498))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3506=((cj3)*(cj5));
IkReal x3507=((r02)*(sj7));
IkReal x3508=((cj8)*(r00));
IkReal x3509=((cj5)*(sj3));
IkReal x3510=((cj7)*(cj8));
IkReal x3511=((sj5)*(sj7));
IkReal x3512=((sj3)*(sj5));
IkReal x3513=((cj3)*(cj7)*(sj5));
IkReal x3514=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst53)*(((((x3506)*(x3507)))+(((IkReal(-1.00000000000000))*(r22)*(x3511)))+(((r12)*(sj7)*(x3509)))+(((IkReal(-1.00000000000000))*(r01)*(x3506)*(x3514)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3510)))+(((cj7)*(x3506)*(x3508)))+(((r10)*(x3509)*(x3510)))+(((IkReal(-1.00000000000000))*(r11)*(x3509)*(x3514)))+(((cj7)*(r21)*(sj5)*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((x3508)*(x3513)))+(((r10)*(x3510)*(x3512)))+(((r12)*(sj3)*(x3511)))+(((cj3)*(sj5)*(x3507)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3513)))+(((cj5)*(r20)*(x3510)))+(((IkReal(-1.00000000000000))*(r11)*(x3512)*(x3514)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3514))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst53)*(((((x3506)*(x3507)))+(((IkReal(-1.00000000000000))*(r22)*(x3511)))+(((r12)*(sj7)*(x3509)))+(((IkReal(-1.00000000000000))*(r01)*(x3506)*(x3514)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3510)))+(((cj7)*(x3506)*(x3508)))+(((r10)*(x3509)*(x3510)))+(((IkReal(-1.00000000000000))*(r11)*(x3509)*(x3514)))+(((cj7)*(r21)*(sj5)*(sj8)))))), ((gconst53)*(((((x3508)*(x3513)))+(((r10)*(x3510)*(x3512)))+(((r12)*(sj3)*(x3511)))+(((cj3)*(sj5)*(x3507)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3513)))+(((cj5)*(r20)*(x3510)))+(((IkReal(-1.00000000000000))*(r11)*(x3512)*(x3514)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3514)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3515=IKsin(j4);
IkReal x3516=IKcos(j4);
IkReal x3517=((IkReal(1.00000000000000))*(cj7));
IkReal x3518=((cj8)*(r20));
IkReal x3519=((cj3)*(r02));
IkReal x3520=((IkReal(1.00000000000000))*(sj7));
IkReal x3521=((sj3)*(sj7));
IkReal x3522=((r21)*(sj8));
IkReal x3523=((cj8)*(r10));
IkReal x3524=((cj5)*(x3515));
IkReal x3525=((sj5)*(x3516));
IkReal x3526=((r11)*(sj3)*(sj8));
IkReal x3527=((cj3)*(cj8)*(r00));
IkReal x3528=((cj5)*(x3516));
IkReal x3529=((cj3)*(r01)*(sj8));
IkReal x3530=((sj5)*(x3515));
IkReal x3531=((x3524)+(x3525));
evalcond[0]=((((cj7)*(x3522)))+(((IkReal(-1.00000000000000))*(r22)*(x3520)))+(((IkReal(-1.00000000000000))*(x3528)))+(((IkReal(-1.00000000000000))*(x3517)*(x3518)))+(x3530));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3518)*(x3520)))+(((cj7)*(r22)))+(((sj7)*(x3522)))+(x3531));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3517)*(x3526)))+(((r12)*(x3521)))+(((cj7)*(x3527)))+(((sj7)*(x3519)))+(((IkReal(-1.00000000000000))*(x3517)*(x3529)))+(x3531)+(((cj7)*(sj3)*(x3523))));
evalcond[3]=((((x3521)*(x3523)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3517)))+(((IkReal(-1.00000000000000))*(x3520)*(x3529)))+(((IkReal(-1.00000000000000))*(x3520)*(x3526)))+(((sj7)*(x3527)))+(((IkReal(-1.00000000000000))*(x3530)))+(((IkReal(-1.00000000000000))*(x3517)*(x3519)))+(x3528));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3532=((sj5)*(sj7));
IkReal x3533=((r21)*(sj8));
IkReal x3534=((cj7)*(sj5));
IkReal x3535=((cj8)*(r20));
IkReal x3536=((cj5)*(cj7));
IkReal x3537=((cj5)*(sj7));
if( IKabs(((gconst52)*(((((x3533)*(x3534)))+(((r22)*(x3536)))+(((IkReal(-1.00000000000000))*(x3534)*(x3535)))+(((x3533)*(x3537)))+(((IkReal(-1.00000000000000))*(x3535)*(x3537)))+(((IkReal(-1.00000000000000))*(r22)*(x3532))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(x3532)*(x3535)))+(((r22)*(x3537)))+(((r22)*(x3534)))+(((IkReal(-1.00000000000000))*(x3533)*(x3536)))+(((x3532)*(x3533)))+(((x3535)*(x3536))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst52)*(((((x3533)*(x3534)))+(((r22)*(x3536)))+(((IkReal(-1.00000000000000))*(x3534)*(x3535)))+(((x3533)*(x3537)))+(((IkReal(-1.00000000000000))*(x3535)*(x3537)))+(((IkReal(-1.00000000000000))*(r22)*(x3532)))))), ((gconst52)*(((((IkReal(-1.00000000000000))*(x3532)*(x3535)))+(((r22)*(x3537)))+(((r22)*(x3534)))+(((IkReal(-1.00000000000000))*(x3533)*(x3536)))+(((x3532)*(x3533)))+(((x3535)*(x3536)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3538=IKsin(j4);
IkReal x3539=IKcos(j4);
IkReal x3540=((IkReal(1.00000000000000))*(cj7));
IkReal x3541=((cj8)*(r20));
IkReal x3542=((cj3)*(r02));
IkReal x3543=((IkReal(1.00000000000000))*(sj7));
IkReal x3544=((sj3)*(sj7));
IkReal x3545=((r21)*(sj8));
IkReal x3546=((cj8)*(r10));
IkReal x3547=((cj5)*(x3538));
IkReal x3548=((sj5)*(x3539));
IkReal x3549=((r11)*(sj3)*(sj8));
IkReal x3550=((cj3)*(cj8)*(r00));
IkReal x3551=((cj5)*(x3539));
IkReal x3552=((cj3)*(r01)*(sj8));
IkReal x3553=((sj5)*(x3538));
IkReal x3554=((x3547)+(x3548));
evalcond[0]=((x3553)+(((IkReal(-1.00000000000000))*(x3551)))+(((cj7)*(x3545)))+(((IkReal(-1.00000000000000))*(r22)*(x3543)))+(((IkReal(-1.00000000000000))*(x3540)*(x3541))));
evalcond[1]=((((cj7)*(r22)))+(x3554)+(((IkReal(-1.00000000000000))*(x3541)*(x3543)))+(((sj7)*(x3545))));
evalcond[2]=((x3554)+(((r12)*(x3544)))+(((cj7)*(x3550)))+(((sj7)*(x3542)))+(((IkReal(-1.00000000000000))*(x3540)*(x3549)))+(((cj7)*(sj3)*(x3546)))+(((IkReal(-1.00000000000000))*(x3540)*(x3552))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3543)*(x3549)))+(((x3544)*(x3546)))+(((IkReal(-1.00000000000000))*(x3543)*(x3552)))+(x3551)+(((IkReal(-1.00000000000000))*(x3553)))+(((sj7)*(x3550)))+(((IkReal(-1.00000000000000))*(x3540)*(x3542)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3540))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3555=((IkReal(1.00000000000000))*(cj3));
IkReal x3556=((cj8)*(r01));
IkReal x3557=((IkReal(1.00000000000000))*(sj7));
IkReal x3558=((r00)*(sj8));
IkReal x3559=((cj8)*(npx));
IkReal x3560=((r10)*(sj8));
IkReal x3561=((cj7)*(sj8));
IkReal x3562=((r02)*(sj3));
IkReal x3563=((sj7)*(sj8));
IkReal x3564=((cj8)*(r11));
IkReal x3565=((r01)*(sj3));
IkReal x3566=((cj3)*(sj7));
IkReal x3567=((IkReal(1.00000000000000))*(cj7));
IkReal x3568=((cj8)*(r10));
IkReal x3569=((IkReal(1.00000000000000))*(sj3));
IkReal x3570=((cj8)*(r00)*(sj3));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j6, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((npx)*(sj8)))+(((cj8)*(npy))));
evalcond[2]=((((cj8)*(r21)))+(((r20)*(sj8))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(x3559)*(x3567)))+(((npy)*(x3561)))+(((IkReal(0.0900000000000000))*(cj7)))+(((IkReal(-1.00000000000000))*(npz)*(x3557)))+(((IkReal(0.250000000000000))*(cj5))));
evalcond[4]=((IkReal(-1.00000000000000))+(((sj3)*(x3556)))+(((sj3)*(x3558)))+(((IkReal(-1.00000000000000))*(x3555)*(x3560)))+(((IkReal(-1.00000000000000))*(x3555)*(x3564))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(x3557)*(x3559)))+(((cj7)*(npz)))+(((npy)*(x3563)))+(((IkReal(0.0900000000000000))*(sj7)))+(((IkReal(0.250000000000000))*(sj5))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3560)*(x3569)))+(((IkReal(-1.00000000000000))*(x3555)*(x3558)))+(((IkReal(-1.00000000000000))*(x3555)*(x3556)))+(((IkReal(-1.00000000000000))*(x3564)*(x3569))));
evalcond[7]=((((x3561)*(x3565)))+(((IkReal(-1.00000000000000))*(x3557)*(x3562)))+(((IkReal(-1.00000000000000))*(x3567)*(x3570)))+(((r12)*(x3566)))+(((IkReal(-1.00000000000000))*(r11)*(x3555)*(x3561)))+(((cj3)*(cj7)*(x3568))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r11)*(x3555)*(x3563)))+(((IkReal(-1.00000000000000))*(x3557)*(x3570)))+(((cj7)*(x3562)))+(((x3566)*(x3568)))+(((x3563)*(x3565)))+(((IkReal(-1.00000000000000))*(cj7)*(r12)*(x3555))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign((((sj5)*(sj5))+((cj5)*(cj5))));
dummyeval[0]=(((sj5)*(sj5))+((cj5)*(cj5)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
gconst55=IKsign(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3571=((cj3)*(cj5));
IkReal x3572=((r02)*(sj7));
IkReal x3573=((cj8)*(r00));
IkReal x3574=((cj5)*(sj3));
IkReal x3575=((cj7)*(cj8));
IkReal x3576=((sj5)*(sj7));
IkReal x3577=((sj3)*(sj5));
IkReal x3578=((cj3)*(cj7)*(sj5));
IkReal x3579=((IkReal(1.00000000000000))*(cj7)*(sj8));
if( IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3575)))+(((IkReal(-1.00000000000000))*(r11)*(x3574)*(x3579)))+(((r10)*(x3574)*(x3575)))+(((cj7)*(x3571)*(x3573)))+(((IkReal(-1.00000000000000))*(r01)*(x3571)*(x3579)))+(((r12)*(sj7)*(x3574)))+(((IkReal(-1.00000000000000))*(r22)*(x3576)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((x3571)*(x3572))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((r10)*(x3575)*(x3577)))+(((cj5)*(r20)*(x3575)))+(((r12)*(sj3)*(x3576)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3578)))+(((x3573)*(x3578)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3579)))+(((IkReal(-1.00000000000000))*(r11)*(x3577)*(x3579)))+(((cj3)*(sj5)*(x3572))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst55)*(((((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3575)))+(((IkReal(-1.00000000000000))*(r11)*(x3574)*(x3579)))+(((r10)*(x3574)*(x3575)))+(((cj7)*(x3571)*(x3573)))+(((IkReal(-1.00000000000000))*(r01)*(x3571)*(x3579)))+(((r12)*(sj7)*(x3574)))+(((IkReal(-1.00000000000000))*(r22)*(x3576)))+(((cj7)*(r21)*(sj5)*(sj8)))+(((x3571)*(x3572)))))), ((gconst55)*(((((r10)*(x3575)*(x3577)))+(((cj5)*(r20)*(x3575)))+(((r12)*(sj3)*(x3576)))+(((IkReal(-1.00000000000000))*(r01)*(sj8)*(x3578)))+(((x3573)*(x3578)))+(((cj5)*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3579)))+(((IkReal(-1.00000000000000))*(r11)*(x3577)*(x3579)))+(((cj3)*(sj5)*(x3572)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3580=IKcos(j4);
IkReal x3581=IKsin(j4);
IkReal x3582=((IkReal(1.00000000000000))*(cj7));
IkReal x3583=((cj8)*(r20));
IkReal x3584=((cj3)*(r02));
IkReal x3585=((IkReal(1.00000000000000))*(sj7));
IkReal x3586=((sj3)*(sj7));
IkReal x3587=((r21)*(sj8));
IkReal x3588=((IkReal(1.00000000000000))*(cj5));
IkReal x3589=((cj8)*(r10));
IkReal x3590=((sj5)*(x3581));
IkReal x3591=((sj5)*(x3580));
IkReal x3592=((r11)*(sj3)*(sj8));
IkReal x3593=((cj3)*(cj8)*(r00));
IkReal x3594=((cj3)*(r01)*(sj8));
IkReal x3595=((x3580)*(x3588));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x3585)))+(((IkReal(-1.00000000000000))*(x3582)*(x3583)))+(x3590)+(((IkReal(-1.00000000000000))*(x3595)))+(((cj7)*(x3587))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x3591)))+(((IkReal(-1.00000000000000))*(x3583)*(x3585)))+(((sj7)*(x3587)))+(((IkReal(-1.00000000000000))*(x3581)*(x3588))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3582)*(x3594)))+(((sj7)*(x3584)))+(((cj5)*(x3581)))+(((cj7)*(sj3)*(x3589)))+(x3591)+(((r12)*(x3586)))+(((cj7)*(x3593)))+(((IkReal(-1.00000000000000))*(x3582)*(x3592))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3582)*(x3584)))+(((sj7)*(x3593)))+(((IkReal(-1.00000000000000))*(x3585)*(x3594)))+(((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3582)))+(((x3586)*(x3589)))+(x3590)+(((IkReal(-1.00000000000000))*(x3585)*(x3592)))+(((IkReal(-1.00000000000000))*(x3595))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3596=((cj7)*(sj5));
IkReal x3597=((r21)*(sj8));
IkReal x3598=((cj5)*(cj7));
IkReal x3599=((cj8)*(r20));
IkReal x3600=((sj5)*(sj7));
IkReal x3601=((IkReal(1.00000000000000))*(cj5)*(sj7));
if( IKabs(((gconst54)*(((((cj5)*(sj7)*(x3597)))+(((x3596)*(x3599)))+(((r22)*(x3598)))+(((IkReal(-1.00000000000000))*(x3599)*(x3601)))+(((IkReal(-1.00000000000000))*(x3596)*(x3597)))+(((r22)*(x3600))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(x3598)*(x3599)))+(((x3597)*(x3600)))+(((r22)*(x3596)))+(((x3597)*(x3598)))+(((IkReal(-1.00000000000000))*(x3599)*(x3600)))+(((IkReal(-1.00000000000000))*(r22)*(x3601))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst54)*(((((cj5)*(sj7)*(x3597)))+(((x3596)*(x3599)))+(((r22)*(x3598)))+(((IkReal(-1.00000000000000))*(x3599)*(x3601)))+(((IkReal(-1.00000000000000))*(x3596)*(x3597)))+(((r22)*(x3600)))))), ((gconst54)*(((((IkReal(-1.00000000000000))*(x3598)*(x3599)))+(((x3597)*(x3600)))+(((r22)*(x3596)))+(((x3597)*(x3598)))+(((IkReal(-1.00000000000000))*(x3599)*(x3600)))+(((IkReal(-1.00000000000000))*(r22)*(x3601)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3602=IKcos(j4);
IkReal x3603=IKsin(j4);
IkReal x3604=((IkReal(1.00000000000000))*(cj7));
IkReal x3605=((cj8)*(r20));
IkReal x3606=((cj3)*(r02));
IkReal x3607=((IkReal(1.00000000000000))*(sj7));
IkReal x3608=((sj3)*(sj7));
IkReal x3609=((r21)*(sj8));
IkReal x3610=((IkReal(1.00000000000000))*(cj5));
IkReal x3611=((cj8)*(r10));
IkReal x3612=((sj5)*(x3603));
IkReal x3613=((sj5)*(x3602));
IkReal x3614=((r11)*(sj3)*(sj8));
IkReal x3615=((cj3)*(cj8)*(r00));
IkReal x3616=((cj3)*(r01)*(sj8));
IkReal x3617=((x3602)*(x3610));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x3607)))+(((IkReal(-1.00000000000000))*(x3604)*(x3605)))+(((cj7)*(x3609)))+(x3612)+(((IkReal(-1.00000000000000))*(x3617))));
evalcond[1]=((((cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x3613)))+(((sj7)*(x3609)))+(((IkReal(-1.00000000000000))*(x3603)*(x3610)))+(((IkReal(-1.00000000000000))*(x3605)*(x3607))));
evalcond[2]=((((sj7)*(x3606)))+(((IkReal(-1.00000000000000))*(x3604)*(x3614)))+(((cj7)*(x3615)))+(x3613)+(((cj7)*(sj3)*(x3611)))+(((IkReal(-1.00000000000000))*(x3604)*(x3616)))+(((cj5)*(x3603)))+(((r12)*(x3608))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj3)*(x3604)))+(((IkReal(-1.00000000000000))*(x3607)*(x3614)))+(((x3608)*(x3611)))+(x3612)+(((IkReal(-1.00000000000000))*(x3617)))+(((IkReal(-1.00000000000000))*(x3607)*(x3616)))+(((IkReal(-1.00000000000000))*(x3604)*(x3606)))+(((sj7)*(x3615))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3618=((r21)*(sj8));
IkReal x3619=((IkReal(1.00000000000000))*(r22));
IkReal x3620=((cj5)*(sj7));
IkReal x3621=((cj6)*(cj7));
IkReal x3622=((sj5)*(sj7));
IkReal x3623=((cj5)*(cj8)*(r20));
IkReal x3624=((IkReal(1.00000000000000))*(x3621));
IkReal x3625=((cj8)*(r20)*(sj5));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(sj5)*(x3618)*(x3624)))+(((cj8)*(r20)*(x3620)))+(((cj6)*(r22)*(x3622)))+(((x3621)*(x3625)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x3619)))+(((IkReal(-1.00000000000000))*(x3618)*(x3620))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((cj8)*(r20)*(x3622)))+(((IkReal(-1.00000000000000))*(x3618)*(x3622)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x3619)))+(((IkReal(-1.00000000000000))*(x3623)*(x3624)))+(((cj5)*(x3618)*(x3621)))+(((IkReal(-1.00000000000000))*(cj6)*(x3619)*(x3620))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(sj5)*(x3618)*(x3624)))+(((cj8)*(r20)*(x3620)))+(((cj6)*(r22)*(x3622)))+(((x3621)*(x3625)))+(((IkReal(-1.00000000000000))*(cj5)*(cj7)*(x3619)))+(((IkReal(-1.00000000000000))*(x3618)*(x3620)))))), ((gconst47)*(((((cj8)*(r20)*(x3622)))+(((IkReal(-1.00000000000000))*(x3618)*(x3622)))+(((IkReal(-1.00000000000000))*(cj7)*(sj5)*(x3619)))+(((IkReal(-1.00000000000000))*(x3623)*(x3624)))+(((cj5)*(x3618)*(x3621)))+(((IkReal(-1.00000000000000))*(cj6)*(x3619)*(x3620)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3626=IKsin(j4);
IkReal x3627=IKcos(j4);
IkReal x3628=((IkReal(1.00000000000000))*(cj8));
IkReal x3629=((cj3)*(r01));
IkReal x3630=((IkReal(1.00000000000000))*(sj8));
IkReal x3631=((r11)*(sj3));
IkReal x3632=((cj3)*(r00));
IkReal x3633=((IkReal(1.00000000000000))*(sj6));
IkReal x3634=((IkReal(1.00000000000000))*(cj7));
IkReal x3635=((cj3)*(r02));
IkReal x3636=((cj8)*(sj7));
IkReal x3637=((r12)*(sj3));
IkReal x3638=((cj7)*(cj8));
IkReal x3639=((r21)*(sj8));
IkReal x3640=((r10)*(sj3));
IkReal x3641=((sj5)*(x3627));
IkReal x3642=((cj5)*(x3627));
IkReal x3643=((sj5)*(x3626));
IkReal x3644=((cj5)*(x3626));
evalcond[0]=((((cj8)*(r21)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x3633)*(x3641)))+(((IkReal(-1.00000000000000))*(x3633)*(x3644))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3642)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x3643)+(((cj7)*(x3639)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3628))));
evalcond[2]=((((cj6)*(x3641)))+(((cj7)*(r22)))+(((sj7)*(x3639)))+(((cj6)*(x3644)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x3628))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3628)*(x3629)))+(((IkReal(-1.00000000000000))*(x3628)*(x3631)))+(((IkReal(-1.00000000000000))*(x3630)*(x3640)))+(((IkReal(-1.00000000000000))*(x3633)*(x3642)))+(((IkReal(-1.00000000000000))*(x3630)*(x3632)))+(((sj6)*(x3643))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj7)*(x3629)*(x3630)))+(x3644)+(x3641)+(((x3638)*(x3640)))+(((sj7)*(x3635)))+(((x3632)*(x3638)))+(((IkReal(-1.00000000000000))*(cj7)*(x3630)*(x3631)))+(((sj7)*(x3637))));
evalcond[5]=((((x3636)*(x3640)))+(((IkReal(-1.00000000000000))*(sj7)*(x3630)*(x3631)))+(((IkReal(-1.00000000000000))*(cj6)*(x3643)))+(((IkReal(-1.00000000000000))*(x3634)*(x3637)))+(((cj6)*(x3642)))+(((x3632)*(x3636)))+(((IkReal(-1.00000000000000))*(sj7)*(x3629)*(x3630)))+(((IkReal(-1.00000000000000))*(x3634)*(x3635))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3645=((sj5)*(sj6));
IkReal x3646=((r22)*(sj7));
IkReal x3647=((r20)*(sj8));
IkReal x3648=((cj8)*(r21));
IkReal x3649=((cj5)*(sj6));
IkReal x3650=((cj7)*(cj8)*(r20));
IkReal x3651=((cj7)*(r21)*(sj8));
if( IKabs(((gconst46)*(((((cj5)*(x3648)))+(((x3645)*(x3650)))+(((cj5)*(x3647)))+(((IkReal(-1.00000000000000))*(x3645)*(x3651)))+(((x3645)*(x3646))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((sj5)*(x3647)))+(((sj5)*(x3648)))+(((x3649)*(x3651)))+(((IkReal(-1.00000000000000))*(x3649)*(x3650)))+(((IkReal(-1.00000000000000))*(x3646)*(x3649))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst46)*(((((cj5)*(x3648)))+(((x3645)*(x3650)))+(((cj5)*(x3647)))+(((IkReal(-1.00000000000000))*(x3645)*(x3651)))+(((x3645)*(x3646)))))), ((gconst46)*(((((sj5)*(x3647)))+(((sj5)*(x3648)))+(((x3649)*(x3651)))+(((IkReal(-1.00000000000000))*(x3649)*(x3650)))+(((IkReal(-1.00000000000000))*(x3646)*(x3649)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3652=IKsin(j4);
IkReal x3653=IKcos(j4);
IkReal x3654=((IkReal(1.00000000000000))*(cj8));
IkReal x3655=((cj3)*(r01));
IkReal x3656=((IkReal(1.00000000000000))*(sj8));
IkReal x3657=((r11)*(sj3));
IkReal x3658=((cj3)*(r00));
IkReal x3659=((IkReal(1.00000000000000))*(sj6));
IkReal x3660=((IkReal(1.00000000000000))*(cj7));
IkReal x3661=((cj3)*(r02));
IkReal x3662=((cj8)*(sj7));
IkReal x3663=((r12)*(sj3));
IkReal x3664=((cj7)*(cj8));
IkReal x3665=((r21)*(sj8));
IkReal x3666=((r10)*(sj3));
IkReal x3667=((sj5)*(x3653));
IkReal x3668=((cj5)*(x3653));
IkReal x3669=((sj5)*(x3652));
IkReal x3670=((cj5)*(x3652));
evalcond[0]=((((cj8)*(r21)))+(((IkReal(-1.00000000000000))*(x3659)*(x3670)))+(((r20)*(sj8)))+(((IkReal(-1.00000000000000))*(x3659)*(x3667))));
evalcond[1]=((((cj7)*(x3665)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(x3669)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x3654)))+(((IkReal(-1.00000000000000))*(x3668))));
evalcond[2]=((((cj6)*(x3670)))+(((cj6)*(x3667)))+(((cj7)*(r22)))+(((sj7)*(x3665)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x3654))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3659)*(x3668)))+(((IkReal(-1.00000000000000))*(x3656)*(x3658)))+(((sj6)*(x3669)))+(((IkReal(-1.00000000000000))*(x3654)*(x3657)))+(((IkReal(-1.00000000000000))*(x3654)*(x3655)))+(((IkReal(-1.00000000000000))*(x3656)*(x3666))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj7)*(x3655)*(x3656)))+(x3670)+(x3667)+(((x3664)*(x3666)))+(((sj7)*(x3661)))+(((sj7)*(x3663)))+(((IkReal(-1.00000000000000))*(cj7)*(x3656)*(x3657)))+(((x3658)*(x3664))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3660)*(x3661)))+(((x3662)*(x3666)))+(((IkReal(-1.00000000000000))*(cj6)*(x3669)))+(((x3658)*(x3662)))+(((IkReal(-1.00000000000000))*(sj7)*(x3655)*(x3656)))+(((IkReal(-1.00000000000000))*(x3660)*(x3663)))+(((IkReal(-1.00000000000000))*(sj7)*(x3656)*(x3657)))+(((cj6)*(x3668))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - main_withHands (14707e2e4bf64614375cb20f7fca0006)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
